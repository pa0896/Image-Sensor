
Hand Control.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000b8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000d008  080000b8  080000b8  000100b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000033f4  0800d0c0  0800d0c0  0001d0c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    0000013c  080104b4  080104b4  000204b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM          000001e8  080105f0  080105f0  000205f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080107d8  080107d8  00030070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000014  080107d8  080107d8  000207d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000010  080107ec  080107ec  000207ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  080107fc  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000006f0  20000070  0801086c  00030070  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000760  0801086c  00030760  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00030070  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00030098  2**0
                  CONTENTS, READONLY
 13 .debug_info   00034bfa  00000000  00000000  000300db  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000517b  00000000  00000000  00064cd5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_loclists 0000f3e6  00000000  00000000  00069e50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00001168  00000000  00000000  00079238  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00001455  00000000  00000000  0007a3a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  000069ea  00000000  00000000  0007b7f5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00024788  00000000  00000000  000821df  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000a447a  00000000  00000000  000a6967  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00007398  00000000  00000000  0014ade4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000007a  00000000  00000000  0015217c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000b8 <__do_global_dtors_aux>:
 80000b8:	b510      	push	{r4, lr}
 80000ba:	4c06      	ldr	r4, [pc, #24]	; (80000d4 <__do_global_dtors_aux+0x1c>)
 80000bc:	7823      	ldrb	r3, [r4, #0]
 80000be:	2b00      	cmp	r3, #0
 80000c0:	d107      	bne.n	80000d2 <__do_global_dtors_aux+0x1a>
 80000c2:	4b05      	ldr	r3, [pc, #20]	; (80000d8 <__do_global_dtors_aux+0x20>)
 80000c4:	2b00      	cmp	r3, #0
 80000c6:	d002      	beq.n	80000ce <__do_global_dtors_aux+0x16>
 80000c8:	4804      	ldr	r0, [pc, #16]	; (80000dc <__do_global_dtors_aux+0x24>)
 80000ca:	e000      	b.n	80000ce <__do_global_dtors_aux+0x16>
 80000cc:	bf00      	nop
 80000ce:	2301      	movs	r3, #1
 80000d0:	7023      	strb	r3, [r4, #0]
 80000d2:	bd10      	pop	{r4, pc}
 80000d4:	20000070 	.word	0x20000070
 80000d8:	00000000 	.word	0x00000000
 80000dc:	0800d0a8 	.word	0x0800d0a8

080000e0 <frame_dummy>:
 80000e0:	4b04      	ldr	r3, [pc, #16]	; (80000f4 <frame_dummy+0x14>)
 80000e2:	b510      	push	{r4, lr}
 80000e4:	2b00      	cmp	r3, #0
 80000e6:	d003      	beq.n	80000f0 <frame_dummy+0x10>
 80000e8:	4903      	ldr	r1, [pc, #12]	; (80000f8 <frame_dummy+0x18>)
 80000ea:	4804      	ldr	r0, [pc, #16]	; (80000fc <frame_dummy+0x1c>)
 80000ec:	e000      	b.n	80000f0 <frame_dummy+0x10>
 80000ee:	bf00      	nop
 80000f0:	bd10      	pop	{r4, pc}
 80000f2:	46c0      	nop			; (mov r8, r8)
 80000f4:	00000000 	.word	0x00000000
 80000f8:	20000074 	.word	0x20000074
 80000fc:	0800d0a8 	.word	0x0800d0a8

08000100 <d_make_comp>:
 8000100:	b570      	push	{r4, r5, r6, lr}
 8000102:	0005      	movs	r5, r0
 8000104:	2931      	cmp	r1, #49	; 0x31
 8000106:	d81f      	bhi.n	8000148 <d_make_comp+0x48>
 8000108:	2928      	cmp	r1, #40	; 0x28
 800010a:	d839      	bhi.n	8000180 <d_make_comp+0x80>
 800010c:	290a      	cmp	r1, #10
 800010e:	d92f      	bls.n	8000170 <d_make_comp+0x70>
 8000110:	000c      	movs	r4, r1
 8000112:	2001      	movs	r0, #1
 8000114:	3c0b      	subs	r4, #11
 8000116:	b2e4      	uxtb	r4, r4
 8000118:	40a0      	lsls	r0, r4
 800011a:	4c24      	ldr	r4, [pc, #144]	; (80001ac <d_make_comp+0xac>)
 800011c:	4220      	tst	r0, r4
 800011e:	d038      	beq.n	8000192 <d_make_comp+0x92>
 8000120:	2a00      	cmp	r2, #0
 8000122:	d023      	beq.n	800016c <d_make_comp+0x6c>
 8000124:	696c      	ldr	r4, [r5, #20]
 8000126:	69a8      	ldr	r0, [r5, #24]
 8000128:	4284      	cmp	r4, r0
 800012a:	da1f      	bge.n	800016c <d_make_comp+0x6c>
 800012c:	00a6      	lsls	r6, r4, #2
 800012e:	6928      	ldr	r0, [r5, #16]
 8000130:	1936      	adds	r6, r6, r4
 8000132:	00b6      	lsls	r6, r6, #2
 8000134:	1980      	adds	r0, r0, r6
 8000136:	2600      	movs	r6, #0
 8000138:	3401      	adds	r4, #1
 800013a:	6046      	str	r6, [r0, #4]
 800013c:	6086      	str	r6, [r0, #8]
 800013e:	616c      	str	r4, [r5, #20]
 8000140:	7001      	strb	r1, [r0, #0]
 8000142:	60c2      	str	r2, [r0, #12]
 8000144:	6103      	str	r3, [r0, #16]
 8000146:	bd70      	pop	{r4, r5, r6, pc}
 8000148:	0008      	movs	r0, r1
 800014a:	3834      	subs	r0, #52	; 0x34
 800014c:	b2c0      	uxtb	r0, r0
 800014e:	281d      	cmp	r0, #29
 8000150:	d80c      	bhi.n	800016c <d_make_comp+0x6c>
 8000152:	2401      	movs	r4, #1
 8000154:	4084      	lsls	r4, r0
 8000156:	0020      	movs	r0, r4
 8000158:	4c15      	ldr	r4, [pc, #84]	; (80001b0 <d_make_comp+0xb0>)
 800015a:	4220      	tst	r0, r4
 800015c:	d1e0      	bne.n	8000120 <d_make_comp+0x20>
 800015e:	4c15      	ldr	r4, [pc, #84]	; (80001b4 <d_make_comp+0xb4>)
 8000160:	4220      	tst	r0, r4
 8000162:	d11d      	bne.n	80001a0 <d_make_comp+0xa0>
 8000164:	24d0      	movs	r4, #208	; 0xd0
 8000166:	05a4      	lsls	r4, r4, #22
 8000168:	4220      	tst	r0, r4
 800016a:	d1db      	bne.n	8000124 <d_make_comp+0x24>
 800016c:	2000      	movs	r0, #0
 800016e:	e7ea      	b.n	8000146 <d_make_comp+0x46>
 8000170:	2904      	cmp	r1, #4
 8000172:	d915      	bls.n	80001a0 <d_make_comp+0xa0>
 8000174:	000c      	movs	r4, r1
 8000176:	3c09      	subs	r4, #9
 8000178:	2000      	movs	r0, #0
 800017a:	2c01      	cmp	r4, #1
 800017c:	d8e3      	bhi.n	8000146 <d_make_comp+0x46>
 800017e:	e7cf      	b.n	8000120 <d_make_comp+0x20>
 8000180:	000c      	movs	r4, r1
 8000182:	3c29      	subs	r4, #41	; 0x29
 8000184:	b2e4      	uxtb	r4, r4
 8000186:	2c08      	cmp	r4, #8
 8000188:	d8f0      	bhi.n	800016c <d_make_comp+0x6c>
 800018a:	480b      	ldr	r0, [pc, #44]	; (80001b8 <d_make_comp+0xb8>)
 800018c:	00a4      	lsls	r4, r4, #2
 800018e:	5900      	ldr	r0, [r0, r4]
 8000190:	4687      	mov	pc, r0
 8000192:	24ff      	movs	r4, #255	; 0xff
 8000194:	03a4      	lsls	r4, r4, #14
 8000196:	4220      	tst	r0, r4
 8000198:	d1c4      	bne.n	8000124 <d_make_comp+0x24>
 800019a:	4c08      	ldr	r4, [pc, #32]	; (80001bc <d_make_comp+0xbc>)
 800019c:	4220      	tst	r0, r4
 800019e:	d0e5      	beq.n	800016c <d_make_comp+0x6c>
 80001a0:	2a00      	cmp	r2, #0
 80001a2:	d0e3      	beq.n	800016c <d_make_comp+0x6c>
 80001a4:	2b00      	cmp	r3, #0
 80001a6:	d1bd      	bne.n	8000124 <d_make_comp+0x24>
 80001a8:	2000      	movs	r0, #0
 80001aa:	e7cc      	b.n	8000146 <d_make_comp+0x46>
 80001ac:	2f801ffe 	.word	0x2f801ffe
 80001b0:	01c71107 	.word	0x01c71107
 80001b4:	0a002ef8 	.word	0x0a002ef8
 80001b8:	0800e7d8 	.word	0x0800e7d8
 80001bc:	00400001 	.word	0x00400001

080001c0 <d_number>:
 80001c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80001c2:	46ce      	mov	lr, r9
 80001c4:	4647      	mov	r7, r8
 80001c6:	b580      	push	{r7, lr}
 80001c8:	68c5      	ldr	r5, [r0, #12]
 80001ca:	0006      	movs	r6, r0
 80001cc:	782c      	ldrb	r4, [r5, #0]
 80001ce:	2c6e      	cmp	r4, #110	; 0x6e
 80001d0:	d027      	beq.n	8000222 <d_number+0x62>
 80001d2:	3c30      	subs	r4, #48	; 0x30
 80001d4:	b2e3      	uxtb	r3, r4
 80001d6:	2b09      	cmp	r3, #9
 80001d8:	d82e      	bhi.n	8000238 <d_number+0x78>
 80001da:	2300      	movs	r3, #0
 80001dc:	4698      	mov	r8, r3
 80001de:	4b17      	ldr	r3, [pc, #92]	; (800023c <d_number+0x7c>)
 80001e0:	2700      	movs	r7, #0
 80001e2:	4699      	mov	r9, r3
 80001e4:	3501      	adds	r5, #1
 80001e6:	e007      	b.n	80001f8 <d_number+0x38>
 80001e8:	464b      	mov	r3, r9
 80001ea:	210a      	movs	r1, #10
 80001ec:	1b18      	subs	r0, r3, r4
 80001ee:	3501      	adds	r5, #1
 80001f0:	f006 fc9a 	bl	8006b28 <__divsi3>
 80001f4:	42b8      	cmp	r0, r7
 80001f6:	db12      	blt.n	800021e <d_number+0x5e>
 80001f8:	00bb      	lsls	r3, r7, #2
 80001fa:	19df      	adds	r7, r3, r7
 80001fc:	007f      	lsls	r7, r7, #1
 80001fe:	60f5      	str	r5, [r6, #12]
 8000200:	193f      	adds	r7, r7, r4
 8000202:	782c      	ldrb	r4, [r5, #0]
 8000204:	3c30      	subs	r4, #48	; 0x30
 8000206:	b2e3      	uxtb	r3, r4
 8000208:	2b09      	cmp	r3, #9
 800020a:	d9ed      	bls.n	80001e8 <d_number+0x28>
 800020c:	4643      	mov	r3, r8
 800020e:	2b00      	cmp	r3, #0
 8000210:	d000      	beq.n	8000214 <d_number+0x54>
 8000212:	427f      	negs	r7, r7
 8000214:	0038      	movs	r0, r7
 8000216:	bcc0      	pop	{r6, r7}
 8000218:	46b9      	mov	r9, r7
 800021a:	46b0      	mov	r8, r6
 800021c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800021e:	2701      	movs	r7, #1
 8000220:	e7f7      	b.n	8000212 <d_number+0x52>
 8000222:	1c6b      	adds	r3, r5, #1
 8000224:	60c3      	str	r3, [r0, #12]
 8000226:	786c      	ldrb	r4, [r5, #1]
 8000228:	3c30      	subs	r4, #48	; 0x30
 800022a:	b2e2      	uxtb	r2, r4
 800022c:	2a09      	cmp	r2, #9
 800022e:	d803      	bhi.n	8000238 <d_number+0x78>
 8000230:	001d      	movs	r5, r3
 8000232:	2301      	movs	r3, #1
 8000234:	4698      	mov	r8, r3
 8000236:	e7d2      	b.n	80001de <d_number+0x1e>
 8000238:	2700      	movs	r7, #0
 800023a:	e7eb      	b.n	8000214 <d_number+0x54>
 800023c:	7fffffff 	.word	0x7fffffff

08000240 <d_call_offset>:
 8000240:	b510      	push	{r4, lr}
 8000242:	0004      	movs	r4, r0
 8000244:	2900      	cmp	r1, #0
 8000246:	d108      	bne.n	800025a <d_call_offset+0x1a>
 8000248:	68c3      	ldr	r3, [r0, #12]
 800024a:	781a      	ldrb	r2, [r3, #0]
 800024c:	2a00      	cmp	r2, #0
 800024e:	d101      	bne.n	8000254 <d_call_offset+0x14>
 8000250:	2000      	movs	r0, #0
 8000252:	bd10      	pop	{r4, pc}
 8000254:	1c5a      	adds	r2, r3, #1
 8000256:	60c2      	str	r2, [r0, #12]
 8000258:	7819      	ldrb	r1, [r3, #0]
 800025a:	2968      	cmp	r1, #104	; 0x68
 800025c:	d00a      	beq.n	8000274 <d_call_offset+0x34>
 800025e:	2976      	cmp	r1, #118	; 0x76
 8000260:	d1f6      	bne.n	8000250 <d_call_offset+0x10>
 8000262:	0020      	movs	r0, r4
 8000264:	f7ff ffac 	bl	80001c0 <d_number>
 8000268:	68e3      	ldr	r3, [r4, #12]
 800026a:	781a      	ldrb	r2, [r3, #0]
 800026c:	2a5f      	cmp	r2, #95	; 0x5f
 800026e:	d1ef      	bne.n	8000250 <d_call_offset+0x10>
 8000270:	3301      	adds	r3, #1
 8000272:	60e3      	str	r3, [r4, #12]
 8000274:	0020      	movs	r0, r4
 8000276:	f7ff ffa3 	bl	80001c0 <d_number>
 800027a:	68e3      	ldr	r3, [r4, #12]
 800027c:	781a      	ldrb	r2, [r3, #0]
 800027e:	2a5f      	cmp	r2, #95	; 0x5f
 8000280:	d1e6      	bne.n	8000250 <d_call_offset+0x10>
 8000282:	3301      	adds	r3, #1
 8000284:	2001      	movs	r0, #1
 8000286:	60e3      	str	r3, [r4, #12]
 8000288:	e7e3      	b.n	8000252 <d_call_offset+0x12>
 800028a:	46c0      	nop			; (mov r8, r8)

0800028c <d_ref_qualifier>:
 800028c:	b510      	push	{r4, lr}
 800028e:	68c3      	ldr	r3, [r0, #12]
 8000290:	000a      	movs	r2, r1
 8000292:	7819      	ldrb	r1, [r3, #0]
 8000294:	2952      	cmp	r1, #82	; 0x52
 8000296:	d00d      	beq.n	80002b4 <d_ref_qualifier+0x28>
 8000298:	294f      	cmp	r1, #79	; 0x4f
 800029a:	d001      	beq.n	80002a0 <d_ref_qualifier+0x14>
 800029c:	0010      	movs	r0, r2
 800029e:	bd10      	pop	{r4, pc}
 80002a0:	2120      	movs	r1, #32
 80002a2:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 80002a4:	3403      	adds	r4, #3
 80002a6:	3301      	adds	r3, #1
 80002a8:	62c4      	str	r4, [r0, #44]	; 0x2c
 80002aa:	60c3      	str	r3, [r0, #12]
 80002ac:	2300      	movs	r3, #0
 80002ae:	f7ff ff27 	bl	8000100 <d_make_comp>
 80002b2:	e7f4      	b.n	800029e <d_ref_qualifier+0x12>
 80002b4:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 80002b6:	211f      	movs	r1, #31
 80002b8:	3402      	adds	r4, #2
 80002ba:	e7f4      	b.n	80002a6 <d_ref_qualifier+0x1a>

080002bc <d_count_templates_scopes>:
 80002bc:	b570      	push	{r4, r5, r6, lr}
 80002be:	0005      	movs	r5, r0
 80002c0:	1e0c      	subs	r4, r1, #0
 80002c2:	d015      	beq.n	80002f0 <d_count_templates_scopes+0x34>
 80002c4:	208e      	movs	r0, #142	; 0x8e
 80002c6:	2180      	movs	r1, #128	; 0x80
 80002c8:	4e1a      	ldr	r6, [pc, #104]	; (8000334 <d_count_templates_scopes+0x78>)
 80002ca:	0040      	lsls	r0, r0, #1
 80002cc:	00c9      	lsls	r1, r1, #3
 80002ce:	68a3      	ldr	r3, [r4, #8]
 80002d0:	2b01      	cmp	r3, #1
 80002d2:	dc0d      	bgt.n	80002f0 <d_count_templates_scopes+0x34>
 80002d4:	582a      	ldr	r2, [r5, r0]
 80002d6:	428a      	cmp	r2, r1
 80002d8:	dc0a      	bgt.n	80002f0 <d_count_templates_scopes+0x34>
 80002da:	3301      	adds	r3, #1
 80002dc:	60a3      	str	r3, [r4, #8]
 80002de:	7823      	ldrb	r3, [r4, #0]
 80002e0:	2b51      	cmp	r3, #81	; 0x51
 80002e2:	d805      	bhi.n	80002f0 <d_count_templates_scopes+0x34>
 80002e4:	009b      	lsls	r3, r3, #2
 80002e6:	58f3      	ldr	r3, [r6, r3]
 80002e8:	469f      	mov	pc, r3
 80002ea:	68e4      	ldr	r4, [r4, #12]
 80002ec:	2c00      	cmp	r4, #0
 80002ee:	d1ee      	bne.n	80002ce <d_count_templates_scopes+0x12>
 80002f0:	bd70      	pop	{r4, r5, r6, pc}
 80002f2:	6924      	ldr	r4, [r4, #16]
 80002f4:	e7fa      	b.n	80002ec <d_count_templates_scopes+0x30>
 80002f6:	21a2      	movs	r1, #162	; 0xa2
 80002f8:	0049      	lsls	r1, r1, #1
 80002fa:	586b      	ldr	r3, [r5, r1]
 80002fc:	3301      	adds	r3, #1
 80002fe:	506b      	str	r3, [r5, r1]
 8000300:	68e1      	ldr	r1, [r4, #12]
 8000302:	268e      	movs	r6, #142	; 0x8e
 8000304:	3201      	adds	r2, #1
 8000306:	0076      	lsls	r6, r6, #1
 8000308:	0028      	movs	r0, r5
 800030a:	51aa      	str	r2, [r5, r6]
 800030c:	f7ff ffd6 	bl	80002bc <d_count_templates_scopes>
 8000310:	0028      	movs	r0, r5
 8000312:	6921      	ldr	r1, [r4, #16]
 8000314:	f7ff ffd2 	bl	80002bc <d_count_templates_scopes>
 8000318:	59ab      	ldr	r3, [r5, r6]
 800031a:	3b01      	subs	r3, #1
 800031c:	51ab      	str	r3, [r5, r6]
 800031e:	e7e7      	b.n	80002f0 <d_count_templates_scopes+0x34>
 8000320:	68e1      	ldr	r1, [r4, #12]
 8000322:	780b      	ldrb	r3, [r1, #0]
 8000324:	2b05      	cmp	r3, #5
 8000326:	d1ec      	bne.n	8000302 <d_count_templates_scopes+0x46>
 8000328:	209c      	movs	r0, #156	; 0x9c
 800032a:	0040      	lsls	r0, r0, #1
 800032c:	582b      	ldr	r3, [r5, r0]
 800032e:	3301      	adds	r3, #1
 8000330:	502b      	str	r3, [r5, r0]
 8000332:	e7e6      	b.n	8000302 <d_count_templates_scopes+0x46>
 8000334:	0800e7fc 	.word	0x0800e7fc

08000338 <d_pack_length>:
 8000338:	0003      	movs	r3, r0
 800033a:	2000      	movs	r0, #0
 800033c:	2b00      	cmp	r3, #0
 800033e:	d107      	bne.n	8000350 <d_pack_length+0x18>
 8000340:	e009      	b.n	8000356 <d_pack_length+0x1e>
 8000342:	68da      	ldr	r2, [r3, #12]
 8000344:	2a00      	cmp	r2, #0
 8000346:	d006      	beq.n	8000356 <d_pack_length+0x1e>
 8000348:	691b      	ldr	r3, [r3, #16]
 800034a:	3001      	adds	r0, #1
 800034c:	2b00      	cmp	r3, #0
 800034e:	d002      	beq.n	8000356 <d_pack_length+0x1e>
 8000350:	781a      	ldrb	r2, [r3, #0]
 8000352:	2a2f      	cmp	r2, #47	; 0x2f
 8000354:	d0f5      	beq.n	8000342 <d_pack_length+0xa>
 8000356:	4770      	bx	lr

08000358 <d_discriminator>:
 8000358:	b510      	push	{r4, lr}
 800035a:	68c3      	ldr	r3, [r0, #12]
 800035c:	0004      	movs	r4, r0
 800035e:	781a      	ldrb	r2, [r3, #0]
 8000360:	2a5f      	cmp	r2, #95	; 0x5f
 8000362:	d109      	bne.n	8000378 <d_discriminator+0x20>
 8000364:	1c5a      	adds	r2, r3, #1
 8000366:	60c2      	str	r2, [r0, #12]
 8000368:	785a      	ldrb	r2, [r3, #1]
 800036a:	2a5f      	cmp	r2, #95	; 0x5f
 800036c:	d006      	beq.n	800037c <d_discriminator+0x24>
 800036e:	f7ff ff27 	bl	80001c0 <d_number>
 8000372:	43c0      	mvns	r0, r0
 8000374:	0fc0      	lsrs	r0, r0, #31
 8000376:	e000      	b.n	800037a <d_discriminator+0x22>
 8000378:	2001      	movs	r0, #1
 800037a:	bd10      	pop	{r4, pc}
 800037c:	3302      	adds	r3, #2
 800037e:	60c3      	str	r3, [r0, #12]
 8000380:	f7ff ff1e 	bl	80001c0 <d_number>
 8000384:	2800      	cmp	r0, #0
 8000386:	db0a      	blt.n	800039e <d_discriminator+0x46>
 8000388:	2809      	cmp	r0, #9
 800038a:	ddf5      	ble.n	8000378 <d_discriminator+0x20>
 800038c:	68e3      	ldr	r3, [r4, #12]
 800038e:	2000      	movs	r0, #0
 8000390:	781a      	ldrb	r2, [r3, #0]
 8000392:	2a5f      	cmp	r2, #95	; 0x5f
 8000394:	d1f1      	bne.n	800037a <d_discriminator+0x22>
 8000396:	3301      	adds	r3, #1
 8000398:	60e3      	str	r3, [r4, #12]
 800039a:	3001      	adds	r0, #1
 800039c:	e7ed      	b.n	800037a <d_discriminator+0x22>
 800039e:	2000      	movs	r0, #0
 80003a0:	e7eb      	b.n	800037a <d_discriminator+0x22>
 80003a2:	46c0      	nop			; (mov r8, r8)

080003a4 <d_index_template_argument.part.0>:
 80003a4:	2800      	cmp	r0, #0
 80003a6:	d106      	bne.n	80003b6 <d_index_template_argument.part.0+0x12>
 80003a8:	e008      	b.n	80003bc <d_index_template_argument.part.0+0x18>
 80003aa:	2900      	cmp	r1, #0
 80003ac:	d008      	beq.n	80003c0 <d_index_template_argument.part.0+0x1c>
 80003ae:	6900      	ldr	r0, [r0, #16]
 80003b0:	3901      	subs	r1, #1
 80003b2:	2800      	cmp	r0, #0
 80003b4:	d003      	beq.n	80003be <d_index_template_argument.part.0+0x1a>
 80003b6:	7803      	ldrb	r3, [r0, #0]
 80003b8:	2b2f      	cmp	r3, #47	; 0x2f
 80003ba:	d0f6      	beq.n	80003aa <d_index_template_argument.part.0+0x6>
 80003bc:	2000      	movs	r0, #0
 80003be:	4770      	bx	lr
 80003c0:	68c0      	ldr	r0, [r0, #12]
 80003c2:	e7fc      	b.n	80003be <d_index_template_argument.part.0+0x1a>

080003c4 <d_growable_string_callback_adapter>:
 80003c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80003c6:	0014      	movs	r4, r2
 80003c8:	46c6      	mov	lr, r8
 80003ca:	6852      	ldr	r2, [r2, #4]
 80003cc:	1c4b      	adds	r3, r1, #1
 80003ce:	68a5      	ldr	r5, [r4, #8]
 80003d0:	189b      	adds	r3, r3, r2
 80003d2:	0007      	movs	r7, r0
 80003d4:	000e      	movs	r6, r1
 80003d6:	b500      	push	{lr}
 80003d8:	42ab      	cmp	r3, r5
 80003da:	d813      	bhi.n	8000404 <d_growable_string_callback_adapter+0x40>
 80003dc:	68e5      	ldr	r5, [r4, #12]
 80003de:	2d00      	cmp	r5, #0
 80003e0:	d10d      	bne.n	80003fe <d_growable_string_callback_adapter+0x3a>
 80003e2:	6863      	ldr	r3, [r4, #4]
 80003e4:	6820      	ldr	r0, [r4, #0]
 80003e6:	0032      	movs	r2, r6
 80003e8:	18c0      	adds	r0, r0, r3
 80003ea:	0039      	movs	r1, r7
 80003ec:	f00c f9d8 	bl	800c7a0 <memcpy>
 80003f0:	6823      	ldr	r3, [r4, #0]
 80003f2:	6862      	ldr	r2, [r4, #4]
 80003f4:	199b      	adds	r3, r3, r6
 80003f6:	549d      	strb	r5, [r3, r2]
 80003f8:	6863      	ldr	r3, [r4, #4]
 80003fa:	199b      	adds	r3, r3, r6
 80003fc:	6063      	str	r3, [r4, #4]
 80003fe:	bc80      	pop	{r7}
 8000400:	46b8      	mov	r8, r7
 8000402:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000404:	68e2      	ldr	r2, [r4, #12]
 8000406:	2a00      	cmp	r2, #0
 8000408:	d1f9      	bne.n	80003fe <d_growable_string_callback_adapter+0x3a>
 800040a:	2d00      	cmp	r5, #0
 800040c:	d102      	bne.n	8000414 <d_growable_string_callback_adapter+0x50>
 800040e:	2b02      	cmp	r3, #2
 8000410:	d90d      	bls.n	800042e <d_growable_string_callback_adapter+0x6a>
 8000412:	3502      	adds	r5, #2
 8000414:	006d      	lsls	r5, r5, #1
 8000416:	42ab      	cmp	r3, r5
 8000418:	d8fc      	bhi.n	8000414 <d_growable_string_callback_adapter+0x50>
 800041a:	0029      	movs	r1, r5
 800041c:	6820      	ldr	r0, [r4, #0]
 800041e:	f00b fd71 	bl	800bf04 <realloc>
 8000422:	4680      	mov	r8, r0
 8000424:	2800      	cmp	r0, #0
 8000426:	d004      	beq.n	8000432 <d_growable_string_callback_adapter+0x6e>
 8000428:	6020      	str	r0, [r4, #0]
 800042a:	60a5      	str	r5, [r4, #8]
 800042c:	e7d6      	b.n	80003dc <d_growable_string_callback_adapter+0x18>
 800042e:	2502      	movs	r5, #2
 8000430:	e7f3      	b.n	800041a <d_growable_string_callback_adapter+0x56>
 8000432:	6820      	ldr	r0, [r4, #0]
 8000434:	f00b fca8 	bl	800bd88 <free>
 8000438:	4643      	mov	r3, r8
 800043a:	6023      	str	r3, [r4, #0]
 800043c:	6063      	str	r3, [r4, #4]
 800043e:	60a3      	str	r3, [r4, #8]
 8000440:	2301      	movs	r3, #1
 8000442:	60e3      	str	r3, [r4, #12]
 8000444:	e7db      	b.n	80003fe <d_growable_string_callback_adapter+0x3a>
 8000446:	46c0      	nop			; (mov r8, r8)

08000448 <next_is_type_qual.isra.0>:
 8000448:	7802      	ldrb	r2, [r0, #0]
 800044a:	0003      	movs	r3, r0
 800044c:	2a72      	cmp	r2, #114	; 0x72
 800044e:	d012      	beq.n	8000476 <next_is_type_qual.isra.0+0x2e>
 8000450:	2a56      	cmp	r2, #86	; 0x56
 8000452:	d010      	beq.n	8000476 <next_is_type_qual.isra.0+0x2e>
 8000454:	2a4b      	cmp	r2, #75	; 0x4b
 8000456:	d00e      	beq.n	8000476 <next_is_type_qual.isra.0+0x2e>
 8000458:	2000      	movs	r0, #0
 800045a:	2a44      	cmp	r2, #68	; 0x44
 800045c:	d10c      	bne.n	8000478 <next_is_type_qual.isra.0+0x30>
 800045e:	785b      	ldrb	r3, [r3, #1]
 8000460:	3a24      	subs	r2, #36	; 0x24
 8000462:	0019      	movs	r1, r3
 8000464:	4391      	bics	r1, r2
 8000466:	294f      	cmp	r1, #79	; 0x4f
 8000468:	d005      	beq.n	8000476 <next_is_type_qual.isra.0+0x2e>
 800046a:	2201      	movs	r2, #1
 800046c:	3b77      	subs	r3, #119	; 0x77
 800046e:	b2db      	uxtb	r3, r3
 8000470:	429a      	cmp	r2, r3
 8000472:	4140      	adcs	r0, r0
 8000474:	e000      	b.n	8000478 <next_is_type_qual.isra.0+0x30>
 8000476:	2001      	movs	r0, #1
 8000478:	4770      	bx	lr
 800047a:	46c0      	nop			; (mov r8, r8)

0800047c <d_append_char>:
 800047c:	2380      	movs	r3, #128	; 0x80
 800047e:	005b      	lsls	r3, r3, #1
 8000480:	58c3      	ldr	r3, [r0, r3]
 8000482:	b570      	push	{r4, r5, r6, lr}
 8000484:	0004      	movs	r4, r0
 8000486:	000d      	movs	r5, r1
 8000488:	2bff      	cmp	r3, #255	; 0xff
 800048a:	d008      	beq.n	800049e <d_append_char+0x22>
 800048c:	1c59      	adds	r1, r3, #1
 800048e:	2280      	movs	r2, #128	; 0x80
 8000490:	0052      	lsls	r2, r2, #1
 8000492:	50a1      	str	r1, [r4, r2]
 8000494:	54e5      	strb	r5, [r4, r3]
 8000496:	2382      	movs	r3, #130	; 0x82
 8000498:	005b      	lsls	r3, r3, #1
 800049a:	54e5      	strb	r5, [r4, r3]
 800049c:	bd70      	pop	{r4, r5, r6, pc}
 800049e:	2200      	movs	r2, #0
 80004a0:	54c2      	strb	r2, [r0, r3]
 80004a2:	2386      	movs	r3, #134	; 0x86
 80004a4:	005b      	lsls	r3, r3, #1
 80004a6:	58c2      	ldr	r2, [r0, r3]
 80004a8:	3b04      	subs	r3, #4
 80004aa:	21ff      	movs	r1, #255	; 0xff
 80004ac:	58c3      	ldr	r3, [r0, r3]
 80004ae:	4798      	blx	r3
 80004b0:	2294      	movs	r2, #148	; 0x94
 80004b2:	0052      	lsls	r2, r2, #1
 80004b4:	58a3      	ldr	r3, [r4, r2]
 80004b6:	2101      	movs	r1, #1
 80004b8:	3301      	adds	r3, #1
 80004ba:	50a3      	str	r3, [r4, r2]
 80004bc:	2300      	movs	r3, #0
 80004be:	e7e6      	b.n	800048e <d_append_char+0x12>

080004c0 <d_lookup_template_argument>:
 80004c0:	2288      	movs	r2, #136	; 0x88
 80004c2:	0052      	lsls	r2, r2, #1
 80004c4:	0003      	movs	r3, r0
 80004c6:	5880      	ldr	r0, [r0, r2]
 80004c8:	2800      	cmp	r0, #0
 80004ca:	d014      	beq.n	80004f6 <d_lookup_template_argument+0x36>
 80004cc:	6843      	ldr	r3, [r0, #4]
 80004ce:	6918      	ldr	r0, [r3, #16]
 80004d0:	68cb      	ldr	r3, [r1, #12]
 80004d2:	2b00      	cmp	r3, #0
 80004d4:	db0c      	blt.n	80004f0 <d_lookup_template_argument+0x30>
 80004d6:	2800      	cmp	r0, #0
 80004d8:	d106      	bne.n	80004e8 <d_lookup_template_argument+0x28>
 80004da:	e009      	b.n	80004f0 <d_lookup_template_argument+0x30>
 80004dc:	2b00      	cmp	r3, #0
 80004de:	d008      	beq.n	80004f2 <d_lookup_template_argument+0x32>
 80004e0:	6900      	ldr	r0, [r0, #16]
 80004e2:	3b01      	subs	r3, #1
 80004e4:	2800      	cmp	r0, #0
 80004e6:	d003      	beq.n	80004f0 <d_lookup_template_argument+0x30>
 80004e8:	7802      	ldrb	r2, [r0, #0]
 80004ea:	2a2f      	cmp	r2, #47	; 0x2f
 80004ec:	d0f6      	beq.n	80004dc <d_lookup_template_argument+0x1c>
 80004ee:	2000      	movs	r0, #0
 80004f0:	4770      	bx	lr
 80004f2:	68c0      	ldr	r0, [r0, #12]
 80004f4:	e7fc      	b.n	80004f0 <d_lookup_template_argument+0x30>
 80004f6:	2101      	movs	r1, #1
 80004f8:	3208      	adds	r2, #8
 80004fa:	5099      	str	r1, [r3, r2]
 80004fc:	e7f8      	b.n	80004f0 <d_lookup_template_argument+0x30>
 80004fe:	46c0      	nop			; (mov r8, r8)

08000500 <d_find_pack>:
 8000500:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000502:	46c6      	mov	lr, r8
 8000504:	0006      	movs	r6, r0
 8000506:	000c      	movs	r4, r1
 8000508:	b500      	push	{lr}
 800050a:	2900      	cmp	r1, #0
 800050c:	d012      	beq.n	8000534 <d_find_pack+0x34>
 800050e:	4b1b      	ldr	r3, [pc, #108]	; (800057c <d_find_pack+0x7c>)
 8000510:	2501      	movs	r5, #1
 8000512:	4698      	mov	r8, r3
 8000514:	4f1a      	ldr	r7, [pc, #104]	; (8000580 <d_find_pack+0x80>)
 8000516:	7823      	ldrb	r3, [r4, #0]
 8000518:	2b08      	cmp	r3, #8
 800051a:	d80f      	bhi.n	800053c <d_find_pack+0x3c>
 800051c:	4642      	mov	r2, r8
 800051e:	009b      	lsls	r3, r3, #2
 8000520:	58d3      	ldr	r3, [r2, r3]
 8000522:	469f      	mov	pc, r3
 8000524:	2b17      	cmp	r3, #23
 8000526:	d915      	bls.n	8000554 <d_find_pack+0x54>
 8000528:	4a16      	ldr	r2, [pc, #88]	; (8000584 <d_find_pack+0x84>)
 800052a:	3b18      	subs	r3, #24
 800052c:	b2db      	uxtb	r3, r3
 800052e:	40da      	lsrs	r2, r3
 8000530:	4215      	tst	r5, r2
 8000532:	d00f      	beq.n	8000554 <d_find_pack+0x54>
 8000534:	2000      	movs	r0, #0
 8000536:	bc80      	pop	{r7}
 8000538:	46b8      	mov	r8, r7
 800053a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800053c:	2b2c      	cmp	r3, #44	; 0x2c
 800053e:	d9f1      	bls.n	8000524 <d_find_pack+0x24>
 8000540:	3b32      	subs	r3, #50	; 0x32
 8000542:	b2db      	uxtb	r3, r3
 8000544:	2b1b      	cmp	r3, #27
 8000546:	d805      	bhi.n	8000554 <d_find_pack+0x54>
 8000548:	002a      	movs	r2, r5
 800054a:	409a      	lsls	r2, r3
 800054c:	423a      	tst	r2, r7
 800054e:	d1f1      	bne.n	8000534 <d_find_pack+0x34>
 8000550:	2b01      	cmp	r3, #1
 8000552:	d005      	beq.n	8000560 <d_find_pack+0x60>
 8000554:	0030      	movs	r0, r6
 8000556:	68e1      	ldr	r1, [r4, #12]
 8000558:	f7ff ffd2 	bl	8000500 <d_find_pack>
 800055c:	2800      	cmp	r0, #0
 800055e:	d1ea      	bne.n	8000536 <d_find_pack+0x36>
 8000560:	6924      	ldr	r4, [r4, #16]
 8000562:	2c00      	cmp	r4, #0
 8000564:	d1d7      	bne.n	8000516 <d_find_pack+0x16>
 8000566:	e7e5      	b.n	8000534 <d_find_pack+0x34>
 8000568:	0021      	movs	r1, r4
 800056a:	0030      	movs	r0, r6
 800056c:	f7ff ffa8 	bl	80004c0 <d_lookup_template_argument>
 8000570:	2800      	cmp	r0, #0
 8000572:	d0df      	beq.n	8000534 <d_find_pack+0x34>
 8000574:	7803      	ldrb	r3, [r0, #0]
 8000576:	2b2f      	cmp	r3, #47	; 0x2f
 8000578:	d1dc      	bne.n	8000534 <d_find_pack+0x34>
 800057a:	e7dc      	b.n	8000536 <d_find_pack+0x36>
 800057c:	0800e944 	.word	0x0800e944
 8000580:	0ce30001 	.word	0x0ce30001
 8000584:	00108001 	.word	0x00108001

08000588 <d_append_string>:
 8000588:	b5f0      	push	{r4, r5, r6, r7, lr}
 800058a:	46d6      	mov	lr, sl
 800058c:	464f      	mov	r7, r9
 800058e:	4646      	mov	r6, r8
 8000590:	0005      	movs	r5, r0
 8000592:	b5c0      	push	{r6, r7, lr}
 8000594:	0008      	movs	r0, r1
 8000596:	000c      	movs	r4, r1
 8000598:	f006 fa20 	bl	80069dc <strlen>
 800059c:	2800      	cmp	r0, #0
 800059e:	d02a      	beq.n	80005f6 <d_append_string+0x6e>
 80005a0:	2200      	movs	r2, #0
 80005a2:	2380      	movs	r3, #128	; 0x80
 80005a4:	4692      	mov	sl, r2
 80005a6:	320d      	adds	r2, #13
 80005a8:	32ff      	adds	r2, #255	; 0xff
 80005aa:	4691      	mov	r9, r2
 80005ac:	005b      	lsls	r3, r3, #1
 80005ae:	3a04      	subs	r2, #4
 80005b0:	4690      	mov	r8, r2
 80005b2:	58eb      	ldr	r3, [r5, r3]
 80005b4:	1827      	adds	r7, r4, r0
 80005b6:	e00a      	b.n	80005ce <d_append_string+0x46>
 80005b8:	0019      	movs	r1, r3
 80005ba:	3301      	adds	r3, #1
 80005bc:	2280      	movs	r2, #128	; 0x80
 80005be:	0052      	lsls	r2, r2, #1
 80005c0:	50ab      	str	r3, [r5, r2]
 80005c2:	3401      	adds	r4, #1
 80005c4:	3204      	adds	r2, #4
 80005c6:	546e      	strb	r6, [r5, r1]
 80005c8:	54ae      	strb	r6, [r5, r2]
 80005ca:	42bc      	cmp	r4, r7
 80005cc:	d013      	beq.n	80005f6 <d_append_string+0x6e>
 80005ce:	7826      	ldrb	r6, [r4, #0]
 80005d0:	2bff      	cmp	r3, #255	; 0xff
 80005d2:	d1f1      	bne.n	80005b8 <d_append_string+0x30>
 80005d4:	4652      	mov	r2, sl
 80005d6:	54ea      	strb	r2, [r5, r3]
 80005d8:	464b      	mov	r3, r9
 80005da:	58ea      	ldr	r2, [r5, r3]
 80005dc:	4643      	mov	r3, r8
 80005de:	21ff      	movs	r1, #255	; 0xff
 80005e0:	58eb      	ldr	r3, [r5, r3]
 80005e2:	0028      	movs	r0, r5
 80005e4:	4798      	blx	r3
 80005e6:	2294      	movs	r2, #148	; 0x94
 80005e8:	0052      	lsls	r2, r2, #1
 80005ea:	58ab      	ldr	r3, [r5, r2]
 80005ec:	2100      	movs	r1, #0
 80005ee:	3301      	adds	r3, #1
 80005f0:	50ab      	str	r3, [r5, r2]
 80005f2:	2301      	movs	r3, #1
 80005f4:	e7e2      	b.n	80005bc <d_append_string+0x34>
 80005f6:	bce0      	pop	{r5, r6, r7}
 80005f8:	46ba      	mov	sl, r7
 80005fa:	46b1      	mov	r9, r6
 80005fc:	46a8      	mov	r8, r5
 80005fe:	bdf0      	pop	{r4, r5, r6, r7, pc}

08000600 <d_template_param>:
 8000600:	b510      	push	{r4, lr}
 8000602:	68c3      	ldr	r3, [r0, #12]
 8000604:	0004      	movs	r4, r0
 8000606:	781a      	ldrb	r2, [r3, #0]
 8000608:	2a54      	cmp	r2, #84	; 0x54
 800060a:	d122      	bne.n	8000652 <d_template_param+0x52>
 800060c:	1c5a      	adds	r2, r3, #1
 800060e:	60c2      	str	r2, [r0, #12]
 8000610:	785a      	ldrb	r2, [r3, #1]
 8000612:	2a5f      	cmp	r2, #95	; 0x5f
 8000614:	d01f      	beq.n	8000656 <d_template_param+0x56>
 8000616:	2a6e      	cmp	r2, #110	; 0x6e
 8000618:	d01b      	beq.n	8000652 <d_template_param+0x52>
 800061a:	f7ff fdd1 	bl	80001c0 <d_number>
 800061e:	1c41      	adds	r1, r0, #1
 8000620:	d417      	bmi.n	8000652 <d_template_param+0x52>
 8000622:	68e3      	ldr	r3, [r4, #12]
 8000624:	781a      	ldrb	r2, [r3, #0]
 8000626:	2a5f      	cmp	r2, #95	; 0x5f
 8000628:	d113      	bne.n	8000652 <d_template_param+0x52>
 800062a:	3301      	adds	r3, #1
 800062c:	60e3      	str	r3, [r4, #12]
 800062e:	69a2      	ldr	r2, [r4, #24]
 8000630:	6963      	ldr	r3, [r4, #20]
 8000632:	4293      	cmp	r3, r2
 8000634:	da0d      	bge.n	8000652 <d_template_param+0x52>
 8000636:	009a      	lsls	r2, r3, #2
 8000638:	6920      	ldr	r0, [r4, #16]
 800063a:	18d2      	adds	r2, r2, r3
 800063c:	0092      	lsls	r2, r2, #2
 800063e:	1880      	adds	r0, r0, r2
 8000640:	2200      	movs	r2, #0
 8000642:	3301      	adds	r3, #1
 8000644:	6042      	str	r2, [r0, #4]
 8000646:	6082      	str	r2, [r0, #8]
 8000648:	6163      	str	r3, [r4, #20]
 800064a:	2305      	movs	r3, #5
 800064c:	60c1      	str	r1, [r0, #12]
 800064e:	7003      	strb	r3, [r0, #0]
 8000650:	e000      	b.n	8000654 <d_template_param+0x54>
 8000652:	2000      	movs	r0, #0
 8000654:	bd10      	pop	{r4, pc}
 8000656:	2100      	movs	r1, #0
 8000658:	3302      	adds	r3, #2
 800065a:	e7e7      	b.n	800062c <d_template_param+0x2c>

0800065c <d_append_num>:
 800065c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800065e:	46d6      	mov	lr, sl
 8000660:	464f      	mov	r7, r9
 8000662:	4646      	mov	r6, r8
 8000664:	b5c0      	push	{r6, r7, lr}
 8000666:	4b1f      	ldr	r3, [pc, #124]	; (80006e4 <d_append_num+0x88>)
 8000668:	b088      	sub	sp, #32
 800066a:	000a      	movs	r2, r1
 800066c:	0005      	movs	r5, r0
 800066e:	0019      	movs	r1, r3
 8000670:	a801      	add	r0, sp, #4
 8000672:	f00b fe67 	bl	800c344 <siprintf>
 8000676:	a801      	add	r0, sp, #4
 8000678:	f006 f9b0 	bl	80069dc <strlen>
 800067c:	2800      	cmp	r0, #0
 800067e:	d02b      	beq.n	80006d8 <d_append_num+0x7c>
 8000680:	2200      	movs	r2, #0
 8000682:	2380      	movs	r3, #128	; 0x80
 8000684:	4692      	mov	sl, r2
 8000686:	320d      	adds	r2, #13
 8000688:	32ff      	adds	r2, #255	; 0xff
 800068a:	4691      	mov	r9, r2
 800068c:	005b      	lsls	r3, r3, #1
 800068e:	ac01      	add	r4, sp, #4
 8000690:	3a04      	subs	r2, #4
 8000692:	4690      	mov	r8, r2
 8000694:	58eb      	ldr	r3, [r5, r3]
 8000696:	1827      	adds	r7, r4, r0
 8000698:	e00a      	b.n	80006b0 <d_append_num+0x54>
 800069a:	0019      	movs	r1, r3
 800069c:	3301      	adds	r3, #1
 800069e:	2280      	movs	r2, #128	; 0x80
 80006a0:	0052      	lsls	r2, r2, #1
 80006a2:	50ab      	str	r3, [r5, r2]
 80006a4:	3401      	adds	r4, #1
 80006a6:	3204      	adds	r2, #4
 80006a8:	546e      	strb	r6, [r5, r1]
 80006aa:	54ae      	strb	r6, [r5, r2]
 80006ac:	42bc      	cmp	r4, r7
 80006ae:	d013      	beq.n	80006d8 <d_append_num+0x7c>
 80006b0:	7826      	ldrb	r6, [r4, #0]
 80006b2:	2bff      	cmp	r3, #255	; 0xff
 80006b4:	d1f1      	bne.n	800069a <d_append_num+0x3e>
 80006b6:	4652      	mov	r2, sl
 80006b8:	54ea      	strb	r2, [r5, r3]
 80006ba:	464b      	mov	r3, r9
 80006bc:	58ea      	ldr	r2, [r5, r3]
 80006be:	4643      	mov	r3, r8
 80006c0:	21ff      	movs	r1, #255	; 0xff
 80006c2:	58eb      	ldr	r3, [r5, r3]
 80006c4:	0028      	movs	r0, r5
 80006c6:	4798      	blx	r3
 80006c8:	2294      	movs	r2, #148	; 0x94
 80006ca:	0052      	lsls	r2, r2, #1
 80006cc:	58ab      	ldr	r3, [r5, r2]
 80006ce:	2100      	movs	r1, #0
 80006d0:	3301      	adds	r3, #1
 80006d2:	50ab      	str	r3, [r5, r2]
 80006d4:	2301      	movs	r3, #1
 80006d6:	e7e2      	b.n	800069e <d_append_num+0x42>
 80006d8:	b008      	add	sp, #32
 80006da:	bce0      	pop	{r5, r6, r7}
 80006dc:	46ba      	mov	sl, r7
 80006de:	46b1      	mov	r9, r6
 80006e0:	46a8      	mov	r8, r5
 80006e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80006e4:	0800fbcc 	.word	0x0800fbcc

080006e8 <d_source_name>:
 80006e8:	b570      	push	{r4, r5, r6, lr}
 80006ea:	0004      	movs	r4, r0
 80006ec:	f7ff fd68 	bl	80001c0 <d_number>
 80006f0:	1e05      	subs	r5, r0, #0
 80006f2:	dd44      	ble.n	800077e <d_source_name+0x96>
 80006f4:	68e6      	ldr	r6, [r4, #12]
 80006f6:	6863      	ldr	r3, [r4, #4]
 80006f8:	1b9b      	subs	r3, r3, r6
 80006fa:	4298      	cmp	r0, r3
 80006fc:	dc3d      	bgt.n	800077a <d_source_name+0x92>
 80006fe:	68a2      	ldr	r2, [r4, #8]
 8000700:	1833      	adds	r3, r6, r0
 8000702:	60e3      	str	r3, [r4, #12]
 8000704:	0752      	lsls	r2, r2, #29
 8000706:	d502      	bpl.n	800070e <d_source_name+0x26>
 8000708:	781a      	ldrb	r2, [r3, #0]
 800070a:	2a24      	cmp	r2, #36	; 0x24
 800070c:	d039      	beq.n	8000782 <d_source_name+0x9a>
 800070e:	2d09      	cmp	r5, #9
 8000710:	dd23      	ble.n	800075a <d_source_name+0x72>
 8000712:	2208      	movs	r2, #8
 8000714:	0030      	movs	r0, r6
 8000716:	492b      	ldr	r1, [pc, #172]	; (80007c4 <d_source_name+0xdc>)
 8000718:	f00b ff26 	bl	800c568 <memcmp>
 800071c:	2800      	cmp	r0, #0
 800071e:	d106      	bne.n	800072e <d_source_name+0x46>
 8000720:	7a33      	ldrb	r3, [r6, #8]
 8000722:	2b2e      	cmp	r3, #46	; 0x2e
 8000724:	d032      	beq.n	800078c <d_source_name+0xa4>
 8000726:	2b5f      	cmp	r3, #95	; 0x5f
 8000728:	d030      	beq.n	800078c <d_source_name+0xa4>
 800072a:	2b24      	cmp	r3, #36	; 0x24
 800072c:	d02e      	beq.n	800078c <d_source_name+0xa4>
 800072e:	6963      	ldr	r3, [r4, #20]
 8000730:	69a2      	ldr	r2, [r4, #24]
 8000732:	4293      	cmp	r3, r2
 8000734:	da21      	bge.n	800077a <d_source_name+0x92>
 8000736:	009a      	lsls	r2, r3, #2
 8000738:	6920      	ldr	r0, [r4, #16]
 800073a:	18d2      	adds	r2, r2, r3
 800073c:	0092      	lsls	r2, r2, #2
 800073e:	1880      	adds	r0, r0, r2
 8000740:	2200      	movs	r2, #0
 8000742:	3301      	adds	r3, #1
 8000744:	6042      	str	r2, [r0, #4]
 8000746:	6082      	str	r2, [r0, #8]
 8000748:	6163      	str	r3, [r4, #20]
 800074a:	2300      	movs	r3, #0
 800074c:	60c6      	str	r6, [r0, #12]
 800074e:	6043      	str	r3, [r0, #4]
 8000750:	6083      	str	r3, [r0, #8]
 8000752:	7003      	strb	r3, [r0, #0]
 8000754:	6105      	str	r5, [r0, #16]
 8000756:	62a0      	str	r0, [r4, #40]	; 0x28
 8000758:	bd70      	pop	{r4, r5, r6, pc}
 800075a:	6963      	ldr	r3, [r4, #20]
 800075c:	69a2      	ldr	r2, [r4, #24]
 800075e:	4293      	cmp	r3, r2
 8000760:	da0b      	bge.n	800077a <d_source_name+0x92>
 8000762:	009a      	lsls	r2, r3, #2
 8000764:	6920      	ldr	r0, [r4, #16]
 8000766:	18d2      	adds	r2, r2, r3
 8000768:	0092      	lsls	r2, r2, #2
 800076a:	1880      	adds	r0, r0, r2
 800076c:	2200      	movs	r2, #0
 800076e:	3301      	adds	r3, #1
 8000770:	6042      	str	r2, [r0, #4]
 8000772:	6082      	str	r2, [r0, #8]
 8000774:	6163      	str	r3, [r4, #20]
 8000776:	2e00      	cmp	r6, #0
 8000778:	d1e7      	bne.n	800074a <d_source_name+0x62>
 800077a:	2000      	movs	r0, #0
 800077c:	e7eb      	b.n	8000756 <d_source_name+0x6e>
 800077e:	2000      	movs	r0, #0
 8000780:	e7ea      	b.n	8000758 <d_source_name+0x70>
 8000782:	3301      	adds	r3, #1
 8000784:	60e3      	str	r3, [r4, #12]
 8000786:	2d09      	cmp	r5, #9
 8000788:	dcc3      	bgt.n	8000712 <d_source_name+0x2a>
 800078a:	e7e6      	b.n	800075a <d_source_name+0x72>
 800078c:	7a73      	ldrb	r3, [r6, #9]
 800078e:	2b4e      	cmp	r3, #78	; 0x4e
 8000790:	d1cd      	bne.n	800072e <d_source_name+0x46>
 8000792:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8000794:	69a2      	ldr	r2, [r4, #24]
 8000796:	3316      	adds	r3, #22
 8000798:	1b5b      	subs	r3, r3, r5
 800079a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800079c:	6963      	ldr	r3, [r4, #20]
 800079e:	4293      	cmp	r3, r2
 80007a0:	daeb      	bge.n	800077a <d_source_name+0x92>
 80007a2:	009a      	lsls	r2, r3, #2
 80007a4:	18d2      	adds	r2, r2, r3
 80007a6:	3301      	adds	r3, #1
 80007a8:	6163      	str	r3, [r4, #20]
 80007aa:	2300      	movs	r3, #0
 80007ac:	6920      	ldr	r0, [r4, #16]
 80007ae:	0092      	lsls	r2, r2, #2
 80007b0:	1880      	adds	r0, r0, r2
 80007b2:	6043      	str	r3, [r0, #4]
 80007b4:	6083      	str	r3, [r0, #8]
 80007b6:	7003      	strb	r3, [r0, #0]
 80007b8:	4b03      	ldr	r3, [pc, #12]	; (80007c8 <d_source_name+0xe0>)
 80007ba:	60c3      	str	r3, [r0, #12]
 80007bc:	2315      	movs	r3, #21
 80007be:	6103      	str	r3, [r0, #16]
 80007c0:	e7c9      	b.n	8000756 <d_source_name+0x6e>
 80007c2:	46c0      	nop			; (mov r8, r8)
 80007c4:	0800fbd0 	.word	0x0800fbd0
 80007c8:	0800fbdc 	.word	0x0800fbdc

080007cc <d_substitution>:
 80007cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007ce:	68c3      	ldr	r3, [r0, #12]
 80007d0:	0004      	movs	r4, r0
 80007d2:	781a      	ldrb	r2, [r3, #0]
 80007d4:	2a53      	cmp	r2, #83	; 0x53
 80007d6:	d135      	bne.n	8000844 <d_substitution+0x78>
 80007d8:	1c5a      	adds	r2, r3, #1
 80007da:	60c2      	str	r2, [r0, #12]
 80007dc:	785a      	ldrb	r2, [r3, #1]
 80007de:	2a00      	cmp	r2, #0
 80007e0:	d033      	beq.n	800084a <d_substitution+0x7e>
 80007e2:	1c9a      	adds	r2, r3, #2
 80007e4:	60c2      	str	r2, [r0, #12]
 80007e6:	785a      	ldrb	r2, [r3, #1]
 80007e8:	2a5f      	cmp	r2, #95	; 0x5f
 80007ea:	d046      	beq.n	800087a <d_substitution+0xae>
 80007ec:	0013      	movs	r3, r2
 80007ee:	3b30      	subs	r3, #48	; 0x30
 80007f0:	b2d8      	uxtb	r0, r3
 80007f2:	2809      	cmp	r0, #9
 80007f4:	d93f      	bls.n	8000876 <d_substitution+0xaa>
 80007f6:	0015      	movs	r5, r2
 80007f8:	3d41      	subs	r5, #65	; 0x41
 80007fa:	2000      	movs	r0, #0
 80007fc:	2d19      	cmp	r5, #25
 80007fe:	d913      	bls.n	8000828 <d_substitution+0x5c>
 8000800:	e023      	b.n	800084a <d_substitution+0x7e>
 8000802:	00c3      	lsls	r3, r0, #3
 8000804:	181b      	adds	r3, r3, r0
 8000806:	009b      	lsls	r3, r3, #2
 8000808:	189b      	adds	r3, r3, r2
 800080a:	3b30      	subs	r3, #48	; 0x30
 800080c:	4298      	cmp	r0, r3
 800080e:	d819      	bhi.n	8000844 <d_substitution+0x78>
 8000810:	68e1      	ldr	r1, [r4, #12]
 8000812:	780a      	ldrb	r2, [r1, #0]
 8000814:	2a00      	cmp	r2, #0
 8000816:	d004      	beq.n	8000822 <d_substitution+0x56>
 8000818:	1c4a      	adds	r2, r1, #1
 800081a:	60e2      	str	r2, [r4, #12]
 800081c:	780a      	ldrb	r2, [r1, #0]
 800081e:	2a5f      	cmp	r2, #95	; 0x5f
 8000820:	d033      	beq.n	800088a <d_substitution+0xbe>
 8000822:	0018      	movs	r0, r3
 8000824:	0013      	movs	r3, r2
 8000826:	3b30      	subs	r3, #48	; 0x30
 8000828:	b2db      	uxtb	r3, r3
 800082a:	2b09      	cmp	r3, #9
 800082c:	d9e9      	bls.n	8000802 <d_substitution+0x36>
 800082e:	0013      	movs	r3, r2
 8000830:	3b41      	subs	r3, #65	; 0x41
 8000832:	2b19      	cmp	r3, #25
 8000834:	d806      	bhi.n	8000844 <d_substitution+0x78>
 8000836:	00c3      	lsls	r3, r0, #3
 8000838:	181b      	adds	r3, r3, r0
 800083a:	009b      	lsls	r3, r3, #2
 800083c:	189b      	adds	r3, r3, r2
 800083e:	3b37      	subs	r3, #55	; 0x37
 8000840:	4298      	cmp	r0, r3
 8000842:	d9e5      	bls.n	8000810 <d_substitution+0x44>
 8000844:	2500      	movs	r5, #0
 8000846:	0028      	movs	r0, r5
 8000848:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800084a:	2008      	movs	r0, #8
 800084c:	68a3      	ldr	r3, [r4, #8]
 800084e:	4003      	ands	r3, r0
 8000850:	001d      	movs	r5, r3
 8000852:	1e68      	subs	r0, r5, #1
 8000854:	4185      	sbcs	r5, r0
 8000856:	2b00      	cmp	r3, #0
 8000858:	d101      	bne.n	800085e <d_substitution+0x92>
 800085a:	2900      	cmp	r1, #0
 800085c:	d117      	bne.n	800088e <d_substitution+0xc2>
 800085e:	4b3e      	ldr	r3, [pc, #248]	; (8000958 <d_substitution+0x18c>)
 8000860:	2174      	movs	r1, #116	; 0x74
 8000862:	0018      	movs	r0, r3
 8000864:	30c4      	adds	r0, #196	; 0xc4
 8000866:	e000      	b.n	800086a <d_substitution+0x9e>
 8000868:	7819      	ldrb	r1, [r3, #0]
 800086a:	4291      	cmp	r1, r2
 800086c:	d016      	beq.n	800089c <d_substitution+0xd0>
 800086e:	331c      	adds	r3, #28
 8000870:	4283      	cmp	r3, r0
 8000872:	d1f9      	bne.n	8000868 <d_substitution+0x9c>
 8000874:	e7e6      	b.n	8000844 <d_substitution+0x78>
 8000876:	2000      	movs	r0, #0
 8000878:	e7d6      	b.n	8000828 <d_substitution+0x5c>
 800087a:	2300      	movs	r3, #0
 800087c:	6a22      	ldr	r2, [r4, #32]
 800087e:	429a      	cmp	r2, r3
 8000880:	d9e0      	bls.n	8000844 <d_substitution+0x78>
 8000882:	69e2      	ldr	r2, [r4, #28]
 8000884:	009b      	lsls	r3, r3, #2
 8000886:	589d      	ldr	r5, [r3, r2]
 8000888:	e7dd      	b.n	8000846 <d_substitution+0x7a>
 800088a:	3301      	adds	r3, #1
 800088c:	e7f6      	b.n	800087c <d_substitution+0xb0>
 800088e:	68e3      	ldr	r3, [r4, #12]
 8000890:	781b      	ldrb	r3, [r3, #0]
 8000892:	3b43      	subs	r3, #67	; 0x43
 8000894:	2b01      	cmp	r3, #1
 8000896:	d8e2      	bhi.n	800085e <d_substitution+0x92>
 8000898:	000d      	movs	r5, r1
 800089a:	e7e0      	b.n	800085e <d_substitution+0x92>
 800089c:	695f      	ldr	r7, [r3, #20]
 800089e:	2f00      	cmp	r7, #0
 80008a0:	d053      	beq.n	800094a <d_substitution+0x17e>
 80008a2:	699a      	ldr	r2, [r3, #24]
 80008a4:	69a6      	ldr	r6, [r4, #24]
 80008a6:	4694      	mov	ip, r2
 80008a8:	6962      	ldr	r2, [r4, #20]
 80008aa:	42b2      	cmp	r2, r6
 80008ac:	da52      	bge.n	8000954 <d_substitution+0x188>
 80008ae:	0090      	lsls	r0, r2, #2
 80008b0:	6921      	ldr	r1, [r4, #16]
 80008b2:	1880      	adds	r0, r0, r2
 80008b4:	0080      	lsls	r0, r0, #2
 80008b6:	1809      	adds	r1, r1, r0
 80008b8:	2000      	movs	r0, #0
 80008ba:	3201      	adds	r2, #1
 80008bc:	6048      	str	r0, [r1, #4]
 80008be:	6088      	str	r0, [r1, #8]
 80008c0:	3018      	adds	r0, #24
 80008c2:	6162      	str	r2, [r4, #20]
 80008c4:	7008      	strb	r0, [r1, #0]
 80008c6:	4660      	mov	r0, ip
 80008c8:	60cf      	str	r7, [r1, #12]
 80008ca:	6108      	str	r0, [r1, #16]
 80008cc:	62a1      	str	r1, [r4, #40]	; 0x28
 80008ce:	2d00      	cmp	r5, #0
 80008d0:	d038      	beq.n	8000944 <d_substitution+0x178>
 80008d2:	68d8      	ldr	r0, [r3, #12]
 80008d4:	6919      	ldr	r1, [r3, #16]
 80008d6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80008d8:	185b      	adds	r3, r3, r1
 80008da:	62e3      	str	r3, [r4, #44]	; 0x2c
 80008dc:	42b2      	cmp	r2, r6
 80008de:	da37      	bge.n	8000950 <d_substitution+0x184>
 80008e0:	0093      	lsls	r3, r2, #2
 80008e2:	6925      	ldr	r5, [r4, #16]
 80008e4:	189b      	adds	r3, r3, r2
 80008e6:	009b      	lsls	r3, r3, #2
 80008e8:	18ed      	adds	r5, r5, r3
 80008ea:	2300      	movs	r3, #0
 80008ec:	3201      	adds	r2, #1
 80008ee:	606b      	str	r3, [r5, #4]
 80008f0:	60ab      	str	r3, [r5, #8]
 80008f2:	3318      	adds	r3, #24
 80008f4:	6162      	str	r2, [r4, #20]
 80008f6:	702b      	strb	r3, [r5, #0]
 80008f8:	60e8      	str	r0, [r5, #12]
 80008fa:	6129      	str	r1, [r5, #16]
 80008fc:	68e3      	ldr	r3, [r4, #12]
 80008fe:	781a      	ldrb	r2, [r3, #0]
 8000900:	2a42      	cmp	r2, #66	; 0x42
 8000902:	d1a0      	bne.n	8000846 <d_substitution+0x7a>
 8000904:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000906:	3301      	adds	r3, #1
 8000908:	60e3      	str	r3, [r4, #12]
 800090a:	0020      	movs	r0, r4
 800090c:	f7ff feec 	bl	80006e8 <d_source_name>
 8000910:	002a      	movs	r2, r5
 8000912:	0003      	movs	r3, r0
 8000914:	214d      	movs	r1, #77	; 0x4d
 8000916:	0020      	movs	r0, r4
 8000918:	f7ff fbf2 	bl	8000100 <d_make_comp>
 800091c:	68e3      	ldr	r3, [r4, #12]
 800091e:	0005      	movs	r5, r0
 8000920:	781a      	ldrb	r2, [r3, #0]
 8000922:	2a42      	cmp	r2, #66	; 0x42
 8000924:	d0ef      	beq.n	8000906 <d_substitution+0x13a>
 8000926:	62a6      	str	r6, [r4, #40]	; 0x28
 8000928:	2800      	cmp	r0, #0
 800092a:	d100      	bne.n	800092e <d_substitution+0x162>
 800092c:	e78a      	b.n	8000844 <d_substitution+0x78>
 800092e:	6a23      	ldr	r3, [r4, #32]
 8000930:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8000932:	4293      	cmp	r3, r2
 8000934:	db00      	blt.n	8000938 <d_substitution+0x16c>
 8000936:	e785      	b.n	8000844 <d_substitution+0x78>
 8000938:	69e2      	ldr	r2, [r4, #28]
 800093a:	0099      	lsls	r1, r3, #2
 800093c:	3301      	adds	r3, #1
 800093e:	5088      	str	r0, [r1, r2]
 8000940:	6223      	str	r3, [r4, #32]
 8000942:	e780      	b.n	8000846 <d_substitution+0x7a>
 8000944:	6858      	ldr	r0, [r3, #4]
 8000946:	6899      	ldr	r1, [r3, #8]
 8000948:	e7c5      	b.n	80008d6 <d_substitution+0x10a>
 800094a:	69a6      	ldr	r6, [r4, #24]
 800094c:	6962      	ldr	r2, [r4, #20]
 800094e:	e7be      	b.n	80008ce <d_substitution+0x102>
 8000950:	2500      	movs	r5, #0
 8000952:	e7d3      	b.n	80008fc <d_substitution+0x130>
 8000954:	2100      	movs	r1, #0
 8000956:	e7b9      	b.n	80008cc <d_substitution+0x100>
 8000958:	0800efcc 	.word	0x0800efcc

0800095c <d_type>:
 800095c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800095e:	46ce      	mov	lr, r9
 8000960:	4647      	mov	r7, r8
 8000962:	b580      	push	{r7, lr}
 8000964:	68c6      	ldr	r6, [r0, #12]
 8000966:	0004      	movs	r4, r0
 8000968:	b083      	sub	sp, #12
 800096a:	0030      	movs	r0, r6
 800096c:	f7ff fd6c 	bl	8000448 <next_is_type_qual.isra.0>
 8000970:	2800      	cmp	r0, #0
 8000972:	d13b      	bne.n	80009ec <d_type+0x90>
 8000974:	7833      	ldrb	r3, [r6, #0]
 8000976:	2b5a      	cmp	r3, #90	; 0x5a
 8000978:	d809      	bhi.n	800098e <d_type+0x32>
 800097a:	2b2f      	cmp	r3, #47	; 0x2f
 800097c:	d92f      	bls.n	80009de <d_type+0x82>
 800097e:	3b30      	subs	r3, #48	; 0x30
 8000980:	b2db      	uxtb	r3, r3
 8000982:	2b2a      	cmp	r3, #42	; 0x2a
 8000984:	d82b      	bhi.n	80009de <d_type+0x82>
 8000986:	4ac6      	ldr	r2, [pc, #792]	; (8000ca0 <d_type+0x344>)
 8000988:	009b      	lsls	r3, r3, #2
 800098a:	58d3      	ldr	r3, [r2, r3]
 800098c:	469f      	mov	pc, r3
 800098e:	3b61      	subs	r3, #97	; 0x61
 8000990:	b2d9      	uxtb	r1, r3
 8000992:	2919      	cmp	r1, #25
 8000994:	d823      	bhi.n	80009de <d_type+0x82>
 8000996:	2201      	movs	r2, #1
 8000998:	408a      	lsls	r2, r1
 800099a:	4dc2      	ldr	r5, [pc, #776]	; (8000ca4 <d_type+0x348>)
 800099c:	422a      	tst	r2, r5
 800099e:	d01c      	beq.n	80009da <d_type+0x7e>
 80009a0:	009a      	lsls	r2, r3, #2
 80009a2:	18d3      	adds	r3, r2, r3
 80009a4:	4ac0      	ldr	r2, [pc, #768]	; (8000ca8 <d_type+0x34c>)
 80009a6:	009b      	lsls	r3, r3, #2
 80009a8:	189b      	adds	r3, r3, r2
 80009aa:	69a1      	ldr	r1, [r4, #24]
 80009ac:	6962      	ldr	r2, [r4, #20]
 80009ae:	428a      	cmp	r2, r1
 80009b0:	db00      	blt.n	80009b4 <d_type+0x58>
 80009b2:	e345      	b.n	8001040 <d_type+0x6e4>
 80009b4:	0091      	lsls	r1, r2, #2
 80009b6:	6925      	ldr	r5, [r4, #16]
 80009b8:	1889      	adds	r1, r1, r2
 80009ba:	0089      	lsls	r1, r1, #2
 80009bc:	186d      	adds	r5, r5, r1
 80009be:	3201      	adds	r2, #1
 80009c0:	6068      	str	r0, [r5, #4]
 80009c2:	60a8      	str	r0, [r5, #8]
 80009c4:	6162      	str	r2, [r4, #20]
 80009c6:	2227      	movs	r2, #39	; 0x27
 80009c8:	702a      	strb	r2, [r5, #0]
 80009ca:	60eb      	str	r3, [r5, #12]
 80009cc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80009ce:	685b      	ldr	r3, [r3, #4]
 80009d0:	3601      	adds	r6, #1
 80009d2:	18d3      	adds	r3, r2, r3
 80009d4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80009d6:	60e6      	str	r6, [r4, #12]
 80009d8:	e002      	b.n	80009e0 <d_type+0x84>
 80009da:	2914      	cmp	r1, #20
 80009dc:	d043      	beq.n	8000a66 <d_type+0x10a>
 80009de:	2500      	movs	r5, #0
 80009e0:	0028      	movs	r0, r5
 80009e2:	b003      	add	sp, #12
 80009e4:	bcc0      	pop	{r6, r7}
 80009e6:	46b9      	mov	r9, r7
 80009e8:	46b0      	mov	r8, r6
 80009ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80009ec:	2200      	movs	r2, #0
 80009ee:	0020      	movs	r0, r4
 80009f0:	a901      	add	r1, sp, #4
 80009f2:	f001 fa0f 	bl	8001e14 <d_cv_qualifiers>
 80009f6:	1e05      	subs	r5, r0, #0
 80009f8:	d0f1      	beq.n	80009de <d_type+0x82>
 80009fa:	68e3      	ldr	r3, [r4, #12]
 80009fc:	0020      	movs	r0, r4
 80009fe:	781b      	ldrb	r3, [r3, #0]
 8000a00:	2b46      	cmp	r3, #70	; 0x46
 8000a02:	d01b      	beq.n	8000a3c <d_type+0xe0>
 8000a04:	f7ff ffaa 	bl	800095c <d_type>
 8000a08:	6028      	str	r0, [r5, #0]
 8000a0a:	2800      	cmp	r0, #0
 8000a0c:	d0e7      	beq.n	80009de <d_type+0x82>
 8000a0e:	7803      	ldrb	r3, [r0, #0]
 8000a10:	3b1f      	subs	r3, #31
 8000a12:	2b01      	cmp	r3, #1
 8000a14:	d805      	bhi.n	8000a22 <d_type+0xc6>
 8000a16:	9a01      	ldr	r2, [sp, #4]
 8000a18:	68c3      	ldr	r3, [r0, #12]
 8000a1a:	60c2      	str	r2, [r0, #12]
 8000a1c:	682a      	ldr	r2, [r5, #0]
 8000a1e:	9201      	str	r2, [sp, #4]
 8000a20:	602b      	str	r3, [r5, #0]
 8000a22:	9d01      	ldr	r5, [sp, #4]
 8000a24:	2d00      	cmp	r5, #0
 8000a26:	d0da      	beq.n	80009de <d_type+0x82>
 8000a28:	6a23      	ldr	r3, [r4, #32]
 8000a2a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8000a2c:	4293      	cmp	r3, r2
 8000a2e:	dad6      	bge.n	80009de <d_type+0x82>
 8000a30:	69e2      	ldr	r2, [r4, #28]
 8000a32:	0099      	lsls	r1, r3, #2
 8000a34:	3301      	adds	r3, #1
 8000a36:	508d      	str	r5, [r1, r2]
 8000a38:	6223      	str	r3, [r4, #32]
 8000a3a:	e7d1      	b.n	80009e0 <d_type+0x84>
 8000a3c:	f000 fb7c 	bl	8001138 <d_function_type>
 8000a40:	e7e2      	b.n	8000a08 <d_type+0xac>
 8000a42:	0020      	movs	r0, r4
 8000a44:	f001 fc96 	bl	8002374 <d_name>
 8000a48:	0005      	movs	r5, r0
 8000a4a:	9001      	str	r0, [sp, #4]
 8000a4c:	2d00      	cmp	r5, #0
 8000a4e:	d0c6      	beq.n	80009de <d_type+0x82>
 8000a50:	6a23      	ldr	r3, [r4, #32]
 8000a52:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8000a54:	4293      	cmp	r3, r2
 8000a56:	dac2      	bge.n	80009de <d_type+0x82>
 8000a58:	69e2      	ldr	r2, [r4, #28]
 8000a5a:	0099      	lsls	r1, r3, #2
 8000a5c:	3301      	adds	r3, #1
 8000a5e:	508d      	str	r5, [r1, r2]
 8000a60:	9d01      	ldr	r5, [sp, #4]
 8000a62:	6223      	str	r3, [r4, #32]
 8000a64:	e7bc      	b.n	80009e0 <d_type+0x84>
 8000a66:	3601      	adds	r6, #1
 8000a68:	0020      	movs	r0, r4
 8000a6a:	60e6      	str	r6, [r4, #12]
 8000a6c:	f7ff fe3c 	bl	80006e8 <d_source_name>
 8000a70:	2300      	movs	r3, #0
 8000a72:	0002      	movs	r2, r0
 8000a74:	2128      	movs	r1, #40	; 0x28
 8000a76:	0020      	movs	r0, r4
 8000a78:	f7ff fb42 	bl	8000100 <d_make_comp>
 8000a7c:	0005      	movs	r5, r0
 8000a7e:	9001      	str	r0, [sp, #4]
 8000a80:	e7e4      	b.n	8000a4c <d_type+0xf0>
 8000a82:	3601      	adds	r6, #1
 8000a84:	0020      	movs	r0, r4
 8000a86:	60e6      	str	r6, [r4, #12]
 8000a88:	f7ff ff68 	bl	800095c <d_type>
 8000a8c:	2300      	movs	r3, #0
 8000a8e:	0002      	movs	r2, r0
 8000a90:	2122      	movs	r1, #34	; 0x22
 8000a92:	0020      	movs	r0, r4
 8000a94:	f7ff fb34 	bl	8000100 <d_make_comp>
 8000a98:	0005      	movs	r5, r0
 8000a9a:	9001      	str	r0, [sp, #4]
 8000a9c:	e7d6      	b.n	8000a4c <d_type+0xf0>
 8000a9e:	3601      	adds	r6, #1
 8000aa0:	0020      	movs	r0, r4
 8000aa2:	60e6      	str	r6, [r4, #12]
 8000aa4:	f7ff ff5a 	bl	800095c <d_type>
 8000aa8:	2300      	movs	r3, #0
 8000aaa:	0002      	movs	r2, r0
 8000aac:	2124      	movs	r1, #36	; 0x24
 8000aae:	0020      	movs	r0, r4
 8000ab0:	f7ff fb26 	bl	8000100 <d_make_comp>
 8000ab4:	0005      	movs	r5, r0
 8000ab6:	9001      	str	r0, [sp, #4]
 8000ab8:	e7c8      	b.n	8000a4c <d_type+0xf0>
 8000aba:	3601      	adds	r6, #1
 8000abc:	0020      	movs	r0, r4
 8000abe:	60e6      	str	r6, [r4, #12]
 8000ac0:	f7ff ff4c 	bl	800095c <d_type>
 8000ac4:	2300      	movs	r3, #0
 8000ac6:	0002      	movs	r2, r0
 8000ac8:	2126      	movs	r1, #38	; 0x26
 8000aca:	0020      	movs	r0, r4
 8000acc:	f7ff fb18 	bl	8000100 <d_make_comp>
 8000ad0:	0005      	movs	r5, r0
 8000ad2:	9001      	str	r0, [sp, #4]
 8000ad4:	e7ba      	b.n	8000a4c <d_type+0xf0>
 8000ad6:	3601      	adds	r6, #1
 8000ad8:	0020      	movs	r0, r4
 8000ada:	60e6      	str	r6, [r4, #12]
 8000adc:	f7ff ff3e 	bl	800095c <d_type>
 8000ae0:	2300      	movs	r3, #0
 8000ae2:	0002      	movs	r2, r0
 8000ae4:	2123      	movs	r1, #35	; 0x23
 8000ae6:	0020      	movs	r0, r4
 8000ae8:	f7ff fb0a 	bl	8000100 <d_make_comp>
 8000aec:	0005      	movs	r5, r0
 8000aee:	9001      	str	r0, [sp, #4]
 8000af0:	e7ac      	b.n	8000a4c <d_type+0xf0>
 8000af2:	0020      	movs	r0, r4
 8000af4:	f7ff fd84 	bl	8000600 <d_template_param>
 8000af8:	68e6      	ldr	r6, [r4, #12]
 8000afa:	0005      	movs	r5, r0
 8000afc:	7833      	ldrb	r3, [r6, #0]
 8000afe:	9001      	str	r0, [sp, #4]
 8000b00:	2b49      	cmp	r3, #73	; 0x49
 8000b02:	d1a3      	bne.n	8000a4c <d_type+0xf0>
 8000b04:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000b06:	2b00      	cmp	r3, #0
 8000b08:	d000      	beq.n	8000b0c <d_type+0x1b0>
 8000b0a:	e263      	b.n	8000fd4 <d_type+0x678>
 8000b0c:	2800      	cmp	r0, #0
 8000b0e:	d100      	bne.n	8000b12 <d_type+0x1b6>
 8000b10:	e765      	b.n	80009de <d_type+0x82>
 8000b12:	6a23      	ldr	r3, [r4, #32]
 8000b14:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8000b16:	4293      	cmp	r3, r2
 8000b18:	db00      	blt.n	8000b1c <d_type+0x1c0>
 8000b1a:	e760      	b.n	80009de <d_type+0x82>
 8000b1c:	69e2      	ldr	r2, [r4, #28]
 8000b1e:	0099      	lsls	r1, r3, #2
 8000b20:	3301      	adds	r3, #1
 8000b22:	5088      	str	r0, [r1, r2]
 8000b24:	6223      	str	r3, [r4, #32]
 8000b26:	7832      	ldrb	r2, [r6, #0]
 8000b28:	2300      	movs	r3, #0
 8000b2a:	3a49      	subs	r2, #73	; 0x49
 8000b2c:	2a01      	cmp	r2, #1
 8000b2e:	d805      	bhi.n	8000b3c <d_type+0x1e0>
 8000b30:	3601      	adds	r6, #1
 8000b32:	60e6      	str	r6, [r4, #12]
 8000b34:	0020      	movs	r0, r4
 8000b36:	f000 fdff 	bl	8001738 <d_template_args_1>
 8000b3a:	0003      	movs	r3, r0
 8000b3c:	002a      	movs	r2, r5
 8000b3e:	2104      	movs	r1, #4
 8000b40:	0020      	movs	r0, r4
 8000b42:	f7ff fadd 	bl	8000100 <d_make_comp>
 8000b46:	0005      	movs	r5, r0
 8000b48:	9001      	str	r0, [sp, #4]
 8000b4a:	e77f      	b.n	8000a4c <d_type+0xf0>
 8000b4c:	7873      	ldrb	r3, [r6, #1]
 8000b4e:	001a      	movs	r2, r3
 8000b50:	3a30      	subs	r2, #48	; 0x30
 8000b52:	2a09      	cmp	r2, #9
 8000b54:	d905      	bls.n	8000b62 <d_type+0x206>
 8000b56:	2b5f      	cmp	r3, #95	; 0x5f
 8000b58:	d003      	beq.n	8000b62 <d_type+0x206>
 8000b5a:	3b41      	subs	r3, #65	; 0x41
 8000b5c:	2b19      	cmp	r3, #25
 8000b5e:	d900      	bls.n	8000b62 <d_type+0x206>
 8000b60:	e22c      	b.n	8000fbc <d_type+0x660>
 8000b62:	2100      	movs	r1, #0
 8000b64:	0020      	movs	r0, r4
 8000b66:	f7ff fe31 	bl	80007cc <d_substitution>
 8000b6a:	68e3      	ldr	r3, [r4, #12]
 8000b6c:	0005      	movs	r5, r0
 8000b6e:	781a      	ldrb	r2, [r3, #0]
 8000b70:	9001      	str	r0, [sp, #4]
 8000b72:	2a49      	cmp	r2, #73	; 0x49
 8000b74:	d000      	beq.n	8000b78 <d_type+0x21c>
 8000b76:	e733      	b.n	80009e0 <d_type+0x84>
 8000b78:	3301      	adds	r3, #1
 8000b7a:	60e3      	str	r3, [r4, #12]
 8000b7c:	e7da      	b.n	8000b34 <d_type+0x1d8>
 8000b7e:	0020      	movs	r0, r4
 8000b80:	f000 fada 	bl	8001138 <d_function_type>
 8000b84:	0005      	movs	r5, r0
 8000b86:	9001      	str	r0, [sp, #4]
 8000b88:	e760      	b.n	8000a4c <d_type+0xf0>
 8000b8a:	1c73      	adds	r3, r6, #1
 8000b8c:	60e3      	str	r3, [r4, #12]
 8000b8e:	7873      	ldrb	r3, [r6, #1]
 8000b90:	2b00      	cmp	r3, #0
 8000b92:	d100      	bne.n	8000b96 <d_type+0x23a>
 8000b94:	e723      	b.n	80009de <d_type+0x82>
 8000b96:	1cb3      	adds	r3, r6, #2
 8000b98:	60e3      	str	r3, [r4, #12]
 8000b9a:	7873      	ldrb	r3, [r6, #1]
 8000b9c:	3b46      	subs	r3, #70	; 0x46
 8000b9e:	b2db      	uxtb	r3, r3
 8000ba0:	2b30      	cmp	r3, #48	; 0x30
 8000ba2:	d900      	bls.n	8000ba6 <d_type+0x24a>
 8000ba4:	e71b      	b.n	80009de <d_type+0x82>
 8000ba6:	4a41      	ldr	r2, [pc, #260]	; (8000cac <d_type+0x350>)
 8000ba8:	009b      	lsls	r3, r3, #2
 8000baa:	58d3      	ldr	r3, [r2, r3]
 8000bac:	469f      	mov	pc, r3
 8000bae:	3601      	adds	r6, #1
 8000bb0:	0020      	movs	r0, r4
 8000bb2:	60e6      	str	r6, [r4, #12]
 8000bb4:	f7ff fed2 	bl	800095c <d_type>
 8000bb8:	2300      	movs	r3, #0
 8000bba:	0002      	movs	r2, r0
 8000bbc:	2125      	movs	r1, #37	; 0x25
 8000bbe:	0020      	movs	r0, r4
 8000bc0:	f7ff fa9e 	bl	8000100 <d_make_comp>
 8000bc4:	0005      	movs	r5, r0
 8000bc6:	9001      	str	r0, [sp, #4]
 8000bc8:	e740      	b.n	8000a4c <d_type+0xf0>
 8000bca:	3601      	adds	r6, #1
 8000bcc:	0020      	movs	r0, r4
 8000bce:	60e6      	str	r6, [r4, #12]
 8000bd0:	f7ff fd8a 	bl	80006e8 <d_source_name>
 8000bd4:	68e3      	ldr	r3, [r4, #12]
 8000bd6:	0005      	movs	r5, r0
 8000bd8:	781a      	ldrb	r2, [r3, #0]
 8000bda:	9001      	str	r0, [sp, #4]
 8000bdc:	2a49      	cmp	r2, #73	; 0x49
 8000bde:	d100      	bne.n	8000be2 <d_type+0x286>
 8000be0:	e1d2      	b.n	8000f88 <d_type+0x62c>
 8000be2:	0020      	movs	r0, r4
 8000be4:	f7ff feba 	bl	800095c <d_type>
 8000be8:	002b      	movs	r3, r5
 8000bea:	0002      	movs	r2, r0
 8000bec:	2121      	movs	r1, #33	; 0x21
 8000bee:	0020      	movs	r0, r4
 8000bf0:	f7ff fa86 	bl	8000100 <d_make_comp>
 8000bf4:	0005      	movs	r5, r0
 8000bf6:	9001      	str	r0, [sp, #4]
 8000bf8:	e728      	b.n	8000a4c <d_type+0xf0>
 8000bfa:	1c71      	adds	r1, r6, #1
 8000bfc:	60e1      	str	r1, [r4, #12]
 8000bfe:	7872      	ldrb	r2, [r6, #1]
 8000c00:	2a5f      	cmp	r2, #95	; 0x5f
 8000c02:	d100      	bne.n	8000c06 <d_type+0x2aa>
 8000c04:	e1be      	b.n	8000f84 <d_type+0x628>
 8000c06:	3a30      	subs	r2, #48	; 0x30
 8000c08:	2a09      	cmp	r2, #9
 8000c0a:	d900      	bls.n	8000c0e <d_type+0x2b2>
 8000c0c:	e1c9      	b.n	8000fa2 <d_type+0x646>
 8000c0e:	000b      	movs	r3, r1
 8000c10:	001d      	movs	r5, r3
 8000c12:	3301      	adds	r3, #1
 8000c14:	60e3      	str	r3, [r4, #12]
 8000c16:	781a      	ldrb	r2, [r3, #0]
 8000c18:	3a30      	subs	r2, #48	; 0x30
 8000c1a:	2a09      	cmp	r2, #9
 8000c1c:	d9f8      	bls.n	8000c10 <d_type+0x2b4>
 8000c1e:	6962      	ldr	r2, [r4, #20]
 8000c20:	69a0      	ldr	r0, [r4, #24]
 8000c22:	1baf      	subs	r7, r5, r6
 8000c24:	4282      	cmp	r2, r0
 8000c26:	db00      	blt.n	8000c2a <d_type+0x2ce>
 8000c28:	e6d9      	b.n	80009de <d_type+0x82>
 8000c2a:	0090      	lsls	r0, r2, #2
 8000c2c:	6926      	ldr	r6, [r4, #16]
 8000c2e:	1880      	adds	r0, r0, r2
 8000c30:	0080      	lsls	r0, r0, #2
 8000c32:	1836      	adds	r6, r6, r0
 8000c34:	2000      	movs	r0, #0
 8000c36:	3201      	adds	r2, #1
 8000c38:	6070      	str	r0, [r6, #4]
 8000c3a:	60b0      	str	r0, [r6, #8]
 8000c3c:	6162      	str	r2, [r4, #20]
 8000c3e:	2f00      	cmp	r7, #0
 8000c40:	dc00      	bgt.n	8000c44 <d_type+0x2e8>
 8000c42:	e6cc      	b.n	80009de <d_type+0x82>
 8000c44:	60f1      	str	r1, [r6, #12]
 8000c46:	0019      	movs	r1, r3
 8000c48:	6070      	str	r0, [r6, #4]
 8000c4a:	60b0      	str	r0, [r6, #8]
 8000c4c:	7030      	strb	r0, [r6, #0]
 8000c4e:	6137      	str	r7, [r6, #16]
 8000c50:	786a      	ldrb	r2, [r5, #1]
 8000c52:	2a5f      	cmp	r2, #95	; 0x5f
 8000c54:	d000      	beq.n	8000c58 <d_type+0x2fc>
 8000c56:	e6c2      	b.n	80009de <d_type+0x82>
 8000c58:	3101      	adds	r1, #1
 8000c5a:	60e1      	str	r1, [r4, #12]
 8000c5c:	0020      	movs	r0, r4
 8000c5e:	f7ff fe7d 	bl	800095c <d_type>
 8000c62:	0032      	movs	r2, r6
 8000c64:	0003      	movs	r3, r0
 8000c66:	212a      	movs	r1, #42	; 0x2a
 8000c68:	0020      	movs	r0, r4
 8000c6a:	f7ff fa49 	bl	8000100 <d_make_comp>
 8000c6e:	0005      	movs	r5, r0
 8000c70:	9001      	str	r0, [sp, #4]
 8000c72:	e6eb      	b.n	8000a4c <d_type+0xf0>
 8000c74:	3601      	adds	r6, #1
 8000c76:	0020      	movs	r0, r4
 8000c78:	60e6      	str	r6, [r4, #12]
 8000c7a:	f7ff fe6f 	bl	800095c <d_type>
 8000c7e:	1e05      	subs	r5, r0, #0
 8000c80:	d100      	bne.n	8000c84 <d_type+0x328>
 8000c82:	e6ac      	b.n	80009de <d_type+0x82>
 8000c84:	0020      	movs	r0, r4
 8000c86:	f7ff fe69 	bl	800095c <d_type>
 8000c8a:	1e03      	subs	r3, r0, #0
 8000c8c:	d100      	bne.n	8000c90 <d_type+0x334>
 8000c8e:	e6a6      	b.n	80009de <d_type+0x82>
 8000c90:	002a      	movs	r2, r5
 8000c92:	212b      	movs	r1, #43	; 0x2b
 8000c94:	0020      	movs	r0, r4
 8000c96:	f7ff fa33 	bl	8000100 <d_make_comp>
 8000c9a:	0005      	movs	r5, r0
 8000c9c:	9001      	str	r0, [sp, #4]
 8000c9e:	e6d5      	b.n	8000a4c <d_type+0xf0>
 8000ca0:	0800e968 	.word	0x0800e968
 8000ca4:	03ec7bff 	.word	0x03ec7bff
 8000ca8:	0800f520 	.word	0x0800f520
 8000cac:	0800ea14 	.word	0x0800ea14
 8000cb0:	2301      	movs	r3, #1
 8000cb2:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8000cb4:	0020      	movs	r0, r4
 8000cb6:	6323      	str	r3, [r4, #48]	; 0x30
 8000cb8:	f000 fde6 	bl	8001888 <d_expression_1>
 8000cbc:	6325      	str	r5, [r4, #48]	; 0x30
 8000cbe:	0002      	movs	r2, r0
 8000cc0:	2300      	movs	r3, #0
 8000cc2:	2144      	movs	r1, #68	; 0x44
 8000cc4:	0020      	movs	r0, r4
 8000cc6:	f7ff fa1b 	bl	8000100 <d_make_comp>
 8000cca:	1e05      	subs	r5, r0, #0
 8000ccc:	9001      	str	r0, [sp, #4]
 8000cce:	d100      	bne.n	8000cd2 <d_type+0x376>
 8000cd0:	e685      	b.n	80009de <d_type+0x82>
 8000cd2:	68e3      	ldr	r3, [r4, #12]
 8000cd4:	781a      	ldrb	r2, [r3, #0]
 8000cd6:	2a00      	cmp	r2, #0
 8000cd8:	d100      	bne.n	8000cdc <d_type+0x380>
 8000cda:	e680      	b.n	80009de <d_type+0x82>
 8000cdc:	1c5a      	adds	r2, r3, #1
 8000cde:	60e2      	str	r2, [r4, #12]
 8000ce0:	781b      	ldrb	r3, [r3, #0]
 8000ce2:	2b45      	cmp	r3, #69	; 0x45
 8000ce4:	d000      	beq.n	8000ce8 <d_type+0x38c>
 8000ce6:	e67a      	b.n	80009de <d_type+0x82>
 8000ce8:	e6b2      	b.n	8000a50 <d_type+0xf4>
 8000cea:	6963      	ldr	r3, [r4, #20]
 8000cec:	69a2      	ldr	r2, [r4, #24]
 8000cee:	4293      	cmp	r3, r2
 8000cf0:	db00      	blt.n	8000cf4 <d_type+0x398>
 8000cf2:	e19f      	b.n	8001034 <d_type+0x6d8>
 8000cf4:	009a      	lsls	r2, r3, #2
 8000cf6:	6925      	ldr	r5, [r4, #16]
 8000cf8:	18d2      	adds	r2, r2, r3
 8000cfa:	0092      	lsls	r2, r2, #2
 8000cfc:	18ad      	adds	r5, r5, r2
 8000cfe:	2200      	movs	r2, #0
 8000d00:	3301      	adds	r3, #1
 8000d02:	606a      	str	r2, [r5, #4]
 8000d04:	60aa      	str	r2, [r5, #8]
 8000d06:	6163      	str	r3, [r4, #20]
 8000d08:	232c      	movs	r3, #44	; 0x2c
 8000d0a:	2109      	movs	r1, #9
 8000d0c:	702b      	strb	r3, [r5, #0]
 8000d0e:	78b3      	ldrb	r3, [r6, #2]
 8000d10:	9501      	str	r5, [sp, #4]
 8000d12:	3b30      	subs	r3, #48	; 0x30
 8000d14:	b2db      	uxtb	r3, r3
 8000d16:	4299      	cmp	r1, r3
 8000d18:	4152      	adcs	r2, r2
 8000d1a:	822a      	strh	r2, [r5, #16]
 8000d1c:	2b09      	cmp	r3, #9
 8000d1e:	d802      	bhi.n	8000d26 <d_type+0x3ca>
 8000d20:	0020      	movs	r0, r4
 8000d22:	f7ff fa4d 	bl	80001c0 <d_number>
 8000d26:	0020      	movs	r0, r4
 8000d28:	f7ff fe18 	bl	800095c <d_type>
 8000d2c:	60e8      	str	r0, [r5, #12]
 8000d2e:	2800      	cmp	r0, #0
 8000d30:	d100      	bne.n	8000d34 <d_type+0x3d8>
 8000d32:	e654      	b.n	80009de <d_type+0x82>
 8000d34:	0020      	movs	r0, r4
 8000d36:	f7ff fa43 	bl	80001c0 <d_number>
 8000d3a:	68e2      	ldr	r2, [r4, #12]
 8000d3c:	7813      	ldrb	r3, [r2, #0]
 8000d3e:	2b00      	cmp	r3, #0
 8000d40:	d002      	beq.n	8000d48 <d_type+0x3ec>
 8000d42:	1c53      	adds	r3, r2, #1
 8000d44:	60e3      	str	r3, [r4, #12]
 8000d46:	7813      	ldrb	r3, [r2, #0]
 8000d48:	3b73      	subs	r3, #115	; 0x73
 8000d4a:	425a      	negs	r2, r3
 8000d4c:	4153      	adcs	r3, r2
 8000d4e:	826b      	strh	r3, [r5, #18]
 8000d50:	e646      	b.n	80009e0 <d_type+0x84>
 8000d52:	6963      	ldr	r3, [r4, #20]
 8000d54:	69a2      	ldr	r2, [r4, #24]
 8000d56:	4293      	cmp	r3, r2
 8000d58:	db00      	blt.n	8000d5c <d_type+0x400>
 8000d5a:	e640      	b.n	80009de <d_type+0x82>
 8000d5c:	009a      	lsls	r2, r3, #2
 8000d5e:	18d2      	adds	r2, r2, r3
 8000d60:	3301      	adds	r3, #1
 8000d62:	6163      	str	r3, [r4, #20]
 8000d64:	2300      	movs	r3, #0
 8000d66:	6925      	ldr	r5, [r4, #16]
 8000d68:	0092      	lsls	r2, r2, #2
 8000d6a:	18ad      	adds	r5, r5, r2
 8000d6c:	606b      	str	r3, [r5, #4]
 8000d6e:	60ab      	str	r3, [r5, #8]
 8000d70:	702b      	strb	r3, [r5, #0]
 8000d72:	4bb4      	ldr	r3, [pc, #720]	; (8001044 <d_type+0x6e8>)
 8000d74:	60eb      	str	r3, [r5, #12]
 8000d76:	230e      	movs	r3, #14
 8000d78:	612b      	str	r3, [r5, #16]
 8000d7a:	e631      	b.n	80009e0 <d_type+0x84>
 8000d7c:	6963      	ldr	r3, [r4, #20]
 8000d7e:	69a2      	ldr	r2, [r4, #24]
 8000d80:	4293      	cmp	r3, r2
 8000d82:	db00      	blt.n	8000d86 <d_type+0x42a>
 8000d84:	e62b      	b.n	80009de <d_type+0x82>
 8000d86:	009a      	lsls	r2, r3, #2
 8000d88:	18d2      	adds	r2, r2, r3
 8000d8a:	3301      	adds	r3, #1
 8000d8c:	6163      	str	r3, [r4, #20]
 8000d8e:	2300      	movs	r3, #0
 8000d90:	6925      	ldr	r5, [r4, #16]
 8000d92:	0092      	lsls	r2, r2, #2
 8000d94:	18ad      	adds	r5, r5, r2
 8000d96:	606b      	str	r3, [r5, #4]
 8000d98:	60ab      	str	r3, [r5, #8]
 8000d9a:	702b      	strb	r3, [r5, #0]
 8000d9c:	4baa      	ldr	r3, [pc, #680]	; (8001048 <d_type+0x6ec>)
 8000d9e:	60eb      	str	r3, [r5, #12]
 8000da0:	2304      	movs	r3, #4
 8000da2:	612b      	str	r3, [r5, #16]
 8000da4:	e61c      	b.n	80009e0 <d_type+0x84>
 8000da6:	78b3      	ldrb	r3, [r6, #2]
 8000da8:	2b5f      	cmp	r3, #95	; 0x5f
 8000daa:	d100      	bne.n	8000dae <d_type+0x452>
 8000dac:	e135      	b.n	800101a <d_type+0x6be>
 8000dae:	6963      	ldr	r3, [r4, #20]
 8000db0:	69a2      	ldr	r2, [r4, #24]
 8000db2:	4293      	cmp	r3, r2
 8000db4:	db00      	blt.n	8000db8 <d_type+0x45c>
 8000db6:	e612      	b.n	80009de <d_type+0x82>
 8000db8:	009a      	lsls	r2, r3, #2
 8000dba:	6925      	ldr	r5, [r4, #16]
 8000dbc:	18d2      	adds	r2, r2, r3
 8000dbe:	0092      	lsls	r2, r2, #2
 8000dc0:	18ad      	adds	r5, r5, r2
 8000dc2:	2200      	movs	r2, #0
 8000dc4:	3301      	adds	r3, #1
 8000dc6:	606a      	str	r2, [r5, #4]
 8000dc8:	60aa      	str	r2, [r5, #8]
 8000dca:	6163      	str	r3, [r4, #20]
 8000dcc:	2343      	movs	r3, #67	; 0x43
 8000dce:	0020      	movs	r0, r4
 8000dd0:	702b      	strb	r3, [r5, #0]
 8000dd2:	f7ff f9f5 	bl	80001c0 <d_number>
 8000dd6:	60e8      	str	r0, [r5, #12]
 8000dd8:	68e3      	ldr	r3, [r4, #12]
 8000dda:	781a      	ldrb	r2, [r3, #0]
 8000ddc:	2a5f      	cmp	r2, #95	; 0x5f
 8000dde:	d000      	beq.n	8000de2 <d_type+0x486>
 8000de0:	e5fd      	b.n	80009de <d_type+0x82>
 8000de2:	3301      	adds	r3, #1
 8000de4:	60e3      	str	r3, [r4, #12]
 8000de6:	0020      	movs	r0, r4
 8000de8:	f7ff fdb8 	bl	800095c <d_type>
 8000dec:	002a      	movs	r2, r5
 8000dee:	0003      	movs	r3, r0
 8000df0:	212d      	movs	r1, #45	; 0x2d
 8000df2:	0020      	movs	r0, r4
 8000df4:	f7ff f984 	bl	8000100 <d_make_comp>
 8000df8:	0005      	movs	r5, r0
 8000dfa:	9001      	str	r0, [sp, #4]
 8000dfc:	e626      	b.n	8000a4c <d_type+0xf0>
 8000dfe:	6963      	ldr	r3, [r4, #20]
 8000e00:	69a2      	ldr	r2, [r4, #24]
 8000e02:	4293      	cmp	r3, r2
 8000e04:	db00      	blt.n	8000e08 <d_type+0x4ac>
 8000e06:	e118      	b.n	800103a <d_type+0x6de>
 8000e08:	009a      	lsls	r2, r3, #2
 8000e0a:	6925      	ldr	r5, [r4, #16]
 8000e0c:	18d2      	adds	r2, r2, r3
 8000e0e:	0092      	lsls	r2, r2, #2
 8000e10:	18ad      	adds	r5, r5, r2
 8000e12:	2200      	movs	r2, #0
 8000e14:	3301      	adds	r3, #1
 8000e16:	606a      	str	r2, [r5, #4]
 8000e18:	60aa      	str	r2, [r5, #8]
 8000e1a:	6163      	str	r3, [r4, #20]
 8000e1c:	2327      	movs	r3, #39	; 0x27
 8000e1e:	702b      	strb	r3, [r5, #0]
 8000e20:	4b8a      	ldr	r3, [pc, #552]	; (800104c <d_type+0x6f0>)
 8000e22:	60eb      	str	r3, [r5, #12]
 8000e24:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8000e26:	3307      	adds	r3, #7
 8000e28:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000e2a:	e5d9      	b.n	80009e0 <d_type+0x84>
 8000e2c:	6963      	ldr	r3, [r4, #20]
 8000e2e:	69a2      	ldr	r2, [r4, #24]
 8000e30:	4293      	cmp	r3, r2
 8000e32:	db00      	blt.n	8000e36 <d_type+0x4da>
 8000e34:	e101      	b.n	800103a <d_type+0x6de>
 8000e36:	009a      	lsls	r2, r3, #2
 8000e38:	6925      	ldr	r5, [r4, #16]
 8000e3a:	18d2      	adds	r2, r2, r3
 8000e3c:	0092      	lsls	r2, r2, #2
 8000e3e:	18ad      	adds	r5, r5, r2
 8000e40:	2200      	movs	r2, #0
 8000e42:	3301      	adds	r3, #1
 8000e44:	606a      	str	r2, [r5, #4]
 8000e46:	60aa      	str	r2, [r5, #8]
 8000e48:	6163      	str	r3, [r4, #20]
 8000e4a:	2327      	movs	r3, #39	; 0x27
 8000e4c:	702b      	strb	r3, [r5, #0]
 8000e4e:	4b80      	ldr	r3, [pc, #512]	; (8001050 <d_type+0x6f4>)
 8000e50:	60eb      	str	r3, [r5, #12]
 8000e52:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8000e54:	3308      	adds	r3, #8
 8000e56:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000e58:	e5c2      	b.n	80009e0 <d_type+0x84>
 8000e5a:	6963      	ldr	r3, [r4, #20]
 8000e5c:	69a2      	ldr	r2, [r4, #24]
 8000e5e:	4293      	cmp	r3, r2
 8000e60:	db00      	blt.n	8000e64 <d_type+0x508>
 8000e62:	e0ea      	b.n	800103a <d_type+0x6de>
 8000e64:	009a      	lsls	r2, r3, #2
 8000e66:	6925      	ldr	r5, [r4, #16]
 8000e68:	18d2      	adds	r2, r2, r3
 8000e6a:	0092      	lsls	r2, r2, #2
 8000e6c:	18ad      	adds	r5, r5, r2
 8000e6e:	2200      	movs	r2, #0
 8000e70:	3301      	adds	r3, #1
 8000e72:	606a      	str	r2, [r5, #4]
 8000e74:	60aa      	str	r2, [r5, #8]
 8000e76:	6163      	str	r3, [r4, #20]
 8000e78:	2327      	movs	r3, #39	; 0x27
 8000e7a:	702b      	strb	r3, [r5, #0]
 8000e7c:	4b75      	ldr	r3, [pc, #468]	; (8001054 <d_type+0x6f8>)
 8000e7e:	60eb      	str	r3, [r5, #12]
 8000e80:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8000e82:	3304      	adds	r3, #4
 8000e84:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000e86:	e5ab      	b.n	80009e0 <d_type+0x84>
 8000e88:	6963      	ldr	r3, [r4, #20]
 8000e8a:	69a2      	ldr	r2, [r4, #24]
 8000e8c:	4293      	cmp	r3, r2
 8000e8e:	db00      	blt.n	8000e92 <d_type+0x536>
 8000e90:	e0d3      	b.n	800103a <d_type+0x6de>
 8000e92:	009a      	lsls	r2, r3, #2
 8000e94:	6925      	ldr	r5, [r4, #16]
 8000e96:	18d2      	adds	r2, r2, r3
 8000e98:	0092      	lsls	r2, r2, #2
 8000e9a:	18ad      	adds	r5, r5, r2
 8000e9c:	2200      	movs	r2, #0
 8000e9e:	3301      	adds	r3, #1
 8000ea0:	606a      	str	r2, [r5, #4]
 8000ea2:	60aa      	str	r2, [r5, #8]
 8000ea4:	6163      	str	r3, [r4, #20]
 8000ea6:	2327      	movs	r3, #39	; 0x27
 8000ea8:	702b      	strb	r3, [r5, #0]
 8000eaa:	4b6b      	ldr	r3, [pc, #428]	; (8001058 <d_type+0x6fc>)
 8000eac:	60eb      	str	r3, [r5, #12]
 8000eae:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8000eb0:	3309      	adds	r3, #9
 8000eb2:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000eb4:	e594      	b.n	80009e0 <d_type+0x84>
 8000eb6:	6963      	ldr	r3, [r4, #20]
 8000eb8:	69a2      	ldr	r2, [r4, #24]
 8000eba:	4293      	cmp	r3, r2
 8000ebc:	db00      	blt.n	8000ec0 <d_type+0x564>
 8000ebe:	e0bc      	b.n	800103a <d_type+0x6de>
 8000ec0:	009a      	lsls	r2, r3, #2
 8000ec2:	6925      	ldr	r5, [r4, #16]
 8000ec4:	18d2      	adds	r2, r2, r3
 8000ec6:	0092      	lsls	r2, r2, #2
 8000ec8:	18ad      	adds	r5, r5, r2
 8000eca:	2200      	movs	r2, #0
 8000ecc:	3301      	adds	r3, #1
 8000ece:	606a      	str	r2, [r5, #4]
 8000ed0:	60aa      	str	r2, [r5, #8]
 8000ed2:	6163      	str	r3, [r4, #20]
 8000ed4:	2327      	movs	r3, #39	; 0x27
 8000ed6:	702b      	strb	r3, [r5, #0]
 8000ed8:	4b60      	ldr	r3, [pc, #384]	; (800105c <d_type+0x700>)
 8000eda:	60eb      	str	r3, [r5, #12]
 8000edc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8000ede:	330a      	adds	r3, #10
 8000ee0:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ee2:	e57d      	b.n	80009e0 <d_type+0x84>
 8000ee4:	6963      	ldr	r3, [r4, #20]
 8000ee6:	69a2      	ldr	r2, [r4, #24]
 8000ee8:	4293      	cmp	r3, r2
 8000eea:	db00      	blt.n	8000eee <d_type+0x592>
 8000eec:	e0a5      	b.n	800103a <d_type+0x6de>
 8000eee:	009a      	lsls	r2, r3, #2
 8000ef0:	6925      	ldr	r5, [r4, #16]
 8000ef2:	18d2      	adds	r2, r2, r3
 8000ef4:	0092      	lsls	r2, r2, #2
 8000ef6:	18ad      	adds	r5, r5, r2
 8000ef8:	2200      	movs	r2, #0
 8000efa:	3301      	adds	r3, #1
 8000efc:	606a      	str	r2, [r5, #4]
 8000efe:	60aa      	str	r2, [r5, #8]
 8000f00:	6163      	str	r3, [r4, #20]
 8000f02:	2327      	movs	r3, #39	; 0x27
 8000f04:	702b      	strb	r3, [r5, #0]
 8000f06:	4b56      	ldr	r3, [pc, #344]	; (8001060 <d_type+0x704>)
 8000f08:	60eb      	str	r3, [r5, #12]
 8000f0a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8000f0c:	3309      	adds	r3, #9
 8000f0e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000f10:	e566      	b.n	80009e0 <d_type+0x84>
 8000f12:	6963      	ldr	r3, [r4, #20]
 8000f14:	69a2      	ldr	r2, [r4, #24]
 8000f16:	4293      	cmp	r3, r2
 8000f18:	db00      	blt.n	8000f1c <d_type+0x5c0>
 8000f1a:	e08e      	b.n	800103a <d_type+0x6de>
 8000f1c:	009a      	lsls	r2, r3, #2
 8000f1e:	6925      	ldr	r5, [r4, #16]
 8000f20:	18d2      	adds	r2, r2, r3
 8000f22:	0092      	lsls	r2, r2, #2
 8000f24:	18ad      	adds	r5, r5, r2
 8000f26:	2200      	movs	r2, #0
 8000f28:	3301      	adds	r3, #1
 8000f2a:	606a      	str	r2, [r5, #4]
 8000f2c:	60aa      	str	r2, [r5, #8]
 8000f2e:	6163      	str	r3, [r4, #20]
 8000f30:	2327      	movs	r3, #39	; 0x27
 8000f32:	702b      	strb	r3, [r5, #0]
 8000f34:	4b4b      	ldr	r3, [pc, #300]	; (8001064 <d_type+0x708>)
 8000f36:	60eb      	str	r3, [r5, #12]
 8000f38:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8000f3a:	3311      	adds	r3, #17
 8000f3c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000f3e:	e54f      	b.n	80009e0 <d_type+0x84>
 8000f40:	6963      	ldr	r3, [r4, #20]
 8000f42:	69a2      	ldr	r2, [r4, #24]
 8000f44:	4293      	cmp	r3, r2
 8000f46:	da78      	bge.n	800103a <d_type+0x6de>
 8000f48:	009a      	lsls	r2, r3, #2
 8000f4a:	6925      	ldr	r5, [r4, #16]
 8000f4c:	18d2      	adds	r2, r2, r3
 8000f4e:	0092      	lsls	r2, r2, #2
 8000f50:	18ad      	adds	r5, r5, r2
 8000f52:	2200      	movs	r2, #0
 8000f54:	3301      	adds	r3, #1
 8000f56:	606a      	str	r2, [r5, #4]
 8000f58:	60aa      	str	r2, [r5, #8]
 8000f5a:	6163      	str	r3, [r4, #20]
 8000f5c:	2327      	movs	r3, #39	; 0x27
 8000f5e:	702b      	strb	r3, [r5, #0]
 8000f60:	4b41      	ldr	r3, [pc, #260]	; (8001068 <d_type+0x70c>)
 8000f62:	60eb      	str	r3, [r5, #12]
 8000f64:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8000f66:	3308      	adds	r3, #8
 8000f68:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000f6a:	e539      	b.n	80009e0 <d_type+0x84>
 8000f6c:	0020      	movs	r0, r4
 8000f6e:	f7ff fcf5 	bl	800095c <d_type>
 8000f72:	2300      	movs	r3, #0
 8000f74:	0002      	movs	r2, r0
 8000f76:	214c      	movs	r1, #76	; 0x4c
 8000f78:	0020      	movs	r0, r4
 8000f7a:	f7ff f8c1 	bl	8000100 <d_make_comp>
 8000f7e:	0005      	movs	r5, r0
 8000f80:	9001      	str	r0, [sp, #4]
 8000f82:	e563      	b.n	8000a4c <d_type+0xf0>
 8000f84:	2600      	movs	r6, #0
 8000f86:	e667      	b.n	8000c58 <d_type+0x2fc>
 8000f88:	3301      	adds	r3, #1
 8000f8a:	60e3      	str	r3, [r4, #12]
 8000f8c:	0020      	movs	r0, r4
 8000f8e:	f000 fbd3 	bl	8001738 <d_template_args_1>
 8000f92:	002a      	movs	r2, r5
 8000f94:	0003      	movs	r3, r0
 8000f96:	2104      	movs	r1, #4
 8000f98:	0020      	movs	r0, r4
 8000f9a:	f7ff f8b1 	bl	8000100 <d_make_comp>
 8000f9e:	0005      	movs	r5, r0
 8000fa0:	e61f      	b.n	8000be2 <d_type+0x286>
 8000fa2:	2301      	movs	r3, #1
 8000fa4:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8000fa6:	0020      	movs	r0, r4
 8000fa8:	6323      	str	r3, [r4, #48]	; 0x30
 8000faa:	f000 fc6d 	bl	8001888 <d_expression_1>
 8000fae:	6325      	str	r5, [r4, #48]	; 0x30
 8000fb0:	1e06      	subs	r6, r0, #0
 8000fb2:	d100      	bne.n	8000fb6 <d_type+0x65a>
 8000fb4:	e513      	b.n	80009de <d_type+0x82>
 8000fb6:	68e1      	ldr	r1, [r4, #12]
 8000fb8:	780a      	ldrb	r2, [r1, #0]
 8000fba:	e64a      	b.n	8000c52 <d_type+0x2f6>
 8000fbc:	0020      	movs	r0, r4
 8000fbe:	f001 f9d9 	bl	8002374 <d_name>
 8000fc2:	1e05      	subs	r5, r0, #0
 8000fc4:	9001      	str	r0, [sp, #4]
 8000fc6:	d100      	bne.n	8000fca <d_type+0x66e>
 8000fc8:	e509      	b.n	80009de <d_type+0x82>
 8000fca:	7803      	ldrb	r3, [r0, #0]
 8000fcc:	2b18      	cmp	r3, #24
 8000fce:	d000      	beq.n	8000fd2 <d_type+0x676>
 8000fd0:	e53e      	b.n	8000a50 <d_type+0xf4>
 8000fd2:	e505      	b.n	80009e0 <d_type+0x84>
 8000fd4:	6963      	ldr	r3, [r4, #20]
 8000fd6:	0020      	movs	r0, r4
 8000fd8:	4699      	mov	r9, r3
 8000fda:	6a23      	ldr	r3, [r4, #32]
 8000fdc:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8000fde:	4698      	mov	r8, r3
 8000fe0:	1c73      	adds	r3, r6, #1
 8000fe2:	60e3      	str	r3, [r4, #12]
 8000fe4:	f000 fba8 	bl	8001738 <d_template_args_1>
 8000fe8:	68e2      	ldr	r2, [r4, #12]
 8000fea:	7812      	ldrb	r2, [r2, #0]
 8000fec:	2a49      	cmp	r2, #73	; 0x49
 8000fee:	d006      	beq.n	8000ffe <d_type+0x6a2>
 8000ff0:	464b      	mov	r3, r9
 8000ff2:	6163      	str	r3, [r4, #20]
 8000ff4:	4643      	mov	r3, r8
 8000ff6:	60e6      	str	r6, [r4, #12]
 8000ff8:	6223      	str	r3, [r4, #32]
 8000ffa:	62e7      	str	r7, [r4, #44]	; 0x2c
 8000ffc:	e526      	b.n	8000a4c <d_type+0xf0>
 8000ffe:	2d00      	cmp	r5, #0
 8001000:	d100      	bne.n	8001004 <d_type+0x6a8>
 8001002:	e4ec      	b.n	80009de <d_type+0x82>
 8001004:	6a23      	ldr	r3, [r4, #32]
 8001006:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8001008:	4293      	cmp	r3, r2
 800100a:	db00      	blt.n	800100e <d_type+0x6b2>
 800100c:	e4e7      	b.n	80009de <d_type+0x82>
 800100e:	69e2      	ldr	r2, [r4, #28]
 8001010:	0099      	lsls	r1, r3, #2
 8001012:	3301      	adds	r3, #1
 8001014:	508d      	str	r5, [r1, r2]
 8001016:	6223      	str	r3, [r4, #32]
 8001018:	e58f      	b.n	8000b3a <d_type+0x1de>
 800101a:	3603      	adds	r6, #3
 800101c:	3b5e      	subs	r3, #94	; 0x5e
 800101e:	60e6      	str	r6, [r4, #12]
 8001020:	0020      	movs	r0, r4
 8001022:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8001024:	6323      	str	r3, [r4, #48]	; 0x30
 8001026:	f000 fc2f 	bl	8001888 <d_expression_1>
 800102a:	6326      	str	r6, [r4, #48]	; 0x30
 800102c:	1e05      	subs	r5, r0, #0
 800102e:	d000      	beq.n	8001032 <d_type+0x6d6>
 8001030:	e6d2      	b.n	8000dd8 <d_type+0x47c>
 8001032:	e4d4      	b.n	80009de <d_type+0x82>
 8001034:	2300      	movs	r3, #0
 8001036:	701b      	strb	r3, [r3, #0]
 8001038:	deff      	udf	#255	; 0xff
 800103a:	2300      	movs	r3, #0
 800103c:	68db      	ldr	r3, [r3, #12]
 800103e:	deff      	udf	#255	; 0xff
 8001040:	68c3      	ldr	r3, [r0, #12]
 8001042:	deff      	udf	#255	; 0xff
 8001044:	0800fbfc 	.word	0x0800fbfc
 8001048:	0800fbf4 	.word	0x0800fbf4
 800104c:	0800f778 	.word	0x0800f778
 8001050:	0800f78c 	.word	0x0800f78c
 8001054:	0800f764 	.word	0x0800f764
 8001058:	0800f728 	.word	0x0800f728
 800105c:	0800f750 	.word	0x0800f750
 8001060:	0800f73c 	.word	0x0800f73c
 8001064:	0800f7b4 	.word	0x0800f7b4
 8001068:	0800f7a0 	.word	0x0800f7a0

0800106c <d_parmlist>:
 800106c:	2300      	movs	r3, #0
 800106e:	b530      	push	{r4, r5, lr}
 8001070:	68c2      	ldr	r2, [r0, #12]
 8001072:	b083      	sub	sp, #12
 8001074:	9301      	str	r3, [sp, #4]
 8001076:	7813      	ldrb	r3, [r2, #0]
 8001078:	0004      	movs	r4, r0
 800107a:	ad01      	add	r5, sp, #4
 800107c:	2b00      	cmp	r3, #0
 800107e:	d115      	bne.n	80010ac <d_parmlist+0x40>
 8001080:	e025      	b.n	80010ce <d_parmlist+0x62>
 8001082:	2b4f      	cmp	r3, #79	; 0x4f
 8001084:	d018      	beq.n	80010b8 <d_parmlist+0x4c>
 8001086:	0020      	movs	r0, r4
 8001088:	f7ff fc68 	bl	800095c <d_type>
 800108c:	1e02      	subs	r2, r0, #0
 800108e:	d01e      	beq.n	80010ce <d_parmlist+0x62>
 8001090:	2300      	movs	r3, #0
 8001092:	212e      	movs	r1, #46	; 0x2e
 8001094:	0020      	movs	r0, r4
 8001096:	f7ff f833 	bl	8000100 <d_make_comp>
 800109a:	6028      	str	r0, [r5, #0]
 800109c:	2800      	cmp	r0, #0
 800109e:	d016      	beq.n	80010ce <d_parmlist+0x62>
 80010a0:	68e2      	ldr	r2, [r4, #12]
 80010a2:	3010      	adds	r0, #16
 80010a4:	7813      	ldrb	r3, [r2, #0]
 80010a6:	0005      	movs	r5, r0
 80010a8:	2b00      	cmp	r3, #0
 80010aa:	d008      	beq.n	80010be <d_parmlist+0x52>
 80010ac:	2b45      	cmp	r3, #69	; 0x45
 80010ae:	d006      	beq.n	80010be <d_parmlist+0x52>
 80010b0:	2b2e      	cmp	r3, #46	; 0x2e
 80010b2:	d004      	beq.n	80010be <d_parmlist+0x52>
 80010b4:	2b52      	cmp	r3, #82	; 0x52
 80010b6:	d1e4      	bne.n	8001082 <d_parmlist+0x16>
 80010b8:	7853      	ldrb	r3, [r2, #1]
 80010ba:	2b45      	cmp	r3, #69	; 0x45
 80010bc:	d1e3      	bne.n	8001086 <d_parmlist+0x1a>
 80010be:	9801      	ldr	r0, [sp, #4]
 80010c0:	2800      	cmp	r0, #0
 80010c2:	d004      	beq.n	80010ce <d_parmlist+0x62>
 80010c4:	6903      	ldr	r3, [r0, #16]
 80010c6:	2b00      	cmp	r3, #0
 80010c8:	d003      	beq.n	80010d2 <d_parmlist+0x66>
 80010ca:	b003      	add	sp, #12
 80010cc:	bd30      	pop	{r4, r5, pc}
 80010ce:	2000      	movs	r0, #0
 80010d0:	e7fb      	b.n	80010ca <d_parmlist+0x5e>
 80010d2:	68c2      	ldr	r2, [r0, #12]
 80010d4:	7811      	ldrb	r1, [r2, #0]
 80010d6:	2927      	cmp	r1, #39	; 0x27
 80010d8:	d1f7      	bne.n	80010ca <d_parmlist+0x5e>
 80010da:	68d2      	ldr	r2, [r2, #12]
 80010dc:	7c11      	ldrb	r1, [r2, #16]
 80010de:	2909      	cmp	r1, #9
 80010e0:	d1f3      	bne.n	80010ca <d_parmlist+0x5e>
 80010e2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80010e4:	6852      	ldr	r2, [r2, #4]
 80010e6:	1a8a      	subs	r2, r1, r2
 80010e8:	62e2      	str	r2, [r4, #44]	; 0x2c
 80010ea:	60c3      	str	r3, [r0, #12]
 80010ec:	e7ed      	b.n	80010ca <d_parmlist+0x5e>
 80010ee:	46c0      	nop			; (mov r8, r8)

080010f0 <d_bare_function_type>:
 80010f0:	b570      	push	{r4, r5, r6, lr}
 80010f2:	68c3      	ldr	r3, [r0, #12]
 80010f4:	0004      	movs	r4, r0
 80010f6:	781a      	ldrb	r2, [r3, #0]
 80010f8:	2a4a      	cmp	r2, #74	; 0x4a
 80010fa:	d019      	beq.n	8001130 <d_bare_function_type+0x40>
 80010fc:	2900      	cmp	r1, #0
 80010fe:	d00f      	beq.n	8001120 <d_bare_function_type+0x30>
 8001100:	0020      	movs	r0, r4
 8001102:	f7ff fc2b 	bl	800095c <d_type>
 8001106:	1e05      	subs	r5, r0, #0
 8001108:	d010      	beq.n	800112c <d_bare_function_type+0x3c>
 800110a:	0020      	movs	r0, r4
 800110c:	f7ff ffae 	bl	800106c <d_parmlist>
 8001110:	1e03      	subs	r3, r0, #0
 8001112:	d00b      	beq.n	800112c <d_bare_function_type+0x3c>
 8001114:	002a      	movs	r2, r5
 8001116:	2129      	movs	r1, #41	; 0x29
 8001118:	0020      	movs	r0, r4
 800111a:	f7fe fff1 	bl	8000100 <d_make_comp>
 800111e:	bd70      	pop	{r4, r5, r6, pc}
 8001120:	0020      	movs	r0, r4
 8001122:	f7ff ffa3 	bl	800106c <d_parmlist>
 8001126:	2500      	movs	r5, #0
 8001128:	1e03      	subs	r3, r0, #0
 800112a:	d1f3      	bne.n	8001114 <d_bare_function_type+0x24>
 800112c:	2000      	movs	r0, #0
 800112e:	e7f6      	b.n	800111e <d_bare_function_type+0x2e>
 8001130:	3301      	adds	r3, #1
 8001132:	60c3      	str	r3, [r0, #12]
 8001134:	e7e4      	b.n	8001100 <d_bare_function_type+0x10>
 8001136:	46c0      	nop			; (mov r8, r8)

08001138 <d_function_type>:
 8001138:	6883      	ldr	r3, [r0, #8]
 800113a:	b510      	push	{r4, lr}
 800113c:	0004      	movs	r4, r0
 800113e:	035b      	lsls	r3, r3, #13
 8001140:	d40d      	bmi.n	800115e <d_function_type+0x26>
 8001142:	2380      	movs	r3, #128	; 0x80
 8001144:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8001146:	011b      	lsls	r3, r3, #4
 8001148:	429a      	cmp	r2, r3
 800114a:	d80c      	bhi.n	8001166 <d_function_type+0x2e>
 800114c:	1c53      	adds	r3, r2, #1
 800114e:	63c3      	str	r3, [r0, #60]	; 0x3c
 8001150:	68c3      	ldr	r3, [r0, #12]
 8001152:	2000      	movs	r0, #0
 8001154:	7819      	ldrb	r1, [r3, #0]
 8001156:	2946      	cmp	r1, #70	; 0x46
 8001158:	d007      	beq.n	800116a <d_function_type+0x32>
 800115a:	63e2      	str	r2, [r4, #60]	; 0x3c
 800115c:	e004      	b.n	8001168 <d_function_type+0x30>
 800115e:	68c3      	ldr	r3, [r0, #12]
 8001160:	781a      	ldrb	r2, [r3, #0]
 8001162:	2a46      	cmp	r2, #70	; 0x46
 8001164:	d001      	beq.n	800116a <d_function_type+0x32>
 8001166:	2000      	movs	r0, #0
 8001168:	bd10      	pop	{r4, pc}
 800116a:	1c5a      	adds	r2, r3, #1
 800116c:	60e2      	str	r2, [r4, #12]
 800116e:	785a      	ldrb	r2, [r3, #1]
 8001170:	2a59      	cmp	r2, #89	; 0x59
 8001172:	d101      	bne.n	8001178 <d_function_type+0x40>
 8001174:	3302      	adds	r3, #2
 8001176:	60e3      	str	r3, [r4, #12]
 8001178:	2101      	movs	r1, #1
 800117a:	0020      	movs	r0, r4
 800117c:	f7ff ffb8 	bl	80010f0 <d_bare_function_type>
 8001180:	0001      	movs	r1, r0
 8001182:	0020      	movs	r0, r4
 8001184:	f7ff f882 	bl	800028c <d_ref_qualifier>
 8001188:	68e3      	ldr	r3, [r4, #12]
 800118a:	781a      	ldrb	r2, [r3, #0]
 800118c:	2a45      	cmp	r2, #69	; 0x45
 800118e:	d007      	beq.n	80011a0 <d_function_type+0x68>
 8001190:	2000      	movs	r0, #0
 8001192:	68a3      	ldr	r3, [r4, #8]
 8001194:	035b      	lsls	r3, r3, #13
 8001196:	d4e7      	bmi.n	8001168 <d_function_type+0x30>
 8001198:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800119a:	3a01      	subs	r2, #1
 800119c:	63e2      	str	r2, [r4, #60]	; 0x3c
 800119e:	e7e3      	b.n	8001168 <d_function_type+0x30>
 80011a0:	3301      	adds	r3, #1
 80011a2:	60e3      	str	r3, [r4, #12]
 80011a4:	e7f5      	b.n	8001192 <d_function_type+0x5a>
 80011a6:	46c0      	nop			; (mov r8, r8)

080011a8 <d_operator_name>:
 80011a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80011aa:	46c6      	mov	lr, r8
 80011ac:	b500      	push	{lr}
 80011ae:	68c3      	ldr	r3, [r0, #12]
 80011b0:	4680      	mov	r8, r0
 80011b2:	781e      	ldrb	r6, [r3, #0]
 80011b4:	2e00      	cmp	r6, #0
 80011b6:	d11d      	bne.n	80011f4 <d_operator_name+0x4c>
 80011b8:	2300      	movs	r3, #0
 80011ba:	469c      	mov	ip, r3
 80011bc:	2548      	movs	r5, #72	; 0x48
 80011be:	2100      	movs	r1, #0
 80011c0:	4f40      	ldr	r7, [pc, #256]	; (80012c4 <d_operator_name+0x11c>)
 80011c2:	1a6a      	subs	r2, r5, r1
 80011c4:	0fd3      	lsrs	r3, r2, #31
 80011c6:	189b      	adds	r3, r3, r2
 80011c8:	105b      	asrs	r3, r3, #1
 80011ca:	185b      	adds	r3, r3, r1
 80011cc:	011a      	lsls	r2, r3, #4
 80011ce:	18ba      	adds	r2, r7, r2
 80011d0:	6814      	ldr	r4, [r2, #0]
 80011d2:	7820      	ldrb	r0, [r4, #0]
 80011d4:	42b0      	cmp	r0, r6
 80011d6:	d007      	beq.n	80011e8 <d_operator_name+0x40>
 80011d8:	d90a      	bls.n	80011f0 <d_operator_name+0x48>
 80011da:	001d      	movs	r5, r3
 80011dc:	42a9      	cmp	r1, r5
 80011de:	d1f0      	bne.n	80011c2 <d_operator_name+0x1a>
 80011e0:	2000      	movs	r0, #0
 80011e2:	bc80      	pop	{r7}
 80011e4:	46b8      	mov	r8, r7
 80011e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011e8:	7860      	ldrb	r0, [r4, #1]
 80011ea:	4560      	cmp	r0, ip
 80011ec:	d035      	beq.n	800125a <d_operator_name+0xb2>
 80011ee:	d8f4      	bhi.n	80011da <d_operator_name+0x32>
 80011f0:	1c59      	adds	r1, r3, #1
 80011f2:	e7f3      	b.n	80011dc <d_operator_name+0x34>
 80011f4:	1c5a      	adds	r2, r3, #1
 80011f6:	60c2      	str	r2, [r0, #12]
 80011f8:	785a      	ldrb	r2, [r3, #1]
 80011fa:	781e      	ldrb	r6, [r3, #0]
 80011fc:	4694      	mov	ip, r2
 80011fe:	2a00      	cmp	r2, #0
 8001200:	d102      	bne.n	8001208 <d_operator_name+0x60>
 8001202:	2e76      	cmp	r6, #118	; 0x76
 8001204:	d0da      	beq.n	80011bc <d_operator_name+0x14>
 8001206:	e7d7      	b.n	80011b8 <d_operator_name+0x10>
 8001208:	1c9a      	adds	r2, r3, #2
 800120a:	60c2      	str	r2, [r0, #12]
 800120c:	785b      	ldrb	r3, [r3, #1]
 800120e:	469c      	mov	ip, r3
 8001210:	2e76      	cmp	r6, #118	; 0x76
 8001212:	d138      	bne.n	8001286 <d_operator_name+0xde>
 8001214:	001d      	movs	r5, r3
 8001216:	3d30      	subs	r5, #48	; 0x30
 8001218:	b2eb      	uxtb	r3, r5
 800121a:	2b09      	cmp	r3, #9
 800121c:	d8ce      	bhi.n	80011bc <d_operator_name+0x14>
 800121e:	f7ff fa63 	bl	80006e8 <d_source_name>
 8001222:	4643      	mov	r3, r8
 8001224:	4642      	mov	r2, r8
 8001226:	695b      	ldr	r3, [r3, #20]
 8001228:	6992      	ldr	r2, [r2, #24]
 800122a:	0001      	movs	r1, r0
 800122c:	4293      	cmp	r3, r2
 800122e:	dad7      	bge.n	80011e0 <d_operator_name+0x38>
 8001230:	4640      	mov	r0, r8
 8001232:	009a      	lsls	r2, r3, #2
 8001234:	6900      	ldr	r0, [r0, #16]
 8001236:	18d2      	adds	r2, r2, r3
 8001238:	0092      	lsls	r2, r2, #2
 800123a:	1880      	adds	r0, r0, r2
 800123c:	4644      	mov	r4, r8
 800123e:	2200      	movs	r2, #0
 8001240:	3301      	adds	r3, #1
 8001242:	6042      	str	r2, [r0, #4]
 8001244:	6082      	str	r2, [r0, #8]
 8001246:	6163      	str	r3, [r4, #20]
 8001248:	2900      	cmp	r1, #0
 800124a:	d0c9      	beq.n	80011e0 <d_operator_name+0x38>
 800124c:	2333      	movs	r3, #51	; 0x33
 800124e:	6042      	str	r2, [r0, #4]
 8001250:	6082      	str	r2, [r0, #8]
 8001252:	7003      	strb	r3, [r0, #0]
 8001254:	60c5      	str	r5, [r0, #12]
 8001256:	6101      	str	r1, [r0, #16]
 8001258:	e7c3      	b.n	80011e2 <d_operator_name+0x3a>
 800125a:	4643      	mov	r3, r8
 800125c:	4641      	mov	r1, r8
 800125e:	695b      	ldr	r3, [r3, #20]
 8001260:	6989      	ldr	r1, [r1, #24]
 8001262:	428b      	cmp	r3, r1
 8001264:	dabc      	bge.n	80011e0 <d_operator_name+0x38>
 8001266:	4640      	mov	r0, r8
 8001268:	0099      	lsls	r1, r3, #2
 800126a:	6900      	ldr	r0, [r0, #16]
 800126c:	18c9      	adds	r1, r1, r3
 800126e:	0089      	lsls	r1, r1, #2
 8001270:	1840      	adds	r0, r0, r1
 8001272:	2100      	movs	r1, #0
 8001274:	6041      	str	r1, [r0, #4]
 8001276:	6081      	str	r1, [r0, #8]
 8001278:	4641      	mov	r1, r8
 800127a:	3301      	adds	r3, #1
 800127c:	614b      	str	r3, [r1, #20]
 800127e:	2332      	movs	r3, #50	; 0x32
 8001280:	60c2      	str	r2, [r0, #12]
 8001282:	7003      	strb	r3, [r0, #0]
 8001284:	e7ad      	b.n	80011e2 <d_operator_name+0x3a>
 8001286:	2e63      	cmp	r6, #99	; 0x63
 8001288:	d198      	bne.n	80011bc <d_operator_name+0x14>
 800128a:	2b76      	cmp	r3, #118	; 0x76
 800128c:	d196      	bne.n	80011bc <d_operator_name+0x14>
 800128e:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8001290:	6b45      	ldr	r5, [r0, #52]	; 0x34
 8001292:	425a      	negs	r2, r3
 8001294:	4153      	adcs	r3, r2
 8001296:	6343      	str	r3, [r0, #52]	; 0x34
 8001298:	f7ff fb60 	bl	800095c <d_type>
 800129c:	4643      	mov	r3, r8
 800129e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80012a0:	0002      	movs	r2, r0
 80012a2:	2b00      	cmp	r3, #0
 80012a4:	d007      	beq.n	80012b6 <d_operator_name+0x10e>
 80012a6:	2300      	movs	r3, #0
 80012a8:	2135      	movs	r1, #53	; 0x35
 80012aa:	4640      	mov	r0, r8
 80012ac:	f7fe ff28 	bl	8000100 <d_make_comp>
 80012b0:	4643      	mov	r3, r8
 80012b2:	635d      	str	r5, [r3, #52]	; 0x34
 80012b4:	e795      	b.n	80011e2 <d_operator_name+0x3a>
 80012b6:	2300      	movs	r3, #0
 80012b8:	2134      	movs	r1, #52	; 0x34
 80012ba:	4640      	mov	r0, r8
 80012bc:	f7fe ff20 	bl	8000100 <d_make_comp>
 80012c0:	e7f6      	b.n	80012b0 <d_operator_name+0x108>
 80012c2:	46c0      	nop			; (mov r8, r8)
 80012c4:	0800f090 	.word	0x0800f090

080012c8 <d_unqualified_name>:
 80012c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012ca:	68c3      	ldr	r3, [r0, #12]
 80012cc:	0004      	movs	r4, r0
 80012ce:	781a      	ldrb	r2, [r3, #0]
 80012d0:	0011      	movs	r1, r2
 80012d2:	3930      	subs	r1, #48	; 0x30
 80012d4:	2909      	cmp	r1, #9
 80012d6:	d95e      	bls.n	8001396 <d_unqualified_name+0xce>
 80012d8:	0011      	movs	r1, r2
 80012da:	3961      	subs	r1, #97	; 0x61
 80012dc:	2919      	cmp	r1, #25
 80012de:	d812      	bhi.n	8001306 <d_unqualified_name+0x3e>
 80012e0:	6b05      	ldr	r5, [r0, #48]	; 0x30
 80012e2:	2a6f      	cmp	r2, #111	; 0x6f
 80012e4:	d100      	bne.n	80012e8 <d_unqualified_name+0x20>
 80012e6:	e09c      	b.n	8001422 <d_unqualified_name+0x15a>
 80012e8:	0020      	movs	r0, r4
 80012ea:	f7ff ff5d 	bl	80011a8 <d_operator_name>
 80012ee:	6325      	str	r5, [r4, #48]	; 0x30
 80012f0:	1e06      	subs	r6, r0, #0
 80012f2:	d002      	beq.n	80012fa <d_unqualified_name+0x32>
 80012f4:	7803      	ldrb	r3, [r0, #0]
 80012f6:	2b32      	cmp	r3, #50	; 0x32
 80012f8:	d067      	beq.n	80013ca <d_unqualified_name+0x102>
 80012fa:	68e3      	ldr	r3, [r4, #12]
 80012fc:	7819      	ldrb	r1, [r3, #0]
 80012fe:	2942      	cmp	r1, #66	; 0x42
 8001300:	d050      	beq.n	80013a4 <d_unqualified_name+0xdc>
 8001302:	0030      	movs	r0, r6
 8001304:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001306:	0011      	movs	r1, r2
 8001308:	3943      	subs	r1, #67	; 0x43
 800130a:	2901      	cmp	r1, #1
 800130c:	d800      	bhi.n	8001310 <d_unqualified_name+0x48>
 800130e:	e091      	b.n	8001434 <d_unqualified_name+0x16c>
 8001310:	2a4c      	cmp	r2, #76	; 0x4c
 8001312:	d078      	beq.n	8001406 <d_unqualified_name+0x13e>
 8001314:	2a55      	cmp	r2, #85	; 0x55
 8001316:	d000      	beq.n	800131a <d_unqualified_name+0x52>
 8001318:	e081      	b.n	800141e <d_unqualified_name+0x156>
 800131a:	785a      	ldrb	r2, [r3, #1]
 800131c:	2a6c      	cmp	r2, #108	; 0x6c
 800131e:	d100      	bne.n	8001322 <d_unqualified_name+0x5a>
 8001320:	e0d3      	b.n	80014ca <d_unqualified_name+0x202>
 8001322:	2a74      	cmp	r2, #116	; 0x74
 8001324:	d17b      	bne.n	800141e <d_unqualified_name+0x156>
 8001326:	1c5a      	adds	r2, r3, #1
 8001328:	60c2      	str	r2, [r0, #12]
 800132a:	7859      	ldrb	r1, [r3, #1]
 800132c:	2974      	cmp	r1, #116	; 0x74
 800132e:	d000      	beq.n	8001332 <d_unqualified_name+0x6a>
 8001330:	e09f      	b.n	8001472 <d_unqualified_name+0x1aa>
 8001332:	1c9a      	adds	r2, r3, #2
 8001334:	60c2      	str	r2, [r0, #12]
 8001336:	789a      	ldrb	r2, [r3, #2]
 8001338:	2a5f      	cmp	r2, #95	; 0x5f
 800133a:	d100      	bne.n	800133e <d_unqualified_name+0x76>
 800133c:	e137      	b.n	80015ae <d_unqualified_name+0x2e6>
 800133e:	2a6e      	cmp	r2, #110	; 0x6e
 8001340:	d06d      	beq.n	800141e <d_unqualified_name+0x156>
 8001342:	f7fe ff3d 	bl	80001c0 <d_number>
 8001346:	68e3      	ldr	r3, [r4, #12]
 8001348:	7819      	ldrb	r1, [r3, #0]
 800134a:	1c45      	adds	r5, r0, #1
 800134c:	d500      	bpl.n	8001350 <d_unqualified_name+0x88>
 800134e:	e08e      	b.n	800146e <d_unqualified_name+0x1a6>
 8001350:	295f      	cmp	r1, #95	; 0x5f
 8001352:	d000      	beq.n	8001356 <d_unqualified_name+0x8e>
 8001354:	e08b      	b.n	800146e <d_unqualified_name+0x1a6>
 8001356:	3301      	adds	r3, #1
 8001358:	6962      	ldr	r2, [r4, #20]
 800135a:	69a1      	ldr	r1, [r4, #24]
 800135c:	60e3      	str	r3, [r4, #12]
 800135e:	428a      	cmp	r2, r1
 8001360:	db00      	blt.n	8001364 <d_unqualified_name+0x9c>
 8001362:	e10c      	b.n	800157e <d_unqualified_name+0x2b6>
 8001364:	0091      	lsls	r1, r2, #2
 8001366:	1889      	adds	r1, r1, r2
 8001368:	008e      	lsls	r6, r1, #2
 800136a:	2100      	movs	r1, #0
 800136c:	6920      	ldr	r0, [r4, #16]
 800136e:	3201      	adds	r2, #1
 8001370:	1986      	adds	r6, r0, r6
 8001372:	6071      	str	r1, [r6, #4]
 8001374:	60b1      	str	r1, [r6, #8]
 8001376:	6162      	str	r2, [r4, #20]
 8001378:	2249      	movs	r2, #73	; 0x49
 800137a:	7032      	strb	r2, [r6, #0]
 800137c:	6a22      	ldr	r2, [r4, #32]
 800137e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8001380:	60f5      	str	r5, [r6, #12]
 8001382:	428a      	cmp	r2, r1
 8001384:	db00      	blt.n	8001388 <d_unqualified_name+0xc0>
 8001386:	e0fa      	b.n	800157e <d_unqualified_name+0x2b6>
 8001388:	69e1      	ldr	r1, [r4, #28]
 800138a:	0090      	lsls	r0, r2, #2
 800138c:	3201      	adds	r2, #1
 800138e:	5046      	str	r6, [r0, r1]
 8001390:	6222      	str	r2, [r4, #32]
 8001392:	7819      	ldrb	r1, [r3, #0]
 8001394:	e7b3      	b.n	80012fe <d_unqualified_name+0x36>
 8001396:	f7ff f9a7 	bl	80006e8 <d_source_name>
 800139a:	68e3      	ldr	r3, [r4, #12]
 800139c:	0006      	movs	r6, r0
 800139e:	7819      	ldrb	r1, [r3, #0]
 80013a0:	2942      	cmp	r1, #66	; 0x42
 80013a2:	d1ae      	bne.n	8001302 <d_unqualified_name+0x3a>
 80013a4:	6aa5      	ldr	r5, [r4, #40]	; 0x28
 80013a6:	3301      	adds	r3, #1
 80013a8:	60e3      	str	r3, [r4, #12]
 80013aa:	0020      	movs	r0, r4
 80013ac:	f7ff f99c 	bl	80006e8 <d_source_name>
 80013b0:	0032      	movs	r2, r6
 80013b2:	0003      	movs	r3, r0
 80013b4:	214d      	movs	r1, #77	; 0x4d
 80013b6:	0020      	movs	r0, r4
 80013b8:	f7fe fea2 	bl	8000100 <d_make_comp>
 80013bc:	68e3      	ldr	r3, [r4, #12]
 80013be:	0006      	movs	r6, r0
 80013c0:	7819      	ldrb	r1, [r3, #0]
 80013c2:	2942      	cmp	r1, #66	; 0x42
 80013c4:	d0ef      	beq.n	80013a6 <d_unqualified_name+0xde>
 80013c6:	62a5      	str	r5, [r4, #40]	; 0x28
 80013c8:	e79b      	b.n	8001302 <d_unqualified_name+0x3a>
 80013ca:	68c2      	ldr	r2, [r0, #12]
 80013cc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80013ce:	6891      	ldr	r1, [r2, #8]
 80013d0:	3307      	adds	r3, #7
 80013d2:	185b      	adds	r3, r3, r1
 80013d4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80013d6:	6813      	ldr	r3, [r2, #0]
 80013d8:	781a      	ldrb	r2, [r3, #0]
 80013da:	2a6c      	cmp	r2, #108	; 0x6c
 80013dc:	d000      	beq.n	80013e0 <d_unqualified_name+0x118>
 80013de:	e78c      	b.n	80012fa <d_unqualified_name+0x32>
 80013e0:	785a      	ldrb	r2, [r3, #1]
 80013e2:	2a69      	cmp	r2, #105	; 0x69
 80013e4:	d000      	beq.n	80013e8 <d_unqualified_name+0x120>
 80013e6:	e788      	b.n	80012fa <d_unqualified_name+0x32>
 80013e8:	789b      	ldrb	r3, [r3, #2]
 80013ea:	2b00      	cmp	r3, #0
 80013ec:	d000      	beq.n	80013f0 <d_unqualified_name+0x128>
 80013ee:	e784      	b.n	80012fa <d_unqualified_name+0x32>
 80013f0:	0020      	movs	r0, r4
 80013f2:	f7ff f979 	bl	80006e8 <d_source_name>
 80013f6:	0032      	movs	r2, r6
 80013f8:	0003      	movs	r3, r0
 80013fa:	2137      	movs	r1, #55	; 0x37
 80013fc:	0020      	movs	r0, r4
 80013fe:	f7fe fe7f 	bl	8000100 <d_make_comp>
 8001402:	0006      	movs	r6, r0
 8001404:	e779      	b.n	80012fa <d_unqualified_name+0x32>
 8001406:	3301      	adds	r3, #1
 8001408:	60c3      	str	r3, [r0, #12]
 800140a:	f7ff f96d 	bl	80006e8 <d_source_name>
 800140e:	1e06      	subs	r6, r0, #0
 8001410:	d005      	beq.n	800141e <d_unqualified_name+0x156>
 8001412:	0020      	movs	r0, r4
 8001414:	f7fe ffa0 	bl	8000358 <d_discriminator>
 8001418:	2800      	cmp	r0, #0
 800141a:	d000      	beq.n	800141e <d_unqualified_name+0x156>
 800141c:	e76d      	b.n	80012fa <d_unqualified_name+0x32>
 800141e:	2600      	movs	r6, #0
 8001420:	e76f      	b.n	8001302 <d_unqualified_name+0x3a>
 8001422:	785a      	ldrb	r2, [r3, #1]
 8001424:	2a6e      	cmp	r2, #110	; 0x6e
 8001426:	d000      	beq.n	800142a <d_unqualified_name+0x162>
 8001428:	e75e      	b.n	80012e8 <d_unqualified_name+0x20>
 800142a:	3302      	adds	r3, #2
 800142c:	60c3      	str	r3, [r0, #12]
 800142e:	2300      	movs	r3, #0
 8001430:	6303      	str	r3, [r0, #48]	; 0x30
 8001432:	e759      	b.n	80012e8 <d_unqualified_name+0x20>
 8001434:	6a85      	ldr	r5, [r0, #40]	; 0x28
 8001436:	2d00      	cmp	r5, #0
 8001438:	d004      	beq.n	8001444 <d_unqualified_name+0x17c>
 800143a:	7829      	ldrb	r1, [r5, #0]
 800143c:	2900      	cmp	r1, #0
 800143e:	d00c      	beq.n	800145a <d_unqualified_name+0x192>
 8001440:	2918      	cmp	r1, #24
 8001442:	d00a      	beq.n	800145a <d_unqualified_name+0x192>
 8001444:	2a43      	cmp	r2, #67	; 0x43
 8001446:	d076      	beq.n	8001536 <d_unqualified_name+0x26e>
 8001448:	7859      	ldrb	r1, [r3, #1]
 800144a:	3930      	subs	r1, #48	; 0x30
 800144c:	b2c9      	uxtb	r1, r1
 800144e:	2905      	cmp	r1, #5
 8001450:	d838      	bhi.n	80014c4 <d_unqualified_name+0x1fc>
 8001452:	485c      	ldr	r0, [pc, #368]	; (80015c4 <d_unqualified_name+0x2fc>)
 8001454:	0089      	lsls	r1, r1, #2
 8001456:	5841      	ldr	r1, [r0, r1]
 8001458:	468f      	mov	pc, r1
 800145a:	6929      	ldr	r1, [r5, #16]
 800145c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800145e:	1852      	adds	r2, r2, r1
 8001460:	62e2      	str	r2, [r4, #44]	; 0x2c
 8001462:	7819      	ldrb	r1, [r3, #0]
 8001464:	000a      	movs	r2, r1
 8001466:	2943      	cmp	r1, #67	; 0x43
 8001468:	d065      	beq.n	8001536 <d_unqualified_name+0x26e>
 800146a:	2944      	cmp	r1, #68	; 0x44
 800146c:	d0ec      	beq.n	8001448 <d_unqualified_name+0x180>
 800146e:	2600      	movs	r6, #0
 8001470:	e745      	b.n	80012fe <d_unqualified_name+0x36>
 8001472:	0013      	movs	r3, r2
 8001474:	2600      	movs	r6, #0
 8001476:	e742      	b.n	80012fe <d_unqualified_name+0x36>
 8001478:	2001      	movs	r0, #1
 800147a:	6962      	ldr	r2, [r4, #20]
 800147c:	69a1      	ldr	r1, [r4, #24]
 800147e:	1c9f      	adds	r7, r3, #2
 8001480:	60e7      	str	r7, [r4, #12]
 8001482:	428a      	cmp	r2, r1
 8001484:	db00      	blt.n	8001488 <d_unqualified_name+0x1c0>
 8001486:	e08e      	b.n	80015a6 <d_unqualified_name+0x2de>
 8001488:	0091      	lsls	r1, r2, #2
 800148a:	6926      	ldr	r6, [r4, #16]
 800148c:	1889      	adds	r1, r1, r2
 800148e:	0089      	lsls	r1, r1, #2
 8001490:	1876      	adds	r6, r6, r1
 8001492:	2100      	movs	r1, #0
 8001494:	3201      	adds	r2, #1
 8001496:	6071      	str	r1, [r6, #4]
 8001498:	60b1      	str	r1, [r6, #8]
 800149a:	6162      	str	r2, [r4, #20]
 800149c:	2d00      	cmp	r5, #0
 800149e:	d100      	bne.n	80014a2 <d_unqualified_name+0x1da>
 80014a0:	e081      	b.n	80015a6 <d_unqualified_name+0x2de>
 80014a2:	2208      	movs	r2, #8
 80014a4:	6071      	str	r1, [r6, #4]
 80014a6:	60b1      	str	r1, [r6, #8]
 80014a8:	7032      	strb	r2, [r6, #0]
 80014aa:	7330      	strb	r0, [r6, #12]
 80014ac:	6135      	str	r5, [r6, #16]
 80014ae:	7899      	ldrb	r1, [r3, #2]
 80014b0:	003b      	movs	r3, r7
 80014b2:	e724      	b.n	80012fe <d_unqualified_name+0x36>
 80014b4:	2003      	movs	r0, #3
 80014b6:	e7e0      	b.n	800147a <d_unqualified_name+0x1b2>
 80014b8:	2005      	movs	r0, #5
 80014ba:	e7de      	b.n	800147a <d_unqualified_name+0x1b2>
 80014bc:	2004      	movs	r0, #4
 80014be:	e7dc      	b.n	800147a <d_unqualified_name+0x1b2>
 80014c0:	2002      	movs	r0, #2
 80014c2:	e7da      	b.n	800147a <d_unqualified_name+0x1b2>
 80014c4:	0011      	movs	r1, r2
 80014c6:	2600      	movs	r6, #0
 80014c8:	e719      	b.n	80012fe <d_unqualified_name+0x36>
 80014ca:	1c5a      	adds	r2, r3, #1
 80014cc:	60c2      	str	r2, [r0, #12]
 80014ce:	7859      	ldrb	r1, [r3, #1]
 80014d0:	296c      	cmp	r1, #108	; 0x6c
 80014d2:	d1ce      	bne.n	8001472 <d_unqualified_name+0x1aa>
 80014d4:	3302      	adds	r3, #2
 80014d6:	60c3      	str	r3, [r0, #12]
 80014d8:	f7ff fdc8 	bl	800106c <d_parmlist>
 80014dc:	68e3      	ldr	r3, [r4, #12]
 80014de:	0005      	movs	r5, r0
 80014e0:	7819      	ldrb	r1, [r3, #0]
 80014e2:	2800      	cmp	r0, #0
 80014e4:	d0c3      	beq.n	800146e <d_unqualified_name+0x1a6>
 80014e6:	2945      	cmp	r1, #69	; 0x45
 80014e8:	d1c1      	bne.n	800146e <d_unqualified_name+0x1a6>
 80014ea:	1c5a      	adds	r2, r3, #1
 80014ec:	60e2      	str	r2, [r4, #12]
 80014ee:	785a      	ldrb	r2, [r3, #1]
 80014f0:	2a5f      	cmp	r2, #95	; 0x5f
 80014f2:	d05f      	beq.n	80015b4 <d_unqualified_name+0x2ec>
 80014f4:	2a6e      	cmp	r2, #110	; 0x6e
 80014f6:	d092      	beq.n	800141e <d_unqualified_name+0x156>
 80014f8:	0020      	movs	r0, r4
 80014fa:	f7fe fe61 	bl	80001c0 <d_number>
 80014fe:	68e3      	ldr	r3, [r4, #12]
 8001500:	7819      	ldrb	r1, [r3, #0]
 8001502:	1c47      	adds	r7, r0, #1
 8001504:	d4b3      	bmi.n	800146e <d_unqualified_name+0x1a6>
 8001506:	295f      	cmp	r1, #95	; 0x5f
 8001508:	d1b1      	bne.n	800146e <d_unqualified_name+0x1a6>
 800150a:	3301      	adds	r3, #1
 800150c:	6962      	ldr	r2, [r4, #20]
 800150e:	69a1      	ldr	r1, [r4, #24]
 8001510:	60e3      	str	r3, [r4, #12]
 8001512:	428a      	cmp	r2, r1
 8001514:	da33      	bge.n	800157e <d_unqualified_name+0x2b6>
 8001516:	0091      	lsls	r1, r2, #2
 8001518:	1889      	adds	r1, r1, r2
 800151a:	008e      	lsls	r6, r1, #2
 800151c:	2100      	movs	r1, #0
 800151e:	6920      	ldr	r0, [r4, #16]
 8001520:	3201      	adds	r2, #1
 8001522:	1986      	adds	r6, r0, r6
 8001524:	6071      	str	r1, [r6, #4]
 8001526:	60b1      	str	r1, [r6, #8]
 8001528:	6162      	str	r2, [r4, #20]
 800152a:	2247      	movs	r2, #71	; 0x47
 800152c:	60f5      	str	r5, [r6, #12]
 800152e:	7032      	strb	r2, [r6, #0]
 8001530:	6137      	str	r7, [r6, #16]
 8001532:	7819      	ldrb	r1, [r3, #0]
 8001534:	e6e3      	b.n	80012fe <d_unqualified_name+0x36>
 8001536:	785a      	ldrb	r2, [r3, #1]
 8001538:	2a49      	cmp	r2, #73	; 0x49
 800153a:	d023      	beq.n	8001584 <d_unqualified_name+0x2bc>
 800153c:	0011      	movs	r1, r2
 800153e:	3931      	subs	r1, #49	; 0x31
 8001540:	2904      	cmp	r1, #4
 8001542:	d900      	bls.n	8001546 <d_unqualified_name+0x27e>
 8001544:	e76b      	b.n	800141e <d_unqualified_name+0x156>
 8001546:	3a30      	subs	r2, #48	; 0x30
 8001548:	3302      	adds	r3, #2
 800154a:	b2d7      	uxtb	r7, r2
 800154c:	60e3      	str	r3, [r4, #12]
 800154e:	6962      	ldr	r2, [r4, #20]
 8001550:	69a1      	ldr	r1, [r4, #24]
 8001552:	428a      	cmp	r2, r1
 8001554:	da13      	bge.n	800157e <d_unqualified_name+0x2b6>
 8001556:	0091      	lsls	r1, r2, #2
 8001558:	1889      	adds	r1, r1, r2
 800155a:	008e      	lsls	r6, r1, #2
 800155c:	2100      	movs	r1, #0
 800155e:	6920      	ldr	r0, [r4, #16]
 8001560:	3201      	adds	r2, #1
 8001562:	1986      	adds	r6, r0, r6
 8001564:	6071      	str	r1, [r6, #4]
 8001566:	60b1      	str	r1, [r6, #8]
 8001568:	6162      	str	r2, [r4, #20]
 800156a:	2d00      	cmp	r5, #0
 800156c:	d007      	beq.n	800157e <d_unqualified_name+0x2b6>
 800156e:	2207      	movs	r2, #7
 8001570:	6071      	str	r1, [r6, #4]
 8001572:	60b1      	str	r1, [r6, #8]
 8001574:	7032      	strb	r2, [r6, #0]
 8001576:	7337      	strb	r7, [r6, #12]
 8001578:	6135      	str	r5, [r6, #16]
 800157a:	7819      	ldrb	r1, [r3, #0]
 800157c:	e6bf      	b.n	80012fe <d_unqualified_name+0x36>
 800157e:	2600      	movs	r6, #0
 8001580:	7819      	ldrb	r1, [r3, #0]
 8001582:	e6bc      	b.n	80012fe <d_unqualified_name+0x36>
 8001584:	1c58      	adds	r0, r3, #1
 8001586:	60e0      	str	r0, [r4, #12]
 8001588:	789a      	ldrb	r2, [r3, #2]
 800158a:	0011      	movs	r1, r2
 800158c:	3931      	subs	r1, #49	; 0x31
 800158e:	2904      	cmp	r1, #4
 8001590:	d813      	bhi.n	80015ba <d_unqualified_name+0x2f2>
 8001592:	3303      	adds	r3, #3
 8001594:	3a30      	subs	r2, #48	; 0x30
 8001596:	60e3      	str	r3, [r4, #12]
 8001598:	0020      	movs	r0, r4
 800159a:	b2d7      	uxtb	r7, r2
 800159c:	f7ff f9de 	bl	800095c <d_type>
 80015a0:	6aa5      	ldr	r5, [r4, #40]	; 0x28
 80015a2:	68e3      	ldr	r3, [r4, #12]
 80015a4:	e7d3      	b.n	800154e <d_unqualified_name+0x286>
 80015a6:	7899      	ldrb	r1, [r3, #2]
 80015a8:	2600      	movs	r6, #0
 80015aa:	003b      	movs	r3, r7
 80015ac:	e6a7      	b.n	80012fe <d_unqualified_name+0x36>
 80015ae:	2500      	movs	r5, #0
 80015b0:	3303      	adds	r3, #3
 80015b2:	e6d1      	b.n	8001358 <d_unqualified_name+0x90>
 80015b4:	2700      	movs	r7, #0
 80015b6:	3302      	adds	r3, #2
 80015b8:	e7a8      	b.n	800150c <d_unqualified_name+0x244>
 80015ba:	7859      	ldrb	r1, [r3, #1]
 80015bc:	2600      	movs	r6, #0
 80015be:	0003      	movs	r3, r0
 80015c0:	e69d      	b.n	80012fe <d_unqualified_name+0x36>
 80015c2:	46c0      	nop			; (mov r8, r8)
 80015c4:	0800ead8 	.word	0x0800ead8

080015c8 <d_expr_primary>:
 80015c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015ca:	68c2      	ldr	r2, [r0, #12]
 80015cc:	0004      	movs	r4, r0
 80015ce:	7813      	ldrb	r3, [r2, #0]
 80015d0:	2b4c      	cmp	r3, #76	; 0x4c
 80015d2:	d132      	bne.n	800163a <d_expr_primary+0x72>
 80015d4:	1c53      	adds	r3, r2, #1
 80015d6:	60c3      	str	r3, [r0, #12]
 80015d8:	7851      	ldrb	r1, [r2, #1]
 80015da:	295f      	cmp	r1, #95	; 0x5f
 80015dc:	d053      	beq.n	8001686 <d_expr_primary+0xbe>
 80015de:	295a      	cmp	r1, #90	; 0x5a
 80015e0:	d112      	bne.n	8001608 <d_expr_primary+0x40>
 80015e2:	1c5a      	adds	r2, r3, #1
 80015e4:	60e2      	str	r2, [r4, #12]
 80015e6:	785b      	ldrb	r3, [r3, #1]
 80015e8:	2b47      	cmp	r3, #71	; 0x47
 80015ea:	d045      	beq.n	8001678 <d_expr_primary+0xb0>
 80015ec:	2b54      	cmp	r3, #84	; 0x54
 80015ee:	d043      	beq.n	8001678 <d_expr_primary+0xb0>
 80015f0:	2100      	movs	r1, #0
 80015f2:	0020      	movs	r0, r4
 80015f4:	f001 f808 	bl	8002608 <d_encoding.part.0>
 80015f8:	0005      	movs	r5, r0
 80015fa:	68e3      	ldr	r3, [r4, #12]
 80015fc:	781a      	ldrb	r2, [r3, #0]
 80015fe:	2a45      	cmp	r2, #69	; 0x45
 8001600:	d11b      	bne.n	800163a <d_expr_primary+0x72>
 8001602:	3301      	adds	r3, #1
 8001604:	60e3      	str	r3, [r4, #12]
 8001606:	e019      	b.n	800163c <d_expr_primary+0x74>
 8001608:	f7ff f9a8 	bl	800095c <d_type>
 800160c:	1e05      	subs	r5, r0, #0
 800160e:	d014      	beq.n	800163a <d_expr_primary+0x72>
 8001610:	7803      	ldrb	r3, [r0, #0]
 8001612:	2b27      	cmp	r3, #39	; 0x27
 8001614:	d014      	beq.n	8001640 <d_expr_primary+0x78>
 8001616:	68e6      	ldr	r6, [r4, #12]
 8001618:	213d      	movs	r1, #61	; 0x3d
 800161a:	7832      	ldrb	r2, [r6, #0]
 800161c:	2a6e      	cmp	r2, #110	; 0x6e
 800161e:	d025      	beq.n	800166c <d_expr_primary+0xa4>
 8001620:	2a45      	cmp	r2, #69	; 0x45
 8001622:	d057      	beq.n	80016d4 <d_expr_primary+0x10c>
 8001624:	1c73      	adds	r3, r6, #1
 8001626:	e006      	b.n	8001636 <d_expr_primary+0x6e>
 8001628:	60e3      	str	r3, [r4, #12]
 800162a:	0018      	movs	r0, r3
 800162c:	3301      	adds	r3, #1
 800162e:	1e5a      	subs	r2, r3, #1
 8001630:	7812      	ldrb	r2, [r2, #0]
 8001632:	2a45      	cmp	r2, #69	; 0x45
 8001634:	d02e      	beq.n	8001694 <d_expr_primary+0xcc>
 8001636:	2a00      	cmp	r2, #0
 8001638:	d1f6      	bne.n	8001628 <d_expr_primary+0x60>
 800163a:	2500      	movs	r5, #0
 800163c:	0028      	movs	r0, r5
 800163e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001640:	68c3      	ldr	r3, [r0, #12]
 8001642:	7c1a      	ldrb	r2, [r3, #16]
 8001644:	2a00      	cmp	r2, #0
 8001646:	d003      	beq.n	8001650 <d_expr_primary+0x88>
 8001648:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800164a:	6859      	ldr	r1, [r3, #4]
 800164c:	1a52      	subs	r2, r2, r1
 800164e:	62e2      	str	r2, [r4, #44]	; 0x2c
 8001650:	4923      	ldr	r1, [pc, #140]	; (80016e0 <d_expr_primary+0x118>)
 8001652:	6818      	ldr	r0, [r3, #0]
 8001654:	f005 f9b8 	bl	80069c8 <strcmp>
 8001658:	2800      	cmp	r0, #0
 800165a:	d1dc      	bne.n	8001616 <d_expr_primary+0x4e>
 800165c:	68e6      	ldr	r6, [r4, #12]
 800165e:	7832      	ldrb	r2, [r6, #0]
 8001660:	2a45      	cmp	r2, #69	; 0x45
 8001662:	d039      	beq.n	80016d8 <d_expr_primary+0x110>
 8001664:	2a6e      	cmp	r2, #110	; 0x6e
 8001666:	d001      	beq.n	800166c <d_expr_primary+0xa4>
 8001668:	213d      	movs	r1, #61	; 0x3d
 800166a:	e7db      	b.n	8001624 <d_expr_primary+0x5c>
 800166c:	1c73      	adds	r3, r6, #1
 800166e:	60e3      	str	r3, [r4, #12]
 8001670:	7872      	ldrb	r2, [r6, #1]
 8001672:	213e      	movs	r1, #62	; 0x3e
 8001674:	001e      	movs	r6, r3
 8001676:	e7d3      	b.n	8001620 <d_expr_primary+0x58>
 8001678:	0020      	movs	r0, r4
 800167a:	f000 fc83 	bl	8001f84 <d_special_name>
 800167e:	68e3      	ldr	r3, [r4, #12]
 8001680:	0005      	movs	r5, r0
 8001682:	781a      	ldrb	r2, [r3, #0]
 8001684:	e7bb      	b.n	80015fe <d_expr_primary+0x36>
 8001686:	1c93      	adds	r3, r2, #2
 8001688:	60c3      	str	r3, [r0, #12]
 800168a:	7892      	ldrb	r2, [r2, #2]
 800168c:	2500      	movs	r5, #0
 800168e:	2a5a      	cmp	r2, #90	; 0x5a
 8001690:	d1b5      	bne.n	80015fe <d_expr_primary+0x36>
 8001692:	e7a6      	b.n	80015e2 <d_expr_primary+0x1a>
 8001694:	1b80      	subs	r0, r0, r6
 8001696:	6962      	ldr	r2, [r4, #20]
 8001698:	69a3      	ldr	r3, [r4, #24]
 800169a:	429a      	cmp	r2, r3
 800169c:	da18      	bge.n	80016d0 <d_expr_primary+0x108>
 800169e:	0097      	lsls	r7, r2, #2
 80016a0:	6923      	ldr	r3, [r4, #16]
 80016a2:	18bf      	adds	r7, r7, r2
 80016a4:	00bf      	lsls	r7, r7, #2
 80016a6:	19db      	adds	r3, r3, r7
 80016a8:	2700      	movs	r7, #0
 80016aa:	3201      	adds	r2, #1
 80016ac:	605f      	str	r7, [r3, #4]
 80016ae:	609f      	str	r7, [r3, #8]
 80016b0:	6162      	str	r2, [r4, #20]
 80016b2:	2800      	cmp	r0, #0
 80016b4:	dd0c      	ble.n	80016d0 <d_expr_primary+0x108>
 80016b6:	605f      	str	r7, [r3, #4]
 80016b8:	609f      	str	r7, [r3, #8]
 80016ba:	701f      	strb	r7, [r3, #0]
 80016bc:	60de      	str	r6, [r3, #12]
 80016be:	6118      	str	r0, [r3, #16]
 80016c0:	002a      	movs	r2, r5
 80016c2:	0020      	movs	r0, r4
 80016c4:	f7fe fd1c 	bl	8000100 <d_make_comp>
 80016c8:	68e3      	ldr	r3, [r4, #12]
 80016ca:	0005      	movs	r5, r0
 80016cc:	781a      	ldrb	r2, [r3, #0]
 80016ce:	e796      	b.n	80015fe <d_expr_primary+0x36>
 80016d0:	2300      	movs	r3, #0
 80016d2:	e7f5      	b.n	80016c0 <d_expr_primary+0xf8>
 80016d4:	2000      	movs	r0, #0
 80016d6:	e7de      	b.n	8001696 <d_expr_primary+0xce>
 80016d8:	3601      	adds	r6, #1
 80016da:	60e6      	str	r6, [r4, #12]
 80016dc:	e7ae      	b.n	800163c <d_expr_primary+0x74>
 80016de:	46c0      	nop			; (mov r8, r8)
 80016e0:	0800fc0c 	.word	0x0800fc0c

080016e4 <d_template_arg>:
 80016e4:	b570      	push	{r4, r5, r6, lr}
 80016e6:	68c2      	ldr	r2, [r0, #12]
 80016e8:	0004      	movs	r4, r0
 80016ea:	7813      	ldrb	r3, [r2, #0]
 80016ec:	2b4c      	cmp	r3, #76	; 0x4c
 80016ee:	d01d      	beq.n	800172c <d_template_arg+0x48>
 80016f0:	d807      	bhi.n	8001702 <d_template_arg+0x1e>
 80016f2:	3b49      	subs	r3, #73	; 0x49
 80016f4:	2b01      	cmp	r3, #1
 80016f6:	d815      	bhi.n	8001724 <d_template_arg+0x40>
 80016f8:	3201      	adds	r2, #1
 80016fa:	60c2      	str	r2, [r0, #12]
 80016fc:	f000 f81c 	bl	8001738 <d_template_args_1>
 8001700:	bd70      	pop	{r4, r5, r6, pc}
 8001702:	2b58      	cmp	r3, #88	; 0x58
 8001704:	d10e      	bne.n	8001724 <d_template_arg+0x40>
 8001706:	3201      	adds	r2, #1
 8001708:	3b57      	subs	r3, #87	; 0x57
 800170a:	6b05      	ldr	r5, [r0, #48]	; 0x30
 800170c:	60c2      	str	r2, [r0, #12]
 800170e:	6303      	str	r3, [r0, #48]	; 0x30
 8001710:	f000 f8ba 	bl	8001888 <d_expression_1>
 8001714:	68e3      	ldr	r3, [r4, #12]
 8001716:	6325      	str	r5, [r4, #48]	; 0x30
 8001718:	781a      	ldrb	r2, [r3, #0]
 800171a:	2a45      	cmp	r2, #69	; 0x45
 800171c:	d109      	bne.n	8001732 <d_template_arg+0x4e>
 800171e:	3301      	adds	r3, #1
 8001720:	60e3      	str	r3, [r4, #12]
 8001722:	e7ed      	b.n	8001700 <d_template_arg+0x1c>
 8001724:	0020      	movs	r0, r4
 8001726:	f7ff f919 	bl	800095c <d_type>
 800172a:	e7e9      	b.n	8001700 <d_template_arg+0x1c>
 800172c:	f7ff ff4c 	bl	80015c8 <d_expr_primary>
 8001730:	e7e6      	b.n	8001700 <d_template_arg+0x1c>
 8001732:	2000      	movs	r0, #0
 8001734:	e7e4      	b.n	8001700 <d_template_arg+0x1c>
 8001736:	46c0      	nop			; (mov r8, r8)

08001738 <d_template_args_1>:
 8001738:	b570      	push	{r4, r5, r6, lr}
 800173a:	68c3      	ldr	r3, [r0, #12]
 800173c:	0004      	movs	r4, r0
 800173e:	781a      	ldrb	r2, [r3, #0]
 8001740:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8001742:	b082      	sub	sp, #8
 8001744:	2a45      	cmp	r2, #69	; 0x45
 8001746:	d01e      	beq.n	8001786 <d_template_args_1+0x4e>
 8001748:	2300      	movs	r3, #0
 800174a:	ad01      	add	r5, sp, #4
 800174c:	9301      	str	r3, [sp, #4]
 800174e:	e00d      	b.n	800176c <d_template_args_1+0x34>
 8001750:	2300      	movs	r3, #0
 8001752:	212f      	movs	r1, #47	; 0x2f
 8001754:	0020      	movs	r0, r4
 8001756:	f7fe fcd3 	bl	8000100 <d_make_comp>
 800175a:	6028      	str	r0, [r5, #0]
 800175c:	2800      	cmp	r0, #0
 800175e:	d00a      	beq.n	8001776 <d_template_args_1+0x3e>
 8001760:	68e3      	ldr	r3, [r4, #12]
 8001762:	3010      	adds	r0, #16
 8001764:	781a      	ldrb	r2, [r3, #0]
 8001766:	0005      	movs	r5, r0
 8001768:	2a45      	cmp	r2, #69	; 0x45
 800176a:	d007      	beq.n	800177c <d_template_args_1+0x44>
 800176c:	0020      	movs	r0, r4
 800176e:	f7ff ffb9 	bl	80016e4 <d_template_arg>
 8001772:	1e02      	subs	r2, r0, #0
 8001774:	d1ec      	bne.n	8001750 <d_template_args_1+0x18>
 8001776:	2000      	movs	r0, #0
 8001778:	b002      	add	sp, #8
 800177a:	bd70      	pop	{r4, r5, r6, pc}
 800177c:	3301      	adds	r3, #1
 800177e:	9801      	ldr	r0, [sp, #4]
 8001780:	60e3      	str	r3, [r4, #12]
 8001782:	62a6      	str	r6, [r4, #40]	; 0x28
 8001784:	e7f8      	b.n	8001778 <d_template_args_1+0x40>
 8001786:	3301      	adds	r3, #1
 8001788:	2200      	movs	r2, #0
 800178a:	212f      	movs	r1, #47	; 0x2f
 800178c:	60c3      	str	r3, [r0, #12]
 800178e:	2300      	movs	r3, #0
 8001790:	f7fe fcb6 	bl	8000100 <d_make_comp>
 8001794:	e7f0      	b.n	8001778 <d_template_args_1+0x40>
 8001796:	46c0      	nop			; (mov r8, r8)

08001798 <d_prefix>:
 8001798:	b5f0      	push	{r4, r5, r6, r7, lr}
 800179a:	46c6      	mov	lr, r8
 800179c:	b500      	push	{lr}
 800179e:	68c2      	ldr	r2, [r0, #12]
 80017a0:	0006      	movs	r6, r0
 80017a2:	7814      	ldrb	r4, [r2, #0]
 80017a4:	000f      	movs	r7, r1
 80017a6:	2c00      	cmp	r4, #0
 80017a8:	d028      	beq.n	80017fc <d_prefix+0x64>
 80017aa:	4b36      	ldr	r3, [pc, #216]	; (8001884 <d_prefix+0xec>)
 80017ac:	2500      	movs	r5, #0
 80017ae:	4698      	mov	r8, r3
 80017b0:	0023      	movs	r3, r4
 80017b2:	3b30      	subs	r3, #48	; 0x30
 80017b4:	b2db      	uxtb	r3, r3
 80017b6:	2b4a      	cmp	r3, #74	; 0x4a
 80017b8:	d820      	bhi.n	80017fc <d_prefix+0x64>
 80017ba:	4641      	mov	r1, r8
 80017bc:	009b      	lsls	r3, r3, #2
 80017be:	58cb      	ldr	r3, [r1, r3]
 80017c0:	469f      	mov	pc, r3
 80017c2:	0030      	movs	r0, r6
 80017c4:	f7ff fd80 	bl	80012c8 <d_unqualified_name>
 80017c8:	0003      	movs	r3, r0
 80017ca:	2d00      	cmp	r5, #0
 80017cc:	d153      	bne.n	8001876 <d_prefix+0xde>
 80017ce:	0005      	movs	r5, r0
 80017d0:	2c53      	cmp	r4, #83	; 0x53
 80017d2:	d042      	beq.n	800185a <d_prefix+0xc2>
 80017d4:	68f2      	ldr	r2, [r6, #12]
 80017d6:	7814      	ldrb	r4, [r2, #0]
 80017d8:	2c45      	cmp	r4, #69	; 0x45
 80017da:	d010      	beq.n	80017fe <d_prefix+0x66>
 80017dc:	2f00      	cmp	r7, #0
 80017de:	d00b      	beq.n	80017f8 <d_prefix+0x60>
 80017e0:	2d00      	cmp	r5, #0
 80017e2:	d00b      	beq.n	80017fc <d_prefix+0x64>
 80017e4:	6a33      	ldr	r3, [r6, #32]
 80017e6:	6a71      	ldr	r1, [r6, #36]	; 0x24
 80017e8:	428b      	cmp	r3, r1
 80017ea:	da07      	bge.n	80017fc <d_prefix+0x64>
 80017ec:	69f1      	ldr	r1, [r6, #28]
 80017ee:	0098      	lsls	r0, r3, #2
 80017f0:	3301      	adds	r3, #1
 80017f2:	5045      	str	r5, [r0, r1]
 80017f4:	6233      	str	r3, [r6, #32]
 80017f6:	7814      	ldrb	r4, [r2, #0]
 80017f8:	2c00      	cmp	r4, #0
 80017fa:	d1d9      	bne.n	80017b0 <d_prefix+0x18>
 80017fc:	2500      	movs	r5, #0
 80017fe:	0028      	movs	r0, r5
 8001800:	bc80      	pop	{r7}
 8001802:	46b8      	mov	r8, r7
 8001804:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001806:	0030      	movs	r0, r6
 8001808:	f7fe fefa 	bl	8000600 <d_template_param>
 800180c:	0003      	movs	r3, r0
 800180e:	2d00      	cmp	r5, #0
 8001810:	d131      	bne.n	8001876 <d_prefix+0xde>
 8001812:	001d      	movs	r5, r3
 8001814:	e7de      	b.n	80017d4 <d_prefix+0x3c>
 8001816:	2101      	movs	r1, #1
 8001818:	0030      	movs	r0, r6
 800181a:	f7fe ffd7 	bl	80007cc <d_substitution>
 800181e:	0003      	movs	r3, r0
 8001820:	2d00      	cmp	r5, #0
 8001822:	d128      	bne.n	8001876 <d_prefix+0xde>
 8001824:	68f2      	ldr	r2, [r6, #12]
 8001826:	001d      	movs	r5, r3
 8001828:	7814      	ldrb	r4, [r2, #0]
 800182a:	e7e5      	b.n	80017f8 <d_prefix+0x60>
 800182c:	2d00      	cmp	r5, #0
 800182e:	d0e5      	beq.n	80017fc <d_prefix+0x64>
 8001830:	1c53      	adds	r3, r2, #1
 8001832:	60f3      	str	r3, [r6, #12]
 8001834:	7854      	ldrb	r4, [r2, #1]
 8001836:	001a      	movs	r2, r3
 8001838:	e7de      	b.n	80017f8 <d_prefix+0x60>
 800183a:	2d00      	cmp	r5, #0
 800183c:	d0de      	beq.n	80017fc <d_prefix+0x64>
 800183e:	3201      	adds	r2, #1
 8001840:	0030      	movs	r0, r6
 8001842:	60f2      	str	r2, [r6, #12]
 8001844:	f7ff ff78 	bl	8001738 <d_template_args_1>
 8001848:	2104      	movs	r1, #4
 800184a:	0003      	movs	r3, r0
 800184c:	002a      	movs	r2, r5
 800184e:	0030      	movs	r0, r6
 8001850:	f7fe fc56 	bl	8000100 <d_make_comp>
 8001854:	0005      	movs	r5, r0
 8001856:	2c53      	cmp	r4, #83	; 0x53
 8001858:	d1bc      	bne.n	80017d4 <d_prefix+0x3c>
 800185a:	68f2      	ldr	r2, [r6, #12]
 800185c:	7814      	ldrb	r4, [r2, #0]
 800185e:	e7cb      	b.n	80017f8 <d_prefix+0x60>
 8001860:	7853      	ldrb	r3, [r2, #1]
 8001862:	2220      	movs	r2, #32
 8001864:	0030      	movs	r0, r6
 8001866:	4393      	bics	r3, r2
 8001868:	2b54      	cmp	r3, #84	; 0x54
 800186a:	d006      	beq.n	800187a <d_prefix+0xe2>
 800186c:	f7ff fd2c 	bl	80012c8 <d_unqualified_name>
 8001870:	0003      	movs	r3, r0
 8001872:	2d00      	cmp	r5, #0
 8001874:	d0cd      	beq.n	8001812 <d_prefix+0x7a>
 8001876:	2101      	movs	r1, #1
 8001878:	e7e8      	b.n	800184c <d_prefix+0xb4>
 800187a:	f7ff f86f 	bl	800095c <d_type>
 800187e:	0003      	movs	r3, r0
 8001880:	e7c5      	b.n	800180e <d_prefix+0x76>
 8001882:	46c0      	nop			; (mov r8, r8)
 8001884:	0800eaf0 	.word	0x0800eaf0

08001888 <d_expression_1>:
 8001888:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800188a:	68c2      	ldr	r2, [r0, #12]
 800188c:	0004      	movs	r4, r0
 800188e:	7813      	ldrb	r3, [r2, #0]
 8001890:	2b4c      	cmp	r3, #76	; 0x4c
 8001892:	d100      	bne.n	8001896 <d_expression_1+0xe>
 8001894:	e090      	b.n	80019b8 <d_expression_1+0x130>
 8001896:	2b54      	cmp	r3, #84	; 0x54
 8001898:	d100      	bne.n	800189c <d_expression_1+0x14>
 800189a:	e091      	b.n	80019c0 <d_expression_1+0x138>
 800189c:	2b73      	cmp	r3, #115	; 0x73
 800189e:	d05d      	beq.n	800195c <d_expression_1+0xd4>
 80018a0:	2b66      	cmp	r3, #102	; 0x66
 80018a2:	d02d      	beq.n	8001900 <d_expression_1+0x78>
 80018a4:	0019      	movs	r1, r3
 80018a6:	3930      	subs	r1, #48	; 0x30
 80018a8:	2909      	cmp	r1, #9
 80018aa:	d80c      	bhi.n	80018c6 <d_expression_1+0x3e>
 80018ac:	0020      	movs	r0, r4
 80018ae:	f7ff fd0b 	bl	80012c8 <d_unqualified_name>
 80018b2:	1e05      	subs	r5, r0, #0
 80018b4:	d100      	bne.n	80018b8 <d_expression_1+0x30>
 80018b6:	e07d      	b.n	80019b4 <d_expression_1+0x12c>
 80018b8:	68e3      	ldr	r3, [r4, #12]
 80018ba:	781a      	ldrb	r2, [r3, #0]
 80018bc:	2a49      	cmp	r2, #73	; 0x49
 80018be:	d100      	bne.n	80018c2 <d_expression_1+0x3a>
 80018c0:	e082      	b.n	80019c8 <d_expression_1+0x140>
 80018c2:	0028      	movs	r0, r5
 80018c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80018c6:	2b6f      	cmp	r3, #111	; 0x6f
 80018c8:	d06c      	beq.n	80019a4 <d_expression_1+0x11c>
 80018ca:	2b69      	cmp	r3, #105	; 0x69
 80018cc:	d000      	beq.n	80018d0 <d_expression_1+0x48>
 80018ce:	e088      	b.n	80019e2 <d_expression_1+0x15a>
 80018d0:	7853      	ldrb	r3, [r2, #1]
 80018d2:	2b6c      	cmp	r3, #108	; 0x6c
 80018d4:	d149      	bne.n	800196a <d_expression_1+0xe2>
 80018d6:	2500      	movs	r5, #0
 80018d8:	3202      	adds	r2, #2
 80018da:	60e2      	str	r2, [r4, #12]
 80018dc:	7813      	ldrb	r3, [r2, #0]
 80018de:	2b00      	cmp	r3, #0
 80018e0:	d068      	beq.n	80019b4 <d_expression_1+0x12c>
 80018e2:	7853      	ldrb	r3, [r2, #1]
 80018e4:	2b00      	cmp	r3, #0
 80018e6:	d065      	beq.n	80019b4 <d_expression_1+0x12c>
 80018e8:	2145      	movs	r1, #69	; 0x45
 80018ea:	0020      	movs	r0, r4
 80018ec:	f000 fa5a 	bl	8001da4 <d_exprlist>
 80018f0:	002a      	movs	r2, r5
 80018f2:	0003      	movs	r3, r0
 80018f4:	2131      	movs	r1, #49	; 0x31
 80018f6:	0020      	movs	r0, r4
 80018f8:	f7fe fc02 	bl	8000100 <d_make_comp>
 80018fc:	0005      	movs	r5, r0
 80018fe:	e7e0      	b.n	80018c2 <d_expression_1+0x3a>
 8001900:	7853      	ldrb	r3, [r2, #1]
 8001902:	2b70      	cmp	r3, #112	; 0x70
 8001904:	d131      	bne.n	800196a <d_expression_1+0xe2>
 8001906:	1c93      	adds	r3, r2, #2
 8001908:	60c3      	str	r3, [r0, #12]
 800190a:	7893      	ldrb	r3, [r2, #2]
 800190c:	2b54      	cmp	r3, #84	; 0x54
 800190e:	d100      	bne.n	8001912 <d_expression_1+0x8a>
 8001910:	e136      	b.n	8001b80 <d_expression_1+0x2f8>
 8001912:	2b5f      	cmp	r3, #95	; 0x5f
 8001914:	d100      	bne.n	8001918 <d_expression_1+0x90>
 8001916:	e0c0      	b.n	8001a9a <d_expression_1+0x212>
 8001918:	2b6e      	cmp	r3, #110	; 0x6e
 800191a:	d04b      	beq.n	80019b4 <d_expression_1+0x12c>
 800191c:	f7fe fc50 	bl	80001c0 <d_number>
 8001920:	1c41      	adds	r1, r0, #1
 8001922:	d447      	bmi.n	80019b4 <d_expression_1+0x12c>
 8001924:	68e3      	ldr	r3, [r4, #12]
 8001926:	781a      	ldrb	r2, [r3, #0]
 8001928:	2a5f      	cmp	r2, #95	; 0x5f
 800192a:	d143      	bne.n	80019b4 <d_expression_1+0x12c>
 800192c:	3301      	adds	r3, #1
 800192e:	60e3      	str	r3, [r4, #12]
 8001930:	4bbf      	ldr	r3, [pc, #764]	; (8001c30 <d_expression_1+0x3a8>)
 8001932:	3002      	adds	r0, #2
 8001934:	4299      	cmp	r1, r3
 8001936:	d03d      	beq.n	80019b4 <d_expression_1+0x12c>
 8001938:	6963      	ldr	r3, [r4, #20]
 800193a:	69a2      	ldr	r2, [r4, #24]
 800193c:	4293      	cmp	r3, r2
 800193e:	da39      	bge.n	80019b4 <d_expression_1+0x12c>
 8001940:	009a      	lsls	r2, r3, #2
 8001942:	6925      	ldr	r5, [r4, #16]
 8001944:	18d2      	adds	r2, r2, r3
 8001946:	0092      	lsls	r2, r2, #2
 8001948:	18ad      	adds	r5, r5, r2
 800194a:	2200      	movs	r2, #0
 800194c:	3301      	adds	r3, #1
 800194e:	606a      	str	r2, [r5, #4]
 8001950:	60aa      	str	r2, [r5, #8]
 8001952:	6163      	str	r3, [r4, #20]
 8001954:	2306      	movs	r3, #6
 8001956:	60e8      	str	r0, [r5, #12]
 8001958:	702b      	strb	r3, [r5, #0]
 800195a:	e7b2      	b.n	80018c2 <d_expression_1+0x3a>
 800195c:	7853      	ldrb	r3, [r2, #1]
 800195e:	2b72      	cmp	r3, #114	; 0x72
 8001960:	d100      	bne.n	8001964 <d_expression_1+0xdc>
 8001962:	e0df      	b.n	8001b24 <d_expression_1+0x29c>
 8001964:	2b70      	cmp	r3, #112	; 0x70
 8001966:	d100      	bne.n	800196a <d_expression_1+0xe2>
 8001968:	e0fe      	b.n	8001b68 <d_expression_1+0x2e0>
 800196a:	0020      	movs	r0, r4
 800196c:	f7ff fc1c 	bl	80011a8 <d_operator_name>
 8001970:	1e05      	subs	r5, r0, #0
 8001972:	d01f      	beq.n	80019b4 <d_expression_1+0x12c>
 8001974:	7803      	ldrb	r3, [r0, #0]
 8001976:	2b32      	cmp	r3, #50	; 0x32
 8001978:	d040      	beq.n	80019fc <d_expression_1+0x174>
 800197a:	2b34      	cmp	r3, #52	; 0x34
 800197c:	d100      	bne.n	8001980 <d_expression_1+0xf8>
 800197e:	e1b3      	b.n	8001ce8 <d_expression_1+0x460>
 8001980:	d818      	bhi.n	80019b4 <d_expression_1+0x12c>
 8001982:	2b33      	cmp	r3, #51	; 0x33
 8001984:	d116      	bne.n	80019b4 <d_expression_1+0x12c>
 8001986:	68c3      	ldr	r3, [r0, #12]
 8001988:	2b02      	cmp	r3, #2
 800198a:	d013      	beq.n	80019b4 <d_expression_1+0x12c>
 800198c:	dc12      	bgt.n	80019b4 <d_expression_1+0x12c>
 800198e:	2b00      	cmp	r3, #0
 8001990:	d000      	beq.n	8001994 <d_expression_1+0x10c>
 8001992:	e099      	b.n	8001ac8 <d_expression_1+0x240>
 8001994:	002a      	movs	r2, r5
 8001996:	2300      	movs	r3, #0
 8001998:	2136      	movs	r1, #54	; 0x36
 800199a:	0020      	movs	r0, r4
 800199c:	f7fe fbb0 	bl	8000100 <d_make_comp>
 80019a0:	0005      	movs	r5, r0
 80019a2:	e78e      	b.n	80018c2 <d_expression_1+0x3a>
 80019a4:	7853      	ldrb	r3, [r2, #1]
 80019a6:	2b6e      	cmp	r3, #110	; 0x6e
 80019a8:	d1df      	bne.n	800196a <d_expression_1+0xe2>
 80019aa:	3202      	adds	r2, #2
 80019ac:	60c2      	str	r2, [r0, #12]
 80019ae:	e77d      	b.n	80018ac <d_expression_1+0x24>
 80019b0:	2f00      	cmp	r7, #0
 80019b2:	d0ef      	beq.n	8001994 <d_expression_1+0x10c>
 80019b4:	2500      	movs	r5, #0
 80019b6:	e784      	b.n	80018c2 <d_expression_1+0x3a>
 80019b8:	f7ff fe06 	bl	80015c8 <d_expr_primary>
 80019bc:	0005      	movs	r5, r0
 80019be:	e780      	b.n	80018c2 <d_expression_1+0x3a>
 80019c0:	f7fe fe1e 	bl	8000600 <d_template_param>
 80019c4:	0005      	movs	r5, r0
 80019c6:	e77c      	b.n	80018c2 <d_expression_1+0x3a>
 80019c8:	3301      	adds	r3, #1
 80019ca:	60e3      	str	r3, [r4, #12]
 80019cc:	0020      	movs	r0, r4
 80019ce:	f7ff feb3 	bl	8001738 <d_template_args_1>
 80019d2:	002a      	movs	r2, r5
 80019d4:	0003      	movs	r3, r0
 80019d6:	2104      	movs	r1, #4
 80019d8:	0020      	movs	r0, r4
 80019da:	f7fe fb91 	bl	8000100 <d_make_comp>
 80019de:	0005      	movs	r5, r0
 80019e0:	e76f      	b.n	80018c2 <d_expression_1+0x3a>
 80019e2:	2b74      	cmp	r3, #116	; 0x74
 80019e4:	d15d      	bne.n	8001aa2 <d_expression_1+0x21a>
 80019e6:	7853      	ldrb	r3, [r2, #1]
 80019e8:	2b6c      	cmp	r3, #108	; 0x6c
 80019ea:	d1be      	bne.n	800196a <d_expression_1+0xe2>
 80019ec:	3202      	adds	r2, #2
 80019ee:	60e2      	str	r2, [r4, #12]
 80019f0:	0020      	movs	r0, r4
 80019f2:	f7fe ffb3 	bl	800095c <d_type>
 80019f6:	68e2      	ldr	r2, [r4, #12]
 80019f8:	0005      	movs	r5, r0
 80019fa:	e76f      	b.n	80018dc <d_expression_1+0x54>
 80019fc:	68c1      	ldr	r1, [r0, #12]
 80019fe:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8001a00:	688a      	ldr	r2, [r1, #8]
 8001a02:	680e      	ldr	r6, [r1, #0]
 8001a04:	3a02      	subs	r2, #2
 8001a06:	189b      	adds	r3, r3, r2
 8001a08:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001a0a:	7833      	ldrb	r3, [r6, #0]
 8001a0c:	2b73      	cmp	r3, #115	; 0x73
 8001a0e:	d033      	beq.n	8001a78 <d_expression_1+0x1f0>
 8001a10:	68cf      	ldr	r7, [r1, #12]
 8001a12:	2f01      	cmp	r7, #1
 8001a14:	d060      	beq.n	8001ad8 <d_expression_1+0x250>
 8001a16:	ddcb      	ble.n	80019b0 <d_expression_1+0x128>
 8001a18:	2f02      	cmp	r7, #2
 8001a1a:	d100      	bne.n	8001a1e <d_expression_1+0x196>
 8001a1c:	e0d2      	b.n	8001bc4 <d_expression_1+0x33c>
 8001a1e:	2f03      	cmp	r7, #3
 8001a20:	d1c8      	bne.n	80019b4 <d_expression_1+0x12c>
 8001a22:	2b71      	cmp	r3, #113	; 0x71
 8001a24:	d000      	beq.n	8001a28 <d_expression_1+0x1a0>
 8001a26:	e107      	b.n	8001c38 <d_expression_1+0x3b0>
 8001a28:	7872      	ldrb	r2, [r6, #1]
 8001a2a:	2a75      	cmp	r2, #117	; 0x75
 8001a2c:	d000      	beq.n	8001a30 <d_expression_1+0x1a8>
 8001a2e:	e103      	b.n	8001c38 <d_expression_1+0x3b0>
 8001a30:	78b2      	ldrb	r2, [r6, #2]
 8001a32:	2a00      	cmp	r2, #0
 8001a34:	d000      	beq.n	8001a38 <d_expression_1+0x1b0>
 8001a36:	e0ff      	b.n	8001c38 <d_expression_1+0x3b0>
 8001a38:	0020      	movs	r0, r4
 8001a3a:	f7ff ff25 	bl	8001888 <d_expression_1>
 8001a3e:	0006      	movs	r6, r0
 8001a40:	0020      	movs	r0, r4
 8001a42:	f7ff ff21 	bl	8001888 <d_expression_1>
 8001a46:	0007      	movs	r7, r0
 8001a48:	0020      	movs	r0, r4
 8001a4a:	f7ff ff1d 	bl	8001888 <d_expression_1>
 8001a4e:	1e03      	subs	r3, r0, #0
 8001a50:	d0b0      	beq.n	80019b4 <d_expression_1+0x12c>
 8001a52:	003a      	movs	r2, r7
 8001a54:	213c      	movs	r1, #60	; 0x3c
 8001a56:	0020      	movs	r0, r4
 8001a58:	f7fe fb52 	bl	8000100 <d_make_comp>
 8001a5c:	0032      	movs	r2, r6
 8001a5e:	0003      	movs	r3, r0
 8001a60:	213b      	movs	r1, #59	; 0x3b
 8001a62:	0020      	movs	r0, r4
 8001a64:	f7fe fb4c 	bl	8000100 <d_make_comp>
 8001a68:	002a      	movs	r2, r5
 8001a6a:	0003      	movs	r3, r0
 8001a6c:	213a      	movs	r1, #58	; 0x3a
 8001a6e:	0020      	movs	r0, r4
 8001a70:	f7fe fb46 	bl	8000100 <d_make_comp>
 8001a74:	0005      	movs	r5, r0
 8001a76:	e724      	b.n	80018c2 <d_expression_1+0x3a>
 8001a78:	7872      	ldrb	r2, [r6, #1]
 8001a7a:	2a74      	cmp	r2, #116	; 0x74
 8001a7c:	d1c8      	bne.n	8001a10 <d_expression_1+0x188>
 8001a7e:	78b2      	ldrb	r2, [r6, #2]
 8001a80:	2a00      	cmp	r2, #0
 8001a82:	d1c5      	bne.n	8001a10 <d_expression_1+0x188>
 8001a84:	0020      	movs	r0, r4
 8001a86:	f7fe ff69 	bl	800095c <d_type>
 8001a8a:	0003      	movs	r3, r0
 8001a8c:	002a      	movs	r2, r5
 8001a8e:	2137      	movs	r1, #55	; 0x37
 8001a90:	0020      	movs	r0, r4
 8001a92:	f7fe fb35 	bl	8000100 <d_make_comp>
 8001a96:	0005      	movs	r5, r0
 8001a98:	e713      	b.n	80018c2 <d_expression_1+0x3a>
 8001a9a:	3203      	adds	r2, #3
 8001a9c:	60c2      	str	r2, [r0, #12]
 8001a9e:	2001      	movs	r0, #1
 8001aa0:	e74a      	b.n	8001938 <d_expression_1+0xb0>
 8001aa2:	2b75      	cmp	r3, #117	; 0x75
 8001aa4:	d000      	beq.n	8001aa8 <d_expression_1+0x220>
 8001aa6:	e760      	b.n	800196a <d_expression_1+0xe2>
 8001aa8:	3201      	adds	r2, #1
 8001aaa:	60c2      	str	r2, [r0, #12]
 8001aac:	f7fe fe1c 	bl	80006e8 <d_source_name>
 8001ab0:	0005      	movs	r5, r0
 8001ab2:	0020      	movs	r0, r4
 8001ab4:	f7ff fe40 	bl	8001738 <d_template_args_1>
 8001ab8:	002a      	movs	r2, r5
 8001aba:	0003      	movs	r3, r0
 8001abc:	213f      	movs	r1, #63	; 0x3f
 8001abe:	0020      	movs	r0, r4
 8001ac0:	f7fe fb1e 	bl	8000100 <d_make_comp>
 8001ac4:	0005      	movs	r5, r0
 8001ac6:	e6fc      	b.n	80018c2 <d_expression_1+0x3a>
 8001ac8:	2b01      	cmp	r3, #1
 8001aca:	d000      	beq.n	8001ace <d_expression_1+0x246>
 8001acc:	e772      	b.n	80019b4 <d_expression_1+0x12c>
 8001ace:	0020      	movs	r0, r4
 8001ad0:	f7ff feda 	bl	8001888 <d_expression_1>
 8001ad4:	0003      	movs	r3, r0
 8001ad6:	e7d9      	b.n	8001a8c <d_expression_1+0x204>
 8001ad8:	7832      	ldrb	r2, [r6, #0]
 8001ada:	2a70      	cmp	r2, #112	; 0x70
 8001adc:	d016      	beq.n	8001b0c <d_expression_1+0x284>
 8001ade:	2a6d      	cmp	r2, #109	; 0x6d
 8001ae0:	d014      	beq.n	8001b0c <d_expression_1+0x284>
 8001ae2:	2700      	movs	r7, #0
 8001ae4:	2b73      	cmp	r3, #115	; 0x73
 8001ae6:	d14f      	bne.n	8001b88 <d_expression_1+0x300>
 8001ae8:	7873      	ldrb	r3, [r6, #1]
 8001aea:	2b50      	cmp	r3, #80	; 0x50
 8001aec:	d14c      	bne.n	8001b88 <d_expression_1+0x300>
 8001aee:	78b3      	ldrb	r3, [r6, #2]
 8001af0:	2b00      	cmp	r3, #0
 8001af2:	d149      	bne.n	8001b88 <d_expression_1+0x300>
 8001af4:	0020      	movs	r0, r4
 8001af6:	f7ff fe1f 	bl	8001738 <d_template_args_1>
 8001afa:	0003      	movs	r3, r0
 8001afc:	2f00      	cmp	r7, #0
 8001afe:	d0c5      	beq.n	8001a8c <d_expression_1+0x204>
 8001b00:	001a      	movs	r2, r3
 8001b02:	2139      	movs	r1, #57	; 0x39
 8001b04:	0020      	movs	r0, r4
 8001b06:	f7fe fafb 	bl	8000100 <d_make_comp>
 8001b0a:	e7be      	b.n	8001a8a <d_expression_1+0x202>
 8001b0c:	7871      	ldrb	r1, [r6, #1]
 8001b0e:	4291      	cmp	r1, r2
 8001b10:	d1e7      	bne.n	8001ae2 <d_expression_1+0x25a>
 8001b12:	68e2      	ldr	r2, [r4, #12]
 8001b14:	7811      	ldrb	r1, [r2, #0]
 8001b16:	295f      	cmp	r1, #95	; 0x5f
 8001b18:	d1e4      	bne.n	8001ae4 <d_expression_1+0x25c>
 8001b1a:	3201      	adds	r2, #1
 8001b1c:	60e2      	str	r2, [r4, #12]
 8001b1e:	2700      	movs	r7, #0
 8001b20:	7833      	ldrb	r3, [r6, #0]
 8001b22:	e7df      	b.n	8001ae4 <d_expression_1+0x25c>
 8001b24:	1c93      	adds	r3, r2, #2
 8001b26:	60c3      	str	r3, [r0, #12]
 8001b28:	7893      	ldrb	r3, [r2, #2]
 8001b2a:	6b82      	ldr	r2, [r0, #56]	; 0x38
 8001b2c:	2a00      	cmp	r2, #0
 8001b2e:	d006      	beq.n	8001b3e <d_expression_1+0x2b6>
 8001b30:	2b55      	cmp	r3, #85	; 0x55
 8001b32:	d843      	bhi.n	8001bbc <d_expression_1+0x334>
 8001b34:	2b42      	cmp	r3, #66	; 0x42
 8001b36:	d82c      	bhi.n	8001b92 <d_expression_1+0x30a>
 8001b38:	3b30      	subs	r3, #48	; 0x30
 8001b3a:	2b09      	cmp	r3, #9
 8001b3c:	d92f      	bls.n	8001b9e <d_expression_1+0x316>
 8001b3e:	0020      	movs	r0, r4
 8001b40:	f7fe ff0c 	bl	800095c <d_type>
 8001b44:	0006      	movs	r6, r0
 8001b46:	0020      	movs	r0, r4
 8001b48:	f7ff fbbe 	bl	80012c8 <d_unqualified_name>
 8001b4c:	68e3      	ldr	r3, [r4, #12]
 8001b4e:	0005      	movs	r5, r0
 8001b50:	781a      	ldrb	r2, [r3, #0]
 8001b52:	2a49      	cmp	r2, #73	; 0x49
 8001b54:	d100      	bne.n	8001b58 <d_expression_1+0x2d0>
 8001b56:	e0d4      	b.n	8001d02 <d_expression_1+0x47a>
 8001b58:	002b      	movs	r3, r5
 8001b5a:	0032      	movs	r2, r6
 8001b5c:	2101      	movs	r1, #1
 8001b5e:	0020      	movs	r0, r4
 8001b60:	f7fe face 	bl	8000100 <d_make_comp>
 8001b64:	0005      	movs	r5, r0
 8001b66:	e6ac      	b.n	80018c2 <d_expression_1+0x3a>
 8001b68:	3202      	adds	r2, #2
 8001b6a:	60c2      	str	r2, [r0, #12]
 8001b6c:	f7ff fe8c 	bl	8001888 <d_expression_1>
 8001b70:	2300      	movs	r3, #0
 8001b72:	0002      	movs	r2, r0
 8001b74:	214c      	movs	r1, #76	; 0x4c
 8001b76:	0020      	movs	r0, r4
 8001b78:	f7fe fac2 	bl	8000100 <d_make_comp>
 8001b7c:	0005      	movs	r5, r0
 8001b7e:	e6a0      	b.n	80018c2 <d_expression_1+0x3a>
 8001b80:	3203      	adds	r2, #3
 8001b82:	60c2      	str	r2, [r0, #12]
 8001b84:	2000      	movs	r0, #0
 8001b86:	e6d7      	b.n	8001938 <d_expression_1+0xb0>
 8001b88:	0020      	movs	r0, r4
 8001b8a:	f7ff fe7d 	bl	8001888 <d_expression_1>
 8001b8e:	0003      	movs	r3, r0
 8001b90:	e7b4      	b.n	8001afc <d_expression_1+0x274>
 8001b92:	4a28      	ldr	r2, [pc, #160]	; (8001c34 <d_expression_1+0x3ac>)
 8001b94:	3b43      	subs	r3, #67	; 0x43
 8001b96:	b2db      	uxtb	r3, r3
 8001b98:	40da      	lsrs	r2, r3
 8001b9a:	07d2      	lsls	r2, r2, #31
 8001b9c:	d5cf      	bpl.n	8001b3e <d_expression_1+0x2b6>
 8001b9e:	2301      	movs	r3, #1
 8001ba0:	425b      	negs	r3, r3
 8001ba2:	63a3      	str	r3, [r4, #56]	; 0x38
 8001ba4:	2100      	movs	r1, #0
 8001ba6:	0020      	movs	r0, r4
 8001ba8:	f7ff fdf6 	bl	8001798 <d_prefix>
 8001bac:	68e3      	ldr	r3, [r4, #12]
 8001bae:	0006      	movs	r6, r0
 8001bb0:	781a      	ldrb	r2, [r3, #0]
 8001bb2:	2a45      	cmp	r2, #69	; 0x45
 8001bb4:	d1c7      	bne.n	8001b46 <d_expression_1+0x2be>
 8001bb6:	3301      	adds	r3, #1
 8001bb8:	60e3      	str	r3, [r4, #12]
 8001bba:	e7c4      	b.n	8001b46 <d_expression_1+0x2be>
 8001bbc:	3b61      	subs	r3, #97	; 0x61
 8001bbe:	2b19      	cmp	r3, #25
 8001bc0:	d8bd      	bhi.n	8001b3e <d_expression_1+0x2b6>
 8001bc2:	e7ec      	b.n	8001b9e <d_expression_1+0x316>
 8001bc4:	68eb      	ldr	r3, [r5, #12]
 8001bc6:	681b      	ldr	r3, [r3, #0]
 8001bc8:	785a      	ldrb	r2, [r3, #1]
 8001bca:	2a63      	cmp	r2, #99	; 0x63
 8001bcc:	d100      	bne.n	8001bd0 <d_expression_1+0x348>
 8001bce:	e0a5      	b.n	8001d1c <d_expression_1+0x494>
 8001bd0:	7833      	ldrb	r3, [r6, #0]
 8001bd2:	2b66      	cmp	r3, #102	; 0x66
 8001bd4:	d100      	bne.n	8001bd8 <d_expression_1+0x350>
 8001bd6:	e0ca      	b.n	8001d6e <d_expression_1+0x4e6>
 8001bd8:	2b64      	cmp	r3, #100	; 0x64
 8001bda:	d000      	beq.n	8001bde <d_expression_1+0x356>
 8001bdc:	e0be      	b.n	8001d5c <d_expression_1+0x4d4>
 8001bde:	7873      	ldrb	r3, [r6, #1]
 8001be0:	2b69      	cmp	r3, #105	; 0x69
 8001be2:	d000      	beq.n	8001be6 <d_expression_1+0x35e>
 8001be4:	e0ba      	b.n	8001d5c <d_expression_1+0x4d4>
 8001be6:	78b3      	ldrb	r3, [r6, #2]
 8001be8:	2b00      	cmp	r3, #0
 8001bea:	d000      	beq.n	8001bee <d_expression_1+0x366>
 8001bec:	e0b6      	b.n	8001d5c <d_expression_1+0x4d4>
 8001bee:	0020      	movs	r0, r4
 8001bf0:	f7ff fb6a 	bl	80012c8 <d_unqualified_name>
 8001bf4:	0007      	movs	r7, r0
 8001bf6:	7833      	ldrb	r3, [r6, #0]
 8001bf8:	2b63      	cmp	r3, #99	; 0x63
 8001bfa:	d14f      	bne.n	8001c9c <d_expression_1+0x414>
 8001bfc:	7872      	ldrb	r2, [r6, #1]
 8001bfe:	2a6c      	cmp	r2, #108	; 0x6c
 8001c00:	d14c      	bne.n	8001c9c <d_expression_1+0x414>
 8001c02:	78b2      	ldrb	r2, [r6, #2]
 8001c04:	2a00      	cmp	r2, #0
 8001c06:	d149      	bne.n	8001c9c <d_expression_1+0x414>
 8001c08:	2145      	movs	r1, #69	; 0x45
 8001c0a:	0020      	movs	r0, r4
 8001c0c:	f000 f8ca 	bl	8001da4 <d_exprlist>
 8001c10:	0006      	movs	r6, r0
 8001c12:	0033      	movs	r3, r6
 8001c14:	003a      	movs	r2, r7
 8001c16:	2139      	movs	r1, #57	; 0x39
 8001c18:	0020      	movs	r0, r4
 8001c1a:	f7fe fa71 	bl	8000100 <d_make_comp>
 8001c1e:	002a      	movs	r2, r5
 8001c20:	0003      	movs	r3, r0
 8001c22:	2138      	movs	r1, #56	; 0x38
 8001c24:	0020      	movs	r0, r4
 8001c26:	f7fe fa6b 	bl	8000100 <d_make_comp>
 8001c2a:	0005      	movs	r5, r0
 8001c2c:	e649      	b.n	80018c2 <d_expression_1+0x3a>
 8001c2e:	46c0      	nop			; (mov r8, r8)
 8001c30:	7fffffff 	.word	0x7fffffff
 8001c34:	00040201 	.word	0x00040201
 8001c38:	2b64      	cmp	r3, #100	; 0x64
 8001c3a:	d106      	bne.n	8001c4a <d_expression_1+0x3c2>
 8001c3c:	7873      	ldrb	r3, [r6, #1]
 8001c3e:	2b58      	cmp	r3, #88	; 0x58
 8001c40:	d103      	bne.n	8001c4a <d_expression_1+0x3c2>
 8001c42:	78b3      	ldrb	r3, [r6, #2]
 8001c44:	2b00      	cmp	r3, #0
 8001c46:	d100      	bne.n	8001c4a <d_expression_1+0x3c2>
 8001c48:	e6f6      	b.n	8001a38 <d_expression_1+0x1b0>
 8001c4a:	7833      	ldrb	r3, [r6, #0]
 8001c4c:	2b66      	cmp	r3, #102	; 0x66
 8001c4e:	d100      	bne.n	8001c52 <d_expression_1+0x3ca>
 8001c50:	e092      	b.n	8001d78 <d_expression_1+0x4f0>
 8001c52:	2b6e      	cmp	r3, #110	; 0x6e
 8001c54:	d000      	beq.n	8001c58 <d_expression_1+0x3d0>
 8001c56:	e6ad      	b.n	80019b4 <d_expression_1+0x12c>
 8001c58:	7873      	ldrb	r3, [r6, #1]
 8001c5a:	2b77      	cmp	r3, #119	; 0x77
 8001c5c:	d002      	beq.n	8001c64 <d_expression_1+0x3dc>
 8001c5e:	2b61      	cmp	r3, #97	; 0x61
 8001c60:	d000      	beq.n	8001c64 <d_expression_1+0x3dc>
 8001c62:	e6a7      	b.n	80019b4 <d_expression_1+0x12c>
 8001c64:	215f      	movs	r1, #95	; 0x5f
 8001c66:	0020      	movs	r0, r4
 8001c68:	f000 f89c 	bl	8001da4 <d_exprlist>
 8001c6c:	0006      	movs	r6, r0
 8001c6e:	0020      	movs	r0, r4
 8001c70:	f7fe fe74 	bl	800095c <d_type>
 8001c74:	68e3      	ldr	r3, [r4, #12]
 8001c76:	0007      	movs	r7, r0
 8001c78:	781a      	ldrb	r2, [r3, #0]
 8001c7a:	2a45      	cmp	r2, #69	; 0x45
 8001c7c:	d100      	bne.n	8001c80 <d_expression_1+0x3f8>
 8001c7e:	e08b      	b.n	8001d98 <d_expression_1+0x510>
 8001c80:	2a70      	cmp	r2, #112	; 0x70
 8001c82:	d07d      	beq.n	8001d80 <d_expression_1+0x4f8>
 8001c84:	2a69      	cmp	r2, #105	; 0x69
 8001c86:	d000      	beq.n	8001c8a <d_expression_1+0x402>
 8001c88:	e694      	b.n	80019b4 <d_expression_1+0x12c>
 8001c8a:	785b      	ldrb	r3, [r3, #1]
 8001c8c:	2b6c      	cmp	r3, #108	; 0x6c
 8001c8e:	d000      	beq.n	8001c92 <d_expression_1+0x40a>
 8001c90:	e690      	b.n	80019b4 <d_expression_1+0x12c>
 8001c92:	0020      	movs	r0, r4
 8001c94:	f7ff fdf8 	bl	8001888 <d_expression_1>
 8001c98:	0003      	movs	r3, r0
 8001c9a:	e6da      	b.n	8001a52 <d_expression_1+0x1ca>
 8001c9c:	2b64      	cmp	r3, #100	; 0x64
 8001c9e:	d150      	bne.n	8001d42 <d_expression_1+0x4ba>
 8001ca0:	7872      	ldrb	r2, [r6, #1]
 8001ca2:	2a74      	cmp	r2, #116	; 0x74
 8001ca4:	d14d      	bne.n	8001d42 <d_expression_1+0x4ba>
 8001ca6:	78b2      	ldrb	r2, [r6, #2]
 8001ca8:	2a00      	cmp	r2, #0
 8001caa:	d14a      	bne.n	8001d42 <d_expression_1+0x4ba>
 8001cac:	68e3      	ldr	r3, [r4, #12]
 8001cae:	781a      	ldrb	r2, [r3, #0]
 8001cb0:	2a67      	cmp	r2, #103	; 0x67
 8001cb2:	d058      	beq.n	8001d66 <d_expression_1+0x4de>
 8001cb4:	2a73      	cmp	r2, #115	; 0x73
 8001cb6:	d102      	bne.n	8001cbe <d_expression_1+0x436>
 8001cb8:	785b      	ldrb	r3, [r3, #1]
 8001cba:	2b72      	cmp	r3, #114	; 0x72
 8001cbc:	d049      	beq.n	8001d52 <d_expression_1+0x4ca>
 8001cbe:	0020      	movs	r0, r4
 8001cc0:	f7ff fb02 	bl	80012c8 <d_unqualified_name>
 8001cc4:	68e3      	ldr	r3, [r4, #12]
 8001cc6:	0006      	movs	r6, r0
 8001cc8:	781a      	ldrb	r2, [r3, #0]
 8001cca:	2a49      	cmp	r2, #73	; 0x49
 8001ccc:	d1a1      	bne.n	8001c12 <d_expression_1+0x38a>
 8001cce:	3301      	adds	r3, #1
 8001cd0:	60e3      	str	r3, [r4, #12]
 8001cd2:	0020      	movs	r0, r4
 8001cd4:	f7ff fd30 	bl	8001738 <d_template_args_1>
 8001cd8:	0032      	movs	r2, r6
 8001cda:	0003      	movs	r3, r0
 8001cdc:	2104      	movs	r1, #4
 8001cde:	0020      	movs	r0, r4
 8001ce0:	f7fe fa0e 	bl	8000100 <d_make_comp>
 8001ce4:	0006      	movs	r6, r0
 8001ce6:	e794      	b.n	8001c12 <d_expression_1+0x38a>
 8001ce8:	68e3      	ldr	r3, [r4, #12]
 8001cea:	781a      	ldrb	r2, [r3, #0]
 8001cec:	2a5f      	cmp	r2, #95	; 0x5f
 8001cee:	d000      	beq.n	8001cf2 <d_expression_1+0x46a>
 8001cf0:	e6ed      	b.n	8001ace <d_expression_1+0x246>
 8001cf2:	3301      	adds	r3, #1
 8001cf4:	60e3      	str	r3, [r4, #12]
 8001cf6:	2145      	movs	r1, #69	; 0x45
 8001cf8:	0020      	movs	r0, r4
 8001cfa:	f000 f853 	bl	8001da4 <d_exprlist>
 8001cfe:	0003      	movs	r3, r0
 8001d00:	e6c4      	b.n	8001a8c <d_expression_1+0x204>
 8001d02:	3301      	adds	r3, #1
 8001d04:	60e3      	str	r3, [r4, #12]
 8001d06:	0020      	movs	r0, r4
 8001d08:	f7ff fd16 	bl	8001738 <d_template_args_1>
 8001d0c:	002a      	movs	r2, r5
 8001d0e:	0003      	movs	r3, r0
 8001d10:	2104      	movs	r1, #4
 8001d12:	0020      	movs	r0, r4
 8001d14:	f7fe f9f4 	bl	8000100 <d_make_comp>
 8001d18:	0005      	movs	r5, r0
 8001d1a:	e71d      	b.n	8001b58 <d_expression_1+0x2d0>
 8001d1c:	781b      	ldrb	r3, [r3, #0]
 8001d1e:	2b73      	cmp	r3, #115	; 0x73
 8001d20:	d00a      	beq.n	8001d38 <d_expression_1+0x4b0>
 8001d22:	3b63      	subs	r3, #99	; 0x63
 8001d24:	b2db      	uxtb	r3, r3
 8001d26:	2b0f      	cmp	r3, #15
 8001d28:	d900      	bls.n	8001d2c <d_expression_1+0x4a4>
 8001d2a:	e751      	b.n	8001bd0 <d_expression_1+0x348>
 8001d2c:	4a1c      	ldr	r2, [pc, #112]	; (8001da0 <d_expression_1+0x518>)
 8001d2e:	009b      	lsls	r3, r3, #2
 8001d30:	589b      	ldr	r3, [r3, r2]
 8001d32:	2b00      	cmp	r3, #0
 8001d34:	d100      	bne.n	8001d38 <d_expression_1+0x4b0>
 8001d36:	e74b      	b.n	8001bd0 <d_expression_1+0x348>
 8001d38:	0020      	movs	r0, r4
 8001d3a:	f7fe fe0f 	bl	800095c <d_type>
 8001d3e:	0007      	movs	r7, r0
 8001d40:	e759      	b.n	8001bf6 <d_expression_1+0x36e>
 8001d42:	2b70      	cmp	r3, #112	; 0x70
 8001d44:	d105      	bne.n	8001d52 <d_expression_1+0x4ca>
 8001d46:	7873      	ldrb	r3, [r6, #1]
 8001d48:	2b74      	cmp	r3, #116	; 0x74
 8001d4a:	d102      	bne.n	8001d52 <d_expression_1+0x4ca>
 8001d4c:	78b3      	ldrb	r3, [r6, #2]
 8001d4e:	2b00      	cmp	r3, #0
 8001d50:	d0ac      	beq.n	8001cac <d_expression_1+0x424>
 8001d52:	0020      	movs	r0, r4
 8001d54:	f7ff fd98 	bl	8001888 <d_expression_1>
 8001d58:	0006      	movs	r6, r0
 8001d5a:	e75a      	b.n	8001c12 <d_expression_1+0x38a>
 8001d5c:	0020      	movs	r0, r4
 8001d5e:	f7ff fd93 	bl	8001888 <d_expression_1>
 8001d62:	0007      	movs	r7, r0
 8001d64:	e747      	b.n	8001bf6 <d_expression_1+0x36e>
 8001d66:	785b      	ldrb	r3, [r3, #1]
 8001d68:	2b73      	cmp	r3, #115	; 0x73
 8001d6a:	d1a8      	bne.n	8001cbe <d_expression_1+0x436>
 8001d6c:	e7f1      	b.n	8001d52 <d_expression_1+0x4ca>
 8001d6e:	0020      	movs	r0, r4
 8001d70:	f7ff fa1a 	bl	80011a8 <d_operator_name>
 8001d74:	0007      	movs	r7, r0
 8001d76:	e73e      	b.n	8001bf6 <d_expression_1+0x36e>
 8001d78:	0020      	movs	r0, r4
 8001d7a:	f7ff fa15 	bl	80011a8 <d_operator_name>
 8001d7e:	e65e      	b.n	8001a3e <d_expression_1+0x1b6>
 8001d80:	785a      	ldrb	r2, [r3, #1]
 8001d82:	2a69      	cmp	r2, #105	; 0x69
 8001d84:	d000      	beq.n	8001d88 <d_expression_1+0x500>
 8001d86:	e615      	b.n	80019b4 <d_expression_1+0x12c>
 8001d88:	3302      	adds	r3, #2
 8001d8a:	60e3      	str	r3, [r4, #12]
 8001d8c:	2145      	movs	r1, #69	; 0x45
 8001d8e:	0020      	movs	r0, r4
 8001d90:	f000 f808 	bl	8001da4 <d_exprlist>
 8001d94:	0003      	movs	r3, r0
 8001d96:	e65c      	b.n	8001a52 <d_expression_1+0x1ca>
 8001d98:	3301      	adds	r3, #1
 8001d9a:	60e3      	str	r3, [r4, #12]
 8001d9c:	2300      	movs	r3, #0
 8001d9e:	e658      	b.n	8001a52 <d_expression_1+0x1ca>
 8001da0:	0800ef8c 	.word	0x0800ef8c

08001da4 <d_exprlist>:
 8001da4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001da6:	46c6      	mov	lr, r8
 8001da8:	2300      	movs	r3, #0
 8001daa:	b500      	push	{lr}
 8001dac:	b082      	sub	sp, #8
 8001dae:	9301      	str	r3, [sp, #4]
 8001db0:	68c3      	ldr	r3, [r0, #12]
 8001db2:	0004      	movs	r4, r0
 8001db4:	781a      	ldrb	r2, [r3, #0]
 8001db6:	000e      	movs	r6, r1
 8001db8:	428a      	cmp	r2, r1
 8001dba:	d023      	beq.n	8001e04 <d_exprlist+0x60>
 8001dbc:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8001dbe:	2701      	movs	r7, #1
 8001dc0:	4698      	mov	r8, r3
 8001dc2:	ad01      	add	r5, sp, #4
 8001dc4:	e00d      	b.n	8001de2 <d_exprlist+0x3e>
 8001dc6:	2300      	movs	r3, #0
 8001dc8:	212e      	movs	r1, #46	; 0x2e
 8001dca:	0020      	movs	r0, r4
 8001dcc:	f7fe f998 	bl	8000100 <d_make_comp>
 8001dd0:	6028      	str	r0, [r5, #0]
 8001dd2:	2800      	cmp	r0, #0
 8001dd4:	d00d      	beq.n	8001df2 <d_exprlist+0x4e>
 8001dd6:	68e3      	ldr	r3, [r4, #12]
 8001dd8:	3010      	adds	r0, #16
 8001dda:	781a      	ldrb	r2, [r3, #0]
 8001ddc:	0005      	movs	r5, r0
 8001dde:	42b2      	cmp	r2, r6
 8001de0:	d00c      	beq.n	8001dfc <d_exprlist+0x58>
 8001de2:	0020      	movs	r0, r4
 8001de4:	6327      	str	r7, [r4, #48]	; 0x30
 8001de6:	f7ff fd4f 	bl	8001888 <d_expression_1>
 8001dea:	4643      	mov	r3, r8
 8001dec:	1e02      	subs	r2, r0, #0
 8001dee:	6323      	str	r3, [r4, #48]	; 0x30
 8001df0:	d1e9      	bne.n	8001dc6 <d_exprlist+0x22>
 8001df2:	2000      	movs	r0, #0
 8001df4:	b002      	add	sp, #8
 8001df6:	bc80      	pop	{r7}
 8001df8:	46b8      	mov	r8, r7
 8001dfa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001dfc:	3301      	adds	r3, #1
 8001dfe:	9801      	ldr	r0, [sp, #4]
 8001e00:	60e3      	str	r3, [r4, #12]
 8001e02:	e7f7      	b.n	8001df4 <d_exprlist+0x50>
 8001e04:	3301      	adds	r3, #1
 8001e06:	2200      	movs	r2, #0
 8001e08:	212e      	movs	r1, #46	; 0x2e
 8001e0a:	60c3      	str	r3, [r0, #12]
 8001e0c:	2300      	movs	r3, #0
 8001e0e:	f7fe f977 	bl	8000100 <d_make_comp>
 8001e12:	e7ef      	b.n	8001df4 <d_exprlist+0x50>

08001e14 <d_cv_qualifiers>:
 8001e14:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001e16:	46de      	mov	lr, fp
 8001e18:	4657      	mov	r7, sl
 8001e1a:	464e      	mov	r6, r9
 8001e1c:	4645      	mov	r5, r8
 8001e1e:	b5e0      	push	{r5, r6, r7, lr}
 8001e20:	68c4      	ldr	r4, [r0, #12]
 8001e22:	0005      	movs	r5, r0
 8001e24:	468a      	mov	sl, r1
 8001e26:	4693      	mov	fp, r2
 8001e28:	231b      	movs	r3, #27
 8001e2a:	7826      	ldrb	r6, [r4, #0]
 8001e2c:	b083      	sub	sp, #12
 8001e2e:	2a00      	cmp	r2, #0
 8001e30:	d000      	beq.n	8001e34 <d_cv_qualifiers+0x20>
 8001e32:	231e      	movs	r3, #30
 8001e34:	465a      	mov	r2, fp
 8001e36:	b2db      	uxtb	r3, r3
 8001e38:	9301      	str	r3, [sp, #4]
 8001e3a:	231a      	movs	r3, #26
 8001e3c:	2a00      	cmp	r2, #0
 8001e3e:	d000      	beq.n	8001e42 <d_cv_qualifiers+0x2e>
 8001e40:	231d      	movs	r3, #29
 8001e42:	465a      	mov	r2, fp
 8001e44:	b2db      	uxtb	r3, r3
 8001e46:	4699      	mov	r9, r3
 8001e48:	2319      	movs	r3, #25
 8001e4a:	2a00      	cmp	r2, #0
 8001e4c:	d000      	beq.n	8001e50 <d_cv_qualifiers+0x3c>
 8001e4e:	231c      	movs	r3, #28
 8001e50:	b2db      	uxtb	r3, r3
 8001e52:	4698      	mov	r8, r3
 8001e54:	4657      	mov	r7, sl
 8001e56:	e01d      	b.n	8001e94 <d_cv_qualifiers+0x80>
 8001e58:	2e56      	cmp	r6, #86	; 0x56
 8001e5a:	d039      	beq.n	8001ed0 <d_cv_qualifiers+0xbc>
 8001e5c:	2e4b      	cmp	r6, #75	; 0x4b
 8001e5e:	d03d      	beq.n	8001edc <d_cv_qualifiers+0xc8>
 8001e60:	7863      	ldrb	r3, [r4, #1]
 8001e62:	2b00      	cmp	r3, #0
 8001e64:	d02b      	beq.n	8001ebe <d_cv_qualifiers+0xaa>
 8001e66:	1ca3      	adds	r3, r4, #2
 8001e68:	60eb      	str	r3, [r5, #12]
 8001e6a:	7863      	ldrb	r3, [r4, #1]
 8001e6c:	2b78      	cmp	r3, #120	; 0x78
 8001e6e:	d051      	beq.n	8001f14 <d_cv_qualifiers+0x100>
 8001e70:	2b6f      	cmp	r3, #111	; 0x6f
 8001e72:	d139      	bne.n	8001ee8 <d_cv_qualifiers+0xd4>
 8001e74:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8001e76:	2150      	movs	r1, #80	; 0x50
 8001e78:	3309      	adds	r3, #9
 8001e7a:	62eb      	str	r3, [r5, #44]	; 0x2c
 8001e7c:	2300      	movs	r3, #0
 8001e7e:	2200      	movs	r2, #0
 8001e80:	0028      	movs	r0, r5
 8001e82:	f7fe f93d 	bl	8000100 <d_make_comp>
 8001e86:	6038      	str	r0, [r7, #0]
 8001e88:	2800      	cmp	r0, #0
 8001e8a:	d018      	beq.n	8001ebe <d_cv_qualifiers+0xaa>
 8001e8c:	300c      	adds	r0, #12
 8001e8e:	0007      	movs	r7, r0
 8001e90:	68ec      	ldr	r4, [r5, #12]
 8001e92:	7826      	ldrb	r6, [r4, #0]
 8001e94:	0020      	movs	r0, r4
 8001e96:	f7fe fad7 	bl	8000448 <next_is_type_qual.isra.0>
 8001e9a:	2800      	cmp	r0, #0
 8001e9c:	d040      	beq.n	8001f20 <d_cv_qualifiers+0x10c>
 8001e9e:	1c63      	adds	r3, r4, #1
 8001ea0:	60eb      	str	r3, [r5, #12]
 8001ea2:	2e72      	cmp	r6, #114	; 0x72
 8001ea4:	d1d8      	bne.n	8001e58 <d_cv_qualifiers+0x44>
 8001ea6:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8001ea8:	4641      	mov	r1, r8
 8001eaa:	3309      	adds	r3, #9
 8001eac:	62eb      	str	r3, [r5, #44]	; 0x2c
 8001eae:	2200      	movs	r2, #0
 8001eb0:	2300      	movs	r3, #0
 8001eb2:	0028      	movs	r0, r5
 8001eb4:	f7fe f924 	bl	8000100 <d_make_comp>
 8001eb8:	6038      	str	r0, [r7, #0]
 8001eba:	2800      	cmp	r0, #0
 8001ebc:	d1e6      	bne.n	8001e8c <d_cv_qualifiers+0x78>
 8001ebe:	2700      	movs	r7, #0
 8001ec0:	0038      	movs	r0, r7
 8001ec2:	b003      	add	sp, #12
 8001ec4:	bcf0      	pop	{r4, r5, r6, r7}
 8001ec6:	46bb      	mov	fp, r7
 8001ec8:	46b2      	mov	sl, r6
 8001eca:	46a9      	mov	r9, r5
 8001ecc:	46a0      	mov	r8, r4
 8001ece:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ed0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8001ed2:	4649      	mov	r1, r9
 8001ed4:	3309      	adds	r3, #9
 8001ed6:	62eb      	str	r3, [r5, #44]	; 0x2c
 8001ed8:	2300      	movs	r3, #0
 8001eda:	e7d0      	b.n	8001e7e <d_cv_qualifiers+0x6a>
 8001edc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8001ede:	9901      	ldr	r1, [sp, #4]
 8001ee0:	3306      	adds	r3, #6
 8001ee2:	62eb      	str	r3, [r5, #44]	; 0x2c
 8001ee4:	2300      	movs	r3, #0
 8001ee6:	e7ca      	b.n	8001e7e <d_cv_qualifiers+0x6a>
 8001ee8:	2b4f      	cmp	r3, #79	; 0x4f
 8001eea:	d138      	bne.n	8001f5e <d_cv_qualifiers+0x14a>
 8001eec:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8001eee:	6b2c      	ldr	r4, [r5, #48]	; 0x30
 8001ef0:	3309      	adds	r3, #9
 8001ef2:	62eb      	str	r3, [r5, #44]	; 0x2c
 8001ef4:	2301      	movs	r3, #1
 8001ef6:	0028      	movs	r0, r5
 8001ef8:	632b      	str	r3, [r5, #48]	; 0x30
 8001efa:	f7ff fcc5 	bl	8001888 <d_expression_1>
 8001efe:	632c      	str	r4, [r5, #48]	; 0x30
 8001f00:	1e03      	subs	r3, r0, #0
 8001f02:	d0dc      	beq.n	8001ebe <d_cv_qualifiers+0xaa>
 8001f04:	68ea      	ldr	r2, [r5, #12]
 8001f06:	7811      	ldrb	r1, [r2, #0]
 8001f08:	2945      	cmp	r1, #69	; 0x45
 8001f0a:	d1d8      	bne.n	8001ebe <d_cv_qualifiers+0xaa>
 8001f0c:	3201      	adds	r2, #1
 8001f0e:	60ea      	str	r2, [r5, #12]
 8001f10:	310b      	adds	r1, #11
 8001f12:	e7b4      	b.n	8001e7e <d_cv_qualifiers+0x6a>
 8001f14:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8001f16:	214e      	movs	r1, #78	; 0x4e
 8001f18:	3311      	adds	r3, #17
 8001f1a:	62eb      	str	r3, [r5, #44]	; 0x2c
 8001f1c:	2300      	movs	r3, #0
 8001f1e:	e7ae      	b.n	8001e7e <d_cv_qualifiers+0x6a>
 8001f20:	465b      	mov	r3, fp
 8001f22:	2b00      	cmp	r3, #0
 8001f24:	d1cc      	bne.n	8001ec0 <d_cv_qualifiers+0xac>
 8001f26:	2e46      	cmp	r6, #70	; 0x46
 8001f28:	d1ca      	bne.n	8001ec0 <d_cv_qualifiers+0xac>
 8001f2a:	4557      	cmp	r7, sl
 8001f2c:	d0c8      	beq.n	8001ec0 <d_cv_qualifiers+0xac>
 8001f2e:	241d      	movs	r4, #29
 8001f30:	211c      	movs	r1, #28
 8001f32:	301e      	adds	r0, #30
 8001f34:	e006      	b.n	8001f44 <d_cv_qualifiers+0x130>
 8001f36:	2b19      	cmp	r3, #25
 8001f38:	d00f      	beq.n	8001f5a <d_cv_qualifiers+0x146>
 8001f3a:	230c      	movs	r3, #12
 8001f3c:	469a      	mov	sl, r3
 8001f3e:	4492      	add	sl, r2
 8001f40:	4557      	cmp	r7, sl
 8001f42:	d0bd      	beq.n	8001ec0 <d_cv_qualifiers+0xac>
 8001f44:	4653      	mov	r3, sl
 8001f46:	681a      	ldr	r2, [r3, #0]
 8001f48:	7813      	ldrb	r3, [r2, #0]
 8001f4a:	2b1a      	cmp	r3, #26
 8001f4c:	d003      	beq.n	8001f56 <d_cv_qualifiers+0x142>
 8001f4e:	2b1b      	cmp	r3, #27
 8001f50:	d1f1      	bne.n	8001f36 <d_cv_qualifiers+0x122>
 8001f52:	7010      	strb	r0, [r2, #0]
 8001f54:	e7f1      	b.n	8001f3a <d_cv_qualifiers+0x126>
 8001f56:	7014      	strb	r4, [r2, #0]
 8001f58:	e7ef      	b.n	8001f3a <d_cv_qualifiers+0x126>
 8001f5a:	7011      	strb	r1, [r2, #0]
 8001f5c:	e7ed      	b.n	8001f3a <d_cv_qualifiers+0x126>
 8001f5e:	2b77      	cmp	r3, #119	; 0x77
 8001f60:	d1ad      	bne.n	8001ebe <d_cv_qualifiers+0xaa>
 8001f62:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8001f64:	0028      	movs	r0, r5
 8001f66:	3306      	adds	r3, #6
 8001f68:	62eb      	str	r3, [r5, #44]	; 0x2c
 8001f6a:	f7ff f87f 	bl	800106c <d_parmlist>
 8001f6e:	1e03      	subs	r3, r0, #0
 8001f70:	d0a5      	beq.n	8001ebe <d_cv_qualifiers+0xaa>
 8001f72:	68ea      	ldr	r2, [r5, #12]
 8001f74:	7811      	ldrb	r1, [r2, #0]
 8001f76:	2945      	cmp	r1, #69	; 0x45
 8001f78:	d1a1      	bne.n	8001ebe <d_cv_qualifiers+0xaa>
 8001f7a:	3201      	adds	r2, #1
 8001f7c:	60ea      	str	r2, [r5, #12]
 8001f7e:	310c      	adds	r1, #12
 8001f80:	e77d      	b.n	8001e7e <d_cv_qualifiers+0x6a>
 8001f82:	46c0      	nop			; (mov r8, r8)

08001f84 <d_special_name>:
 8001f84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001f86:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8001f88:	46ce      	mov	lr, r9
 8001f8a:	4647      	mov	r7, r8
 8001f8c:	000b      	movs	r3, r1
 8001f8e:	b580      	push	{r7, lr}
 8001f90:	3314      	adds	r3, #20
 8001f92:	62c3      	str	r3, [r0, #44]	; 0x2c
 8001f94:	68c3      	ldr	r3, [r0, #12]
 8001f96:	0004      	movs	r4, r0
 8001f98:	781a      	ldrb	r2, [r3, #0]
 8001f9a:	2a54      	cmp	r2, #84	; 0x54
 8001f9c:	d05a      	beq.n	8002054 <d_special_name+0xd0>
 8001f9e:	2a47      	cmp	r2, #71	; 0x47
 8001fa0:	d164      	bne.n	800206c <d_special_name+0xe8>
 8001fa2:	1c5a      	adds	r2, r3, #1
 8001fa4:	60c2      	str	r2, [r0, #12]
 8001fa6:	785a      	ldrb	r2, [r3, #1]
 8001fa8:	2a00      	cmp	r2, #0
 8001faa:	d05f      	beq.n	800206c <d_special_name+0xe8>
 8001fac:	1c9a      	adds	r2, r3, #2
 8001fae:	60c2      	str	r2, [r0, #12]
 8001fb0:	785a      	ldrb	r2, [r3, #1]
 8001fb2:	2a54      	cmp	r2, #84	; 0x54
 8001fb4:	d100      	bne.n	8001fb8 <d_special_name+0x34>
 8001fb6:	e09c      	b.n	80020f2 <d_special_name+0x16e>
 8001fb8:	d95d      	bls.n	8002076 <d_special_name+0xf2>
 8001fba:	2a56      	cmp	r2, #86	; 0x56
 8001fbc:	d100      	bne.n	8001fc0 <d_special_name+0x3c>
 8001fbe:	e08f      	b.n	80020e0 <d_special_name+0x15c>
 8001fc0:	2a72      	cmp	r2, #114	; 0x72
 8001fc2:	d153      	bne.n	800206c <d_special_name+0xe8>
 8001fc4:	f7fe f8fc 	bl	80001c0 <d_number>
 8001fc8:	2801      	cmp	r0, #1
 8001fca:	dd4f      	ble.n	800206c <d_special_name+0xe8>
 8001fcc:	68e3      	ldr	r3, [r4, #12]
 8001fce:	781a      	ldrb	r2, [r3, #0]
 8001fd0:	2a00      	cmp	r2, #0
 8001fd2:	d04b      	beq.n	800206c <d_special_name+0xe8>
 8001fd4:	1c5d      	adds	r5, r3, #1
 8001fd6:	60e5      	str	r5, [r4, #12]
 8001fd8:	781b      	ldrb	r3, [r3, #0]
 8001fda:	2b5f      	cmp	r3, #95	; 0x5f
 8001fdc:	d146      	bne.n	800206c <d_special_name+0xe8>
 8001fde:	3b1d      	subs	r3, #29
 8001fe0:	2200      	movs	r2, #0
 8001fe2:	2700      	movs	r7, #0
 8001fe4:	4698      	mov	r8, r3
 8001fe6:	1e46      	subs	r6, r0, #1
 8001fe8:	782b      	ldrb	r3, [r5, #0]
 8001fea:	2b00      	cmp	r3, #0
 8001fec:	d03e      	beq.n	800206c <d_special_name+0xe8>
 8001fee:	2b24      	cmp	r3, #36	; 0x24
 8001ff0:	d000      	beq.n	8001ff4 <d_special_name+0x70>
 8001ff2:	e172      	b.n	80022da <d_special_name+0x356>
 8001ff4:	786b      	ldrb	r3, [r5, #1]
 8001ff6:	2b53      	cmp	r3, #83	; 0x53
 8001ff8:	d100      	bne.n	8001ffc <d_special_name+0x78>
 8001ffa:	e193      	b.n	8002324 <d_special_name+0x3a0>
 8001ffc:	2b5f      	cmp	r3, #95	; 0x5f
 8001ffe:	d100      	bne.n	8002002 <d_special_name+0x7e>
 8002000:	e18e      	b.n	8002320 <d_special_name+0x39c>
 8002002:	2b24      	cmp	r3, #36	; 0x24
 8002004:	d132      	bne.n	800206c <d_special_name+0xe8>
 8002006:	2524      	movs	r5, #36	; 0x24
 8002008:	6961      	ldr	r1, [r4, #20]
 800200a:	69a3      	ldr	r3, [r4, #24]
 800200c:	4299      	cmp	r1, r3
 800200e:	db00      	blt.n	8002012 <d_special_name+0x8e>
 8002010:	e190      	b.n	8002334 <d_special_name+0x3b0>
 8002012:	0088      	lsls	r0, r1, #2
 8002014:	6923      	ldr	r3, [r4, #16]
 8002016:	1840      	adds	r0, r0, r1
 8002018:	0080      	lsls	r0, r0, #2
 800201a:	181b      	adds	r3, r3, r0
 800201c:	3101      	adds	r1, #1
 800201e:	605f      	str	r7, [r3, #4]
 8002020:	609f      	str	r7, [r3, #8]
 8002022:	6161      	str	r1, [r4, #20]
 8002024:	4641      	mov	r1, r8
 8002026:	7019      	strb	r1, [r3, #0]
 8002028:	60dd      	str	r5, [r3, #12]
 800202a:	68e5      	ldr	r5, [r4, #12]
 800202c:	3e02      	subs	r6, #2
 800202e:	3502      	adds	r5, #2
 8002030:	60e5      	str	r5, [r4, #12]
 8002032:	2a00      	cmp	r2, #0
 8002034:	d100      	bne.n	8002038 <d_special_name+0xb4>
 8002036:	e171      	b.n	800231c <d_special_name+0x398>
 8002038:	2141      	movs	r1, #65	; 0x41
 800203a:	0020      	movs	r0, r4
 800203c:	f7fe f860 	bl	8000100 <d_make_comp>
 8002040:	1e02      	subs	r2, r0, #0
 8002042:	d013      	beq.n	800206c <d_special_name+0xe8>
 8002044:	2e00      	cmp	r6, #0
 8002046:	dccf      	bgt.n	8001fe8 <d_special_name+0x64>
 8002048:	2300      	movs	r3, #0
 800204a:	2140      	movs	r1, #64	; 0x40
 800204c:	0020      	movs	r0, r4
 800204e:	f7fe f857 	bl	8000100 <d_make_comp>
 8002052:	e00c      	b.n	800206e <d_special_name+0xea>
 8002054:	1c5a      	adds	r2, r3, #1
 8002056:	60c2      	str	r2, [r0, #12]
 8002058:	785a      	ldrb	r2, [r3, #1]
 800205a:	2a00      	cmp	r2, #0
 800205c:	d006      	beq.n	800206c <d_special_name+0xe8>
 800205e:	1c9a      	adds	r2, r3, #2
 8002060:	60c2      	str	r2, [r0, #12]
 8002062:	785b      	ldrb	r3, [r3, #1]
 8002064:	3b41      	subs	r3, #65	; 0x41
 8002066:	b2db      	uxtb	r3, r3
 8002068:	2b35      	cmp	r3, #53	; 0x35
 800206a:	d926      	bls.n	80020ba <d_special_name+0x136>
 800206c:	2000      	movs	r0, #0
 800206e:	bcc0      	pop	{r6, r7}
 8002070:	46b9      	mov	r9, r7
 8002072:	46b0      	mov	r8, r6
 8002074:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002076:	2a41      	cmp	r2, #65	; 0x41
 8002078:	d023      	beq.n	80020c2 <d_special_name+0x13e>
 800207a:	2a52      	cmp	r2, #82	; 0x52
 800207c:	d1f6      	bne.n	800206c <d_special_name+0xe8>
 800207e:	f000 f979 	bl	8002374 <d_name>
 8002082:	6963      	ldr	r3, [r4, #20]
 8002084:	69a2      	ldr	r2, [r4, #24]
 8002086:	0006      	movs	r6, r0
 8002088:	4293      	cmp	r3, r2
 800208a:	da50      	bge.n	800212e <d_special_name+0x1aa>
 800208c:	2200      	movs	r2, #0
 800208e:	0099      	lsls	r1, r3, #2
 8002090:	6925      	ldr	r5, [r4, #16]
 8002092:	18c9      	adds	r1, r1, r3
 8002094:	0089      	lsls	r1, r1, #2
 8002096:	186d      	adds	r5, r5, r1
 8002098:	3301      	adds	r3, #1
 800209a:	606a      	str	r2, [r5, #4]
 800209c:	60aa      	str	r2, [r5, #8]
 800209e:	6163      	str	r3, [r4, #20]
 80020a0:	2343      	movs	r3, #67	; 0x43
 80020a2:	0020      	movs	r0, r4
 80020a4:	702b      	strb	r3, [r5, #0]
 80020a6:	f7fe f88b 	bl	80001c0 <d_number>
 80020aa:	60e8      	str	r0, [r5, #12]
 80020ac:	002b      	movs	r3, r5
 80020ae:	0032      	movs	r2, r6
 80020b0:	2116      	movs	r1, #22
 80020b2:	0020      	movs	r0, r4
 80020b4:	f7fe f824 	bl	8000100 <d_make_comp>
 80020b8:	e7d9      	b.n	800206e <d_special_name+0xea>
 80020ba:	4aad      	ldr	r2, [pc, #692]	; (8002370 <d_special_name+0x3ec>)
 80020bc:	009b      	lsls	r3, r3, #2
 80020be:	58d3      	ldr	r3, [r2, r3]
 80020c0:	469f      	mov	pc, r3
 80020c2:	789b      	ldrb	r3, [r3, #2]
 80020c4:	2b47      	cmp	r3, #71	; 0x47
 80020c6:	d001      	beq.n	80020cc <d_special_name+0x148>
 80020c8:	2b54      	cmp	r3, #84	; 0x54
 80020ca:	d12b      	bne.n	8002124 <d_special_name+0x1a0>
 80020cc:	0020      	movs	r0, r4
 80020ce:	f7ff ff59 	bl	8001f84 <d_special_name>
 80020d2:	0002      	movs	r2, r0
 80020d4:	2300      	movs	r3, #0
 80020d6:	2117      	movs	r1, #23
 80020d8:	0020      	movs	r0, r4
 80020da:	f7fe f811 	bl	8000100 <d_make_comp>
 80020de:	e7c6      	b.n	800206e <d_special_name+0xea>
 80020e0:	f000 f948 	bl	8002374 <d_name>
 80020e4:	2300      	movs	r3, #0
 80020e6:	0002      	movs	r2, r0
 80020e8:	2113      	movs	r1, #19
 80020ea:	0020      	movs	r0, r4
 80020ec:	f7fe f808 	bl	8000100 <d_make_comp>
 80020f0:	e7bd      	b.n	800206e <d_special_name+0xea>
 80020f2:	789a      	ldrb	r2, [r3, #2]
 80020f4:	2a00      	cmp	r2, #0
 80020f6:	d100      	bne.n	80020fa <d_special_name+0x176>
 80020f8:	e116      	b.n	8002328 <d_special_name+0x3a4>
 80020fa:	1cda      	adds	r2, r3, #3
 80020fc:	60c2      	str	r2, [r0, #12]
 80020fe:	789a      	ldrb	r2, [r3, #2]
 8002100:	78db      	ldrb	r3, [r3, #3]
 8002102:	2a6e      	cmp	r2, #110	; 0x6e
 8002104:	d015      	beq.n	8002132 <d_special_name+0x1ae>
 8002106:	2b47      	cmp	r3, #71	; 0x47
 8002108:	d002      	beq.n	8002110 <d_special_name+0x18c>
 800210a:	2b54      	cmp	r3, #84	; 0x54
 800210c:	d000      	beq.n	8002110 <d_special_name+0x18c>
 800210e:	e10b      	b.n	8002328 <d_special_name+0x3a4>
 8002110:	0020      	movs	r0, r4
 8002112:	f7ff ff37 	bl	8001f84 <d_special_name>
 8002116:	0002      	movs	r2, r0
 8002118:	2300      	movs	r3, #0
 800211a:	214a      	movs	r1, #74	; 0x4a
 800211c:	0020      	movs	r0, r4
 800211e:	f7fd ffef 	bl	8000100 <d_make_comp>
 8002122:	e7a4      	b.n	800206e <d_special_name+0xea>
 8002124:	2100      	movs	r1, #0
 8002126:	f000 fa6f 	bl	8002608 <d_encoding.part.0>
 800212a:	0002      	movs	r2, r0
 800212c:	e7d2      	b.n	80020d4 <d_special_name+0x150>
 800212e:	2500      	movs	r5, #0
 8002130:	e7bc      	b.n	80020ac <d_special_name+0x128>
 8002132:	2b47      	cmp	r3, #71	; 0x47
 8002134:	d100      	bne.n	8002138 <d_special_name+0x1b4>
 8002136:	e110      	b.n	800235a <d_special_name+0x3d6>
 8002138:	2b54      	cmp	r3, #84	; 0x54
 800213a:	d100      	bne.n	800213e <d_special_name+0x1ba>
 800213c:	e10d      	b.n	800235a <d_special_name+0x3d6>
 800213e:	2100      	movs	r1, #0
 8002140:	f000 fa62 	bl	8002608 <d_encoding.part.0>
 8002144:	0002      	movs	r2, r0
 8002146:	2300      	movs	r3, #0
 8002148:	214b      	movs	r1, #75	; 0x4b
 800214a:	0020      	movs	r0, r4
 800214c:	f7fd ffd8 	bl	8000100 <d_make_comp>
 8002150:	e78d      	b.n	800206e <d_special_name+0xea>
 8002152:	2176      	movs	r1, #118	; 0x76
 8002154:	f7fe f874 	bl	8000240 <d_call_offset>
 8002158:	2800      	cmp	r0, #0
 800215a:	d100      	bne.n	800215e <d_special_name+0x1da>
 800215c:	e786      	b.n	800206c <d_special_name+0xe8>
 800215e:	68e3      	ldr	r3, [r4, #12]
 8002160:	781b      	ldrb	r3, [r3, #0]
 8002162:	2b47      	cmp	r3, #71	; 0x47
 8002164:	d100      	bne.n	8002168 <d_special_name+0x1e4>
 8002166:	e0ee      	b.n	8002346 <d_special_name+0x3c2>
 8002168:	2b54      	cmp	r3, #84	; 0x54
 800216a:	d100      	bne.n	800216e <d_special_name+0x1ea>
 800216c:	e0eb      	b.n	8002346 <d_special_name+0x3c2>
 800216e:	2100      	movs	r1, #0
 8002170:	0020      	movs	r0, r4
 8002172:	f000 fa49 	bl	8002608 <d_encoding.part.0>
 8002176:	0002      	movs	r2, r0
 8002178:	2300      	movs	r3, #0
 800217a:	2110      	movs	r1, #16
 800217c:	0020      	movs	r0, r4
 800217e:	f7fd ffbf 	bl	8000100 <d_make_comp>
 8002182:	e774      	b.n	800206e <d_special_name+0xea>
 8002184:	2168      	movs	r1, #104	; 0x68
 8002186:	f7fe f85b 	bl	8000240 <d_call_offset>
 800218a:	2800      	cmp	r0, #0
 800218c:	d100      	bne.n	8002190 <d_special_name+0x20c>
 800218e:	e76d      	b.n	800206c <d_special_name+0xe8>
 8002190:	68e3      	ldr	r3, [r4, #12]
 8002192:	781b      	ldrb	r3, [r3, #0]
 8002194:	2b47      	cmp	r3, #71	; 0x47
 8002196:	d100      	bne.n	800219a <d_special_name+0x216>
 8002198:	e0da      	b.n	8002350 <d_special_name+0x3cc>
 800219a:	2b54      	cmp	r3, #84	; 0x54
 800219c:	d100      	bne.n	80021a0 <d_special_name+0x21c>
 800219e:	e0d7      	b.n	8002350 <d_special_name+0x3cc>
 80021a0:	2100      	movs	r1, #0
 80021a2:	0020      	movs	r0, r4
 80021a4:	f000 fa30 	bl	8002608 <d_encoding.part.0>
 80021a8:	0002      	movs	r2, r0
 80021aa:	2300      	movs	r3, #0
 80021ac:	210f      	movs	r1, #15
 80021ae:	0020      	movs	r0, r4
 80021b0:	f7fd ffa6 	bl	8000100 <d_make_comp>
 80021b4:	e75b      	b.n	800206e <d_special_name+0xea>
 80021b6:	2100      	movs	r1, #0
 80021b8:	f7fe f842 	bl	8000240 <d_call_offset>
 80021bc:	2800      	cmp	r0, #0
 80021be:	d100      	bne.n	80021c2 <d_special_name+0x23e>
 80021c0:	e754      	b.n	800206c <d_special_name+0xe8>
 80021c2:	2100      	movs	r1, #0
 80021c4:	0020      	movs	r0, r4
 80021c6:	f7fe f83b 	bl	8000240 <d_call_offset>
 80021ca:	2800      	cmp	r0, #0
 80021cc:	d100      	bne.n	80021d0 <d_special_name+0x24c>
 80021ce:	e74d      	b.n	800206c <d_special_name+0xe8>
 80021d0:	68e3      	ldr	r3, [r4, #12]
 80021d2:	781b      	ldrb	r3, [r3, #0]
 80021d4:	2b47      	cmp	r3, #71	; 0x47
 80021d6:	d100      	bne.n	80021da <d_special_name+0x256>
 80021d8:	e0c4      	b.n	8002364 <d_special_name+0x3e0>
 80021da:	2b54      	cmp	r3, #84	; 0x54
 80021dc:	d100      	bne.n	80021e0 <d_special_name+0x25c>
 80021de:	e0c1      	b.n	8002364 <d_special_name+0x3e0>
 80021e0:	2100      	movs	r1, #0
 80021e2:	0020      	movs	r0, r4
 80021e4:	f000 fa10 	bl	8002608 <d_encoding.part.0>
 80021e8:	0002      	movs	r2, r0
 80021ea:	2300      	movs	r3, #0
 80021ec:	2111      	movs	r1, #17
 80021ee:	0020      	movs	r0, r4
 80021f0:	f7fd ff86 	bl	8000100 <d_make_comp>
 80021f4:	e73b      	b.n	800206e <d_special_name+0xea>
 80021f6:	f000 f8bd 	bl	8002374 <d_name>
 80021fa:	2300      	movs	r3, #0
 80021fc:	0002      	movs	r2, r0
 80021fe:	2115      	movs	r1, #21
 8002200:	0020      	movs	r0, r4
 8002202:	f7fd ff7d 	bl	8000100 <d_make_comp>
 8002206:	e732      	b.n	800206e <d_special_name+0xea>
 8002208:	f7fe fba8 	bl	800095c <d_type>
 800220c:	0005      	movs	r5, r0
 800220e:	0020      	movs	r0, r4
 8002210:	f7fd ffd6 	bl	80001c0 <d_number>
 8002214:	2800      	cmp	r0, #0
 8002216:	da00      	bge.n	800221a <d_special_name+0x296>
 8002218:	e728      	b.n	800206c <d_special_name+0xe8>
 800221a:	68e2      	ldr	r2, [r4, #12]
 800221c:	7813      	ldrb	r3, [r2, #0]
 800221e:	2b5f      	cmp	r3, #95	; 0x5f
 8002220:	d000      	beq.n	8002224 <d_special_name+0x2a0>
 8002222:	e723      	b.n	800206c <d_special_name+0xe8>
 8002224:	3201      	adds	r2, #1
 8002226:	60e2      	str	r2, [r4, #12]
 8002228:	0020      	movs	r0, r4
 800222a:	f7fe fb97 	bl	800095c <d_type>
 800222e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002230:	0002      	movs	r2, r0
 8002232:	3305      	adds	r3, #5
 8002234:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002236:	210b      	movs	r1, #11
 8002238:	002b      	movs	r3, r5
 800223a:	0020      	movs	r0, r4
 800223c:	f7fd ff60 	bl	8000100 <d_make_comp>
 8002240:	e715      	b.n	800206e <d_special_name+0xea>
 8002242:	f7ff fa4f 	bl	80016e4 <d_template_arg>
 8002246:	2300      	movs	r3, #0
 8002248:	0002      	movs	r2, r0
 800224a:	2130      	movs	r1, #48	; 0x30
 800224c:	0020      	movs	r0, r4
 800224e:	f7fd ff57 	bl	8000100 <d_make_comp>
 8002252:	e70c      	b.n	800206e <d_special_name+0xea>
 8002254:	f7fe fb82 	bl	800095c <d_type>
 8002258:	2300      	movs	r3, #0
 800225a:	0002      	movs	r2, r0
 800225c:	2112      	movs	r1, #18
 800225e:	0020      	movs	r0, r4
 8002260:	f7fd ff4e 	bl	8000100 <d_make_comp>
 8002264:	e703      	b.n	800206e <d_special_name+0xea>
 8002266:	f7fe fb79 	bl	800095c <d_type>
 800226a:	2300      	movs	r3, #0
 800226c:	0002      	movs	r2, r0
 800226e:	210c      	movs	r1, #12
 8002270:	0020      	movs	r0, r4
 8002272:	f7fd ff45 	bl	8000100 <d_make_comp>
 8002276:	e6fa      	b.n	800206e <d_special_name+0xea>
 8002278:	f000 f87c 	bl	8002374 <d_name>
 800227c:	2300      	movs	r3, #0
 800227e:	0002      	movs	r2, r0
 8002280:	2114      	movs	r1, #20
 8002282:	0020      	movs	r0, r4
 8002284:	f7fd ff3c 	bl	8000100 <d_make_comp>
 8002288:	e6f1      	b.n	800206e <d_special_name+0xea>
 800228a:	f7fe fb67 	bl	800095c <d_type>
 800228e:	2300      	movs	r3, #0
 8002290:	0002      	movs	r2, r0
 8002292:	210e      	movs	r1, #14
 8002294:	0020      	movs	r0, r4
 8002296:	f7fd ff33 	bl	8000100 <d_make_comp>
 800229a:	e6e8      	b.n	800206e <d_special_name+0xea>
 800229c:	310a      	adds	r1, #10
 800229e:	62c1      	str	r1, [r0, #44]	; 0x2c
 80022a0:	f7fe fb5c 	bl	800095c <d_type>
 80022a4:	2300      	movs	r3, #0
 80022a6:	0002      	movs	r2, r0
 80022a8:	210a      	movs	r1, #10
 80022aa:	0020      	movs	r0, r4
 80022ac:	f7fd ff28 	bl	8000100 <d_make_comp>
 80022b0:	e6dd      	b.n	800206e <d_special_name+0xea>
 80022b2:	f7fe fb53 	bl	800095c <d_type>
 80022b6:	2300      	movs	r3, #0
 80022b8:	0002      	movs	r2, r0
 80022ba:	210d      	movs	r1, #13
 80022bc:	0020      	movs	r0, r4
 80022be:	f7fd ff1f 	bl	8000100 <d_make_comp>
 80022c2:	e6d4      	b.n	800206e <d_special_name+0xea>
 80022c4:	310f      	adds	r1, #15
 80022c6:	62c1      	str	r1, [r0, #44]	; 0x2c
 80022c8:	f7fe fb48 	bl	800095c <d_type>
 80022cc:	2300      	movs	r3, #0
 80022ce:	0002      	movs	r2, r0
 80022d0:	2109      	movs	r1, #9
 80022d2:	0020      	movs	r0, r4
 80022d4:	f7fd ff14 	bl	8000100 <d_make_comp>
 80022d8:	e6c9      	b.n	800206e <d_special_name+0xea>
 80022da:	2100      	movs	r1, #0
 80022dc:	e004      	b.n	80022e8 <d_special_name+0x364>
 80022de:	5c6b      	ldrb	r3, [r5, r1]
 80022e0:	2b00      	cmp	r3, #0
 80022e2:	d004      	beq.n	80022ee <d_special_name+0x36a>
 80022e4:	2b24      	cmp	r3, #36	; 0x24
 80022e6:	d002      	beq.n	80022ee <d_special_name+0x36a>
 80022e8:	3101      	adds	r1, #1
 80022ea:	42b1      	cmp	r1, r6
 80022ec:	dbf7      	blt.n	80022de <d_special_name+0x35a>
 80022ee:	6960      	ldr	r0, [r4, #20]
 80022f0:	69a3      	ldr	r3, [r4, #24]
 80022f2:	4298      	cmp	r0, r3
 80022f4:	da22      	bge.n	800233c <d_special_name+0x3b8>
 80022f6:	0083      	lsls	r3, r0, #2
 80022f8:	181b      	adds	r3, r3, r0
 80022fa:	009b      	lsls	r3, r3, #2
 80022fc:	4699      	mov	r9, r3
 80022fe:	6923      	ldr	r3, [r4, #16]
 8002300:	3001      	adds	r0, #1
 8002302:	469c      	mov	ip, r3
 8002304:	464b      	mov	r3, r9
 8002306:	4463      	add	r3, ip
 8002308:	6160      	str	r0, [r4, #20]
 800230a:	701f      	strb	r7, [r3, #0]
 800230c:	60dd      	str	r5, [r3, #12]
 800230e:	68e5      	ldr	r5, [r4, #12]
 8002310:	605f      	str	r7, [r3, #4]
 8002312:	609f      	str	r7, [r3, #8]
 8002314:	6119      	str	r1, [r3, #16]
 8002316:	186d      	adds	r5, r5, r1
 8002318:	1a76      	subs	r6, r6, r1
 800231a:	e689      	b.n	8002030 <d_special_name+0xac>
 800231c:	001a      	movs	r2, r3
 800231e:	e691      	b.n	8002044 <d_special_name+0xc0>
 8002320:	252e      	movs	r5, #46	; 0x2e
 8002322:	e671      	b.n	8002008 <d_special_name+0x84>
 8002324:	252f      	movs	r5, #47	; 0x2f
 8002326:	e66f      	b.n	8002008 <d_special_name+0x84>
 8002328:	2100      	movs	r1, #0
 800232a:	0020      	movs	r0, r4
 800232c:	f000 f96c 	bl	8002608 <d_encoding.part.0>
 8002330:	0002      	movs	r2, r0
 8002332:	e6f1      	b.n	8002118 <d_special_name+0x194>
 8002334:	68e3      	ldr	r3, [r4, #12]
 8002336:	3302      	adds	r3, #2
 8002338:	60e3      	str	r3, [r4, #12]
 800233a:	e697      	b.n	800206c <d_special_name+0xe8>
 800233c:	68e3      	ldr	r3, [r4, #12]
 800233e:	2000      	movs	r0, #0
 8002340:	185b      	adds	r3, r3, r1
 8002342:	60e3      	str	r3, [r4, #12]
 8002344:	e693      	b.n	800206e <d_special_name+0xea>
 8002346:	0020      	movs	r0, r4
 8002348:	f7ff fe1c 	bl	8001f84 <d_special_name>
 800234c:	0002      	movs	r2, r0
 800234e:	e713      	b.n	8002178 <d_special_name+0x1f4>
 8002350:	0020      	movs	r0, r4
 8002352:	f7ff fe17 	bl	8001f84 <d_special_name>
 8002356:	0002      	movs	r2, r0
 8002358:	e727      	b.n	80021aa <d_special_name+0x226>
 800235a:	0020      	movs	r0, r4
 800235c:	f7ff fe12 	bl	8001f84 <d_special_name>
 8002360:	0002      	movs	r2, r0
 8002362:	e6f0      	b.n	8002146 <d_special_name+0x1c2>
 8002364:	0020      	movs	r0, r4
 8002366:	f7ff fe0d 	bl	8001f84 <d_special_name>
 800236a:	0002      	movs	r2, r0
 800236c:	e73d      	b.n	80021ea <d_special_name+0x266>
 800236e:	46c0      	nop			; (mov r8, r8)
 8002370:	0800ec1c 	.word	0x0800ec1c

08002374 <d_name>:
 8002374:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002376:	46c6      	mov	lr, r8
 8002378:	b500      	push	{lr}
 800237a:	68c2      	ldr	r2, [r0, #12]
 800237c:	0004      	movs	r4, r0
 800237e:	7813      	ldrb	r3, [r2, #0]
 8002380:	b082      	sub	sp, #8
 8002382:	2b55      	cmp	r3, #85	; 0x55
 8002384:	d058      	beq.n	8002438 <d_name+0xc4>
 8002386:	d81d      	bhi.n	80023c4 <d_name+0x50>
 8002388:	2b4e      	cmp	r3, #78	; 0x4e
 800238a:	d100      	bne.n	800238e <d_name+0x1a>
 800238c:	e0b0      	b.n	80024f0 <d_name+0x17c>
 800238e:	2b53      	cmp	r3, #83	; 0x53
 8002390:	d15a      	bne.n	8002448 <d_name+0xd4>
 8002392:	7853      	ldrb	r3, [r2, #1]
 8002394:	2b74      	cmp	r3, #116	; 0x74
 8002396:	d100      	bne.n	800239a <d_name+0x26>
 8002398:	e06f      	b.n	800247a <d_name+0x106>
 800239a:	2100      	movs	r1, #0
 800239c:	f7fe fa16 	bl	80007cc <d_substitution>
 80023a0:	68e2      	ldr	r2, [r4, #12]
 80023a2:	0005      	movs	r5, r0
 80023a4:	7813      	ldrb	r3, [r2, #0]
 80023a6:	2b49      	cmp	r3, #73	; 0x49
 80023a8:	d149      	bne.n	800243e <d_name+0xca>
 80023aa:	3201      	adds	r2, #1
 80023ac:	0020      	movs	r0, r4
 80023ae:	60e2      	str	r2, [r4, #12]
 80023b0:	f7ff f9c2 	bl	8001738 <d_template_args_1>
 80023b4:	0003      	movs	r3, r0
 80023b6:	002a      	movs	r2, r5
 80023b8:	2104      	movs	r1, #4
 80023ba:	0020      	movs	r0, r4
 80023bc:	f7fd fea0 	bl	8000100 <d_make_comp>
 80023c0:	0005      	movs	r5, r0
 80023c2:	e03c      	b.n	800243e <d_name+0xca>
 80023c4:	2b5a      	cmp	r3, #90	; 0x5a
 80023c6:	d13f      	bne.n	8002448 <d_name+0xd4>
 80023c8:	1c53      	adds	r3, r2, #1
 80023ca:	60c3      	str	r3, [r0, #12]
 80023cc:	7853      	ldrb	r3, [r2, #1]
 80023ce:	2b47      	cmp	r3, #71	; 0x47
 80023d0:	d002      	beq.n	80023d8 <d_name+0x64>
 80023d2:	2b54      	cmp	r3, #84	; 0x54
 80023d4:	d000      	beq.n	80023d8 <d_name+0x64>
 80023d6:	e0ac      	b.n	8002532 <d_name+0x1be>
 80023d8:	0020      	movs	r0, r4
 80023da:	f7ff fdd3 	bl	8001f84 <d_special_name>
 80023de:	0005      	movs	r5, r0
 80023e0:	2d00      	cmp	r5, #0
 80023e2:	d100      	bne.n	80023e6 <d_name+0x72>
 80023e4:	e082      	b.n	80024ec <d_name+0x178>
 80023e6:	68e3      	ldr	r3, [r4, #12]
 80023e8:	781a      	ldrb	r2, [r3, #0]
 80023ea:	2a45      	cmp	r2, #69	; 0x45
 80023ec:	d000      	beq.n	80023f0 <d_name+0x7c>
 80023ee:	e07d      	b.n	80024ec <d_name+0x178>
 80023f0:	1c5a      	adds	r2, r3, #1
 80023f2:	60e2      	str	r2, [r4, #12]
 80023f4:	785a      	ldrb	r2, [r3, #1]
 80023f6:	2a73      	cmp	r2, #115	; 0x73
 80023f8:	d100      	bne.n	80023fc <d_name+0x88>
 80023fa:	e0de      	b.n	80025ba <d_name+0x246>
 80023fc:	2a64      	cmp	r2, #100	; 0x64
 80023fe:	d100      	bne.n	8002402 <d_name+0x8e>
 8002400:	e09c      	b.n	800253c <d_name+0x1c8>
 8002402:	0020      	movs	r0, r4
 8002404:	f7ff ffb6 	bl	8002374 <d_name>
 8002408:	1e06      	subs	r6, r0, #0
 800240a:	d009      	beq.n	8002420 <d_name+0xac>
 800240c:	22fd      	movs	r2, #253	; 0xfd
 800240e:	7803      	ldrb	r3, [r0, #0]
 8002410:	3b47      	subs	r3, #71	; 0x47
 8002412:	4213      	tst	r3, r2
 8002414:	d004      	beq.n	8002420 <d_name+0xac>
 8002416:	0020      	movs	r0, r4
 8002418:	f7fd ff9e 	bl	8000358 <d_discriminator>
 800241c:	2800      	cmp	r0, #0
 800241e:	d065      	beq.n	80024ec <d_name+0x178>
 8002420:	782b      	ldrb	r3, [r5, #0]
 8002422:	2b03      	cmp	r3, #3
 8002424:	d100      	bne.n	8002428 <d_name+0xb4>
 8002426:	e0c0      	b.n	80025aa <d_name+0x236>
 8002428:	002a      	movs	r2, r5
 800242a:	0033      	movs	r3, r6
 800242c:	2102      	movs	r1, #2
 800242e:	0020      	movs	r0, r4
 8002430:	f7fd fe66 	bl	8000100 <d_make_comp>
 8002434:	0005      	movs	r5, r0
 8002436:	e002      	b.n	800243e <d_name+0xca>
 8002438:	f7fe ff46 	bl	80012c8 <d_unqualified_name>
 800243c:	0005      	movs	r5, r0
 800243e:	0028      	movs	r0, r5
 8002440:	b002      	add	sp, #8
 8002442:	bc80      	pop	{r7}
 8002444:	46b8      	mov	r8, r7
 8002446:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002448:	0020      	movs	r0, r4
 800244a:	f7fe ff3d 	bl	80012c8 <d_unqualified_name>
 800244e:	68e2      	ldr	r2, [r4, #12]
 8002450:	0005      	movs	r5, r0
 8002452:	7813      	ldrb	r3, [r2, #0]
 8002454:	2b49      	cmp	r3, #73	; 0x49
 8002456:	d1f2      	bne.n	800243e <d_name+0xca>
 8002458:	2800      	cmp	r0, #0
 800245a:	d047      	beq.n	80024ec <d_name+0x178>
 800245c:	6a23      	ldr	r3, [r4, #32]
 800245e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8002460:	428b      	cmp	r3, r1
 8002462:	da43      	bge.n	80024ec <d_name+0x178>
 8002464:	69e1      	ldr	r1, [r4, #28]
 8002466:	0098      	lsls	r0, r3, #2
 8002468:	3301      	adds	r3, #1
 800246a:	5045      	str	r5, [r0, r1]
 800246c:	6223      	str	r3, [r4, #32]
 800246e:	7811      	ldrb	r1, [r2, #0]
 8002470:	2300      	movs	r3, #0
 8002472:	3949      	subs	r1, #73	; 0x49
 8002474:	2901      	cmp	r1, #1
 8002476:	d998      	bls.n	80023aa <d_name+0x36>
 8002478:	e79d      	b.n	80023b6 <d_name+0x42>
 800247a:	3202      	adds	r2, #2
 800247c:	60c2      	str	r2, [r0, #12]
 800247e:	6943      	ldr	r3, [r0, #20]
 8002480:	6982      	ldr	r2, [r0, #24]
 8002482:	4293      	cmp	r3, r2
 8002484:	db00      	blt.n	8002488 <d_name+0x114>
 8002486:	e0b3      	b.n	80025f0 <d_name+0x27c>
 8002488:	009a      	lsls	r2, r3, #2
 800248a:	18d2      	adds	r2, r2, r3
 800248c:	3301      	adds	r3, #1
 800248e:	6143      	str	r3, [r0, #20]
 8002490:	2300      	movs	r3, #0
 8002492:	6905      	ldr	r5, [r0, #16]
 8002494:	0092      	lsls	r2, r2, #2
 8002496:	18ad      	adds	r5, r5, r2
 8002498:	606b      	str	r3, [r5, #4]
 800249a:	60ab      	str	r3, [r5, #8]
 800249c:	702b      	strb	r3, [r5, #0]
 800249e:	4b58      	ldr	r3, [pc, #352]	; (8002600 <d_name+0x28c>)
 80024a0:	60eb      	str	r3, [r5, #12]
 80024a2:	2303      	movs	r3, #3
 80024a4:	612b      	str	r3, [r5, #16]
 80024a6:	0020      	movs	r0, r4
 80024a8:	f7fe ff0e 	bl	80012c8 <d_unqualified_name>
 80024ac:	002a      	movs	r2, r5
 80024ae:	0003      	movs	r3, r0
 80024b0:	2101      	movs	r1, #1
 80024b2:	0020      	movs	r0, r4
 80024b4:	f7fd fe24 	bl	8000100 <d_make_comp>
 80024b8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80024ba:	68e2      	ldr	r2, [r4, #12]
 80024bc:	3303      	adds	r3, #3
 80024be:	62e3      	str	r3, [r4, #44]	; 0x2c
 80024c0:	7813      	ldrb	r3, [r2, #0]
 80024c2:	0005      	movs	r5, r0
 80024c4:	2b49      	cmp	r3, #73	; 0x49
 80024c6:	d1ba      	bne.n	800243e <d_name+0xca>
 80024c8:	2800      	cmp	r0, #0
 80024ca:	d00f      	beq.n	80024ec <d_name+0x178>
 80024cc:	6a23      	ldr	r3, [r4, #32]
 80024ce:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80024d0:	428b      	cmp	r3, r1
 80024d2:	da0b      	bge.n	80024ec <d_name+0x178>
 80024d4:	69e1      	ldr	r1, [r4, #28]
 80024d6:	0098      	lsls	r0, r3, #2
 80024d8:	3301      	adds	r3, #1
 80024da:	5045      	str	r5, [r0, r1]
 80024dc:	6223      	str	r3, [r4, #32]
 80024de:	7811      	ldrb	r1, [r2, #0]
 80024e0:	2300      	movs	r3, #0
 80024e2:	3949      	subs	r1, #73	; 0x49
 80024e4:	2901      	cmp	r1, #1
 80024e6:	d900      	bls.n	80024ea <d_name+0x176>
 80024e8:	e765      	b.n	80023b6 <d_name+0x42>
 80024ea:	e75e      	b.n	80023aa <d_name+0x36>
 80024ec:	2500      	movs	r5, #0
 80024ee:	e7a6      	b.n	800243e <d_name+0xca>
 80024f0:	3201      	adds	r2, #1
 80024f2:	60c2      	str	r2, [r0, #12]
 80024f4:	a901      	add	r1, sp, #4
 80024f6:	2201      	movs	r2, #1
 80024f8:	f7ff fc8c 	bl	8001e14 <d_cv_qualifiers>
 80024fc:	1e05      	subs	r5, r0, #0
 80024fe:	d0f5      	beq.n	80024ec <d_name+0x178>
 8002500:	2100      	movs	r1, #0
 8002502:	0020      	movs	r0, r4
 8002504:	f7fd fec2 	bl	800028c <d_ref_qualifier>
 8002508:	2101      	movs	r1, #1
 800250a:	0006      	movs	r6, r0
 800250c:	0020      	movs	r0, r4
 800250e:	f7ff f943 	bl	8001798 <d_prefix>
 8002512:	6028      	str	r0, [r5, #0]
 8002514:	2800      	cmp	r0, #0
 8002516:	d0e9      	beq.n	80024ec <d_name+0x178>
 8002518:	2e00      	cmp	r6, #0
 800251a:	d002      	beq.n	8002522 <d_name+0x1ae>
 800251c:	9b01      	ldr	r3, [sp, #4]
 800251e:	9601      	str	r6, [sp, #4]
 8002520:	60f3      	str	r3, [r6, #12]
 8002522:	68e3      	ldr	r3, [r4, #12]
 8002524:	781a      	ldrb	r2, [r3, #0]
 8002526:	2a45      	cmp	r2, #69	; 0x45
 8002528:	d1e0      	bne.n	80024ec <d_name+0x178>
 800252a:	3301      	adds	r3, #1
 800252c:	9d01      	ldr	r5, [sp, #4]
 800252e:	60e3      	str	r3, [r4, #12]
 8002530:	e785      	b.n	800243e <d_name+0xca>
 8002532:	2100      	movs	r1, #0
 8002534:	f000 f868 	bl	8002608 <d_encoding.part.0>
 8002538:	0005      	movs	r5, r0
 800253a:	e751      	b.n	80023e0 <d_name+0x6c>
 800253c:	1c9a      	adds	r2, r3, #2
 800253e:	60e2      	str	r2, [r4, #12]
 8002540:	789a      	ldrb	r2, [r3, #2]
 8002542:	2a5f      	cmp	r2, #95	; 0x5f
 8002544:	d056      	beq.n	80025f4 <d_name+0x280>
 8002546:	2a6e      	cmp	r2, #110	; 0x6e
 8002548:	d0d0      	beq.n	80024ec <d_name+0x178>
 800254a:	0020      	movs	r0, r4
 800254c:	f7fd fe38 	bl	80001c0 <d_number>
 8002550:	1c47      	adds	r7, r0, #1
 8002552:	d4cb      	bmi.n	80024ec <d_name+0x178>
 8002554:	68e3      	ldr	r3, [r4, #12]
 8002556:	781a      	ldrb	r2, [r3, #0]
 8002558:	2a5f      	cmp	r2, #95	; 0x5f
 800255a:	d1c7      	bne.n	80024ec <d_name+0x178>
 800255c:	3301      	adds	r3, #1
 800255e:	0020      	movs	r0, r4
 8002560:	60e3      	str	r3, [r4, #12]
 8002562:	f7ff ff07 	bl	8002374 <d_name>
 8002566:	4680      	mov	r8, r0
 8002568:	2800      	cmp	r0, #0
 800256a:	d00a      	beq.n	8002582 <d_name+0x20e>
 800256c:	4643      	mov	r3, r8
 800256e:	22fd      	movs	r2, #253	; 0xfd
 8002570:	781b      	ldrb	r3, [r3, #0]
 8002572:	3b47      	subs	r3, #71	; 0x47
 8002574:	4213      	tst	r3, r2
 8002576:	d004      	beq.n	8002582 <d_name+0x20e>
 8002578:	0020      	movs	r0, r4
 800257a:	f7fd feed 	bl	8000358 <d_discriminator>
 800257e:	2800      	cmp	r0, #0
 8002580:	d0b4      	beq.n	80024ec <d_name+0x178>
 8002582:	6963      	ldr	r3, [r4, #20]
 8002584:	69a2      	ldr	r2, [r4, #24]
 8002586:	4293      	cmp	r3, r2
 8002588:	da37      	bge.n	80025fa <d_name+0x286>
 800258a:	009a      	lsls	r2, r3, #2
 800258c:	6926      	ldr	r6, [r4, #16]
 800258e:	18d2      	adds	r2, r2, r3
 8002590:	0092      	lsls	r2, r2, #2
 8002592:	18b6      	adds	r6, r6, r2
 8002594:	2200      	movs	r2, #0
 8002596:	3301      	adds	r3, #1
 8002598:	6072      	str	r2, [r6, #4]
 800259a:	60b2      	str	r2, [r6, #8]
 800259c:	6163      	str	r3, [r4, #20]
 800259e:	2348      	movs	r3, #72	; 0x48
 80025a0:	7033      	strb	r3, [r6, #0]
 80025a2:	4643      	mov	r3, r8
 80025a4:	6137      	str	r7, [r6, #16]
 80025a6:	60f3      	str	r3, [r6, #12]
 80025a8:	e73a      	b.n	8002420 <d_name+0xac>
 80025aa:	692b      	ldr	r3, [r5, #16]
 80025ac:	781a      	ldrb	r2, [r3, #0]
 80025ae:	2a29      	cmp	r2, #41	; 0x29
 80025b0:	d000      	beq.n	80025b4 <d_name+0x240>
 80025b2:	e739      	b.n	8002428 <d_name+0xb4>
 80025b4:	2200      	movs	r2, #0
 80025b6:	60da      	str	r2, [r3, #12]
 80025b8:	e736      	b.n	8002428 <d_name+0xb4>
 80025ba:	3302      	adds	r3, #2
 80025bc:	0020      	movs	r0, r4
 80025be:	60e3      	str	r3, [r4, #12]
 80025c0:	f7fd feca 	bl	8000358 <d_discriminator>
 80025c4:	2800      	cmp	r0, #0
 80025c6:	d091      	beq.n	80024ec <d_name+0x178>
 80025c8:	6963      	ldr	r3, [r4, #20]
 80025ca:	69a2      	ldr	r2, [r4, #24]
 80025cc:	4293      	cmp	r3, r2
 80025ce:	da14      	bge.n	80025fa <d_name+0x286>
 80025d0:	009a      	lsls	r2, r3, #2
 80025d2:	18d2      	adds	r2, r2, r3
 80025d4:	3301      	adds	r3, #1
 80025d6:	6163      	str	r3, [r4, #20]
 80025d8:	2300      	movs	r3, #0
 80025da:	6926      	ldr	r6, [r4, #16]
 80025dc:	0092      	lsls	r2, r2, #2
 80025de:	18b6      	adds	r6, r6, r2
 80025e0:	6073      	str	r3, [r6, #4]
 80025e2:	60b3      	str	r3, [r6, #8]
 80025e4:	7033      	strb	r3, [r6, #0]
 80025e6:	4b07      	ldr	r3, [pc, #28]	; (8002604 <d_name+0x290>)
 80025e8:	60f3      	str	r3, [r6, #12]
 80025ea:	230e      	movs	r3, #14
 80025ec:	6133      	str	r3, [r6, #16]
 80025ee:	e717      	b.n	8002420 <d_name+0xac>
 80025f0:	2500      	movs	r5, #0
 80025f2:	e758      	b.n	80024a6 <d_name+0x132>
 80025f4:	2700      	movs	r7, #0
 80025f6:	3303      	adds	r3, #3
 80025f8:	e7b1      	b.n	800255e <d_name+0x1ea>
 80025fa:	2600      	movs	r6, #0
 80025fc:	e710      	b.n	8002420 <d_name+0xac>
 80025fe:	46c0      	nop			; (mov r8, r8)
 8002600:	0800fc30 	.word	0x0800fc30
 8002604:	0800fc20 	.word	0x0800fc20

08002608 <d_encoding.part.0>:
 8002608:	b570      	push	{r4, r5, r6, lr}
 800260a:	0005      	movs	r5, r0
 800260c:	000e      	movs	r6, r1
 800260e:	f7ff feb1 	bl	8002374 <d_name>
 8002612:	1e04      	subs	r4, r0, #0
 8002614:	d01c      	beq.n	8002650 <d_encoding.part.0+0x48>
 8002616:	2e00      	cmp	r6, #0
 8002618:	d01d      	beq.n	8002656 <d_encoding.part.0+0x4e>
 800261a:	68ab      	ldr	r3, [r5, #8]
 800261c:	07db      	lsls	r3, r3, #31
 800261e:	d41a      	bmi.n	8002656 <d_encoding.part.0+0x4e>
 8002620:	7823      	ldrb	r3, [r4, #0]
 8002622:	2b4e      	cmp	r3, #78	; 0x4e
 8002624:	d03c      	beq.n	80026a0 <d_encoding.part.0+0x98>
 8002626:	d838      	bhi.n	800269a <d_encoding.part.0+0x92>
 8002628:	001a      	movs	r2, r3
 800262a:	3a1c      	subs	r2, #28
 800262c:	2a04      	cmp	r2, #4
 800262e:	d937      	bls.n	80026a0 <d_encoding.part.0+0x98>
 8002630:	2b02      	cmp	r3, #2
 8002632:	d10e      	bne.n	8002652 <d_encoding.part.0+0x4a>
 8002634:	6922      	ldr	r2, [r4, #16]
 8002636:	2a00      	cmp	r2, #0
 8002638:	d00a      	beq.n	8002650 <d_encoding.part.0+0x48>
 800263a:	7813      	ldrb	r3, [r2, #0]
 800263c:	2b4e      	cmp	r3, #78	; 0x4e
 800263e:	d003      	beq.n	8002648 <d_encoding.part.0+0x40>
 8002640:	d83d      	bhi.n	80026be <d_encoding.part.0+0xb6>
 8002642:	3b1c      	subs	r3, #28
 8002644:	2b04      	cmp	r3, #4
 8002646:	d804      	bhi.n	8002652 <d_encoding.part.0+0x4a>
 8002648:	68d2      	ldr	r2, [r2, #12]
 800264a:	6122      	str	r2, [r4, #16]
 800264c:	2a00      	cmp	r2, #0
 800264e:	d1f4      	bne.n	800263a <d_encoding.part.0+0x32>
 8002650:	2400      	movs	r4, #0
 8002652:	0020      	movs	r0, r4
 8002654:	bd70      	pop	{r4, r5, r6, pc}
 8002656:	68eb      	ldr	r3, [r5, #12]
 8002658:	781b      	ldrb	r3, [r3, #0]
 800265a:	2b00      	cmp	r3, #0
 800265c:	d0f9      	beq.n	8002652 <d_encoding.part.0+0x4a>
 800265e:	2b45      	cmp	r3, #69	; 0x45
 8002660:	d0f7      	beq.n	8002652 <d_encoding.part.0+0x4a>
 8002662:	0022      	movs	r2, r4
 8002664:	7813      	ldrb	r3, [r2, #0]
 8002666:	2b04      	cmp	r3, #4
 8002668:	d02d      	beq.n	80026c6 <d_encoding.part.0+0xbe>
 800266a:	d81b      	bhi.n	80026a4 <d_encoding.part.0+0x9c>
 800266c:	2b02      	cmp	r3, #2
 800266e:	d102      	bne.n	8002676 <d_encoding.part.0+0x6e>
 8002670:	6912      	ldr	r2, [r2, #16]
 8002672:	2a00      	cmp	r2, #0
 8002674:	d1f6      	bne.n	8002664 <d_encoding.part.0+0x5c>
 8002676:	2100      	movs	r1, #0
 8002678:	0028      	movs	r0, r5
 800267a:	f7fe fd39 	bl	80010f0 <d_bare_function_type>
 800267e:	1e03      	subs	r3, r0, #0
 8002680:	d0e6      	beq.n	8002650 <d_encoding.part.0+0x48>
 8002682:	2e00      	cmp	r6, #0
 8002684:	d102      	bne.n	800268c <d_encoding.part.0+0x84>
 8002686:	7822      	ldrb	r2, [r4, #0]
 8002688:	2a02      	cmp	r2, #2
 800268a:	d030      	beq.n	80026ee <d_encoding.part.0+0xe6>
 800268c:	0022      	movs	r2, r4
 800268e:	2103      	movs	r1, #3
 8002690:	0028      	movs	r0, r5
 8002692:	f7fd fd35 	bl	8000100 <d_make_comp>
 8002696:	0004      	movs	r4, r0
 8002698:	e7db      	b.n	8002652 <d_encoding.part.0+0x4a>
 800269a:	3b50      	subs	r3, #80	; 0x50
 800269c:	2b01      	cmp	r3, #1
 800269e:	d8d8      	bhi.n	8002652 <d_encoding.part.0+0x4a>
 80026a0:	68e4      	ldr	r4, [r4, #12]
 80026a2:	e7bd      	b.n	8002620 <d_encoding.part.0+0x18>
 80026a4:	2b4e      	cmp	r3, #78	; 0x4e
 80026a6:	d003      	beq.n	80026b0 <d_encoding.part.0+0xa8>
 80026a8:	d904      	bls.n	80026b4 <d_encoding.part.0+0xac>
 80026aa:	3b50      	subs	r3, #80	; 0x50
 80026ac:	2b01      	cmp	r3, #1
 80026ae:	d8e2      	bhi.n	8002676 <d_encoding.part.0+0x6e>
 80026b0:	68d2      	ldr	r2, [r2, #12]
 80026b2:	e7de      	b.n	8002672 <d_encoding.part.0+0x6a>
 80026b4:	3b1c      	subs	r3, #28
 80026b6:	2b04      	cmp	r3, #4
 80026b8:	d8dd      	bhi.n	8002676 <d_encoding.part.0+0x6e>
 80026ba:	68d2      	ldr	r2, [r2, #12]
 80026bc:	e7d9      	b.n	8002672 <d_encoding.part.0+0x6a>
 80026be:	3b50      	subs	r3, #80	; 0x50
 80026c0:	2b01      	cmp	r3, #1
 80026c2:	d8c6      	bhi.n	8002652 <d_encoding.part.0+0x4a>
 80026c4:	e7c0      	b.n	8002648 <d_encoding.part.0+0x40>
 80026c6:	68d3      	ldr	r3, [r2, #12]
 80026c8:	2b00      	cmp	r3, #0
 80026ca:	d00a      	beq.n	80026e2 <d_encoding.part.0+0xda>
 80026cc:	7819      	ldrb	r1, [r3, #0]
 80026ce:	2908      	cmp	r1, #8
 80026d0:	d809      	bhi.n	80026e6 <d_encoding.part.0+0xde>
 80026d2:	2906      	cmp	r1, #6
 80026d4:	d8cf      	bhi.n	8002676 <d_encoding.part.0+0x6e>
 80026d6:	3901      	subs	r1, #1
 80026d8:	2901      	cmp	r1, #1
 80026da:	d802      	bhi.n	80026e2 <d_encoding.part.0+0xda>
 80026dc:	691b      	ldr	r3, [r3, #16]
 80026de:	2b00      	cmp	r3, #0
 80026e0:	d1f4      	bne.n	80026cc <d_encoding.part.0+0xc4>
 80026e2:	2101      	movs	r1, #1
 80026e4:	e7c8      	b.n	8002678 <d_encoding.part.0+0x70>
 80026e6:	3935      	subs	r1, #53	; 0x35
 80026e8:	1e4b      	subs	r3, r1, #1
 80026ea:	4199      	sbcs	r1, r3
 80026ec:	e7c4      	b.n	8002678 <d_encoding.part.0+0x70>
 80026ee:	7802      	ldrb	r2, [r0, #0]
 80026f0:	2a29      	cmp	r2, #41	; 0x29
 80026f2:	d1cb      	bne.n	800268c <d_encoding.part.0+0x84>
 80026f4:	60c6      	str	r6, [r0, #12]
 80026f6:	e7c9      	b.n	800268c <d_encoding.part.0+0x84>

080026f8 <d_print_comp_inner>:
 80026f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80026fa:	4645      	mov	r5, r8
 80026fc:	46de      	mov	lr, fp
 80026fe:	4657      	mov	r7, sl
 8002700:	464e      	mov	r6, r9
 8002702:	b5e0      	push	{r5, r6, r7, lr}
 8002704:	0004      	movs	r4, r0
 8002706:	0015      	movs	r5, r2
 8002708:	b097      	sub	sp, #92	; 0x5c
 800270a:	2a00      	cmp	r2, #0
 800270c:	d017      	beq.n	800273e <d_print_comp_inner+0x46>
 800270e:	238c      	movs	r3, #140	; 0x8c
 8002710:	005b      	lsls	r3, r3, #1
 8002712:	58c7      	ldr	r7, [r0, r3]
 8002714:	2f00      	cmp	r7, #0
 8002716:	d116      	bne.n	8002746 <d_print_comp_inner+0x4e>
 8002718:	7816      	ldrb	r6, [r2, #0]
 800271a:	2e51      	cmp	r6, #81	; 0x51
 800271c:	d85d      	bhi.n	80027da <d_print_comp_inner+0xe2>
 800271e:	4ae4      	ldr	r2, [pc, #912]	; (8002ab0 <d_print_comp_inner+0x3b8>)
 8002720:	00b3      	lsls	r3, r6, #2
 8002722:	58d3      	ldr	r3, [r2, r3]
 8002724:	469f      	mov	pc, r3
 8002726:	33f5      	adds	r3, #245	; 0xf5
 8002728:	58e1      	ldr	r1, [r4, r3]
 800272a:	2900      	cmp	r1, #0
 800272c:	da01      	bge.n	8002732 <d_print_comp_inner+0x3a>
 800272e:	f001 ff08 	bl	8004542 <d_print_comp_inner+0x1e4a>
 8002732:	f7fd fe37 	bl	80003a4 <d_index_template_argument.part.0>
 8002736:	1e02      	subs	r2, r0, #0
 8002738:	d001      	beq.n	800273e <d_print_comp_inner+0x46>
 800273a:	f001 ff02 	bl	8004542 <d_print_comp_inner+0x1e4a>
 800273e:	238c      	movs	r3, #140	; 0x8c
 8002740:	2201      	movs	r2, #1
 8002742:	005b      	lsls	r3, r3, #1
 8002744:	50e2      	str	r2, [r4, r3]
 8002746:	b017      	add	sp, #92	; 0x5c
 8002748:	bcf0      	pop	{r4, r5, r6, r7}
 800274a:	46bb      	mov	fp, r7
 800274c:	46b2      	mov	sl, r6
 800274e:	46a9      	mov	r9, r5
 8002750:	46a0      	mov	r8, r4
 8002752:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002754:	2300      	movs	r3, #0
 8002756:	4698      	mov	r8, r3
 8002758:	238a      	movs	r3, #138	; 0x8a
 800275a:	ae06      	add	r6, sp, #24
 800275c:	005b      	lsls	r3, r3, #1
 800275e:	58e2      	ldr	r2, [r4, r3]
 8002760:	50e6      	str	r6, [r4, r3]
 8002762:	2300      	movs	r3, #0
 8002764:	9206      	str	r2, [sp, #24]
 8002766:	60b3      	str	r3, [r6, #8]
 8002768:	3311      	adds	r3, #17
 800276a:	33ff      	adds	r3, #255	; 0xff
 800276c:	58e3      	ldr	r3, [r4, r3]
 800276e:	6075      	str	r5, [r6, #4]
 8002770:	60f3      	str	r3, [r6, #12]
 8002772:	4643      	mov	r3, r8
 8002774:	2b00      	cmp	r3, #0
 8002776:	d101      	bne.n	800277c <d_print_comp_inner+0x84>
 8002778:	f002 fc97 	bl	80050aa <d_print_comp_inner+0x29b2>
 800277c:	4642      	mov	r2, r8
 800277e:	2111      	movs	r1, #17
 8002780:	0020      	movs	r0, r4
 8002782:	f002 fc9f 	bl	80050c4 <d_print_comp>
 8002786:	68b3      	ldr	r3, [r6, #8]
 8002788:	2b00      	cmp	r3, #0
 800278a:	d101      	bne.n	8002790 <d_print_comp_inner+0x98>
 800278c:	f001 fde2 	bl	8004354 <d_print_comp_inner+0x1c5c>
 8002790:	238a      	movs	r3, #138	; 0x8a
 8002792:	9a06      	ldr	r2, [sp, #24]
 8002794:	005b      	lsls	r3, r3, #1
 8002796:	50e2      	str	r2, [r4, r3]
 8002798:	2f00      	cmp	r7, #0
 800279a:	d0d4      	beq.n	8002746 <d_print_comp_inner+0x4e>
 800279c:	464a      	mov	r2, r9
 800279e:	3b04      	subs	r3, #4
 80027a0:	50e2      	str	r2, [r4, r3]
 80027a2:	e7d0      	b.n	8002746 <d_print_comp_inner+0x4e>
 80027a4:	238a      	movs	r3, #138	; 0x8a
 80027a6:	005b      	lsls	r3, r3, #1
 80027a8:	58c0      	ldr	r0, [r0, r3]
 80027aa:	2800      	cmp	r0, #0
 80027ac:	d012      	beq.n	80027d4 <d_print_comp_inner+0xdc>
 80027ae:	0003      	movs	r3, r0
 80027b0:	689a      	ldr	r2, [r3, #8]
 80027b2:	2a00      	cmp	r2, #0
 80027b4:	d10b      	bne.n	80027ce <d_print_comp_inner+0xd6>
 80027b6:	685a      	ldr	r2, [r3, #4]
 80027b8:	7812      	ldrb	r2, [r2, #0]
 80027ba:	0011      	movs	r1, r2
 80027bc:	3919      	subs	r1, #25
 80027be:	2902      	cmp	r1, #2
 80027c0:	d901      	bls.n	80027c6 <d_print_comp_inner+0xce>
 80027c2:	f002 f81d 	bl	8004800 <d_print_comp_inner+0x2108>
 80027c6:	4296      	cmp	r6, r2
 80027c8:	d101      	bne.n	80027ce <d_print_comp_inner+0xd6>
 80027ca:	f002 f81e 	bl	800480a <d_print_comp_inner+0x2112>
 80027ce:	681b      	ldr	r3, [r3, #0]
 80027d0:	2b00      	cmp	r3, #0
 80027d2:	d1ed      	bne.n	80027b0 <d_print_comp_inner+0xb8>
 80027d4:	68eb      	ldr	r3, [r5, #12]
 80027d6:	4698      	mov	r8, r3
 80027d8:	e07d      	b.n	80028d6 <d_print_comp_inner+0x1de>
 80027da:	238c      	movs	r3, #140	; 0x8c
 80027dc:	2201      	movs	r2, #1
 80027de:	005b      	lsls	r3, r3, #1
 80027e0:	50e2      	str	r2, [r4, r3]
 80027e2:	e7b0      	b.n	8002746 <d_print_comp_inner+0x4e>
 80027e4:	68ea      	ldr	r2, [r5, #12]
 80027e6:	2a00      	cmp	r2, #0
 80027e8:	d002      	beq.n	80027f0 <d_print_comp_inner+0xf8>
 80027ea:	2111      	movs	r1, #17
 80027ec:	f002 fc6a 	bl	80050c4 <d_print_comp>
 80027f0:	692b      	ldr	r3, [r5, #16]
 80027f2:	2b00      	cmp	r3, #0
 80027f4:	d0a7      	beq.n	8002746 <d_print_comp_inner+0x4e>
 80027f6:	2780      	movs	r7, #128	; 0x80
 80027f8:	007f      	lsls	r7, r7, #1
 80027fa:	59e6      	ldr	r6, [r4, r7]
 80027fc:	2efd      	cmp	r6, #253	; 0xfd
 80027fe:	d901      	bls.n	8002804 <d_print_comp_inner+0x10c>
 8002800:	f002 f80a 	bl	8004818 <d_print_comp_inner+0x2120>
 8002804:	4fab      	ldr	r7, [pc, #684]	; (8002ab4 <d_print_comp_inner+0x3bc>)
 8002806:	1cbb      	adds	r3, r7, #2
 8002808:	469a      	mov	sl, r3
 800280a:	232c      	movs	r3, #44	; 0x2c
 800280c:	4698      	mov	r8, r3
 800280e:	2300      	movs	r3, #0
 8002810:	469b      	mov	fp, r3
 8002812:	002b      	movs	r3, r5
 8002814:	4645      	mov	r5, r8
 8002816:	4698      	mov	r8, r3
 8002818:	e00f      	b.n	800283a <d_print_comp_inner+0x142>
 800281a:	0033      	movs	r3, r6
 800281c:	3601      	adds	r6, #1
 800281e:	2280      	movs	r2, #128	; 0x80
 8002820:	0052      	lsls	r2, r2, #1
 8002822:	50a6      	str	r6, [r4, r2]
 8002824:	54e5      	strb	r5, [r4, r3]
 8002826:	2382      	movs	r3, #130	; 0x82
 8002828:	3701      	adds	r7, #1
 800282a:	005b      	lsls	r3, r3, #1
 800282c:	4691      	mov	r9, r2
 800282e:	54e5      	strb	r5, [r4, r3]
 8002830:	45ba      	cmp	sl, r7
 8002832:	d101      	bne.n	8002838 <d_print_comp_inner+0x140>
 8002834:	f001 fd95 	bl	8004362 <d_print_comp_inner+0x1c6a>
 8002838:	783d      	ldrb	r5, [r7, #0]
 800283a:	2eff      	cmp	r6, #255	; 0xff
 800283c:	d1ed      	bne.n	800281a <d_print_comp_inner+0x122>
 800283e:	465b      	mov	r3, fp
 8002840:	55a3      	strb	r3, [r4, r6]
 8002842:	2386      	movs	r3, #134	; 0x86
 8002844:	005b      	lsls	r3, r3, #1
 8002846:	58e2      	ldr	r2, [r4, r3]
 8002848:	3b04      	subs	r3, #4
 800284a:	58e3      	ldr	r3, [r4, r3]
 800284c:	21ff      	movs	r1, #255	; 0xff
 800284e:	0020      	movs	r0, r4
 8002850:	4798      	blx	r3
 8002852:	2294      	movs	r2, #148	; 0x94
 8002854:	0052      	lsls	r2, r2, #1
 8002856:	58a3      	ldr	r3, [r4, r2]
 8002858:	2601      	movs	r6, #1
 800285a:	3301      	adds	r3, #1
 800285c:	50a3      	str	r3, [r4, r2]
 800285e:	2300      	movs	r3, #0
 8002860:	e7dd      	b.n	800281e <d_print_comp_inner+0x126>
 8002862:	238a      	movs	r3, #138	; 0x8a
 8002864:	ae06      	add	r6, sp, #24
 8002866:	005b      	lsls	r3, r3, #1
 8002868:	58c2      	ldr	r2, [r0, r3]
 800286a:	50c6      	str	r6, [r0, r3]
 800286c:	2300      	movs	r3, #0
 800286e:	9308      	str	r3, [sp, #32]
 8002870:	3311      	adds	r3, #17
 8002872:	33ff      	adds	r3, #255	; 0xff
 8002874:	58c3      	ldr	r3, [r0, r3]
 8002876:	9206      	str	r2, [sp, #24]
 8002878:	2111      	movs	r1, #17
 800287a:	692a      	ldr	r2, [r5, #16]
 800287c:	9309      	str	r3, [sp, #36]	; 0x24
 800287e:	9507      	str	r5, [sp, #28]
 8002880:	f002 fc20 	bl	80050c4 <d_print_comp>
 8002884:	9b08      	ldr	r3, [sp, #32]
 8002886:	2b00      	cmp	r3, #0
 8002888:	d101      	bne.n	800288e <d_print_comp_inner+0x196>
 800288a:	f001 ff8e 	bl	80047aa <d_print_comp_inner+0x20b2>
 800288e:	238a      	movs	r3, #138	; 0x8a
 8002890:	9a06      	ldr	r2, [sp, #24]
 8002892:	005b      	lsls	r3, r3, #1
 8002894:	50e2      	str	r2, [r4, r3]
 8002896:	e756      	b.n	8002746 <d_print_comp_inner+0x4e>
 8002898:	68eb      	ldr	r3, [r5, #12]
 800289a:	4698      	mov	r8, r3
 800289c:	2390      	movs	r3, #144	; 0x90
 800289e:	005b      	lsls	r3, r3, #1
 80028a0:	58c7      	ldr	r7, [r0, r3]
 80028a2:	4643      	mov	r3, r8
 80028a4:	4642      	mov	r2, r8
 80028a6:	781b      	ldrb	r3, [r3, #0]
 80028a8:	2f00      	cmp	r7, #0
 80028aa:	d001      	beq.n	80028b0 <d_print_comp_inner+0x1b8>
 80028ac:	f001 fe3a 	bl	8004524 <d_print_comp_inner+0x1e2c>
 80028b0:	2b05      	cmp	r3, #5
 80028b2:	d101      	bne.n	80028b8 <d_print_comp_inner+0x1c0>
 80028b4:	f002 f958 	bl	8004b68 <d_print_comp_inner+0x2470>
 80028b8:	2b23      	cmp	r3, #35	; 0x23
 80028ba:	d101      	bne.n	80028c0 <d_print_comp_inner+0x1c8>
 80028bc:	f001 ff8e 	bl	80047dc <d_print_comp_inner+0x20e4>
 80028c0:	429e      	cmp	r6, r3
 80028c2:	d101      	bne.n	80028c8 <d_print_comp_inner+0x1d0>
 80028c4:	f001 ffbd 	bl	8004842 <d_print_comp_inner+0x214a>
 80028c8:	2b24      	cmp	r3, #36	; 0x24
 80028ca:	d101      	bne.n	80028d0 <d_print_comp_inner+0x1d8>
 80028cc:	f002 fa3c 	bl	8004d48 <d_print_comp_inner+0x2650>
 80028d0:	238a      	movs	r3, #138	; 0x8a
 80028d2:	005b      	lsls	r3, r3, #1
 80028d4:	58e0      	ldr	r0, [r4, r3]
 80028d6:	238a      	movs	r3, #138	; 0x8a
 80028d8:	ae06      	add	r6, sp, #24
 80028da:	005b      	lsls	r3, r3, #1
 80028dc:	50e6      	str	r6, [r4, r3]
 80028de:	2300      	movs	r3, #0
 80028e0:	9006      	str	r0, [sp, #24]
 80028e2:	60b3      	str	r3, [r6, #8]
 80028e4:	3311      	adds	r3, #17
 80028e6:	33ff      	adds	r3, #255	; 0xff
 80028e8:	58e3      	ldr	r3, [r4, r3]
 80028ea:	6075      	str	r5, [r6, #4]
 80028ec:	60f3      	str	r3, [r6, #12]
 80028ee:	e745      	b.n	800277c <d_print_comp_inner+0x84>
 80028f0:	68ea      	ldr	r2, [r5, #12]
 80028f2:	7813      	ldrb	r3, [r2, #0]
 80028f4:	2b27      	cmp	r3, #39	; 0x27
 80028f6:	d001      	beq.n	80028fc <d_print_comp_inner+0x204>
 80028f8:	f001 fe6a 	bl	80045d0 <d_print_comp_inner+0x1ed8>
 80028fc:	68d3      	ldr	r3, [r2, #12]
 80028fe:	7c1f      	ldrb	r7, [r3, #16]
 8002900:	2f06      	cmp	r7, #6
 8002902:	d901      	bls.n	8002908 <d_print_comp_inner+0x210>
 8002904:	f001 fd73 	bl	80043ee <d_print_comp_inner+0x1cf6>
 8002908:	2f00      	cmp	r7, #0
 800290a:	d001      	beq.n	8002910 <d_print_comp_inner+0x218>
 800290c:	f002 f97d 	bl	8004c0a <d_print_comp_inner+0x2512>
 8002910:	2380      	movs	r3, #128	; 0x80
 8002912:	005b      	lsls	r3, r3, #1
 8002914:	58e3      	ldr	r3, [r4, r3]
 8002916:	2bff      	cmp	r3, #255	; 0xff
 8002918:	d101      	bne.n	800291e <d_print_comp_inner+0x226>
 800291a:	f002 f8d0 	bl	8004abe <d_print_comp_inner+0x23c6>
 800291e:	1c59      	adds	r1, r3, #1
 8002920:	2680      	movs	r6, #128	; 0x80
 8002922:	0076      	lsls	r6, r6, #1
 8002924:	51a1      	str	r1, [r4, r6]
 8002926:	2128      	movs	r1, #40	; 0x28
 8002928:	54e1      	strb	r1, [r4, r3]
 800292a:	2382      	movs	r3, #130	; 0x82
 800292c:	005b      	lsls	r3, r3, #1
 800292e:	54e1      	strb	r1, [r4, r3]
 8002930:	0020      	movs	r0, r4
 8002932:	3917      	subs	r1, #23
 8002934:	f002 fbc6 	bl	80050c4 <d_print_comp>
 8002938:	59a3      	ldr	r3, [r4, r6]
 800293a:	2bff      	cmp	r3, #255	; 0xff
 800293c:	d101      	bne.n	8002942 <d_print_comp_inner+0x24a>
 800293e:	f002 f8a4 	bl	8004a8a <d_print_comp_inner+0x2392>
 8002942:	1c59      	adds	r1, r3, #1
 8002944:	2280      	movs	r2, #128	; 0x80
 8002946:	0052      	lsls	r2, r2, #1
 8002948:	50a1      	str	r1, [r4, r2]
 800294a:	3ad7      	subs	r2, #215	; 0xd7
 800294c:	54e2      	strb	r2, [r4, r3]
 800294e:	2382      	movs	r3, #130	; 0x82
 8002950:	005b      	lsls	r3, r3, #1
 8002952:	54e2      	strb	r2, [r4, r3]
 8002954:	782b      	ldrb	r3, [r5, #0]
 8002956:	2b3e      	cmp	r3, #62	; 0x3e
 8002958:	d101      	bne.n	800295e <d_print_comp_inner+0x266>
 800295a:	f002 f890 	bl	8004a7e <d_print_comp_inner+0x2386>
 800295e:	2f08      	cmp	r7, #8
 8002960:	d101      	bne.n	8002966 <d_print_comp_inner+0x26e>
 8002962:	f002 f8c0 	bl	8004ae6 <d_print_comp_inner+0x23ee>
 8002966:	2111      	movs	r1, #17
 8002968:	0020      	movs	r0, r4
 800296a:	692a      	ldr	r2, [r5, #16]
 800296c:	f002 fbaa 	bl	80050c4 <d_print_comp>
 8002970:	e6e9      	b.n	8002746 <d_print_comp_inner+0x4e>
 8002972:	2111      	movs	r1, #17
 8002974:	68ea      	ldr	r2, [r5, #12]
 8002976:	f002 fba5 	bl	80050c4 <d_print_comp>
 800297a:	0020      	movs	r0, r4
 800297c:	494e      	ldr	r1, [pc, #312]	; (8002ab8 <d_print_comp_inner+0x3c0>)
 800297e:	f7fd fe03 	bl	8000588 <d_append_string>
 8002982:	692f      	ldr	r7, [r5, #16]
 8002984:	783b      	ldrb	r3, [r7, #0]
 8002986:	2b48      	cmp	r3, #72	; 0x48
 8002988:	d101      	bne.n	800298e <d_print_comp_inner+0x296>
 800298a:	f001 ff9a 	bl	80048c2 <d_print_comp_inner+0x21ca>
 800298e:	003a      	movs	r2, r7
 8002990:	2111      	movs	r1, #17
 8002992:	0020      	movs	r0, r4
 8002994:	f002 fb96 	bl	80050c4 <d_print_comp>
 8002998:	e6d5      	b.n	8002746 <d_print_comp_inner+0x4e>
 800299a:	68ed      	ldr	r5, [r5, #12]
 800299c:	2d00      	cmp	r5, #0
 800299e:	d001      	beq.n	80029a4 <d_print_comp_inner+0x2ac>
 80029a0:	f001 fd47 	bl	8004432 <d_print_comp_inner+0x1d3a>
 80029a4:	4945      	ldr	r1, [pc, #276]	; (8002abc <d_print_comp_inner+0x3c4>)
 80029a6:	f7fd fdef 	bl	8000588 <d_append_string>
 80029aa:	e6cc      	b.n	8002746 <d_print_comp_inner+0x4e>
 80029ac:	2218      	movs	r2, #24
 80029ae:	4690      	mov	r8, r2
 80029b0:	2200      	movs	r2, #0
 80029b2:	2380      	movs	r3, #128	; 0x80
 80029b4:	4693      	mov	fp, r2
 80029b6:	320d      	adds	r2, #13
 80029b8:	32ff      	adds	r2, #255	; 0xff
 80029ba:	4e41      	ldr	r6, [pc, #260]	; (8002ac0 <d_print_comp_inner+0x3c8>)
 80029bc:	4692      	mov	sl, r2
 80029be:	005b      	lsls	r3, r3, #1
 80029c0:	3a04      	subs	r2, #4
 80029c2:	2754      	movs	r7, #84	; 0x54
 80029c4:	4691      	mov	r9, r2
 80029c6:	58c3      	ldr	r3, [r0, r3]
 80029c8:	44b0      	add	r8, r6
 80029ca:	e00e      	b.n	80029ea <d_print_comp_inner+0x2f2>
 80029cc:	001a      	movs	r2, r3
 80029ce:	3301      	adds	r3, #1
 80029d0:	2180      	movs	r1, #128	; 0x80
 80029d2:	0049      	lsls	r1, r1, #1
 80029d4:	5063      	str	r3, [r4, r1]
 80029d6:	54a7      	strb	r7, [r4, r2]
 80029d8:	2282      	movs	r2, #130	; 0x82
 80029da:	0052      	lsls	r2, r2, #1
 80029dc:	54a7      	strb	r7, [r4, r2]
 80029de:	45b0      	cmp	r8, r6
 80029e0:	d101      	bne.n	80029e6 <d_print_comp_inner+0x2ee>
 80029e2:	f001 fa9e 	bl	8003f22 <d_print_comp_inner+0x182a>
 80029e6:	7837      	ldrb	r7, [r6, #0]
 80029e8:	3601      	adds	r6, #1
 80029ea:	2bff      	cmp	r3, #255	; 0xff
 80029ec:	d1ee      	bne.n	80029cc <d_print_comp_inner+0x2d4>
 80029ee:	465a      	mov	r2, fp
 80029f0:	54e2      	strb	r2, [r4, r3]
 80029f2:	4653      	mov	r3, sl
 80029f4:	58e2      	ldr	r2, [r4, r3]
 80029f6:	464b      	mov	r3, r9
 80029f8:	21ff      	movs	r1, #255	; 0xff
 80029fa:	58e3      	ldr	r3, [r4, r3]
 80029fc:	0020      	movs	r0, r4
 80029fe:	4798      	blx	r3
 8002a00:	2294      	movs	r2, #148	; 0x94
 8002a02:	0052      	lsls	r2, r2, #1
 8002a04:	58a3      	ldr	r3, [r4, r2]
 8002a06:	3301      	adds	r3, #1
 8002a08:	50a3      	str	r3, [r4, r2]
 8002a0a:	2301      	movs	r3, #1
 8002a0c:	2200      	movs	r2, #0
 8002a0e:	e7df      	b.n	80029d0 <d_print_comp_inner+0x2d8>
 8002a10:	68ea      	ldr	r2, [r5, #12]
 8002a12:	2111      	movs	r1, #17
 8002a14:	f002 fb56 	bl	80050c4 <d_print_comp>
 8002a18:	2111      	movs	r1, #17
 8002a1a:	0020      	movs	r0, r4
 8002a1c:	692a      	ldr	r2, [r5, #16]
 8002a1e:	f002 fb51 	bl	80050c4 <d_print_comp>
 8002a22:	e690      	b.n	8002746 <d_print_comp_inner+0x4e>
 8002a24:	68ea      	ldr	r2, [r5, #12]
 8002a26:	2111      	movs	r1, #17
 8002a28:	f002 fb4c 	bl	80050c4 <d_print_comp>
 8002a2c:	4e25      	ldr	r6, [pc, #148]	; (8002ac4 <d_print_comp_inner+0x3cc>)
 8002a2e:	2380      	movs	r3, #128	; 0x80
 8002a30:	1d72      	adds	r2, r6, #5
 8002a32:	4691      	mov	r9, r2
 8002a34:	2200      	movs	r2, #0
 8002a36:	4693      	mov	fp, r2
 8002a38:	320d      	adds	r2, #13
 8002a3a:	005b      	lsls	r3, r3, #1
 8002a3c:	32ff      	adds	r2, #255	; 0xff
 8002a3e:	275b      	movs	r7, #91	; 0x5b
 8002a40:	4692      	mov	sl, r2
 8002a42:	58e3      	ldr	r3, [r4, r3]
 8002a44:	e00f      	b.n	8002a66 <d_print_comp_inner+0x36e>
 8002a46:	001a      	movs	r2, r3
 8002a48:	3301      	adds	r3, #1
 8002a4a:	2180      	movs	r1, #128	; 0x80
 8002a4c:	0049      	lsls	r1, r1, #1
 8002a4e:	5063      	str	r3, [r4, r1]
 8002a50:	54a7      	strb	r7, [r4, r2]
 8002a52:	2282      	movs	r2, #130	; 0x82
 8002a54:	3601      	adds	r6, #1
 8002a56:	0052      	lsls	r2, r2, #1
 8002a58:	4688      	mov	r8, r1
 8002a5a:	54a7      	strb	r7, [r4, r2]
 8002a5c:	45b1      	cmp	r9, r6
 8002a5e:	d101      	bne.n	8002a64 <d_print_comp_inner+0x36c>
 8002a60:	f001 fa66 	bl	8003f30 <d_print_comp_inner+0x1838>
 8002a64:	7837      	ldrb	r7, [r6, #0]
 8002a66:	2bff      	cmp	r3, #255	; 0xff
 8002a68:	d1ed      	bne.n	8002a46 <d_print_comp_inner+0x34e>
 8002a6a:	465a      	mov	r2, fp
 8002a6c:	54e2      	strb	r2, [r4, r3]
 8002a6e:	4653      	mov	r3, sl
 8002a70:	58e2      	ldr	r2, [r4, r3]
 8002a72:	2384      	movs	r3, #132	; 0x84
 8002a74:	005b      	lsls	r3, r3, #1
 8002a76:	58e3      	ldr	r3, [r4, r3]
 8002a78:	21ff      	movs	r1, #255	; 0xff
 8002a7a:	0020      	movs	r0, r4
 8002a7c:	4798      	blx	r3
 8002a7e:	2294      	movs	r2, #148	; 0x94
 8002a80:	0052      	lsls	r2, r2, #1
 8002a82:	58a3      	ldr	r3, [r4, r2]
 8002a84:	3301      	adds	r3, #1
 8002a86:	50a3      	str	r3, [r4, r2]
 8002a88:	2301      	movs	r3, #1
 8002a8a:	2200      	movs	r2, #0
 8002a8c:	e7dd      	b.n	8002a4a <d_print_comp_inner+0x352>
 8002a8e:	2215      	movs	r2, #21
 8002a90:	4690      	mov	r8, r2
 8002a92:	2200      	movs	r2, #0
 8002a94:	2380      	movs	r3, #128	; 0x80
 8002a96:	4693      	mov	fp, r2
 8002a98:	320d      	adds	r2, #13
 8002a9a:	32ff      	adds	r2, #255	; 0xff
 8002a9c:	4e0a      	ldr	r6, [pc, #40]	; (8002ac8 <d_print_comp_inner+0x3d0>)
 8002a9e:	4692      	mov	sl, r2
 8002aa0:	005b      	lsls	r3, r3, #1
 8002aa2:	3a04      	subs	r2, #4
 8002aa4:	2774      	movs	r7, #116	; 0x74
 8002aa6:	4691      	mov	r9, r2
 8002aa8:	58c3      	ldr	r3, [r0, r3]
 8002aaa:	44b0      	add	r8, r6
 8002aac:	e01d      	b.n	8002aea <d_print_comp_inner+0x3f2>
 8002aae:	46c0      	nop			; (mov r8, r8)
 8002ab0:	0800ecf4 	.word	0x0800ecf4
 8002ab4:	0800fddc 	.word	0x0800fddc
 8002ab8:	0800fc3c 	.word	0x0800fc3c
 8002abc:	0800fe50 	.word	0x0800fe50
 8002ac0:	0800fd61 	.word	0x0800fd61
 8002ac4:	0800fc34 	.word	0x0800fc34
 8002ac8:	0800fdad 	.word	0x0800fdad
 8002acc:	001a      	movs	r2, r3
 8002ace:	3301      	adds	r3, #1
 8002ad0:	2180      	movs	r1, #128	; 0x80
 8002ad2:	0049      	lsls	r1, r1, #1
 8002ad4:	5063      	str	r3, [r4, r1]
 8002ad6:	54a7      	strb	r7, [r4, r2]
 8002ad8:	2282      	movs	r2, #130	; 0x82
 8002ada:	0052      	lsls	r2, r2, #1
 8002adc:	54a7      	strb	r7, [r4, r2]
 8002ade:	4546      	cmp	r6, r8
 8002ae0:	d101      	bne.n	8002ae6 <d_print_comp_inner+0x3ee>
 8002ae2:	f001 fbba 	bl	800425a <d_print_comp_inner+0x1b62>
 8002ae6:	7837      	ldrb	r7, [r6, #0]
 8002ae8:	3601      	adds	r6, #1
 8002aea:	2bff      	cmp	r3, #255	; 0xff
 8002aec:	d1ee      	bne.n	8002acc <d_print_comp_inner+0x3d4>
 8002aee:	465a      	mov	r2, fp
 8002af0:	54e2      	strb	r2, [r4, r3]
 8002af2:	4653      	mov	r3, sl
 8002af4:	58e2      	ldr	r2, [r4, r3]
 8002af6:	464b      	mov	r3, r9
 8002af8:	21ff      	movs	r1, #255	; 0xff
 8002afa:	58e3      	ldr	r3, [r4, r3]
 8002afc:	0020      	movs	r0, r4
 8002afe:	4798      	blx	r3
 8002b00:	2294      	movs	r2, #148	; 0x94
 8002b02:	0052      	lsls	r2, r2, #1
 8002b04:	58a3      	ldr	r3, [r4, r2]
 8002b06:	3301      	adds	r3, #1
 8002b08:	50a3      	str	r3, [r4, r2]
 8002b0a:	2301      	movs	r3, #1
 8002b0c:	2200      	movs	r2, #0
 8002b0e:	e7df      	b.n	8002ad0 <d_print_comp_inner+0x3d8>
 8002b10:	68eb      	ldr	r3, [r5, #12]
 8002b12:	0019      	movs	r1, r3
 8002b14:	469a      	mov	sl, r3
 8002b16:	f7fd fcf3 	bl	8000500 <d_find_pack>
 8002b1a:	2300      	movs	r3, #0
 8002b1c:	001a      	movs	r2, r3
 8002b1e:	2800      	cmp	r0, #0
 8002b20:	d102      	bne.n	8002b28 <d_print_comp_inner+0x430>
 8002b22:	f002 f973 	bl	8004e0c <d_print_comp_inner+0x2714>
 8002b26:	001a      	movs	r2, r3
 8002b28:	7803      	ldrb	r3, [r0, #0]
 8002b2a:	2b2f      	cmp	r3, #47	; 0x2f
 8002b2c:	d001      	beq.n	8002b32 <d_print_comp_inner+0x43a>
 8002b2e:	f001 fc52 	bl	80043d6 <d_print_comp_inner+0x1cde>
 8002b32:	68c3      	ldr	r3, [r0, #12]
 8002b34:	2b00      	cmp	r3, #0
 8002b36:	d101      	bne.n	8002b3c <d_print_comp_inner+0x444>
 8002b38:	f001 fc4d 	bl	80043d6 <d_print_comp_inner+0x1cde>
 8002b3c:	6900      	ldr	r0, [r0, #16]
 8002b3e:	1c53      	adds	r3, r2, #1
 8002b40:	2800      	cmp	r0, #0
 8002b42:	d1f0      	bne.n	8002b26 <d_print_comp_inner+0x42e>
 8002b44:	4691      	mov	r9, r2
 8002b46:	469b      	mov	fp, r3
 8002b48:	e003      	b.n	8002b52 <d_print_comp_inner+0x45a>
 8002b4a:	3701      	adds	r7, #1
 8002b4c:	455f      	cmp	r7, fp
 8002b4e:	db00      	blt.n	8002b52 <d_print_comp_inner+0x45a>
 8002b50:	e5f9      	b.n	8002746 <d_print_comp_inner+0x4e>
 8002b52:	2392      	movs	r3, #146	; 0x92
 8002b54:	005b      	lsls	r3, r3, #1
 8002b56:	4652      	mov	r2, sl
 8002b58:	2111      	movs	r1, #17
 8002b5a:	0020      	movs	r0, r4
 8002b5c:	50e7      	str	r7, [r4, r3]
 8002b5e:	f002 fab1 	bl	80050c4 <d_print_comp>
 8002b62:	45b9      	cmp	r9, r7
 8002b64:	ddf1      	ble.n	8002b4a <d_print_comp_inner+0x452>
 8002b66:	2380      	movs	r3, #128	; 0x80
 8002b68:	4ddc      	ldr	r5, [pc, #880]	; (8002edc <d_print_comp_inner+0x7e4>)
 8002b6a:	005b      	lsls	r3, r3, #1
 8002b6c:	1caa      	adds	r2, r5, #2
 8002b6e:	4690      	mov	r8, r2
 8002b70:	262c      	movs	r6, #44	; 0x2c
 8002b72:	58e3      	ldr	r3, [r4, r3]
 8002b74:	e00b      	b.n	8002b8e <d_print_comp_inner+0x496>
 8002b76:	0019      	movs	r1, r3
 8002b78:	3301      	adds	r3, #1
 8002b7a:	2280      	movs	r2, #128	; 0x80
 8002b7c:	0052      	lsls	r2, r2, #1
 8002b7e:	50a3      	str	r3, [r4, r2]
 8002b80:	3501      	adds	r5, #1
 8002b82:	3204      	adds	r2, #4
 8002b84:	5466      	strb	r6, [r4, r1]
 8002b86:	54a6      	strb	r6, [r4, r2]
 8002b88:	4545      	cmp	r5, r8
 8002b8a:	d0de      	beq.n	8002b4a <d_print_comp_inner+0x452>
 8002b8c:	782e      	ldrb	r6, [r5, #0]
 8002b8e:	2bff      	cmp	r3, #255	; 0xff
 8002b90:	d1f1      	bne.n	8002b76 <d_print_comp_inner+0x47e>
 8002b92:	2200      	movs	r2, #0
 8002b94:	54e2      	strb	r2, [r4, r3]
 8002b96:	2386      	movs	r3, #134	; 0x86
 8002b98:	005b      	lsls	r3, r3, #1
 8002b9a:	58e2      	ldr	r2, [r4, r3]
 8002b9c:	3b04      	subs	r3, #4
 8002b9e:	21ff      	movs	r1, #255	; 0xff
 8002ba0:	58e3      	ldr	r3, [r4, r3]
 8002ba2:	0020      	movs	r0, r4
 8002ba4:	4798      	blx	r3
 8002ba6:	2294      	movs	r2, #148	; 0x94
 8002ba8:	0052      	lsls	r2, r2, #1
 8002baa:	58a3      	ldr	r3, [r4, r2]
 8002bac:	2100      	movs	r1, #0
 8002bae:	3301      	adds	r3, #1
 8002bb0:	50a3      	str	r3, [r4, r2]
 8002bb2:	2301      	movs	r3, #1
 8002bb4:	e7e1      	b.n	8002b7a <d_print_comp_inner+0x482>
 8002bb6:	2219      	movs	r2, #25
 8002bb8:	4690      	mov	r8, r2
 8002bba:	2200      	movs	r2, #0
 8002bbc:	2380      	movs	r3, #128	; 0x80
 8002bbe:	4693      	mov	fp, r2
 8002bc0:	320d      	adds	r2, #13
 8002bc2:	32ff      	adds	r2, #255	; 0xff
 8002bc4:	4ec6      	ldr	r6, [pc, #792]	; (8002ee0 <d_print_comp_inner+0x7e8>)
 8002bc6:	4692      	mov	sl, r2
 8002bc8:	005b      	lsls	r3, r3, #1
 8002bca:	3a04      	subs	r2, #4
 8002bcc:	276e      	movs	r7, #110	; 0x6e
 8002bce:	4691      	mov	r9, r2
 8002bd0:	58c3      	ldr	r3, [r0, r3]
 8002bd2:	44b0      	add	r8, r6
 8002bd4:	e00e      	b.n	8002bf4 <d_print_comp_inner+0x4fc>
 8002bd6:	001a      	movs	r2, r3
 8002bd8:	3301      	adds	r3, #1
 8002bda:	2180      	movs	r1, #128	; 0x80
 8002bdc:	0049      	lsls	r1, r1, #1
 8002bde:	5063      	str	r3, [r4, r1]
 8002be0:	54a7      	strb	r7, [r4, r2]
 8002be2:	2282      	movs	r2, #130	; 0x82
 8002be4:	0052      	lsls	r2, r2, #1
 8002be6:	54a7      	strb	r7, [r4, r2]
 8002be8:	4546      	cmp	r6, r8
 8002bea:	d101      	bne.n	8002bf0 <d_print_comp_inner+0x4f8>
 8002bec:	f001 f950 	bl	8003e90 <d_print_comp_inner+0x1798>
 8002bf0:	7837      	ldrb	r7, [r6, #0]
 8002bf2:	3601      	adds	r6, #1
 8002bf4:	2bff      	cmp	r3, #255	; 0xff
 8002bf6:	d1ee      	bne.n	8002bd6 <d_print_comp_inner+0x4de>
 8002bf8:	465a      	mov	r2, fp
 8002bfa:	54e2      	strb	r2, [r4, r3]
 8002bfc:	4653      	mov	r3, sl
 8002bfe:	58e2      	ldr	r2, [r4, r3]
 8002c00:	464b      	mov	r3, r9
 8002c02:	21ff      	movs	r1, #255	; 0xff
 8002c04:	58e3      	ldr	r3, [r4, r3]
 8002c06:	0020      	movs	r0, r4
 8002c08:	4798      	blx	r3
 8002c0a:	2294      	movs	r2, #148	; 0x94
 8002c0c:	0052      	lsls	r2, r2, #1
 8002c0e:	58a3      	ldr	r3, [r4, r2]
 8002c10:	3301      	adds	r3, #1
 8002c12:	50a3      	str	r3, [r4, r2]
 8002c14:	2301      	movs	r3, #1
 8002c16:	2200      	movs	r2, #0
 8002c18:	e7df      	b.n	8002bda <d_print_comp_inner+0x4e2>
 8002c1a:	2208      	movs	r2, #8
 8002c1c:	4691      	mov	r9, r2
 8002c1e:	2200      	movs	r2, #0
 8002c20:	2380      	movs	r3, #128	; 0x80
 8002c22:	4693      	mov	fp, r2
 8002c24:	4eaf      	ldr	r6, [pc, #700]	; (8002ee4 <d_print_comp_inner+0x7ec>)
 8002c26:	320d      	adds	r2, #13
 8002c28:	005b      	lsls	r3, r3, #1
 8002c2a:	32ff      	adds	r2, #255	; 0xff
 8002c2c:	277b      	movs	r7, #123	; 0x7b
 8002c2e:	4692      	mov	sl, r2
 8002c30:	58c3      	ldr	r3, [r0, r3]
 8002c32:	44b1      	add	r9, r6
 8002c34:	e00f      	b.n	8002c56 <d_print_comp_inner+0x55e>
 8002c36:	001a      	movs	r2, r3
 8002c38:	3301      	adds	r3, #1
 8002c3a:	2180      	movs	r1, #128	; 0x80
 8002c3c:	0049      	lsls	r1, r1, #1
 8002c3e:	5063      	str	r3, [r4, r1]
 8002c40:	54a7      	strb	r7, [r4, r2]
 8002c42:	2282      	movs	r2, #130	; 0x82
 8002c44:	3601      	adds	r6, #1
 8002c46:	0052      	lsls	r2, r2, #1
 8002c48:	4688      	mov	r8, r1
 8002c4a:	54a7      	strb	r7, [r4, r2]
 8002c4c:	45b1      	cmp	r9, r6
 8002c4e:	d101      	bne.n	8002c54 <d_print_comp_inner+0x55c>
 8002c50:	f001 f925 	bl	8003e9e <d_print_comp_inner+0x17a6>
 8002c54:	7837      	ldrb	r7, [r6, #0]
 8002c56:	2bff      	cmp	r3, #255	; 0xff
 8002c58:	d1ed      	bne.n	8002c36 <d_print_comp_inner+0x53e>
 8002c5a:	465a      	mov	r2, fp
 8002c5c:	54e2      	strb	r2, [r4, r3]
 8002c5e:	4653      	mov	r3, sl
 8002c60:	58e2      	ldr	r2, [r4, r3]
 8002c62:	2384      	movs	r3, #132	; 0x84
 8002c64:	005b      	lsls	r3, r3, #1
 8002c66:	58e3      	ldr	r3, [r4, r3]
 8002c68:	21ff      	movs	r1, #255	; 0xff
 8002c6a:	0020      	movs	r0, r4
 8002c6c:	4798      	blx	r3
 8002c6e:	2294      	movs	r2, #148	; 0x94
 8002c70:	0052      	lsls	r2, r2, #1
 8002c72:	58a3      	ldr	r3, [r4, r2]
 8002c74:	3301      	adds	r3, #1
 8002c76:	50a3      	str	r3, [r4, r2]
 8002c78:	2301      	movs	r3, #1
 8002c7a:	2200      	movs	r2, #0
 8002c7c:	e7dd      	b.n	8002c3a <d_print_comp_inner+0x542>
 8002c7e:	221b      	movs	r2, #27
 8002c80:	4690      	mov	r8, r2
 8002c82:	2200      	movs	r2, #0
 8002c84:	2380      	movs	r3, #128	; 0x80
 8002c86:	4693      	mov	fp, r2
 8002c88:	320d      	adds	r2, #13
 8002c8a:	32ff      	adds	r2, #255	; 0xff
 8002c8c:	4e96      	ldr	r6, [pc, #600]	; (8002ee8 <d_print_comp_inner+0x7f0>)
 8002c8e:	4692      	mov	sl, r2
 8002c90:	005b      	lsls	r3, r3, #1
 8002c92:	3a04      	subs	r2, #4
 8002c94:	2767      	movs	r7, #103	; 0x67
 8002c96:	4691      	mov	r9, r2
 8002c98:	58c3      	ldr	r3, [r0, r3]
 8002c9a:	44b0      	add	r8, r6
 8002c9c:	e00e      	b.n	8002cbc <d_print_comp_inner+0x5c4>
 8002c9e:	001a      	movs	r2, r3
 8002ca0:	3301      	adds	r3, #1
 8002ca2:	2180      	movs	r1, #128	; 0x80
 8002ca4:	0049      	lsls	r1, r1, #1
 8002ca6:	5063      	str	r3, [r4, r1]
 8002ca8:	54a7      	strb	r7, [r4, r2]
 8002caa:	2282      	movs	r2, #130	; 0x82
 8002cac:	0052      	lsls	r2, r2, #1
 8002cae:	54a7      	strb	r7, [r4, r2]
 8002cb0:	4546      	cmp	r6, r8
 8002cb2:	d101      	bne.n	8002cb8 <d_print_comp_inner+0x5c0>
 8002cb4:	f001 f952 	bl	8003f5c <d_print_comp_inner+0x1864>
 8002cb8:	7837      	ldrb	r7, [r6, #0]
 8002cba:	3601      	adds	r6, #1
 8002cbc:	2bff      	cmp	r3, #255	; 0xff
 8002cbe:	d1ee      	bne.n	8002c9e <d_print_comp_inner+0x5a6>
 8002cc0:	465a      	mov	r2, fp
 8002cc2:	54e2      	strb	r2, [r4, r3]
 8002cc4:	4653      	mov	r3, sl
 8002cc6:	58e2      	ldr	r2, [r4, r3]
 8002cc8:	464b      	mov	r3, r9
 8002cca:	21ff      	movs	r1, #255	; 0xff
 8002ccc:	58e3      	ldr	r3, [r4, r3]
 8002cce:	0020      	movs	r0, r4
 8002cd0:	4798      	blx	r3
 8002cd2:	2294      	movs	r2, #148	; 0x94
 8002cd4:	0052      	lsls	r2, r2, #1
 8002cd6:	58a3      	ldr	r3, [r4, r2]
 8002cd8:	3301      	adds	r3, #1
 8002cda:	50a3      	str	r3, [r4, r2]
 8002cdc:	2301      	movs	r3, #1
 8002cde:	2200      	movs	r2, #0
 8002ce0:	e7df      	b.n	8002ca2 <d_print_comp_inner+0x5aa>
 8002ce2:	220e      	movs	r2, #14
 8002ce4:	4691      	mov	r9, r2
 8002ce6:	2200      	movs	r2, #0
 8002ce8:	2380      	movs	r3, #128	; 0x80
 8002cea:	4693      	mov	fp, r2
 8002cec:	4e7f      	ldr	r6, [pc, #508]	; (8002eec <d_print_comp_inner+0x7f4>)
 8002cee:	320d      	adds	r2, #13
 8002cf0:	005b      	lsls	r3, r3, #1
 8002cf2:	32ff      	adds	r2, #255	; 0xff
 8002cf4:	277b      	movs	r7, #123	; 0x7b
 8002cf6:	4692      	mov	sl, r2
 8002cf8:	58c3      	ldr	r3, [r0, r3]
 8002cfa:	44b1      	add	r9, r6
 8002cfc:	e00f      	b.n	8002d1e <d_print_comp_inner+0x626>
 8002cfe:	001a      	movs	r2, r3
 8002d00:	3301      	adds	r3, #1
 8002d02:	2180      	movs	r1, #128	; 0x80
 8002d04:	0049      	lsls	r1, r1, #1
 8002d06:	5063      	str	r3, [r4, r1]
 8002d08:	54a7      	strb	r7, [r4, r2]
 8002d0a:	2282      	movs	r2, #130	; 0x82
 8002d0c:	3601      	adds	r6, #1
 8002d0e:	0052      	lsls	r2, r2, #1
 8002d10:	4688      	mov	r8, r1
 8002d12:	54a7      	strb	r7, [r4, r2]
 8002d14:	45b1      	cmp	r9, r6
 8002d16:	d101      	bne.n	8002d1c <d_print_comp_inner+0x624>
 8002d18:	f001 faae 	bl	8004278 <d_print_comp_inner+0x1b80>
 8002d1c:	7837      	ldrb	r7, [r6, #0]
 8002d1e:	2bff      	cmp	r3, #255	; 0xff
 8002d20:	d1ed      	bne.n	8002cfe <d_print_comp_inner+0x606>
 8002d22:	465a      	mov	r2, fp
 8002d24:	54e2      	strb	r2, [r4, r3]
 8002d26:	4653      	mov	r3, sl
 8002d28:	58e2      	ldr	r2, [r4, r3]
 8002d2a:	2384      	movs	r3, #132	; 0x84
 8002d2c:	005b      	lsls	r3, r3, #1
 8002d2e:	58e3      	ldr	r3, [r4, r3]
 8002d30:	21ff      	movs	r1, #255	; 0xff
 8002d32:	0020      	movs	r0, r4
 8002d34:	4798      	blx	r3
 8002d36:	2294      	movs	r2, #148	; 0x94
 8002d38:	0052      	lsls	r2, r2, #1
 8002d3a:	58a3      	ldr	r3, [r4, r2]
 8002d3c:	3301      	adds	r3, #1
 8002d3e:	50a3      	str	r3, [r4, r2]
 8002d40:	2301      	movs	r3, #1
 8002d42:	2200      	movs	r2, #0
 8002d44:	e7dd      	b.n	8002d02 <d_print_comp_inner+0x60a>
 8002d46:	2210      	movs	r2, #16
 8002d48:	4690      	mov	r8, r2
 8002d4a:	2200      	movs	r2, #0
 8002d4c:	2380      	movs	r3, #128	; 0x80
 8002d4e:	4693      	mov	fp, r2
 8002d50:	320d      	adds	r2, #13
 8002d52:	32ff      	adds	r2, #255	; 0xff
 8002d54:	4e66      	ldr	r6, [pc, #408]	; (8002ef0 <d_print_comp_inner+0x7f8>)
 8002d56:	4692      	mov	sl, r2
 8002d58:	005b      	lsls	r3, r3, #1
 8002d5a:	3a04      	subs	r2, #4
 8002d5c:	2774      	movs	r7, #116	; 0x74
 8002d5e:	4691      	mov	r9, r2
 8002d60:	58c3      	ldr	r3, [r0, r3]
 8002d62:	44b0      	add	r8, r6
 8002d64:	e00e      	b.n	8002d84 <d_print_comp_inner+0x68c>
 8002d66:	001a      	movs	r2, r3
 8002d68:	3301      	adds	r3, #1
 8002d6a:	2180      	movs	r1, #128	; 0x80
 8002d6c:	0049      	lsls	r1, r1, #1
 8002d6e:	5063      	str	r3, [r4, r1]
 8002d70:	54a7      	strb	r7, [r4, r2]
 8002d72:	2282      	movs	r2, #130	; 0x82
 8002d74:	3601      	adds	r6, #1
 8002d76:	0052      	lsls	r2, r2, #1
 8002d78:	54a7      	strb	r7, [r4, r2]
 8002d7a:	45b0      	cmp	r8, r6
 8002d7c:	d101      	bne.n	8002d82 <d_print_comp_inner+0x68a>
 8002d7e:	f001 f8c9 	bl	8003f14 <d_print_comp_inner+0x181c>
 8002d82:	7837      	ldrb	r7, [r6, #0]
 8002d84:	2bff      	cmp	r3, #255	; 0xff
 8002d86:	d1ee      	bne.n	8002d66 <d_print_comp_inner+0x66e>
 8002d88:	465a      	mov	r2, fp
 8002d8a:	54e2      	strb	r2, [r4, r3]
 8002d8c:	4653      	mov	r3, sl
 8002d8e:	58e2      	ldr	r2, [r4, r3]
 8002d90:	464b      	mov	r3, r9
 8002d92:	21ff      	movs	r1, #255	; 0xff
 8002d94:	58e3      	ldr	r3, [r4, r3]
 8002d96:	0020      	movs	r0, r4
 8002d98:	4798      	blx	r3
 8002d9a:	2294      	movs	r2, #148	; 0x94
 8002d9c:	0052      	lsls	r2, r2, #1
 8002d9e:	58a3      	ldr	r3, [r4, r2]
 8002da0:	3301      	adds	r3, #1
 8002da2:	50a3      	str	r3, [r4, r2]
 8002da4:	2301      	movs	r3, #1
 8002da6:	2200      	movs	r2, #0
 8002da8:	e7df      	b.n	8002d6a <d_print_comp_inner+0x672>
 8002daa:	692b      	ldr	r3, [r5, #16]
 8002dac:	781b      	ldrb	r3, [r3, #0]
 8002dae:	2b39      	cmp	r3, #57	; 0x39
 8002db0:	d000      	beq.n	8002db4 <d_print_comp_inner+0x6bc>
 8002db2:	e4c4      	b.n	800273e <d_print_comp_inner+0x46>
 8002db4:	68ea      	ldr	r2, [r5, #12]
 8002db6:	68d3      	ldr	r3, [r2, #12]
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	7859      	ldrb	r1, [r3, #1]
 8002dbc:	2963      	cmp	r1, #99	; 0x63
 8002dbe:	d101      	bne.n	8002dc4 <d_print_comp_inner+0x6cc>
 8002dc0:	f001 ff59 	bl	8004c76 <d_print_comp_inner+0x257e>
 8002dc4:	002a      	movs	r2, r5
 8002dc6:	2111      	movs	r1, #17
 8002dc8:	0020      	movs	r0, r4
 8002dca:	f003 fb33 	bl	8006434 <d_maybe_print_fold_expression>
 8002dce:	2800      	cmp	r0, #0
 8002dd0:	d000      	beq.n	8002dd4 <d_print_comp_inner+0x6dc>
 8002dd2:	e4b8      	b.n	8002746 <d_print_comp_inner+0x4e>
 8002dd4:	002a      	movs	r2, r5
 8002dd6:	2111      	movs	r1, #17
 8002dd8:	0020      	movs	r0, r4
 8002dda:	f003 fc71 	bl	80066c0 <d_maybe_print_designated_init>
 8002dde:	2800      	cmp	r0, #0
 8002de0:	d000      	beq.n	8002de4 <d_print_comp_inner+0x6ec>
 8002de2:	e4b0      	b.n	8002746 <d_print_comp_inner+0x4e>
 8002de4:	68eb      	ldr	r3, [r5, #12]
 8002de6:	781a      	ldrb	r2, [r3, #0]
 8002de8:	2a32      	cmp	r2, #50	; 0x32
 8002dea:	d101      	bne.n	8002df0 <d_print_comp_inner+0x6f8>
 8002dec:	f002 f8e0 	bl	8004fb0 <d_print_comp_inner+0x28b8>
 8002df0:	4a40      	ldr	r2, [pc, #256]	; (8002ef4 <d_print_comp_inner+0x7fc>)
 8002df2:	68db      	ldr	r3, [r3, #12]
 8002df4:	0011      	movs	r1, r2
 8002df6:	6818      	ldr	r0, [r3, #0]
 8002df8:	4690      	mov	r8, r2
 8002dfa:	f003 fde5 	bl	80069c8 <strcmp>
 8002dfe:	692b      	ldr	r3, [r5, #16]
 8002e00:	2800      	cmp	r0, #0
 8002e02:	d105      	bne.n	8002e10 <d_print_comp_inner+0x718>
 8002e04:	68da      	ldr	r2, [r3, #12]
 8002e06:	7811      	ldrb	r1, [r2, #0]
 8002e08:	2903      	cmp	r1, #3
 8002e0a:	d101      	bne.n	8002e10 <d_print_comp_inner+0x718>
 8002e0c:	f002 f90b 	bl	8005026 <d_print_comp_inner+0x292e>
 8002e10:	2111      	movs	r1, #17
 8002e12:	0020      	movs	r0, r4
 8002e14:	68da      	ldr	r2, [r3, #12]
 8002e16:	f003 fa89 	bl	800632c <d_print_subexpr>
 8002e1a:	68ef      	ldr	r7, [r5, #12]
 8002e1c:	4936      	ldr	r1, [pc, #216]	; (8002ef8 <d_print_comp_inner+0x800>)
 8002e1e:	68fb      	ldr	r3, [r7, #12]
 8002e20:	681e      	ldr	r6, [r3, #0]
 8002e22:	0030      	movs	r0, r6
 8002e24:	f003 fdd0 	bl	80069c8 <strcmp>
 8002e28:	2800      	cmp	r0, #0
 8002e2a:	d101      	bne.n	8002e30 <d_print_comp_inner+0x738>
 8002e2c:	f002 f8d3 	bl	8004fd6 <d_print_comp_inner+0x28de>
 8002e30:	4641      	mov	r1, r8
 8002e32:	0030      	movs	r0, r6
 8002e34:	f003 fdc8 	bl	80069c8 <strcmp>
 8002e38:	2800      	cmp	r0, #0
 8002e3a:	d001      	beq.n	8002e40 <d_print_comp_inner+0x748>
 8002e3c:	f002 f8ec 	bl	8005018 <d_print_comp_inner+0x2920>
 8002e40:	692b      	ldr	r3, [r5, #16]
 8002e42:	2111      	movs	r1, #17
 8002e44:	0020      	movs	r0, r4
 8002e46:	691a      	ldr	r2, [r3, #16]
 8002e48:	f003 fa70 	bl	800632c <d_print_subexpr>
 8002e4c:	68eb      	ldr	r3, [r5, #12]
 8002e4e:	781a      	ldrb	r2, [r3, #0]
 8002e50:	2a32      	cmp	r2, #50	; 0x32
 8002e52:	d000      	beq.n	8002e56 <d_print_comp_inner+0x75e>
 8002e54:	e477      	b.n	8002746 <d_print_comp_inner+0x4e>
 8002e56:	68db      	ldr	r3, [r3, #12]
 8002e58:	689a      	ldr	r2, [r3, #8]
 8002e5a:	2a01      	cmp	r2, #1
 8002e5c:	d000      	beq.n	8002e60 <d_print_comp_inner+0x768>
 8002e5e:	e472      	b.n	8002746 <d_print_comp_inner+0x4e>
 8002e60:	685b      	ldr	r3, [r3, #4]
 8002e62:	781b      	ldrb	r3, [r3, #0]
 8002e64:	2b3e      	cmp	r3, #62	; 0x3e
 8002e66:	d000      	beq.n	8002e6a <d_print_comp_inner+0x772>
 8002e68:	e46d      	b.n	8002746 <d_print_comp_inner+0x4e>
 8002e6a:	2129      	movs	r1, #41	; 0x29
 8002e6c:	0020      	movs	r0, r4
 8002e6e:	f7fd fb05 	bl	800047c <d_append_char>
 8002e72:	e468      	b.n	8002746 <d_print_comp_inner+0x4e>
 8002e74:	68ef      	ldr	r7, [r5, #12]
 8002e76:	692d      	ldr	r5, [r5, #16]
 8002e78:	783b      	ldrb	r3, [r7, #0]
 8002e7a:	2b32      	cmp	r3, #50	; 0x32
 8002e7c:	d101      	bne.n	8002e82 <d_print_comp_inner+0x78a>
 8002e7e:	f001 fbff 	bl	8004680 <d_print_comp_inner+0x1f88>
 8002e82:	2b34      	cmp	r3, #52	; 0x34
 8002e84:	d001      	beq.n	8002e8a <d_print_comp_inner+0x792>
 8002e86:	f002 f905 	bl	8005094 <d_print_comp_inner+0x299c>
 8002e8a:	2128      	movs	r1, #40	; 0x28
 8002e8c:	f7fd faf6 	bl	800047c <d_append_char>
 8002e90:	2111      	movs	r1, #17
 8002e92:	0020      	movs	r0, r4
 8002e94:	68fa      	ldr	r2, [r7, #12]
 8002e96:	f002 f915 	bl	80050c4 <d_print_comp>
 8002e9a:	2129      	movs	r1, #41	; 0x29
 8002e9c:	0020      	movs	r0, r4
 8002e9e:	f7fd faed 	bl	800047c <d_append_char>
 8002ea2:	002a      	movs	r2, r5
 8002ea4:	2111      	movs	r1, #17
 8002ea6:	0020      	movs	r0, r4
 8002ea8:	f003 fa40 	bl	800632c <d_print_subexpr>
 8002eac:	e44b      	b.n	8002746 <d_print_comp_inner+0x4e>
 8002eae:	2111      	movs	r1, #17
 8002eb0:	68ea      	ldr	r2, [r5, #12]
 8002eb2:	f003 f819 	bl	8005ee8 <d_print_expr_op>
 8002eb6:	e446      	b.n	8002746 <d_print_comp_inner+0x4e>
 8002eb8:	68ea      	ldr	r2, [r5, #12]
 8002eba:	2111      	movs	r1, #17
 8002ebc:	f002 f902 	bl	80050c4 <d_print_comp>
 8002ec0:	2208      	movs	r2, #8
 8002ec2:	4691      	mov	r9, r2
 8002ec4:	2200      	movs	r2, #0
 8002ec6:	2380      	movs	r3, #128	; 0x80
 8002ec8:	4693      	mov	fp, r2
 8002eca:	4e0c      	ldr	r6, [pc, #48]	; (8002efc <d_print_comp_inner+0x804>)
 8002ecc:	320d      	adds	r2, #13
 8002ece:	005b      	lsls	r3, r3, #1
 8002ed0:	32ff      	adds	r2, #255	; 0xff
 8002ed2:	2720      	movs	r7, #32
 8002ed4:	4692      	mov	sl, r2
 8002ed6:	58e3      	ldr	r3, [r4, r3]
 8002ed8:	44b1      	add	r9, r6
 8002eda:	e021      	b.n	8002f20 <d_print_comp_inner+0x828>
 8002edc:	0800fddc 	.word	0x0800fddc
 8002ee0:	0800fda9 	.word	0x0800fda9
 8002ee4:	0800fea0 	.word	0x0800fea0
 8002ee8:	0800fe81 	.word	0x0800fe81
 8002eec:	0800feb0 	.word	0x0800feb0
 8002ef0:	0800fcdc 	.word	0x0800fcdc
 8002ef4:	0800fdfc 	.word	0x0800fdfc
 8002ef8:	0800fe00 	.word	0x0800fe00
 8002efc:	0800fec0 	.word	0x0800fec0
 8002f00:	001a      	movs	r2, r3
 8002f02:	3301      	adds	r3, #1
 8002f04:	2180      	movs	r1, #128	; 0x80
 8002f06:	0049      	lsls	r1, r1, #1
 8002f08:	5063      	str	r3, [r4, r1]
 8002f0a:	54a7      	strb	r7, [r4, r2]
 8002f0c:	2282      	movs	r2, #130	; 0x82
 8002f0e:	3601      	adds	r6, #1
 8002f10:	0052      	lsls	r2, r2, #1
 8002f12:	4688      	mov	r8, r1
 8002f14:	54a7      	strb	r7, [r4, r2]
 8002f16:	454e      	cmp	r6, r9
 8002f18:	d101      	bne.n	8002f1e <d_print_comp_inner+0x826>
 8002f1a:	f001 f958 	bl	80041ce <d_print_comp_inner+0x1ad6>
 8002f1e:	7837      	ldrb	r7, [r6, #0]
 8002f20:	2bff      	cmp	r3, #255	; 0xff
 8002f22:	d1ed      	bne.n	8002f00 <d_print_comp_inner+0x808>
 8002f24:	465a      	mov	r2, fp
 8002f26:	54e2      	strb	r2, [r4, r3]
 8002f28:	4653      	mov	r3, sl
 8002f2a:	58e2      	ldr	r2, [r4, r3]
 8002f2c:	2384      	movs	r3, #132	; 0x84
 8002f2e:	005b      	lsls	r3, r3, #1
 8002f30:	58e3      	ldr	r3, [r4, r3]
 8002f32:	21ff      	movs	r1, #255	; 0xff
 8002f34:	0020      	movs	r0, r4
 8002f36:	4798      	blx	r3
 8002f38:	2294      	movs	r2, #148	; 0x94
 8002f3a:	0052      	lsls	r2, r2, #1
 8002f3c:	58a3      	ldr	r3, [r4, r2]
 8002f3e:	3301      	adds	r3, #1
 8002f40:	50a3      	str	r3, [r4, r2]
 8002f42:	2301      	movs	r3, #1
 8002f44:	2200      	movs	r2, #0
 8002f46:	e7dd      	b.n	8002f04 <d_print_comp_inner+0x80c>
 8002f48:	2211      	movs	r2, #17
 8002f4a:	4690      	mov	r8, r2
 8002f4c:	2200      	movs	r2, #0
 8002f4e:	2380      	movs	r3, #128	; 0x80
 8002f50:	4693      	mov	fp, r2
 8002f52:	320d      	adds	r2, #13
 8002f54:	32ff      	adds	r2, #255	; 0xff
 8002f56:	4ee7      	ldr	r6, [pc, #924]	; (80032f4 <d_print_comp_inner+0xbfc>)
 8002f58:	4692      	mov	sl, r2
 8002f5a:	005b      	lsls	r3, r3, #1
 8002f5c:	3a04      	subs	r2, #4
 8002f5e:	2774      	movs	r7, #116	; 0x74
 8002f60:	4691      	mov	r9, r2
 8002f62:	58c3      	ldr	r3, [r0, r3]
 8002f64:	44b0      	add	r8, r6
 8002f66:	e00e      	b.n	8002f86 <d_print_comp_inner+0x88e>
 8002f68:	001a      	movs	r2, r3
 8002f6a:	3301      	adds	r3, #1
 8002f6c:	2180      	movs	r1, #128	; 0x80
 8002f6e:	0049      	lsls	r1, r1, #1
 8002f70:	5063      	str	r3, [r4, r1]
 8002f72:	54a7      	strb	r7, [r4, r2]
 8002f74:	2282      	movs	r2, #130	; 0x82
 8002f76:	0052      	lsls	r2, r2, #1
 8002f78:	54a7      	strb	r7, [r4, r2]
 8002f7a:	45b0      	cmp	r8, r6
 8002f7c:	d101      	bne.n	8002f82 <d_print_comp_inner+0x88a>
 8002f7e:	f001 f93b 	bl	80041f8 <d_print_comp_inner+0x1b00>
 8002f82:	7837      	ldrb	r7, [r6, #0]
 8002f84:	3601      	adds	r6, #1
 8002f86:	2bff      	cmp	r3, #255	; 0xff
 8002f88:	d1ee      	bne.n	8002f68 <d_print_comp_inner+0x870>
 8002f8a:	465a      	mov	r2, fp
 8002f8c:	54e2      	strb	r2, [r4, r3]
 8002f8e:	4653      	mov	r3, sl
 8002f90:	58e2      	ldr	r2, [r4, r3]
 8002f92:	464b      	mov	r3, r9
 8002f94:	21ff      	movs	r1, #255	; 0xff
 8002f96:	58e3      	ldr	r3, [r4, r3]
 8002f98:	0020      	movs	r0, r4
 8002f9a:	4798      	blx	r3
 8002f9c:	2294      	movs	r2, #148	; 0x94
 8002f9e:	0052      	lsls	r2, r2, #1
 8002fa0:	58a3      	ldr	r3, [r4, r2]
 8002fa2:	3301      	adds	r3, #1
 8002fa4:	50a3      	str	r3, [r4, r2]
 8002fa6:	2301      	movs	r3, #1
 8002fa8:	2200      	movs	r2, #0
 8002faa:	e7df      	b.n	8002f6c <d_print_comp_inner+0x874>
 8002fac:	220c      	movs	r2, #12
 8002fae:	4690      	mov	r8, r2
 8002fb0:	2200      	movs	r2, #0
 8002fb2:	2380      	movs	r3, #128	; 0x80
 8002fb4:	4693      	mov	fp, r2
 8002fb6:	320d      	adds	r2, #13
 8002fb8:	32ff      	adds	r2, #255	; 0xff
 8002fba:	4ecf      	ldr	r6, [pc, #828]	; (80032f8 <d_print_comp_inner+0xc00>)
 8002fbc:	4692      	mov	sl, r2
 8002fbe:	005b      	lsls	r3, r3, #1
 8002fc0:	3a04      	subs	r2, #4
 8002fc2:	2774      	movs	r7, #116	; 0x74
 8002fc4:	4691      	mov	r9, r2
 8002fc6:	58c3      	ldr	r3, [r0, r3]
 8002fc8:	44b0      	add	r8, r6
 8002fca:	e00e      	b.n	8002fea <d_print_comp_inner+0x8f2>
 8002fcc:	001a      	movs	r2, r3
 8002fce:	3301      	adds	r3, #1
 8002fd0:	2180      	movs	r1, #128	; 0x80
 8002fd2:	0049      	lsls	r1, r1, #1
 8002fd4:	5063      	str	r3, [r4, r1]
 8002fd6:	54a7      	strb	r7, [r4, r2]
 8002fd8:	2282      	movs	r2, #130	; 0x82
 8002fda:	0052      	lsls	r2, r2, #1
 8002fdc:	54a7      	strb	r7, [r4, r2]
 8002fde:	45b0      	cmp	r8, r6
 8002fe0:	d101      	bne.n	8002fe6 <d_print_comp_inner+0x8ee>
 8002fe2:	f001 f8b3 	bl	800414c <d_print_comp_inner+0x1a54>
 8002fe6:	7837      	ldrb	r7, [r6, #0]
 8002fe8:	3601      	adds	r6, #1
 8002fea:	2bff      	cmp	r3, #255	; 0xff
 8002fec:	d1ee      	bne.n	8002fcc <d_print_comp_inner+0x8d4>
 8002fee:	465a      	mov	r2, fp
 8002ff0:	54e2      	strb	r2, [r4, r3]
 8002ff2:	4653      	mov	r3, sl
 8002ff4:	58e2      	ldr	r2, [r4, r3]
 8002ff6:	464b      	mov	r3, r9
 8002ff8:	21ff      	movs	r1, #255	; 0xff
 8002ffa:	58e3      	ldr	r3, [r4, r3]
 8002ffc:	0020      	movs	r0, r4
 8002ffe:	4798      	blx	r3
 8003000:	2294      	movs	r2, #148	; 0x94
 8003002:	0052      	lsls	r2, r2, #1
 8003004:	58a3      	ldr	r3, [r4, r2]
 8003006:	3301      	adds	r3, #1
 8003008:	50a3      	str	r3, [r4, r2]
 800300a:	2301      	movs	r3, #1
 800300c:	2200      	movs	r2, #0
 800300e:	e7df      	b.n	8002fd0 <d_print_comp_inner+0x8d8>
 8003010:	2217      	movs	r2, #23
 8003012:	4691      	mov	r9, r2
 8003014:	2200      	movs	r2, #0
 8003016:	2380      	movs	r3, #128	; 0x80
 8003018:	4693      	mov	fp, r2
 800301a:	4eb8      	ldr	r6, [pc, #736]	; (80032fc <d_print_comp_inner+0xc04>)
 800301c:	320d      	adds	r2, #13
 800301e:	005b      	lsls	r3, r3, #1
 8003020:	32ff      	adds	r2, #255	; 0xff
 8003022:	2763      	movs	r7, #99	; 0x63
 8003024:	4692      	mov	sl, r2
 8003026:	58c3      	ldr	r3, [r0, r3]
 8003028:	44b1      	add	r9, r6
 800302a:	e00f      	b.n	800304c <d_print_comp_inner+0x954>
 800302c:	001a      	movs	r2, r3
 800302e:	3301      	adds	r3, #1
 8003030:	2180      	movs	r1, #128	; 0x80
 8003032:	0049      	lsls	r1, r1, #1
 8003034:	5063      	str	r3, [r4, r1]
 8003036:	54a7      	strb	r7, [r4, r2]
 8003038:	2282      	movs	r2, #130	; 0x82
 800303a:	0052      	lsls	r2, r2, #1
 800303c:	4688      	mov	r8, r1
 800303e:	54a7      	strb	r7, [r4, r2]
 8003040:	454e      	cmp	r6, r9
 8003042:	d101      	bne.n	8003048 <d_print_comp_inner+0x950>
 8003044:	f001 f889 	bl	800415a <d_print_comp_inner+0x1a62>
 8003048:	7837      	ldrb	r7, [r6, #0]
 800304a:	3601      	adds	r6, #1
 800304c:	2bff      	cmp	r3, #255	; 0xff
 800304e:	d1ed      	bne.n	800302c <d_print_comp_inner+0x934>
 8003050:	465a      	mov	r2, fp
 8003052:	54e2      	strb	r2, [r4, r3]
 8003054:	4653      	mov	r3, sl
 8003056:	58e2      	ldr	r2, [r4, r3]
 8003058:	2384      	movs	r3, #132	; 0x84
 800305a:	005b      	lsls	r3, r3, #1
 800305c:	58e3      	ldr	r3, [r4, r3]
 800305e:	21ff      	movs	r1, #255	; 0xff
 8003060:	0020      	movs	r0, r4
 8003062:	4798      	blx	r3
 8003064:	2294      	movs	r2, #148	; 0x94
 8003066:	0052      	lsls	r2, r2, #1
 8003068:	58a3      	ldr	r3, [r4, r2]
 800306a:	3301      	adds	r3, #1
 800306c:	50a3      	str	r3, [r4, r2]
 800306e:	2301      	movs	r3, #1
 8003070:	2200      	movs	r2, #0
 8003072:	e7dd      	b.n	8003030 <d_print_comp_inner+0x938>
 8003074:	2208      	movs	r2, #8
 8003076:	4690      	mov	r8, r2
 8003078:	2200      	movs	r2, #0
 800307a:	2380      	movs	r3, #128	; 0x80
 800307c:	4693      	mov	fp, r2
 800307e:	320d      	adds	r2, #13
 8003080:	32ff      	adds	r2, #255	; 0xff
 8003082:	4e9f      	ldr	r6, [pc, #636]	; (8003300 <d_print_comp_inner+0xc08>)
 8003084:	4692      	mov	sl, r2
 8003086:	005b      	lsls	r3, r3, #1
 8003088:	3a04      	subs	r2, #4
 800308a:	2756      	movs	r7, #86	; 0x56
 800308c:	4691      	mov	r9, r2
 800308e:	58c3      	ldr	r3, [r0, r3]
 8003090:	44b0      	add	r8, r6
 8003092:	e00e      	b.n	80030b2 <d_print_comp_inner+0x9ba>
 8003094:	001a      	movs	r2, r3
 8003096:	3301      	adds	r3, #1
 8003098:	2180      	movs	r1, #128	; 0x80
 800309a:	0049      	lsls	r1, r1, #1
 800309c:	5063      	str	r3, [r4, r1]
 800309e:	54a7      	strb	r7, [r4, r2]
 80030a0:	2282      	movs	r2, #130	; 0x82
 80030a2:	3601      	adds	r6, #1
 80030a4:	0052      	lsls	r2, r2, #1
 80030a6:	54a7      	strb	r7, [r4, r2]
 80030a8:	4546      	cmp	r6, r8
 80030aa:	d101      	bne.n	80030b0 <d_print_comp_inner+0x9b8>
 80030ac:	f001 f840 	bl	8004130 <d_print_comp_inner+0x1a38>
 80030b0:	7837      	ldrb	r7, [r6, #0]
 80030b2:	2bff      	cmp	r3, #255	; 0xff
 80030b4:	d1ee      	bne.n	8003094 <d_print_comp_inner+0x99c>
 80030b6:	465a      	mov	r2, fp
 80030b8:	54e2      	strb	r2, [r4, r3]
 80030ba:	4653      	mov	r3, sl
 80030bc:	58e2      	ldr	r2, [r4, r3]
 80030be:	464b      	mov	r3, r9
 80030c0:	21ff      	movs	r1, #255	; 0xff
 80030c2:	58e3      	ldr	r3, [r4, r3]
 80030c4:	0020      	movs	r0, r4
 80030c6:	4798      	blx	r3
 80030c8:	2294      	movs	r2, #148	; 0x94
 80030ca:	0052      	lsls	r2, r2, #1
 80030cc:	58a3      	ldr	r3, [r4, r2]
 80030ce:	3301      	adds	r3, #1
 80030d0:	50a3      	str	r3, [r4, r2]
 80030d2:	2301      	movs	r3, #1
 80030d4:	2200      	movs	r2, #0
 80030d6:	e7df      	b.n	8003098 <d_print_comp_inner+0x9a0>
 80030d8:	220a      	movs	r2, #10
 80030da:	4690      	mov	r8, r2
 80030dc:	2200      	movs	r2, #0
 80030de:	2380      	movs	r3, #128	; 0x80
 80030e0:	4693      	mov	fp, r2
 80030e2:	320d      	adds	r2, #13
 80030e4:	32ff      	adds	r2, #255	; 0xff
 80030e6:	4e87      	ldr	r6, [pc, #540]	; (8003304 <d_print_comp_inner+0xc0c>)
 80030e8:	4692      	mov	sl, r2
 80030ea:	005b      	lsls	r3, r3, #1
 80030ec:	3a04      	subs	r2, #4
 80030ee:	2776      	movs	r7, #118	; 0x76
 80030f0:	4691      	mov	r9, r2
 80030f2:	58c3      	ldr	r3, [r0, r3]
 80030f4:	44b0      	add	r8, r6
 80030f6:	e00e      	b.n	8003116 <d_print_comp_inner+0xa1e>
 80030f8:	001a      	movs	r2, r3
 80030fa:	3301      	adds	r3, #1
 80030fc:	2180      	movs	r1, #128	; 0x80
 80030fe:	0049      	lsls	r1, r1, #1
 8003100:	5063      	str	r3, [r4, r1]
 8003102:	54a7      	strb	r7, [r4, r2]
 8003104:	2282      	movs	r2, #130	; 0x82
 8003106:	0052      	lsls	r2, r2, #1
 8003108:	54a7      	strb	r7, [r4, r2]
 800310a:	45b0      	cmp	r8, r6
 800310c:	d101      	bne.n	8003112 <d_print_comp_inner+0xa1a>
 800310e:	f001 f816 	bl	800413e <d_print_comp_inner+0x1a46>
 8003112:	7837      	ldrb	r7, [r6, #0]
 8003114:	3601      	adds	r6, #1
 8003116:	2bff      	cmp	r3, #255	; 0xff
 8003118:	d1ee      	bne.n	80030f8 <d_print_comp_inner+0xa00>
 800311a:	465a      	mov	r2, fp
 800311c:	54e2      	strb	r2, [r4, r3]
 800311e:	4653      	mov	r3, sl
 8003120:	58e2      	ldr	r2, [r4, r3]
 8003122:	464b      	mov	r3, r9
 8003124:	21ff      	movs	r1, #255	; 0xff
 8003126:	58e3      	ldr	r3, [r4, r3]
 8003128:	0020      	movs	r0, r4
 800312a:	4798      	blx	r3
 800312c:	2294      	movs	r2, #148	; 0x94
 800312e:	0052      	lsls	r2, r2, #1
 8003130:	58a3      	ldr	r3, [r4, r2]
 8003132:	3301      	adds	r3, #1
 8003134:	50a3      	str	r3, [r4, r2]
 8003136:	2301      	movs	r3, #1
 8003138:	2200      	movs	r2, #0
 800313a:	e7df      	b.n	80030fc <d_print_comp_inner+0xa04>
 800313c:	2380      	movs	r3, #128	; 0x80
 800313e:	005b      	lsls	r3, r3, #1
 8003140:	58c3      	ldr	r3, [r0, r3]
 8003142:	2bff      	cmp	r3, #255	; 0xff
 8003144:	d101      	bne.n	800314a <d_print_comp_inner+0xa52>
 8003146:	f001 fc27 	bl	8004998 <d_print_comp_inner+0x22a0>
 800314a:	1c59      	adds	r1, r3, #1
 800314c:	2280      	movs	r2, #128	; 0x80
 800314e:	0052      	lsls	r2, r2, #1
 8003150:	50a1      	str	r1, [r4, r2]
 8003152:	3a82      	subs	r2, #130	; 0x82
 8003154:	54e2      	strb	r2, [r4, r3]
 8003156:	2382      	movs	r3, #130	; 0x82
 8003158:	005b      	lsls	r3, r3, #1
 800315a:	54e2      	strb	r2, [r4, r3]
 800315c:	2111      	movs	r1, #17
 800315e:	0020      	movs	r0, r4
 8003160:	692a      	ldr	r2, [r5, #16]
 8003162:	f001 ffaf 	bl	80050c4 <d_print_comp>
 8003166:	f7ff faee 	bl	8002746 <d_print_comp_inner+0x4e>
 800316a:	2111      	movs	r1, #17
 800316c:	692a      	ldr	r2, [r5, #16]
 800316e:	f001 ffa9 	bl	80050c4 <d_print_comp>
 8003172:	f7ff fae8 	bl	8002746 <d_print_comp_inner+0x4e>
 8003176:	221c      	movs	r2, #28
 8003178:	4690      	mov	r8, r2
 800317a:	2200      	movs	r2, #0
 800317c:	2380      	movs	r3, #128	; 0x80
 800317e:	4693      	mov	fp, r2
 8003180:	320d      	adds	r2, #13
 8003182:	32ff      	adds	r2, #255	; 0xff
 8003184:	4e60      	ldr	r6, [pc, #384]	; (8003308 <d_print_comp_inner+0xc10>)
 8003186:	4692      	mov	sl, r2
 8003188:	005b      	lsls	r3, r3, #1
 800318a:	3a04      	subs	r2, #4
 800318c:	2767      	movs	r7, #103	; 0x67
 800318e:	4691      	mov	r9, r2
 8003190:	58c3      	ldr	r3, [r0, r3]
 8003192:	44b0      	add	r8, r6
 8003194:	e00e      	b.n	80031b4 <d_print_comp_inner+0xabc>
 8003196:	001a      	movs	r2, r3
 8003198:	3301      	adds	r3, #1
 800319a:	2180      	movs	r1, #128	; 0x80
 800319c:	0049      	lsls	r1, r1, #1
 800319e:	5063      	str	r3, [r4, r1]
 80031a0:	54a7      	strb	r7, [r4, r2]
 80031a2:	2282      	movs	r2, #130	; 0x82
 80031a4:	0052      	lsls	r2, r2, #1
 80031a6:	54a7      	strb	r7, [r4, r2]
 80031a8:	45b0      	cmp	r8, r6
 80031aa:	d101      	bne.n	80031b0 <d_print_comp_inner+0xab8>
 80031ac:	f000 ff23 	bl	8003ff6 <d_print_comp_inner+0x18fe>
 80031b0:	7837      	ldrb	r7, [r6, #0]
 80031b2:	3601      	adds	r6, #1
 80031b4:	2bff      	cmp	r3, #255	; 0xff
 80031b6:	d1ee      	bne.n	8003196 <d_print_comp_inner+0xa9e>
 80031b8:	465a      	mov	r2, fp
 80031ba:	54e2      	strb	r2, [r4, r3]
 80031bc:	4653      	mov	r3, sl
 80031be:	58e2      	ldr	r2, [r4, r3]
 80031c0:	464b      	mov	r3, r9
 80031c2:	21ff      	movs	r1, #255	; 0xff
 80031c4:	58e3      	ldr	r3, [r4, r3]
 80031c6:	0020      	movs	r0, r4
 80031c8:	4798      	blx	r3
 80031ca:	2294      	movs	r2, #148	; 0x94
 80031cc:	0052      	lsls	r2, r2, #1
 80031ce:	58a3      	ldr	r3, [r4, r2]
 80031d0:	3301      	adds	r3, #1
 80031d2:	50a3      	str	r3, [r4, r2]
 80031d4:	2301      	movs	r3, #1
 80031d6:	2200      	movs	r2, #0
 80031d8:	e7df      	b.n	800319a <d_print_comp_inner+0xaa2>
 80031da:	2212      	movs	r2, #18
 80031dc:	5eab      	ldrsh	r3, [r5, r2]
 80031de:	2b00      	cmp	r3, #0
 80031e0:	d001      	beq.n	80031e6 <d_print_comp_inner+0xaee>
 80031e2:	f001 faf6 	bl	80047d2 <d_print_comp_inner+0x20da>
 80031e6:	68ea      	ldr	r2, [r5, #12]
 80031e8:	4b48      	ldr	r3, [pc, #288]	; (800330c <d_print_comp_inner+0xc14>)
 80031ea:	68d1      	ldr	r1, [r2, #12]
 80031ec:	4299      	cmp	r1, r3
 80031ee:	d013      	beq.n	8003218 <d_print_comp_inner+0xb20>
 80031f0:	2111      	movs	r1, #17
 80031f2:	0020      	movs	r0, r4
 80031f4:	f001 ff66 	bl	80050c4 <d_print_comp>
 80031f8:	2380      	movs	r3, #128	; 0x80
 80031fa:	005b      	lsls	r3, r3, #1
 80031fc:	58e3      	ldr	r3, [r4, r3]
 80031fe:	2bff      	cmp	r3, #255	; 0xff
 8003200:	d101      	bne.n	8003206 <d_print_comp_inner+0xb0e>
 8003202:	f001 fdf1 	bl	8004de8 <d_print_comp_inner+0x26f0>
 8003206:	2280      	movs	r2, #128	; 0x80
 8003208:	1c59      	adds	r1, r3, #1
 800320a:	0052      	lsls	r2, r2, #1
 800320c:	50a1      	str	r1, [r4, r2]
 800320e:	3ae0      	subs	r2, #224	; 0xe0
 8003210:	54e2      	strb	r2, [r4, r3]
 8003212:	2382      	movs	r3, #130	; 0x82
 8003214:	005b      	lsls	r3, r3, #1
 8003216:	54e2      	strb	r2, [r4, r3]
 8003218:	2210      	movs	r2, #16
 800321a:	5eab      	ldrsh	r3, [r5, r2]
 800321c:	2b00      	cmp	r3, #0
 800321e:	d101      	bne.n	8003224 <d_print_comp_inner+0xb2c>
 8003220:	f001 f950 	bl	80044c4 <d_print_comp_inner+0x1dcc>
 8003224:	0020      	movs	r0, r4
 8003226:	493a      	ldr	r1, [pc, #232]	; (8003310 <d_print_comp_inner+0xc18>)
 8003228:	f7fd f9ae 	bl	8000588 <d_append_string>
 800322c:	f7ff fa8b 	bl	8002746 <d_print_comp_inner+0x4e>
 8003230:	238a      	movs	r3, #138	; 0x8a
 8003232:	ae06      	add	r6, sp, #24
 8003234:	005b      	lsls	r3, r3, #1
 8003236:	58c2      	ldr	r2, [r0, r3]
 8003238:	4698      	mov	r8, r3
 800323a:	50c6      	str	r6, [r0, r3]
 800323c:	2300      	movs	r3, #0
 800323e:	2101      	movs	r1, #1
 8003240:	9206      	str	r2, [sp, #24]
 8003242:	60b3      	str	r3, [r6, #8]
 8003244:	3311      	adds	r3, #17
 8003246:	33ff      	adds	r3, #255	; 0xff
 8003248:	58c3      	ldr	r3, [r0, r3]
 800324a:	4693      	mov	fp, r2
 800324c:	60f3      	str	r3, [r6, #12]
 800324e:	2701      	movs	r7, #1
 8003250:	1e13      	subs	r3, r2, #0
 8003252:	468c      	mov	ip, r1
 8003254:	6075      	str	r5, [r6, #4]
 8003256:	d101      	bne.n	800325c <d_print_comp_inner+0xb64>
 8003258:	f001 fe9c 	bl	8004f94 <d_print_comp_inner+0x289c>
 800325c:	4682      	mov	sl, r0
 800325e:	46b1      	mov	r9, r6
 8003260:	9500      	str	r5, [sp, #0]
 8003262:	e01d      	b.n	80032a0 <d_print_comp_inner+0xba8>
 8003264:	689a      	ldr	r2, [r3, #8]
 8003266:	2a00      	cmp	r2, #0
 8003268:	d117      	bne.n	800329a <d_print_comp_inner+0xba2>
 800326a:	2f03      	cmp	r7, #3
 800326c:	d901      	bls.n	8003272 <d_print_comp_inner+0xb7a>
 800326e:	f001 fc1f 	bl	8004ab0 <d_print_comp_inner+0x23b8>
 8003272:	464a      	mov	r2, r9
 8003274:	0018      	movs	r0, r3
 8003276:	0139      	lsls	r1, r7, #4
 8003278:	1852      	adds	r2, r2, r1
 800327a:	c870      	ldmia	r0!, {r4, r5, r6}
 800327c:	c270      	stmia	r2!, {r4, r5, r6}
 800327e:	6800      	ldr	r0, [r0, #0]
 8003280:	3701      	adds	r7, #1
 8003282:	6010      	str	r0, [r2, #0]
 8003284:	4650      	mov	r0, sl
 8003286:	4642      	mov	r2, r8
 8003288:	5882      	ldr	r2, [r0, r2]
 800328a:	4648      	mov	r0, r9
 800328c:	5042      	str	r2, [r0, r1]
 800328e:	4642      	mov	r2, r8
 8003290:	4650      	mov	r0, sl
 8003292:	4449      	add	r1, r9
 8003294:	5081      	str	r1, [r0, r2]
 8003296:	4662      	mov	r2, ip
 8003298:	609a      	str	r2, [r3, #8]
 800329a:	681b      	ldr	r3, [r3, #0]
 800329c:	2b00      	cmp	r3, #0
 800329e:	d004      	beq.n	80032aa <d_print_comp_inner+0xbb2>
 80032a0:	685a      	ldr	r2, [r3, #4]
 80032a2:	7812      	ldrb	r2, [r2, #0]
 80032a4:	3a19      	subs	r2, #25
 80032a6:	2a02      	cmp	r2, #2
 80032a8:	d9dc      	bls.n	8003264 <d_print_comp_inner+0xb6c>
 80032aa:	9d00      	ldr	r5, [sp, #0]
 80032ac:	2111      	movs	r1, #17
 80032ae:	692a      	ldr	r2, [r5, #16]
 80032b0:	4650      	mov	r0, sl
 80032b2:	f001 ff07 	bl	80050c4 <d_print_comp>
 80032b6:	238a      	movs	r3, #138	; 0x8a
 80032b8:	4654      	mov	r4, sl
 80032ba:	464e      	mov	r6, r9
 80032bc:	465a      	mov	r2, fp
 80032be:	005b      	lsls	r3, r3, #1
 80032c0:	50e2      	str	r2, [r4, r3]
 80032c2:	68b3      	ldr	r3, [r6, #8]
 80032c4:	2b00      	cmp	r3, #0
 80032c6:	d009      	beq.n	80032dc <d_print_comp_inner+0xbe4>
 80032c8:	f7ff fa3d 	bl	8002746 <d_print_comp_inner+0x4e>
 80032cc:	3f01      	subs	r7, #1
 80032ce:	013b      	lsls	r3, r7, #4
 80032d0:	18f3      	adds	r3, r6, r3
 80032d2:	2111      	movs	r1, #17
 80032d4:	0020      	movs	r0, r4
 80032d6:	685a      	ldr	r2, [r3, #4]
 80032d8:	f001 ff22 	bl	8005120 <d_print_mod>
 80032dc:	2f01      	cmp	r7, #1
 80032de:	d1f5      	bne.n	80032cc <d_print_comp_inner+0xbd4>
 80032e0:	238a      	movs	r3, #138	; 0x8a
 80032e2:	005b      	lsls	r3, r3, #1
 80032e4:	002a      	movs	r2, r5
 80032e6:	2111      	movs	r1, #17
 80032e8:	0020      	movs	r0, r4
 80032ea:	58e3      	ldr	r3, [r4, r3]
 80032ec:	f002 fcf8 	bl	8005ce0 <d_print_array_type>
 80032f0:	f7ff fa29 	bl	8002746 <d_print_comp_inner+0x4e>
 80032f4:	0800fcc9 	.word	0x0800fcc9
 80032f8:	0800fcb9 	.word	0x0800fcb9
 80032fc:	0800fc95 	.word	0x0800fc95
 8003300:	0800fc88 	.word	0x0800fc88
 8003304:	0800fc7d 	.word	0x0800fc7d
 8003308:	0800fe61 	.word	0x0800fe61
 800330c:	0800f5c0 	.word	0x0800f5c0
 8003310:	0800fdcc 	.word	0x0800fdcc
 8003314:	221d      	movs	r2, #29
 8003316:	4690      	mov	r8, r2
 8003318:	2200      	movs	r2, #0
 800331a:	2380      	movs	r3, #128	; 0x80
 800331c:	4693      	mov	fp, r2
 800331e:	320d      	adds	r2, #13
 8003320:	32ff      	adds	r2, #255	; 0xff
 8003322:	4ee7      	ldr	r6, [pc, #924]	; (80036c0 <d_print_comp_inner+0xfc8>)
 8003324:	4692      	mov	sl, r2
 8003326:	005b      	lsls	r3, r3, #1
 8003328:	3a04      	subs	r2, #4
 800332a:	2774      	movs	r7, #116	; 0x74
 800332c:	4691      	mov	r9, r2
 800332e:	58c3      	ldr	r3, [r0, r3]
 8003330:	44b0      	add	r8, r6
 8003332:	e00e      	b.n	8003352 <d_print_comp_inner+0xc5a>
 8003334:	001a      	movs	r2, r3
 8003336:	3301      	adds	r3, #1
 8003338:	2180      	movs	r1, #128	; 0x80
 800333a:	0049      	lsls	r1, r1, #1
 800333c:	5063      	str	r3, [r4, r1]
 800333e:	54a7      	strb	r7, [r4, r2]
 8003340:	2282      	movs	r2, #130	; 0x82
 8003342:	0052      	lsls	r2, r2, #1
 8003344:	54a7      	strb	r7, [r4, r2]
 8003346:	45b0      	cmp	r8, r6
 8003348:	d101      	bne.n	800334e <d_print_comp_inner+0xc56>
 800334a:	f000 fd9a 	bl	8003e82 <d_print_comp_inner+0x178a>
 800334e:	7837      	ldrb	r7, [r6, #0]
 8003350:	3601      	adds	r6, #1
 8003352:	2bff      	cmp	r3, #255	; 0xff
 8003354:	d1ee      	bne.n	8003334 <d_print_comp_inner+0xc3c>
 8003356:	465a      	mov	r2, fp
 8003358:	54e2      	strb	r2, [r4, r3]
 800335a:	4653      	mov	r3, sl
 800335c:	58e2      	ldr	r2, [r4, r3]
 800335e:	464b      	mov	r3, r9
 8003360:	21ff      	movs	r1, #255	; 0xff
 8003362:	58e3      	ldr	r3, [r4, r3]
 8003364:	0020      	movs	r0, r4
 8003366:	4798      	blx	r3
 8003368:	2294      	movs	r2, #148	; 0x94
 800336a:	0052      	lsls	r2, r2, #1
 800336c:	58a3      	ldr	r3, [r4, r2]
 800336e:	3301      	adds	r3, #1
 8003370:	50a3      	str	r3, [r4, r2]
 8003372:	2301      	movs	r3, #1
 8003374:	2200      	movs	r2, #0
 8003376:	e7df      	b.n	8003338 <d_print_comp_inner+0xc40>
 8003378:	238a      	movs	r3, #138	; 0x8a
 800337a:	005b      	lsls	r3, r3, #1
 800337c:	58c2      	ldr	r2, [r0, r3]
 800337e:	4691      	mov	r9, r2
 8003380:	2200      	movs	r2, #0
 8003382:	50c2      	str	r2, [r0, r3]
 8003384:	68eb      	ldr	r3, [r5, #12]
 8003386:	4698      	mov	r8, r3
 8003388:	2b00      	cmp	r3, #0
 800338a:	d101      	bne.n	8003390 <d_print_comp_inner+0xc98>
 800338c:	f001 fcc4 	bl	8004d18 <d_print_comp_inner+0x2620>
 8003390:	2388      	movs	r3, #136	; 0x88
 8003392:	005b      	lsls	r3, r3, #1
 8003394:	58c2      	ldr	r2, [r0, r3]
 8003396:	2700      	movs	r7, #0
 8003398:	2300      	movs	r3, #0
 800339a:	ae06      	add	r6, sp, #24
 800339c:	469b      	mov	fp, r3
 800339e:	0030      	movs	r0, r6
 80033a0:	4643      	mov	r3, r8
 80033a2:	2100      	movs	r1, #0
 80033a4:	46bc      	mov	ip, r7
 80033a6:	4690      	mov	r8, r2
 80033a8:	4662      	mov	r2, ip
 80033aa:	6082      	str	r2, [r0, #8]
 80033ac:	4642      	mov	r2, r8
 80033ae:	60c2      	str	r2, [r0, #12]
 80033b0:	465a      	mov	r2, fp
 80033b2:	6043      	str	r3, [r0, #4]
 80033b4:	6001      	str	r1, [r0, #0]
 80033b6:	7819      	ldrb	r1, [r3, #0]
 80033b8:	4682      	mov	sl, r0
 80033ba:	1c57      	adds	r7, r2, #1
 80033bc:	294e      	cmp	r1, #78	; 0x4e
 80033be:	d101      	bne.n	80033c4 <d_print_comp_inner+0xccc>
 80033c0:	f000 fffc 	bl	80043bc <d_print_comp_inner+0x1cc4>
 80033c4:	d901      	bls.n	80033ca <d_print_comp_inner+0xcd2>
 80033c6:	f000 fd43 	bl	8003e50 <d_print_comp_inner+0x1758>
 80033ca:	000a      	movs	r2, r1
 80033cc:	3a1c      	subs	r2, #28
 80033ce:	2a04      	cmp	r2, #4
 80033d0:	d801      	bhi.n	80033d6 <d_print_comp_inner+0xcde>
 80033d2:	f000 fff3 	bl	80043bc <d_print_comp_inner+0x1cc4>
 80033d6:	468a      	mov	sl, r1
 80033d8:	9100      	str	r1, [sp, #0]
 80033da:	218a      	movs	r1, #138	; 0x8a
 80033dc:	0049      	lsls	r1, r1, #1
 80033de:	5060      	str	r0, [r4, r1]
 80033e0:	4651      	mov	r1, sl
 80033e2:	4642      	mov	r2, r8
 80033e4:	4698      	mov	r8, r3
 80033e6:	465b      	mov	r3, fp
 80033e8:	2902      	cmp	r1, #2
 80033ea:	d12a      	bne.n	8003442 <d_print_comp_inner+0xd4a>
 80033ec:	4641      	mov	r1, r8
 80033ee:	6909      	ldr	r1, [r1, #16]
 80033f0:	4688      	mov	r8, r1
 80033f2:	7809      	ldrb	r1, [r1, #0]
 80033f4:	9100      	str	r1, [sp, #0]
 80033f6:	2948      	cmp	r1, #72	; 0x48
 80033f8:	d101      	bne.n	80033fe <d_print_comp_inner+0xd06>
 80033fa:	f001 fd4d 	bl	8004e98 <d_print_comp_inner+0x27a0>
 80033fe:	218a      	movs	r1, #138	; 0x8a
 8003400:	4640      	mov	r0, r8
 8003402:	0049      	lsls	r1, r1, #1
 8003404:	468a      	mov	sl, r1
 8003406:	2100      	movs	r1, #0
 8003408:	4690      	mov	r8, r2
 800340a:	0002      	movs	r2, r0
 800340c:	468c      	mov	ip, r1
 800340e:	011b      	lsls	r3, r3, #4
 8003410:	9900      	ldr	r1, [sp, #0]
 8003412:	18f3      	adds	r3, r6, r3
 8003414:	9701      	str	r7, [sp, #4]
 8003416:	9502      	str	r5, [sp, #8]
 8003418:	9603      	str	r6, [sp, #12]
 800341a:	294e      	cmp	r1, #78	; 0x4e
 800341c:	d101      	bne.n	8003422 <d_print_comp_inner+0xd2a>
 800341e:	f001 fc58 	bl	8004cd2 <d_print_comp_inner+0x25da>
 8003422:	d901      	bls.n	8003428 <d_print_comp_inner+0xd30>
 8003424:	f001 f8d7 	bl	80045d6 <d_print_comp_inner+0x1ede>
 8003428:	0008      	movs	r0, r1
 800342a:	381c      	subs	r0, #28
 800342c:	2804      	cmp	r0, #4
 800342e:	d801      	bhi.n	8003434 <d_print_comp_inner+0xd3c>
 8003430:	f001 fc4f 	bl	8004cd2 <d_print_comp_inner+0x25da>
 8003434:	0013      	movs	r3, r2
 8003436:	4642      	mov	r2, r8
 8003438:	4698      	mov	r8, r3
 800343a:	9f01      	ldr	r7, [sp, #4]
 800343c:	9d02      	ldr	r5, [sp, #8]
 800343e:	9e03      	ldr	r6, [sp, #12]
 8003440:	9100      	str	r1, [sp, #0]
 8003442:	9b00      	ldr	r3, [sp, #0]
 8003444:	2b04      	cmp	r3, #4
 8003446:	d106      	bne.n	8003456 <d_print_comp_inner+0xd5e>
 8003448:	330d      	adds	r3, #13
 800344a:	33ff      	adds	r3, #255	; 0xff
 800344c:	9204      	str	r2, [sp, #16]
 800344e:	aa04      	add	r2, sp, #16
 8003450:	50e2      	str	r2, [r4, r3]
 8003452:	4643      	mov	r3, r8
 8003454:	9305      	str	r3, [sp, #20]
 8003456:	2111      	movs	r1, #17
 8003458:	0020      	movs	r0, r4
 800345a:	692a      	ldr	r2, [r5, #16]
 800345c:	f001 fe32 	bl	80050c4 <d_print_comp>
 8003460:	4643      	mov	r3, r8
 8003462:	781b      	ldrb	r3, [r3, #0]
 8003464:	2b04      	cmp	r3, #4
 8003466:	d103      	bne.n	8003470 <d_print_comp_inner+0xd78>
 8003468:	9a04      	ldr	r2, [sp, #16]
 800346a:	330d      	adds	r3, #13
 800346c:	33ff      	adds	r3, #255	; 0xff
 800346e:	50e2      	str	r2, [r4, r3]
 8003470:	2380      	movs	r3, #128	; 0x80
 8003472:	013d      	lsls	r5, r7, #4
 8003474:	005b      	lsls	r3, r3, #1
 8003476:	4698      	mov	r8, r3
 8003478:	3d0c      	subs	r5, #12
 800347a:	3304      	adds	r3, #4
 800347c:	1975      	adds	r5, r6, r5
 800347e:	469a      	mov	sl, r3
 8003480:	2620      	movs	r6, #32
 8003482:	686b      	ldr	r3, [r5, #4]
 8003484:	3f01      	subs	r7, #1
 8003486:	2b00      	cmp	r3, #0
 8003488:	d101      	bne.n	800348e <d_print_comp_inner+0xd96>
 800348a:	f000 ff84 	bl	8004396 <d_print_comp_inner+0x1c9e>
 800348e:	3d10      	subs	r5, #16
 8003490:	2f00      	cmp	r7, #0
 8003492:	d1f6      	bne.n	8003482 <d_print_comp_inner+0xd8a>
 8003494:	238a      	movs	r3, #138	; 0x8a
 8003496:	464a      	mov	r2, r9
 8003498:	005b      	lsls	r3, r3, #1
 800349a:	50e2      	str	r2, [r4, r3]
 800349c:	f7ff f953 	bl	8002746 <d_print_comp_inner+0x4e>
 80034a0:	692b      	ldr	r3, [r5, #16]
 80034a2:	781a      	ldrb	r2, [r3, #0]
 80034a4:	2a3b      	cmp	r2, #59	; 0x3b
 80034a6:	d001      	beq.n	80034ac <d_print_comp_inner+0xdb4>
 80034a8:	f7ff f949 	bl	800273e <d_print_comp_inner+0x46>
 80034ac:	691b      	ldr	r3, [r3, #16]
 80034ae:	781b      	ldrb	r3, [r3, #0]
 80034b0:	2b3c      	cmp	r3, #60	; 0x3c
 80034b2:	d001      	beq.n	80034b8 <d_print_comp_inner+0xdc0>
 80034b4:	f7ff f943 	bl	800273e <d_print_comp_inner+0x46>
 80034b8:	002a      	movs	r2, r5
 80034ba:	2111      	movs	r1, #17
 80034bc:	f002 ffba 	bl	8006434 <d_maybe_print_fold_expression>
 80034c0:	2800      	cmp	r0, #0
 80034c2:	d001      	beq.n	80034c8 <d_print_comp_inner+0xdd0>
 80034c4:	f7ff f93f 	bl	8002746 <d_print_comp_inner+0x4e>
 80034c8:	002a      	movs	r2, r5
 80034ca:	2111      	movs	r1, #17
 80034cc:	0020      	movs	r0, r4
 80034ce:	f003 f8f7 	bl	80066c0 <d_maybe_print_designated_init>
 80034d2:	2800      	cmp	r0, #0
 80034d4:	d001      	beq.n	80034da <d_print_comp_inner+0xde2>
 80034d6:	f7ff f936 	bl	8002746 <d_print_comp_inner+0x4e>
 80034da:	692b      	ldr	r3, [r5, #16]
 80034dc:	68ee      	ldr	r6, [r5, #12]
 80034de:	68df      	ldr	r7, [r3, #12]
 80034e0:	691b      	ldr	r3, [r3, #16]
 80034e2:	4978      	ldr	r1, [pc, #480]	; (80036c4 <d_print_comp_inner+0xfcc>)
 80034e4:	68da      	ldr	r2, [r3, #12]
 80034e6:	691d      	ldr	r5, [r3, #16]
 80034e8:	68f3      	ldr	r3, [r6, #12]
 80034ea:	4690      	mov	r8, r2
 80034ec:	6818      	ldr	r0, [r3, #0]
 80034ee:	f003 fa6b 	bl	80069c8 <strcmp>
 80034f2:	2800      	cmp	r0, #0
 80034f4:	d001      	beq.n	80034fa <d_print_comp_inner+0xe02>
 80034f6:	f001 fda5 	bl	8005044 <d_print_comp_inner+0x294c>
 80034fa:	003a      	movs	r2, r7
 80034fc:	0020      	movs	r0, r4
 80034fe:	2111      	movs	r1, #17
 8003500:	f002 ff14 	bl	800632c <d_print_subexpr>
 8003504:	0032      	movs	r2, r6
 8003506:	0020      	movs	r0, r4
 8003508:	2111      	movs	r1, #17
 800350a:	f002 fced 	bl	8005ee8 <d_print_expr_op>
 800350e:	4642      	mov	r2, r8
 8003510:	0020      	movs	r0, r4
 8003512:	2111      	movs	r1, #17
 8003514:	f002 ff0a 	bl	800632c <d_print_subexpr>
 8003518:	0020      	movs	r0, r4
 800351a:	496b      	ldr	r1, [pc, #428]	; (80036c8 <d_print_comp_inner+0xfd0>)
 800351c:	f7fd f834 	bl	8000588 <d_append_string>
 8003520:	002a      	movs	r2, r5
 8003522:	2111      	movs	r1, #17
 8003524:	0020      	movs	r0, r4
 8003526:	f002 ff01 	bl	800632c <d_print_subexpr>
 800352a:	f7ff f90c 	bl	8002746 <d_print_comp_inner+0x4e>
 800352e:	220e      	movs	r2, #14
 8003530:	4690      	mov	r8, r2
 8003532:	2200      	movs	r2, #0
 8003534:	2380      	movs	r3, #128	; 0x80
 8003536:	4693      	mov	fp, r2
 8003538:	320d      	adds	r2, #13
 800353a:	32ff      	adds	r2, #255	; 0xff
 800353c:	4e63      	ldr	r6, [pc, #396]	; (80036cc <d_print_comp_inner+0xfd4>)
 800353e:	4692      	mov	sl, r2
 8003540:	005b      	lsls	r3, r3, #1
 8003542:	3a04      	subs	r2, #4
 8003544:	276a      	movs	r7, #106	; 0x6a
 8003546:	4691      	mov	r9, r2
 8003548:	58c3      	ldr	r3, [r0, r3]
 800354a:	44b0      	add	r8, r6
 800354c:	e00e      	b.n	800356c <d_print_comp_inner+0xe74>
 800354e:	001a      	movs	r2, r3
 8003550:	3301      	adds	r3, #1
 8003552:	2180      	movs	r1, #128	; 0x80
 8003554:	0049      	lsls	r1, r1, #1
 8003556:	5063      	str	r3, [r4, r1]
 8003558:	54a7      	strb	r7, [r4, r2]
 800355a:	2282      	movs	r2, #130	; 0x82
 800355c:	3601      	adds	r6, #1
 800355e:	0052      	lsls	r2, r2, #1
 8003560:	54a7      	strb	r7, [r4, r2]
 8003562:	45b0      	cmp	r8, r6
 8003564:	d101      	bne.n	800356a <d_print_comp_inner+0xe72>
 8003566:	f000 fc85 	bl	8003e74 <d_print_comp_inner+0x177c>
 800356a:	7837      	ldrb	r7, [r6, #0]
 800356c:	2bff      	cmp	r3, #255	; 0xff
 800356e:	d1ee      	bne.n	800354e <d_print_comp_inner+0xe56>
 8003570:	465a      	mov	r2, fp
 8003572:	54e2      	strb	r2, [r4, r3]
 8003574:	4653      	mov	r3, sl
 8003576:	58e2      	ldr	r2, [r4, r3]
 8003578:	464b      	mov	r3, r9
 800357a:	21ff      	movs	r1, #255	; 0xff
 800357c:	58e3      	ldr	r3, [r4, r3]
 800357e:	0020      	movs	r0, r4
 8003580:	4798      	blx	r3
 8003582:	2294      	movs	r2, #148	; 0x94
 8003584:	0052      	lsls	r2, r2, #1
 8003586:	58a3      	ldr	r3, [r4, r2]
 8003588:	3301      	adds	r3, #1
 800358a:	50a3      	str	r3, [r4, r2]
 800358c:	2301      	movs	r3, #1
 800358e:	2200      	movs	r2, #0
 8003590:	e7df      	b.n	8003552 <d_print_comp_inner+0xe5a>
 8003592:	220f      	movs	r2, #15
 8003594:	4690      	mov	r8, r2
 8003596:	2200      	movs	r2, #0
 8003598:	2380      	movs	r3, #128	; 0x80
 800359a:	4693      	mov	fp, r2
 800359c:	320d      	adds	r2, #13
 800359e:	32ff      	adds	r2, #255	; 0xff
 80035a0:	4e4b      	ldr	r6, [pc, #300]	; (80036d0 <d_print_comp_inner+0xfd8>)
 80035a2:	4692      	mov	sl, r2
 80035a4:	005b      	lsls	r3, r3, #1
 80035a6:	3a04      	subs	r2, #4
 80035a8:	276a      	movs	r7, #106	; 0x6a
 80035aa:	4691      	mov	r9, r2
 80035ac:	58c3      	ldr	r3, [r0, r3]
 80035ae:	44b0      	add	r8, r6
 80035b0:	e00e      	b.n	80035d0 <d_print_comp_inner+0xed8>
 80035b2:	001a      	movs	r2, r3
 80035b4:	3301      	adds	r3, #1
 80035b6:	2180      	movs	r1, #128	; 0x80
 80035b8:	0049      	lsls	r1, r1, #1
 80035ba:	5063      	str	r3, [r4, r1]
 80035bc:	54a7      	strb	r7, [r4, r2]
 80035be:	2282      	movs	r2, #130	; 0x82
 80035c0:	3601      	adds	r6, #1
 80035c2:	0052      	lsls	r2, r2, #1
 80035c4:	54a7      	strb	r7, [r4, r2]
 80035c6:	45b0      	cmp	r8, r6
 80035c8:	d101      	bne.n	80035ce <d_print_comp_inner+0xed6>
 80035ca:	f000 fe2a 	bl	8004222 <d_print_comp_inner+0x1b2a>
 80035ce:	7837      	ldrb	r7, [r6, #0]
 80035d0:	2bff      	cmp	r3, #255	; 0xff
 80035d2:	d1ee      	bne.n	80035b2 <d_print_comp_inner+0xeba>
 80035d4:	465a      	mov	r2, fp
 80035d6:	54e2      	strb	r2, [r4, r3]
 80035d8:	4653      	mov	r3, sl
 80035da:	58e2      	ldr	r2, [r4, r3]
 80035dc:	464b      	mov	r3, r9
 80035de:	21ff      	movs	r1, #255	; 0xff
 80035e0:	58e3      	ldr	r3, [r4, r3]
 80035e2:	0020      	movs	r0, r4
 80035e4:	4798      	blx	r3
 80035e6:	2294      	movs	r2, #148	; 0x94
 80035e8:	0052      	lsls	r2, r2, #1
 80035ea:	58a3      	ldr	r3, [r4, r2]
 80035ec:	3301      	adds	r3, #1
 80035ee:	50a3      	str	r3, [r4, r2]
 80035f0:	2301      	movs	r3, #1
 80035f2:	2200      	movs	r2, #0
 80035f4:	e7df      	b.n	80035b6 <d_print_comp_inner+0xebe>
 80035f6:	2215      	movs	r2, #21
 80035f8:	4690      	mov	r8, r2
 80035fa:	2200      	movs	r2, #0
 80035fc:	2380      	movs	r3, #128	; 0x80
 80035fe:	4693      	mov	fp, r2
 8003600:	320d      	adds	r2, #13
 8003602:	32ff      	adds	r2, #255	; 0xff
 8003604:	4e33      	ldr	r6, [pc, #204]	; (80036d4 <d_print_comp_inner+0xfdc>)
 8003606:	4692      	mov	sl, r2
 8003608:	005b      	lsls	r3, r3, #1
 800360a:	3a04      	subs	r2, #4
 800360c:	2754      	movs	r7, #84	; 0x54
 800360e:	4691      	mov	r9, r2
 8003610:	58c3      	ldr	r3, [r0, r3]
 8003612:	44b0      	add	r8, r6
 8003614:	e00e      	b.n	8003634 <d_print_comp_inner+0xf3c>
 8003616:	001a      	movs	r2, r3
 8003618:	3301      	adds	r3, #1
 800361a:	2180      	movs	r1, #128	; 0x80
 800361c:	0049      	lsls	r1, r1, #1
 800361e:	5063      	str	r3, [r4, r1]
 8003620:	54a7      	strb	r7, [r4, r2]
 8003622:	2282      	movs	r2, #130	; 0x82
 8003624:	0052      	lsls	r2, r2, #1
 8003626:	54a7      	strb	r7, [r4, r2]
 8003628:	45b0      	cmp	r8, r6
 800362a:	d101      	bne.n	8003630 <d_print_comp_inner+0xf38>
 800362c:	f000 fdeb 	bl	8004206 <d_print_comp_inner+0x1b0e>
 8003630:	7837      	ldrb	r7, [r6, #0]
 8003632:	3601      	adds	r6, #1
 8003634:	2bff      	cmp	r3, #255	; 0xff
 8003636:	d1ee      	bne.n	8003616 <d_print_comp_inner+0xf1e>
 8003638:	465a      	mov	r2, fp
 800363a:	54e2      	strb	r2, [r4, r3]
 800363c:	4653      	mov	r3, sl
 800363e:	58e2      	ldr	r2, [r4, r3]
 8003640:	464b      	mov	r3, r9
 8003642:	21ff      	movs	r1, #255	; 0xff
 8003644:	58e3      	ldr	r3, [r4, r3]
 8003646:	0020      	movs	r0, r4
 8003648:	4798      	blx	r3
 800364a:	2294      	movs	r2, #148	; 0x94
 800364c:	0052      	lsls	r2, r2, #1
 800364e:	58a3      	ldr	r3, [r4, r2]
 8003650:	3301      	adds	r3, #1
 8003652:	50a3      	str	r3, [r4, r2]
 8003654:	2301      	movs	r3, #1
 8003656:	2200      	movs	r2, #0
 8003658:	e7df      	b.n	800361a <d_print_comp_inner+0xf22>
 800365a:	2211      	movs	r2, #17
 800365c:	4690      	mov	r8, r2
 800365e:	2200      	movs	r2, #0
 8003660:	2380      	movs	r3, #128	; 0x80
 8003662:	4693      	mov	fp, r2
 8003664:	320d      	adds	r2, #13
 8003666:	32ff      	adds	r2, #255	; 0xff
 8003668:	4e1b      	ldr	r6, [pc, #108]	; (80036d8 <d_print_comp_inner+0xfe0>)
 800366a:	4692      	mov	sl, r2
 800366c:	005b      	lsls	r3, r3, #1
 800366e:	3a04      	subs	r2, #4
 8003670:	2776      	movs	r7, #118	; 0x76
 8003672:	4691      	mov	r9, r2
 8003674:	58c3      	ldr	r3, [r0, r3]
 8003676:	44b0      	add	r8, r6
 8003678:	e00e      	b.n	8003698 <d_print_comp_inner+0xfa0>
 800367a:	001a      	movs	r2, r3
 800367c:	3301      	adds	r3, #1
 800367e:	2180      	movs	r1, #128	; 0x80
 8003680:	0049      	lsls	r1, r1, #1
 8003682:	5063      	str	r3, [r4, r1]
 8003684:	54a7      	strb	r7, [r4, r2]
 8003686:	2282      	movs	r2, #130	; 0x82
 8003688:	3601      	adds	r6, #1
 800368a:	0052      	lsls	r2, r2, #1
 800368c:	54a7      	strb	r7, [r4, r2]
 800368e:	45b0      	cmp	r8, r6
 8003690:	d101      	bne.n	8003696 <d_print_comp_inner+0xf9e>
 8003692:	f000 fdd4 	bl	800423e <d_print_comp_inner+0x1b46>
 8003696:	7837      	ldrb	r7, [r6, #0]
 8003698:	2bff      	cmp	r3, #255	; 0xff
 800369a:	d1ee      	bne.n	800367a <d_print_comp_inner+0xf82>
 800369c:	465a      	mov	r2, fp
 800369e:	54e2      	strb	r2, [r4, r3]
 80036a0:	4653      	mov	r3, sl
 80036a2:	58e2      	ldr	r2, [r4, r3]
 80036a4:	464b      	mov	r3, r9
 80036a6:	21ff      	movs	r1, #255	; 0xff
 80036a8:	58e3      	ldr	r3, [r4, r3]
 80036aa:	0020      	movs	r0, r4
 80036ac:	4798      	blx	r3
 80036ae:	2294      	movs	r2, #148	; 0x94
 80036b0:	0052      	lsls	r2, r2, #1
 80036b2:	58a3      	ldr	r3, [r4, r2]
 80036b4:	3301      	adds	r3, #1
 80036b6:	50a3      	str	r3, [r4, r2]
 80036b8:	2301      	movs	r3, #1
 80036ba:	2200      	movs	r2, #0
 80036bc:	e7df      	b.n	800367e <d_print_comp_inner+0xf86>
 80036be:	46c0      	nop			; (mov r8, r8)
 80036c0:	0800fc5d 	.word	0x0800fc5d
 80036c4:	0800fe04 	.word	0x0800fe04
 80036c8:	0800fe08 	.word	0x0800fe08
 80036cc:	0800fe30 	.word	0x0800fe30
 80036d0:	0800fd24 	.word	0x0800fd24
 80036d4:	0800fd49 	.word	0x0800fd49
 80036d8:	0800fcf4 	.word	0x0800fcf4
 80036dc:	2212      	movs	r2, #18
 80036de:	4690      	mov	r8, r2
 80036e0:	2200      	movs	r2, #0
 80036e2:	2380      	movs	r3, #128	; 0x80
 80036e4:	4693      	mov	fp, r2
 80036e6:	320d      	adds	r2, #13
 80036e8:	32ff      	adds	r2, #255	; 0xff
 80036ea:	4ee9      	ldr	r6, [pc, #932]	; (8003a90 <d_print_comp_inner+0x1398>)
 80036ec:	4692      	mov	sl, r2
 80036ee:	005b      	lsls	r3, r3, #1
 80036f0:	3a04      	subs	r2, #4
 80036f2:	2767      	movs	r7, #103	; 0x67
 80036f4:	4691      	mov	r9, r2
 80036f6:	58c3      	ldr	r3, [r0, r3]
 80036f8:	44b0      	add	r8, r6
 80036fa:	e00e      	b.n	800371a <d_print_comp_inner+0x1022>
 80036fc:	001a      	movs	r2, r3
 80036fe:	3301      	adds	r3, #1
 8003700:	2180      	movs	r1, #128	; 0x80
 8003702:	0049      	lsls	r1, r1, #1
 8003704:	5063      	str	r3, [r4, r1]
 8003706:	54a7      	strb	r7, [r4, r2]
 8003708:	2282      	movs	r2, #130	; 0x82
 800370a:	0052      	lsls	r2, r2, #1
 800370c:	54a7      	strb	r7, [r4, r2]
 800370e:	45b0      	cmp	r8, r6
 8003710:	d101      	bne.n	8003716 <d_print_comp_inner+0x101e>
 8003712:	f000 fd7f 	bl	8004214 <d_print_comp_inner+0x1b1c>
 8003716:	7837      	ldrb	r7, [r6, #0]
 8003718:	3601      	adds	r6, #1
 800371a:	2bff      	cmp	r3, #255	; 0xff
 800371c:	d1ee      	bne.n	80036fc <d_print_comp_inner+0x1004>
 800371e:	465a      	mov	r2, fp
 8003720:	54e2      	strb	r2, [r4, r3]
 8003722:	4653      	mov	r3, sl
 8003724:	58e2      	ldr	r2, [r4, r3]
 8003726:	464b      	mov	r3, r9
 8003728:	21ff      	movs	r1, #255	; 0xff
 800372a:	58e3      	ldr	r3, [r4, r3]
 800372c:	0020      	movs	r0, r4
 800372e:	4798      	blx	r3
 8003730:	2294      	movs	r2, #148	; 0x94
 8003732:	0052      	lsls	r2, r2, #1
 8003734:	58a3      	ldr	r3, [r4, r2]
 8003736:	3301      	adds	r3, #1
 8003738:	50a3      	str	r3, [r4, r2]
 800373a:	2301      	movs	r3, #1
 800373c:	2200      	movs	r2, #0
 800373e:	e7df      	b.n	8003700 <d_print_comp_inner+0x1008>
 8003740:	2219      	movs	r2, #25
 8003742:	4690      	mov	r8, r2
 8003744:	2200      	movs	r2, #0
 8003746:	2380      	movs	r3, #128	; 0x80
 8003748:	4693      	mov	fp, r2
 800374a:	320d      	adds	r2, #13
 800374c:	32ff      	adds	r2, #255	; 0xff
 800374e:	4ed1      	ldr	r6, [pc, #836]	; (8003a94 <d_print_comp_inner+0x139c>)
 8003750:	4692      	mov	sl, r2
 8003752:	005b      	lsls	r3, r3, #1
 8003754:	3a04      	subs	r2, #4
 8003756:	2763      	movs	r7, #99	; 0x63
 8003758:	4691      	mov	r9, r2
 800375a:	58c3      	ldr	r3, [r0, r3]
 800375c:	44b0      	add	r8, r6
 800375e:	e00e      	b.n	800377e <d_print_comp_inner+0x1086>
 8003760:	001a      	movs	r2, r3
 8003762:	3301      	adds	r3, #1
 8003764:	2180      	movs	r1, #128	; 0x80
 8003766:	0049      	lsls	r1, r1, #1
 8003768:	5063      	str	r3, [r4, r1]
 800376a:	54a7      	strb	r7, [r4, r2]
 800376c:	2282      	movs	r2, #130	; 0x82
 800376e:	0052      	lsls	r2, r2, #1
 8003770:	54a7      	strb	r7, [r4, r2]
 8003772:	45b0      	cmp	r8, r6
 8003774:	d101      	bne.n	800377a <d_print_comp_inner+0x1082>
 8003776:	f000 fd5b 	bl	8004230 <d_print_comp_inner+0x1b38>
 800377a:	7837      	ldrb	r7, [r6, #0]
 800377c:	3601      	adds	r6, #1
 800377e:	2bff      	cmp	r3, #255	; 0xff
 8003780:	d1ee      	bne.n	8003760 <d_print_comp_inner+0x1068>
 8003782:	465a      	mov	r2, fp
 8003784:	54e2      	strb	r2, [r4, r3]
 8003786:	4653      	mov	r3, sl
 8003788:	58e2      	ldr	r2, [r4, r3]
 800378a:	464b      	mov	r3, r9
 800378c:	21ff      	movs	r1, #255	; 0xff
 800378e:	58e3      	ldr	r3, [r4, r3]
 8003790:	0020      	movs	r0, r4
 8003792:	4798      	blx	r3
 8003794:	2294      	movs	r2, #148	; 0x94
 8003796:	0052      	lsls	r2, r2, #1
 8003798:	58a3      	ldr	r3, [r4, r2]
 800379a:	3301      	adds	r3, #1
 800379c:	50a3      	str	r3, [r4, r2]
 800379e:	2301      	movs	r3, #1
 80037a0:	2200      	movs	r2, #0
 80037a2:	e7df      	b.n	8003764 <d_print_comp_inner+0x106c>
 80037a4:	2214      	movs	r2, #20
 80037a6:	4690      	mov	r8, r2
 80037a8:	2200      	movs	r2, #0
 80037aa:	2380      	movs	r3, #128	; 0x80
 80037ac:	4693      	mov	fp, r2
 80037ae:	320d      	adds	r2, #13
 80037b0:	32ff      	adds	r2, #255	; 0xff
 80037b2:	4eb9      	ldr	r6, [pc, #740]	; (8003a98 <d_print_comp_inner+0x13a0>)
 80037b4:	4692      	mov	sl, r2
 80037b6:	005b      	lsls	r3, r3, #1
 80037b8:	3a04      	subs	r2, #4
 80037ba:	276e      	movs	r7, #110	; 0x6e
 80037bc:	4691      	mov	r9, r2
 80037be:	58c3      	ldr	r3, [r0, r3]
 80037c0:	44b0      	add	r8, r6
 80037c2:	e00e      	b.n	80037e2 <d_print_comp_inner+0x10ea>
 80037c4:	001a      	movs	r2, r3
 80037c6:	3301      	adds	r3, #1
 80037c8:	2180      	movs	r1, #128	; 0x80
 80037ca:	0049      	lsls	r1, r1, #1
 80037cc:	5063      	str	r3, [r4, r1]
 80037ce:	54a7      	strb	r7, [r4, r2]
 80037d0:	2282      	movs	r2, #130	; 0x82
 80037d2:	0052      	lsls	r2, r2, #1
 80037d4:	54a7      	strb	r7, [r4, r2]
 80037d6:	45b0      	cmp	r8, r6
 80037d8:	d101      	bne.n	80037de <d_print_comp_inner+0x10e6>
 80037da:	f000 fd37 	bl	800424c <d_print_comp_inner+0x1b54>
 80037de:	7837      	ldrb	r7, [r6, #0]
 80037e0:	3601      	adds	r6, #1
 80037e2:	2bff      	cmp	r3, #255	; 0xff
 80037e4:	d1ee      	bne.n	80037c4 <d_print_comp_inner+0x10cc>
 80037e6:	465a      	mov	r2, fp
 80037e8:	54e2      	strb	r2, [r4, r3]
 80037ea:	4653      	mov	r3, sl
 80037ec:	58e2      	ldr	r2, [r4, r3]
 80037ee:	464b      	mov	r3, r9
 80037f0:	21ff      	movs	r1, #255	; 0xff
 80037f2:	58e3      	ldr	r3, [r4, r3]
 80037f4:	0020      	movs	r0, r4
 80037f6:	4798      	blx	r3
 80037f8:	2294      	movs	r2, #148	; 0x94
 80037fa:	0052      	lsls	r2, r2, #1
 80037fc:	58a3      	ldr	r3, [r4, r2]
 80037fe:	3301      	adds	r3, #1
 8003800:	50a3      	str	r3, [r4, r2]
 8003802:	2301      	movs	r3, #1
 8003804:	2200      	movs	r2, #0
 8003806:	e7df      	b.n	80037c8 <d_print_comp_inner+0x10d0>
 8003808:	2214      	movs	r2, #20
 800380a:	4691      	mov	r9, r2
 800380c:	2200      	movs	r2, #0
 800380e:	2380      	movs	r3, #128	; 0x80
 8003810:	4693      	mov	fp, r2
 8003812:	4ea2      	ldr	r6, [pc, #648]	; (8003a9c <d_print_comp_inner+0x13a4>)
 8003814:	320d      	adds	r2, #13
 8003816:	005b      	lsls	r3, r3, #1
 8003818:	32ff      	adds	r2, #255	; 0xff
 800381a:	2772      	movs	r7, #114	; 0x72
 800381c:	4692      	mov	sl, r2
 800381e:	58c3      	ldr	r3, [r0, r3]
 8003820:	44b1      	add	r9, r6
 8003822:	e00f      	b.n	8003844 <d_print_comp_inner+0x114c>
 8003824:	001a      	movs	r2, r3
 8003826:	3301      	adds	r3, #1
 8003828:	2180      	movs	r1, #128	; 0x80
 800382a:	0049      	lsls	r1, r1, #1
 800382c:	5063      	str	r3, [r4, r1]
 800382e:	54a7      	strb	r7, [r4, r2]
 8003830:	2282      	movs	r2, #130	; 0x82
 8003832:	0052      	lsls	r2, r2, #1
 8003834:	4688      	mov	r8, r1
 8003836:	54a7      	strb	r7, [r4, r2]
 8003838:	454e      	cmp	r6, r9
 800383a:	d101      	bne.n	8003840 <d_print_comp_inner+0x1148>
 800383c:	f000 fc3e 	bl	80040bc <d_print_comp_inner+0x19c4>
 8003840:	7837      	ldrb	r7, [r6, #0]
 8003842:	3601      	adds	r6, #1
 8003844:	2bff      	cmp	r3, #255	; 0xff
 8003846:	d1ed      	bne.n	8003824 <d_print_comp_inner+0x112c>
 8003848:	465a      	mov	r2, fp
 800384a:	54e2      	strb	r2, [r4, r3]
 800384c:	4653      	mov	r3, sl
 800384e:	58e2      	ldr	r2, [r4, r3]
 8003850:	2384      	movs	r3, #132	; 0x84
 8003852:	005b      	lsls	r3, r3, #1
 8003854:	58e3      	ldr	r3, [r4, r3]
 8003856:	21ff      	movs	r1, #255	; 0xff
 8003858:	0020      	movs	r0, r4
 800385a:	4798      	blx	r3
 800385c:	2294      	movs	r2, #148	; 0x94
 800385e:	0052      	lsls	r2, r2, #1
 8003860:	58a3      	ldr	r3, [r4, r2]
 8003862:	3301      	adds	r3, #1
 8003864:	50a3      	str	r3, [r4, r2]
 8003866:	2301      	movs	r3, #1
 8003868:	2200      	movs	r2, #0
 800386a:	e7dd      	b.n	8003828 <d_print_comp_inner+0x1130>
 800386c:	2111      	movs	r1, #17
 800386e:	68ea      	ldr	r2, [r5, #12]
 8003870:	f001 fc28 	bl	80050c4 <d_print_comp>
 8003874:	f7fe ff67 	bl	8002746 <d_print_comp_inner+0x4e>
 8003878:	2211      	movs	r2, #17
 800387a:	4690      	mov	r8, r2
 800387c:	2200      	movs	r2, #0
 800387e:	2380      	movs	r3, #128	; 0x80
 8003880:	4693      	mov	fp, r2
 8003882:	320d      	adds	r2, #13
 8003884:	32ff      	adds	r2, #255	; 0xff
 8003886:	4e86      	ldr	r6, [pc, #536]	; (8003aa0 <d_print_comp_inner+0x13a8>)
 8003888:	4692      	mov	sl, r2
 800388a:	005b      	lsls	r3, r3, #1
 800388c:	3a04      	subs	r2, #4
 800388e:	2768      	movs	r7, #104	; 0x68
 8003890:	4691      	mov	r9, r2
 8003892:	58c3      	ldr	r3, [r0, r3]
 8003894:	44b0      	add	r8, r6
 8003896:	e00e      	b.n	80038b6 <d_print_comp_inner+0x11be>
 8003898:	001a      	movs	r2, r3
 800389a:	3301      	adds	r3, #1
 800389c:	2180      	movs	r1, #128	; 0x80
 800389e:	0049      	lsls	r1, r1, #1
 80038a0:	5063      	str	r3, [r4, r1]
 80038a2:	54a7      	strb	r7, [r4, r2]
 80038a4:	2282      	movs	r2, #130	; 0x82
 80038a6:	3601      	adds	r6, #1
 80038a8:	0052      	lsls	r2, r2, #1
 80038aa:	54a7      	strb	r7, [r4, r2]
 80038ac:	45b0      	cmp	r8, r6
 80038ae:	d101      	bne.n	80038b4 <d_print_comp_inner+0x11bc>
 80038b0:	f000 fbfd 	bl	80040ae <d_print_comp_inner+0x19b6>
 80038b4:	7837      	ldrb	r7, [r6, #0]
 80038b6:	2bff      	cmp	r3, #255	; 0xff
 80038b8:	d1ee      	bne.n	8003898 <d_print_comp_inner+0x11a0>
 80038ba:	465a      	mov	r2, fp
 80038bc:	54e2      	strb	r2, [r4, r3]
 80038be:	4653      	mov	r3, sl
 80038c0:	58e2      	ldr	r2, [r4, r3]
 80038c2:	464b      	mov	r3, r9
 80038c4:	21ff      	movs	r1, #255	; 0xff
 80038c6:	58e3      	ldr	r3, [r4, r3]
 80038c8:	0020      	movs	r0, r4
 80038ca:	4798      	blx	r3
 80038cc:	2294      	movs	r2, #148	; 0x94
 80038ce:	0052      	lsls	r2, r2, #1
 80038d0:	58a3      	ldr	r3, [r4, r2]
 80038d2:	3301      	adds	r3, #1
 80038d4:	50a3      	str	r3, [r4, r2]
 80038d6:	2301      	movs	r3, #1
 80038d8:	2200      	movs	r2, #0
 80038da:	e7df      	b.n	800389c <d_print_comp_inner+0x11a4>
 80038dc:	68ea      	ldr	r2, [r5, #12]
 80038de:	2a00      	cmp	r2, #0
 80038e0:	d01a      	beq.n	8003918 <d_print_comp_inner+0x1220>
 80038e2:	278a      	movs	r7, #138	; 0x8a
 80038e4:	007f      	lsls	r7, r7, #1
 80038e6:	59c3      	ldr	r3, [r0, r7]
 80038e8:	ae06      	add	r6, sp, #24
 80038ea:	9306      	str	r3, [sp, #24]
 80038ec:	2300      	movs	r3, #0
 80038ee:	9308      	str	r3, [sp, #32]
 80038f0:	3311      	adds	r3, #17
 80038f2:	33ff      	adds	r3, #255	; 0xff
 80038f4:	58c3      	ldr	r3, [r0, r3]
 80038f6:	2111      	movs	r1, #17
 80038f8:	51c6      	str	r6, [r0, r7]
 80038fa:	9309      	str	r3, [sp, #36]	; 0x24
 80038fc:	9507      	str	r5, [sp, #28]
 80038fe:	f001 fbe1 	bl	80050c4 <d_print_comp>
 8003902:	9b06      	ldr	r3, [sp, #24]
 8003904:	51e3      	str	r3, [r4, r7]
 8003906:	9b08      	ldr	r3, [sp, #32]
 8003908:	2b00      	cmp	r3, #0
 800390a:	d001      	beq.n	8003910 <d_print_comp_inner+0x1218>
 800390c:	f7fe ff1b 	bl	8002746 <d_print_comp_inner+0x4e>
 8003910:	2120      	movs	r1, #32
 8003912:	0020      	movs	r0, r4
 8003914:	f7fc fdb2 	bl	800047c <d_append_char>
 8003918:	238a      	movs	r3, #138	; 0x8a
 800391a:	005b      	lsls	r3, r3, #1
 800391c:	002a      	movs	r2, r5
 800391e:	2111      	movs	r1, #17
 8003920:	0020      	movs	r0, r4
 8003922:	58e3      	ldr	r3, [r4, r3]
 8003924:	f001 ff5a 	bl	80057dc <d_print_function_type>
 8003928:	f7fe ff0d 	bl	8002746 <d_print_comp_inner+0x4e>
 800392c:	23a4      	movs	r3, #164	; 0xa4
 800392e:	005b      	lsls	r3, r3, #1
 8003930:	58c7      	ldr	r7, [r0, r3]
 8003932:	50c5      	str	r5, [r0, r3]
 8003934:	3b34      	subs	r3, #52	; 0x34
 8003936:	58c2      	ldr	r2, [r0, r3]
 8003938:	2111      	movs	r1, #17
 800393a:	4690      	mov	r8, r2
 800393c:	2200      	movs	r2, #0
 800393e:	50c2      	str	r2, [r0, r3]
 8003940:	68ea      	ldr	r2, [r5, #12]
 8003942:	f001 fbbf 	bl	80050c4 <d_print_comp>
 8003946:	2382      	movs	r3, #130	; 0x82
 8003948:	005b      	lsls	r3, r3, #1
 800394a:	5ce3      	ldrb	r3, [r4, r3]
 800394c:	2b3c      	cmp	r3, #60	; 0x3c
 800394e:	d101      	bne.n	8003954 <d_print_comp_inner+0x125c>
 8003950:	f001 f904 	bl	8004b5c <d_print_comp_inner+0x2464>
 8003954:	2380      	movs	r3, #128	; 0x80
 8003956:	005b      	lsls	r3, r3, #1
 8003958:	58e3      	ldr	r3, [r4, r3]
 800395a:	2bff      	cmp	r3, #255	; 0xff
 800395c:	d101      	bne.n	8003962 <d_print_comp_inner+0x126a>
 800395e:	f001 f8ea 	bl	8004b36 <d_print_comp_inner+0x243e>
 8003962:	1c59      	adds	r1, r3, #1
 8003964:	2280      	movs	r2, #128	; 0x80
 8003966:	2682      	movs	r6, #130	; 0x82
 8003968:	0052      	lsls	r2, r2, #1
 800396a:	50a1      	str	r1, [r4, r2]
 800396c:	0076      	lsls	r6, r6, #1
 800396e:	3ac4      	subs	r2, #196	; 0xc4
 8003970:	54e2      	strb	r2, [r4, r3]
 8003972:	55a2      	strb	r2, [r4, r6]
 8003974:	2111      	movs	r1, #17
 8003976:	0020      	movs	r0, r4
 8003978:	692a      	ldr	r2, [r5, #16]
 800397a:	f001 fba3 	bl	80050c4 <d_print_comp>
 800397e:	5da3      	ldrb	r3, [r4, r6]
 8003980:	2b3e      	cmp	r3, #62	; 0x3e
 8003982:	d101      	bne.n	8003988 <d_print_comp_inner+0x1290>
 8003984:	f001 f8d1 	bl	8004b2a <d_print_comp_inner+0x2432>
 8003988:	2380      	movs	r3, #128	; 0x80
 800398a:	005b      	lsls	r3, r3, #1
 800398c:	58e3      	ldr	r3, [r4, r3]
 800398e:	2bff      	cmp	r3, #255	; 0xff
 8003990:	d101      	bne.n	8003996 <d_print_comp_inner+0x129e>
 8003992:	f001 f8b7 	bl	8004b04 <d_print_comp_inner+0x240c>
 8003996:	1c59      	adds	r1, r3, #1
 8003998:	2280      	movs	r2, #128	; 0x80
 800399a:	0052      	lsls	r2, r2, #1
 800399c:	50a1      	str	r1, [r4, r2]
 800399e:	3ac2      	subs	r2, #194	; 0xc2
 80039a0:	54e2      	strb	r2, [r4, r3]
 80039a2:	2382      	movs	r3, #130	; 0x82
 80039a4:	005b      	lsls	r3, r3, #1
 80039a6:	54e2      	strb	r2, [r4, r3]
 80039a8:	4642      	mov	r2, r8
 80039aa:	3310      	adds	r3, #16
 80039ac:	50e2      	str	r2, [r4, r3]
 80039ae:	3334      	adds	r3, #52	; 0x34
 80039b0:	50e7      	str	r7, [r4, r3]
 80039b2:	f7fe fec8 	bl	8002746 <d_print_comp_inner+0x4e>
 80039b6:	692f      	ldr	r7, [r5, #16]
 80039b8:	68ea      	ldr	r2, [r5, #12]
 80039ba:	2f00      	cmp	r7, #0
 80039bc:	d101      	bne.n	80039c2 <d_print_comp_inner+0x12ca>
 80039be:	f7fe fec2 	bl	8002746 <d_print_comp_inner+0x4e>
 80039c2:	0015      	movs	r5, r2
 80039c4:	19d7      	adds	r7, r2, r7
 80039c6:	2200      	movs	r2, #0
 80039c8:	2380      	movs	r3, #128	; 0x80
 80039ca:	4692      	mov	sl, r2
 80039cc:	320d      	adds	r2, #13
 80039ce:	32ff      	adds	r2, #255	; 0xff
 80039d0:	4691      	mov	r9, r2
 80039d2:	005b      	lsls	r3, r3, #1
 80039d4:	3a04      	subs	r2, #4
 80039d6:	4690      	mov	r8, r2
 80039d8:	58c3      	ldr	r3, [r0, r3]
 80039da:	e00d      	b.n	80039f8 <d_print_comp_inner+0x1300>
 80039dc:	001a      	movs	r2, r3
 80039de:	3301      	adds	r3, #1
 80039e0:	2180      	movs	r1, #128	; 0x80
 80039e2:	0049      	lsls	r1, r1, #1
 80039e4:	5063      	str	r3, [r4, r1]
 80039e6:	54a6      	strb	r6, [r4, r2]
 80039e8:	2282      	movs	r2, #130	; 0x82
 80039ea:	3501      	adds	r5, #1
 80039ec:	0052      	lsls	r2, r2, #1
 80039ee:	54a6      	strb	r6, [r4, r2]
 80039f0:	42af      	cmp	r7, r5
 80039f2:	d101      	bne.n	80039f8 <d_print_comp_inner+0x1300>
 80039f4:	f7fe fea7 	bl	8002746 <d_print_comp_inner+0x4e>
 80039f8:	782e      	ldrb	r6, [r5, #0]
 80039fa:	2bff      	cmp	r3, #255	; 0xff
 80039fc:	d1ee      	bne.n	80039dc <d_print_comp_inner+0x12e4>
 80039fe:	4652      	mov	r2, sl
 8003a00:	54e2      	strb	r2, [r4, r3]
 8003a02:	464b      	mov	r3, r9
 8003a04:	58e2      	ldr	r2, [r4, r3]
 8003a06:	4643      	mov	r3, r8
 8003a08:	21ff      	movs	r1, #255	; 0xff
 8003a0a:	58e3      	ldr	r3, [r4, r3]
 8003a0c:	0020      	movs	r0, r4
 8003a0e:	4798      	blx	r3
 8003a10:	2294      	movs	r2, #148	; 0x94
 8003a12:	0052      	lsls	r2, r2, #1
 8003a14:	58a3      	ldr	r3, [r4, r2]
 8003a16:	3301      	adds	r3, #1
 8003a18:	50a3      	str	r3, [r4, r2]
 8003a1a:	2301      	movs	r3, #1
 8003a1c:	2200      	movs	r2, #0
 8003a1e:	e7df      	b.n	80039e0 <d_print_comp_inner+0x12e8>
 8003a20:	2390      	movs	r3, #144	; 0x90
 8003a22:	005b      	lsls	r3, r3, #1
 8003a24:	58c3      	ldr	r3, [r0, r3]
 8003a26:	2b00      	cmp	r3, #0
 8003a28:	d101      	bne.n	8003a2e <d_print_comp_inner+0x1336>
 8003a2a:	f000 fd7e 	bl	800452a <d_print_comp_inner+0x1e32>
 8003a2e:	4e1d      	ldr	r6, [pc, #116]	; (8003aa4 <d_print_comp_inner+0x13ac>)
 8003a30:	2380      	movs	r3, #128	; 0x80
 8003a32:	1d72      	adds	r2, r6, #5
 8003a34:	4691      	mov	r9, r2
 8003a36:	2200      	movs	r2, #0
 8003a38:	4693      	mov	fp, r2
 8003a3a:	320d      	adds	r2, #13
 8003a3c:	005b      	lsls	r3, r3, #1
 8003a3e:	32ff      	adds	r2, #255	; 0xff
 8003a40:	2761      	movs	r7, #97	; 0x61
 8003a42:	4692      	mov	sl, r2
 8003a44:	58c3      	ldr	r3, [r0, r3]
 8003a46:	e00f      	b.n	8003a68 <d_print_comp_inner+0x1370>
 8003a48:	001a      	movs	r2, r3
 8003a4a:	3301      	adds	r3, #1
 8003a4c:	2180      	movs	r1, #128	; 0x80
 8003a4e:	0049      	lsls	r1, r1, #1
 8003a50:	5063      	str	r3, [r4, r1]
 8003a52:	54a7      	strb	r7, [r4, r2]
 8003a54:	2282      	movs	r2, #130	; 0x82
 8003a56:	3601      	adds	r6, #1
 8003a58:	0052      	lsls	r2, r2, #1
 8003a5a:	4688      	mov	r8, r1
 8003a5c:	54a7      	strb	r7, [r4, r2]
 8003a5e:	45b1      	cmp	r9, r6
 8003a60:	d101      	bne.n	8003a66 <d_print_comp_inner+0x136e>
 8003a62:	f000 fd7a 	bl	800455a <d_print_comp_inner+0x1e62>
 8003a66:	7837      	ldrb	r7, [r6, #0]
 8003a68:	2bff      	cmp	r3, #255	; 0xff
 8003a6a:	d1ed      	bne.n	8003a48 <d_print_comp_inner+0x1350>
 8003a6c:	465a      	mov	r2, fp
 8003a6e:	54e2      	strb	r2, [r4, r3]
 8003a70:	4653      	mov	r3, sl
 8003a72:	58e2      	ldr	r2, [r4, r3]
 8003a74:	2384      	movs	r3, #132	; 0x84
 8003a76:	005b      	lsls	r3, r3, #1
 8003a78:	58e3      	ldr	r3, [r4, r3]
 8003a7a:	21ff      	movs	r1, #255	; 0xff
 8003a7c:	0020      	movs	r0, r4
 8003a7e:	4798      	blx	r3
 8003a80:	2294      	movs	r2, #148	; 0x94
 8003a82:	0052      	lsls	r2, r2, #1
 8003a84:	58a3      	ldr	r3, [r4, r2]
 8003a86:	3301      	adds	r3, #1
 8003a88:	50a3      	str	r3, [r4, r2]
 8003a8a:	2301      	movs	r3, #1
 8003a8c:	2200      	movs	r2, #0
 8003a8e:	e7dd      	b.n	8003a4c <d_print_comp_inner+0x1354>
 8003a90:	0800fd35 	.word	0x0800fd35
 8003a94:	0800fd09 	.word	0x0800fd09
 8003a98:	0800fcf1 	.word	0x0800fcf1
 8003a9c:	0800fd7d 	.word	0x0800fd7d
 8003aa0:	0800fd94 	.word	0x0800fd94
 8003aa4:	0800fc54 	.word	0x0800fc54
 8003aa8:	2208      	movs	r2, #8
 8003aaa:	4690      	mov	r8, r2
 8003aac:	2200      	movs	r2, #0
 8003aae:	2380      	movs	r3, #128	; 0x80
 8003ab0:	4693      	mov	fp, r2
 8003ab2:	320d      	adds	r2, #13
 8003ab4:	32ff      	adds	r2, #255	; 0xff
 8003ab6:	4eeb      	ldr	r6, [pc, #940]	; (8003e64 <d_print_comp_inner+0x176c>)
 8003ab8:	4692      	mov	sl, r2
 8003aba:	005b      	lsls	r3, r3, #1
 8003abc:	3a04      	subs	r2, #4
 8003abe:	276f      	movs	r7, #111	; 0x6f
 8003ac0:	4691      	mov	r9, r2
 8003ac2:	58c3      	ldr	r3, [r0, r3]
 8003ac4:	44b0      	add	r8, r6
 8003ac6:	e00e      	b.n	8003ae6 <d_print_comp_inner+0x13ee>
 8003ac8:	001a      	movs	r2, r3
 8003aca:	3301      	adds	r3, #1
 8003acc:	2180      	movs	r1, #128	; 0x80
 8003ace:	0049      	lsls	r1, r1, #1
 8003ad0:	5063      	str	r3, [r4, r1]
 8003ad2:	54a7      	strb	r7, [r4, r2]
 8003ad4:	2282      	movs	r2, #130	; 0x82
 8003ad6:	0052      	lsls	r2, r2, #1
 8003ad8:	54a7      	strb	r7, [r4, r2]
 8003ada:	45b0      	cmp	r8, r6
 8003adc:	d101      	bne.n	8003ae2 <d_print_comp_inner+0x13ea>
 8003ade:	f000 fc10 	bl	8004302 <d_print_comp_inner+0x1c0a>
 8003ae2:	7837      	ldrb	r7, [r6, #0]
 8003ae4:	3601      	adds	r6, #1
 8003ae6:	2bff      	cmp	r3, #255	; 0xff
 8003ae8:	d1ee      	bne.n	8003ac8 <d_print_comp_inner+0x13d0>
 8003aea:	465a      	mov	r2, fp
 8003aec:	54e2      	strb	r2, [r4, r3]
 8003aee:	4653      	mov	r3, sl
 8003af0:	58e2      	ldr	r2, [r4, r3]
 8003af2:	464b      	mov	r3, r9
 8003af4:	21ff      	movs	r1, #255	; 0xff
 8003af6:	58e3      	ldr	r3, [r4, r3]
 8003af8:	0020      	movs	r0, r4
 8003afa:	4798      	blx	r3
 8003afc:	2294      	movs	r2, #148	; 0x94
 8003afe:	0052      	lsls	r2, r2, #1
 8003b00:	58a3      	ldr	r3, [r4, r2]
 8003b02:	3301      	adds	r3, #1
 8003b04:	50a3      	str	r3, [r4, r2]
 8003b06:	2301      	movs	r3, #1
 8003b08:	2200      	movs	r2, #0
 8003b0a:	e7df      	b.n	8003acc <d_print_comp_inner+0x13d4>
 8003b0c:	2208      	movs	r2, #8
 8003b0e:	4690      	mov	r8, r2
 8003b10:	2200      	movs	r2, #0
 8003b12:	2380      	movs	r3, #128	; 0x80
 8003b14:	4693      	mov	fp, r2
 8003b16:	320d      	adds	r2, #13
 8003b18:	32ff      	adds	r2, #255	; 0xff
 8003b1a:	4ed2      	ldr	r6, [pc, #840]	; (8003e64 <d_print_comp_inner+0x176c>)
 8003b1c:	4692      	mov	sl, r2
 8003b1e:	005b      	lsls	r3, r3, #1
 8003b20:	3a04      	subs	r2, #4
 8003b22:	276f      	movs	r7, #111	; 0x6f
 8003b24:	4691      	mov	r9, r2
 8003b26:	58c3      	ldr	r3, [r0, r3]
 8003b28:	44b0      	add	r8, r6
 8003b2a:	e00e      	b.n	8003b4a <d_print_comp_inner+0x1452>
 8003b2c:	001a      	movs	r2, r3
 8003b2e:	3301      	adds	r3, #1
 8003b30:	2180      	movs	r1, #128	; 0x80
 8003b32:	0049      	lsls	r1, r1, #1
 8003b34:	5063      	str	r3, [r4, r1]
 8003b36:	54a7      	strb	r7, [r4, r2]
 8003b38:	2282      	movs	r2, #130	; 0x82
 8003b3a:	0052      	lsls	r2, r2, #1
 8003b3c:	54a7      	strb	r7, [r4, r2]
 8003b3e:	45b0      	cmp	r8, r6
 8003b40:	d101      	bne.n	8003b46 <d_print_comp_inner+0x144e>
 8003b42:	f000 fc00 	bl	8004346 <d_print_comp_inner+0x1c4e>
 8003b46:	7837      	ldrb	r7, [r6, #0]
 8003b48:	3601      	adds	r6, #1
 8003b4a:	2bff      	cmp	r3, #255	; 0xff
 8003b4c:	d1ee      	bne.n	8003b2c <d_print_comp_inner+0x1434>
 8003b4e:	465a      	mov	r2, fp
 8003b50:	54e2      	strb	r2, [r4, r3]
 8003b52:	4653      	mov	r3, sl
 8003b54:	58e2      	ldr	r2, [r4, r3]
 8003b56:	464b      	mov	r3, r9
 8003b58:	21ff      	movs	r1, #255	; 0xff
 8003b5a:	58e3      	ldr	r3, [r4, r3]
 8003b5c:	0020      	movs	r0, r4
 8003b5e:	4798      	blx	r3
 8003b60:	2294      	movs	r2, #148	; 0x94
 8003b62:	0052      	lsls	r2, r2, #1
 8003b64:	58a3      	ldr	r3, [r4, r2]
 8003b66:	3301      	adds	r3, #1
 8003b68:	50a3      	str	r3, [r4, r2]
 8003b6a:	2301      	movs	r3, #1
 8003b6c:	2200      	movs	r2, #0
 8003b6e:	e7df      	b.n	8003b30 <d_print_comp_inner+0x1438>
 8003b70:	68eb      	ldr	r3, [r5, #12]
 8003b72:	2200      	movs	r2, #0
 8003b74:	4698      	mov	r8, r3
 8003b76:	689b      	ldr	r3, [r3, #8]
 8003b78:	4dbb      	ldr	r5, [pc, #748]	; (8003e68 <d_print_comp_inner+0x1770>)
 8003b7a:	9300      	str	r3, [sp, #0]
 8003b7c:	2380      	movs	r3, #128	; 0x80
 8003b7e:	002f      	movs	r7, r5
 8003b80:	4693      	mov	fp, r2
 8003b82:	320d      	adds	r2, #13
 8003b84:	32ff      	adds	r2, #255	; 0xff
 8003b86:	4692      	mov	sl, r2
 8003b88:	005b      	lsls	r3, r3, #1
 8003b8a:	3a04      	subs	r2, #4
 8003b8c:	266f      	movs	r6, #111	; 0x6f
 8003b8e:	4691      	mov	r9, r2
 8003b90:	58c3      	ldr	r3, [r0, r3]
 8003b92:	3708      	adds	r7, #8
 8003b94:	e00d      	b.n	8003bb2 <d_print_comp_inner+0x14ba>
 8003b96:	001a      	movs	r2, r3
 8003b98:	3301      	adds	r3, #1
 8003b9a:	2180      	movs	r1, #128	; 0x80
 8003b9c:	0049      	lsls	r1, r1, #1
 8003b9e:	5063      	str	r3, [r4, r1]
 8003ba0:	54a6      	strb	r6, [r4, r2]
 8003ba2:	2282      	movs	r2, #130	; 0x82
 8003ba4:	3501      	adds	r5, #1
 8003ba6:	0052      	lsls	r2, r2, #1
 8003ba8:	54a6      	strb	r6, [r4, r2]
 8003baa:	42af      	cmp	r7, r5
 8003bac:	d100      	bne.n	8003bb0 <d_print_comp_inner+0x14b8>
 8003bae:	e23f      	b.n	8004030 <d_print_comp_inner+0x1938>
 8003bb0:	782e      	ldrb	r6, [r5, #0]
 8003bb2:	2bff      	cmp	r3, #255	; 0xff
 8003bb4:	d1ef      	bne.n	8003b96 <d_print_comp_inner+0x149e>
 8003bb6:	465a      	mov	r2, fp
 8003bb8:	54e2      	strb	r2, [r4, r3]
 8003bba:	4653      	mov	r3, sl
 8003bbc:	58e2      	ldr	r2, [r4, r3]
 8003bbe:	464b      	mov	r3, r9
 8003bc0:	21ff      	movs	r1, #255	; 0xff
 8003bc2:	58e3      	ldr	r3, [r4, r3]
 8003bc4:	0020      	movs	r0, r4
 8003bc6:	4798      	blx	r3
 8003bc8:	2294      	movs	r2, #148	; 0x94
 8003bca:	0052      	lsls	r2, r2, #1
 8003bcc:	58a3      	ldr	r3, [r4, r2]
 8003bce:	3301      	adds	r3, #1
 8003bd0:	50a3      	str	r3, [r4, r2]
 8003bd2:	2301      	movs	r3, #1
 8003bd4:	2200      	movs	r2, #0
 8003bd6:	e7e0      	b.n	8003b9a <d_print_comp_inner+0x14a2>
 8003bd8:	68ea      	ldr	r2, [r5, #12]
 8003bda:	692e      	ldr	r6, [r5, #16]
 8003bdc:	2a00      	cmp	r2, #0
 8003bde:	d002      	beq.n	8003be6 <d_print_comp_inner+0x14ee>
 8003be0:	2111      	movs	r1, #17
 8003be2:	f001 fa6f 	bl	80050c4 <d_print_comp>
 8003be6:	2380      	movs	r3, #128	; 0x80
 8003be8:	005b      	lsls	r3, r3, #1
 8003bea:	58e3      	ldr	r3, [r4, r3]
 8003bec:	2bff      	cmp	r3, #255	; 0xff
 8003bee:	d101      	bne.n	8003bf4 <d_print_comp_inner+0x14fc>
 8003bf0:	f000 ff31 	bl	8004a56 <d_print_comp_inner+0x235e>
 8003bf4:	1c5a      	adds	r2, r3, #1
 8003bf6:	2580      	movs	r5, #128	; 0x80
 8003bf8:	006d      	lsls	r5, r5, #1
 8003bfa:	5162      	str	r2, [r4, r5]
 8003bfc:	227b      	movs	r2, #123	; 0x7b
 8003bfe:	54e2      	strb	r2, [r4, r3]
 8003c00:	2382      	movs	r3, #130	; 0x82
 8003c02:	005b      	lsls	r3, r3, #1
 8003c04:	54e2      	strb	r2, [r4, r3]
 8003c06:	2111      	movs	r1, #17
 8003c08:	0032      	movs	r2, r6
 8003c0a:	0020      	movs	r0, r4
 8003c0c:	f001 fa5a 	bl	80050c4 <d_print_comp>
 8003c10:	5963      	ldr	r3, [r4, r5]
 8003c12:	2bff      	cmp	r3, #255	; 0xff
 8003c14:	d101      	bne.n	8003c1a <d_print_comp_inner+0x1522>
 8003c16:	f000 ff0b 	bl	8004a30 <d_print_comp_inner+0x2338>
 8003c1a:	1c59      	adds	r1, r3, #1
 8003c1c:	2280      	movs	r2, #128	; 0x80
 8003c1e:	0052      	lsls	r2, r2, #1
 8003c20:	50a1      	str	r1, [r4, r2]
 8003c22:	3a83      	subs	r2, #131	; 0x83
 8003c24:	54e2      	strb	r2, [r4, r3]
 8003c26:	2382      	movs	r3, #130	; 0x82
 8003c28:	005b      	lsls	r3, r3, #1
 8003c2a:	54e2      	strb	r2, [r4, r3]
 8003c2c:	f7fe fd8b 	bl	8002746 <d_print_comp_inner+0x4e>
 8003c30:	2111      	movs	r1, #17
 8003c32:	68ea      	ldr	r2, [r5, #12]
 8003c34:	f001 fa46 	bl	80050c4 <d_print_comp>
 8003c38:	2380      	movs	r3, #128	; 0x80
 8003c3a:	005b      	lsls	r3, r3, #1
 8003c3c:	58e3      	ldr	r3, [r4, r3]
 8003c3e:	2bff      	cmp	r3, #255	; 0xff
 8003c40:	d101      	bne.n	8003c46 <d_print_comp_inner+0x154e>
 8003c42:	f000 fee1 	bl	8004a08 <d_print_comp_inner+0x2310>
 8003c46:	1c5a      	adds	r2, r3, #1
 8003c48:	2680      	movs	r6, #128	; 0x80
 8003c4a:	0076      	lsls	r6, r6, #1
 8003c4c:	51a2      	str	r2, [r4, r6]
 8003c4e:	2228      	movs	r2, #40	; 0x28
 8003c50:	54e2      	strb	r2, [r4, r3]
 8003c52:	2382      	movs	r3, #130	; 0x82
 8003c54:	005b      	lsls	r3, r3, #1
 8003c56:	54e2      	strb	r2, [r4, r3]
 8003c58:	2111      	movs	r1, #17
 8003c5a:	0020      	movs	r0, r4
 8003c5c:	692a      	ldr	r2, [r5, #16]
 8003c5e:	f001 fa31 	bl	80050c4 <d_print_comp>
 8003c62:	59a3      	ldr	r3, [r4, r6]
 8003c64:	2bff      	cmp	r3, #255	; 0xff
 8003c66:	d101      	bne.n	8003c6c <d_print_comp_inner+0x1574>
 8003c68:	f000 febb 	bl	80049e2 <d_print_comp_inner+0x22ea>
 8003c6c:	1c59      	adds	r1, r3, #1
 8003c6e:	2280      	movs	r2, #128	; 0x80
 8003c70:	0052      	lsls	r2, r2, #1
 8003c72:	50a1      	str	r1, [r4, r2]
 8003c74:	3ad7      	subs	r2, #215	; 0xd7
 8003c76:	54e2      	strb	r2, [r4, r3]
 8003c78:	2382      	movs	r3, #130	; 0x82
 8003c7a:	005b      	lsls	r3, r3, #1
 8003c7c:	54e2      	strb	r2, [r4, r3]
 8003c7e:	f7fe fd62 	bl	8002746 <d_print_comp_inner+0x4e>
 8003c82:	2209      	movs	r2, #9
 8003c84:	4691      	mov	r9, r2
 8003c86:	2200      	movs	r2, #0
 8003c88:	2380      	movs	r3, #128	; 0x80
 8003c8a:	4693      	mov	fp, r2
 8003c8c:	4e77      	ldr	r6, [pc, #476]	; (8003e6c <d_print_comp_inner+0x1774>)
 8003c8e:	320d      	adds	r2, #13
 8003c90:	005b      	lsls	r3, r3, #1
 8003c92:	32ff      	adds	r2, #255	; 0xff
 8003c94:	2764      	movs	r7, #100	; 0x64
 8003c96:	4692      	mov	sl, r2
 8003c98:	58c3      	ldr	r3, [r0, r3]
 8003c9a:	44b1      	add	r9, r6
 8003c9c:	e00e      	b.n	8003cbc <d_print_comp_inner+0x15c4>
 8003c9e:	001a      	movs	r2, r3
 8003ca0:	3301      	adds	r3, #1
 8003ca2:	2180      	movs	r1, #128	; 0x80
 8003ca4:	0049      	lsls	r1, r1, #1
 8003ca6:	5063      	str	r3, [r4, r1]
 8003ca8:	54a7      	strb	r7, [r4, r2]
 8003caa:	2282      	movs	r2, #130	; 0x82
 8003cac:	0052      	lsls	r2, r2, #1
 8003cae:	4688      	mov	r8, r1
 8003cb0:	54a7      	strb	r7, [r4, r2]
 8003cb2:	45b1      	cmp	r9, r6
 8003cb4:	d100      	bne.n	8003cb8 <d_print_comp_inner+0x15c0>
 8003cb6:	e1a5      	b.n	8004004 <d_print_comp_inner+0x190c>
 8003cb8:	7837      	ldrb	r7, [r6, #0]
 8003cba:	3601      	adds	r6, #1
 8003cbc:	2bff      	cmp	r3, #255	; 0xff
 8003cbe:	d1ee      	bne.n	8003c9e <d_print_comp_inner+0x15a6>
 8003cc0:	465a      	mov	r2, fp
 8003cc2:	54e2      	strb	r2, [r4, r3]
 8003cc4:	4653      	mov	r3, sl
 8003cc6:	58e2      	ldr	r2, [r4, r3]
 8003cc8:	2384      	movs	r3, #132	; 0x84
 8003cca:	005b      	lsls	r3, r3, #1
 8003ccc:	58e3      	ldr	r3, [r4, r3]
 8003cce:	21ff      	movs	r1, #255	; 0xff
 8003cd0:	0020      	movs	r0, r4
 8003cd2:	4798      	blx	r3
 8003cd4:	2294      	movs	r2, #148	; 0x94
 8003cd6:	0052      	lsls	r2, r2, #1
 8003cd8:	58a3      	ldr	r3, [r4, r2]
 8003cda:	3301      	adds	r3, #1
 8003cdc:	50a3      	str	r3, [r4, r2]
 8003cde:	2301      	movs	r3, #1
 8003ce0:	2200      	movs	r2, #0
 8003ce2:	e7de      	b.n	8003ca2 <d_print_comp_inner+0x15aa>
 8003ce4:	68ea      	ldr	r2, [r5, #12]
 8003ce6:	4962      	ldr	r1, [pc, #392]	; (8003e70 <d_print_comp_inner+0x1778>)
 8003ce8:	a806      	add	r0, sp, #24
 8003cea:	f008 fb2b 	bl	800c344 <siprintf>
 8003cee:	a806      	add	r0, sp, #24
 8003cf0:	f002 fe74 	bl	80069dc <strlen>
 8003cf4:	2800      	cmp	r0, #0
 8003cf6:	d101      	bne.n	8003cfc <d_print_comp_inner+0x1604>
 8003cf8:	f7fe fd25 	bl	8002746 <d_print_comp_inner+0x4e>
 8003cfc:	2200      	movs	r2, #0
 8003cfe:	2380      	movs	r3, #128	; 0x80
 8003d00:	4692      	mov	sl, r2
 8003d02:	320d      	adds	r2, #13
 8003d04:	32ff      	adds	r2, #255	; 0xff
 8003d06:	4691      	mov	r9, r2
 8003d08:	005b      	lsls	r3, r3, #1
 8003d0a:	ad06      	add	r5, sp, #24
 8003d0c:	3a04      	subs	r2, #4
 8003d0e:	4690      	mov	r8, r2
 8003d10:	58e3      	ldr	r3, [r4, r3]
 8003d12:	182f      	adds	r7, r5, r0
 8003d14:	e00d      	b.n	8003d32 <d_print_comp_inner+0x163a>
 8003d16:	001a      	movs	r2, r3
 8003d18:	3301      	adds	r3, #1
 8003d1a:	2180      	movs	r1, #128	; 0x80
 8003d1c:	0049      	lsls	r1, r1, #1
 8003d1e:	5063      	str	r3, [r4, r1]
 8003d20:	54a6      	strb	r6, [r4, r2]
 8003d22:	2282      	movs	r2, #130	; 0x82
 8003d24:	3501      	adds	r5, #1
 8003d26:	0052      	lsls	r2, r2, #1
 8003d28:	54a6      	strb	r6, [r4, r2]
 8003d2a:	42af      	cmp	r7, r5
 8003d2c:	d101      	bne.n	8003d32 <d_print_comp_inner+0x163a>
 8003d2e:	f7fe fd0a 	bl	8002746 <d_print_comp_inner+0x4e>
 8003d32:	782e      	ldrb	r6, [r5, #0]
 8003d34:	2bff      	cmp	r3, #255	; 0xff
 8003d36:	d1ee      	bne.n	8003d16 <d_print_comp_inner+0x161e>
 8003d38:	4652      	mov	r2, sl
 8003d3a:	54e2      	strb	r2, [r4, r3]
 8003d3c:	464b      	mov	r3, r9
 8003d3e:	58e2      	ldr	r2, [r4, r3]
 8003d40:	4643      	mov	r3, r8
 8003d42:	21ff      	movs	r1, #255	; 0xff
 8003d44:	58e3      	ldr	r3, [r4, r3]
 8003d46:	0020      	movs	r0, r4
 8003d48:	4798      	blx	r3
 8003d4a:	2294      	movs	r2, #148	; 0x94
 8003d4c:	0052      	lsls	r2, r2, #1
 8003d4e:	58a3      	ldr	r3, [r4, r2]
 8003d50:	3301      	adds	r3, #1
 8003d52:	50a3      	str	r3, [r4, r2]
 8003d54:	2301      	movs	r3, #1
 8003d56:	2200      	movs	r2, #0
 8003d58:	e7df      	b.n	8003d1a <d_print_comp_inner+0x1622>
 8003d5a:	2380      	movs	r3, #128	; 0x80
 8003d5c:	005b      	lsls	r3, r3, #1
 8003d5e:	58c3      	ldr	r3, [r0, r3]
 8003d60:	7b2d      	ldrb	r5, [r5, #12]
 8003d62:	2bff      	cmp	r3, #255	; 0xff
 8003d64:	d101      	bne.n	8003d6a <d_print_comp_inner+0x1672>
 8003d66:	f000 fd9a 	bl	800489e <d_print_comp_inner+0x21a6>
 8003d6a:	1c59      	adds	r1, r3, #1
 8003d6c:	2280      	movs	r2, #128	; 0x80
 8003d6e:	0052      	lsls	r2, r2, #1
 8003d70:	50a1      	str	r1, [r4, r2]
 8003d72:	54e5      	strb	r5, [r4, r3]
 8003d74:	2382      	movs	r3, #130	; 0x82
 8003d76:	005b      	lsls	r3, r3, #1
 8003d78:	54e5      	strb	r5, [r4, r3]
 8003d7a:	f7fe fce4 	bl	8002746 <d_print_comp_inner+0x4e>
 8003d7e:	692f      	ldr	r7, [r5, #16]
 8003d80:	68ea      	ldr	r2, [r5, #12]
 8003d82:	2f00      	cmp	r7, #0
 8003d84:	d101      	bne.n	8003d8a <d_print_comp_inner+0x1692>
 8003d86:	f7fe fcde 	bl	8002746 <d_print_comp_inner+0x4e>
 8003d8a:	0015      	movs	r5, r2
 8003d8c:	19d7      	adds	r7, r2, r7
 8003d8e:	2200      	movs	r2, #0
 8003d90:	2380      	movs	r3, #128	; 0x80
 8003d92:	4692      	mov	sl, r2
 8003d94:	320d      	adds	r2, #13
 8003d96:	32ff      	adds	r2, #255	; 0xff
 8003d98:	4691      	mov	r9, r2
 8003d9a:	005b      	lsls	r3, r3, #1
 8003d9c:	3a04      	subs	r2, #4
 8003d9e:	4690      	mov	r8, r2
 8003da0:	58c3      	ldr	r3, [r0, r3]
 8003da2:	e00d      	b.n	8003dc0 <d_print_comp_inner+0x16c8>
 8003da4:	001a      	movs	r2, r3
 8003da6:	3301      	adds	r3, #1
 8003da8:	2180      	movs	r1, #128	; 0x80
 8003daa:	0049      	lsls	r1, r1, #1
 8003dac:	5063      	str	r3, [r4, r1]
 8003dae:	54a6      	strb	r6, [r4, r2]
 8003db0:	2282      	movs	r2, #130	; 0x82
 8003db2:	3501      	adds	r5, #1
 8003db4:	0052      	lsls	r2, r2, #1
 8003db6:	54a6      	strb	r6, [r4, r2]
 8003db8:	42af      	cmp	r7, r5
 8003dba:	d101      	bne.n	8003dc0 <d_print_comp_inner+0x16c8>
 8003dbc:	f7fe fcc3 	bl	8002746 <d_print_comp_inner+0x4e>
 8003dc0:	782e      	ldrb	r6, [r5, #0]
 8003dc2:	2bff      	cmp	r3, #255	; 0xff
 8003dc4:	d1ee      	bne.n	8003da4 <d_print_comp_inner+0x16ac>
 8003dc6:	4652      	mov	r2, sl
 8003dc8:	54e2      	strb	r2, [r4, r3]
 8003dca:	464b      	mov	r3, r9
 8003dcc:	58e2      	ldr	r2, [r4, r3]
 8003dce:	4643      	mov	r3, r8
 8003dd0:	21ff      	movs	r1, #255	; 0xff
 8003dd2:	58e3      	ldr	r3, [r4, r3]
 8003dd4:	0020      	movs	r0, r4
 8003dd6:	4798      	blx	r3
 8003dd8:	2294      	movs	r2, #148	; 0x94
 8003dda:	0052      	lsls	r2, r2, #1
 8003ddc:	58a3      	ldr	r3, [r4, r2]
 8003dde:	3301      	adds	r3, #1
 8003de0:	50a3      	str	r3, [r4, r2]
 8003de2:	2301      	movs	r3, #1
 8003de4:	2200      	movs	r2, #0
 8003de6:	e7df      	b.n	8003da8 <d_print_comp_inner+0x16b0>
 8003de8:	68eb      	ldr	r3, [r5, #12]
 8003dea:	cba0      	ldmia	r3!, {r5, r7}
 8003dec:	2f00      	cmp	r7, #0
 8003dee:	d101      	bne.n	8003df4 <d_print_comp_inner+0x16fc>
 8003df0:	f7fe fca9 	bl	8002746 <d_print_comp_inner+0x4e>
 8003df4:	2200      	movs	r2, #0
 8003df6:	2380      	movs	r3, #128	; 0x80
 8003df8:	4692      	mov	sl, r2
 8003dfa:	320d      	adds	r2, #13
 8003dfc:	32ff      	adds	r2, #255	; 0xff
 8003dfe:	4691      	mov	r9, r2
 8003e00:	005b      	lsls	r3, r3, #1
 8003e02:	3a04      	subs	r2, #4
 8003e04:	4690      	mov	r8, r2
 8003e06:	58c3      	ldr	r3, [r0, r3]
 8003e08:	19ef      	adds	r7, r5, r7
 8003e0a:	e00d      	b.n	8003e28 <d_print_comp_inner+0x1730>
 8003e0c:	001a      	movs	r2, r3
 8003e0e:	3301      	adds	r3, #1
 8003e10:	2180      	movs	r1, #128	; 0x80
 8003e12:	0049      	lsls	r1, r1, #1
 8003e14:	5063      	str	r3, [r4, r1]
 8003e16:	54a6      	strb	r6, [r4, r2]
 8003e18:	2282      	movs	r2, #130	; 0x82
 8003e1a:	3501      	adds	r5, #1
 8003e1c:	0052      	lsls	r2, r2, #1
 8003e1e:	54a6      	strb	r6, [r4, r2]
 8003e20:	42af      	cmp	r7, r5
 8003e22:	d101      	bne.n	8003e28 <d_print_comp_inner+0x1730>
 8003e24:	f7fe fc8f 	bl	8002746 <d_print_comp_inner+0x4e>
 8003e28:	782e      	ldrb	r6, [r5, #0]
 8003e2a:	2bff      	cmp	r3, #255	; 0xff
 8003e2c:	d1ee      	bne.n	8003e0c <d_print_comp_inner+0x1714>
 8003e2e:	4652      	mov	r2, sl
 8003e30:	54e2      	strb	r2, [r4, r3]
 8003e32:	464b      	mov	r3, r9
 8003e34:	58e2      	ldr	r2, [r4, r3]
 8003e36:	4643      	mov	r3, r8
 8003e38:	21ff      	movs	r1, #255	; 0xff
 8003e3a:	58e3      	ldr	r3, [r4, r3]
 8003e3c:	0020      	movs	r0, r4
 8003e3e:	4798      	blx	r3
 8003e40:	2294      	movs	r2, #148	; 0x94
 8003e42:	0052      	lsls	r2, r2, #1
 8003e44:	58a3      	ldr	r3, [r4, r2]
 8003e46:	3301      	adds	r3, #1
 8003e48:	50a3      	str	r3, [r4, r2]
 8003e4a:	2301      	movs	r3, #1
 8003e4c:	2200      	movs	r2, #0
 8003e4e:	e7df      	b.n	8003e10 <d_print_comp_inner+0x1718>
 8003e50:	3950      	subs	r1, #80	; 0x50
 8003e52:	2901      	cmp	r1, #1
 8003e54:	d800      	bhi.n	8003e58 <d_print_comp_inner+0x1760>
 8003e56:	e2b1      	b.n	80043bc <d_print_comp_inner+0x1cc4>
 8003e58:	4698      	mov	r8, r3
 8003e5a:	238a      	movs	r3, #138	; 0x8a
 8003e5c:	005b      	lsls	r3, r3, #1
 8003e5e:	50e0      	str	r0, [r4, r3]
 8003e60:	f7ff faf9 	bl	8003456 <d_print_comp_inner+0xd5e>
 8003e64:	0800fded 	.word	0x0800fded
 8003e68:	0800fde0 	.word	0x0800fde0
 8003e6c:	0800fe41 	.word	0x0800fe41
 8003e70:	0800fbcc 	.word	0x0800fbcc
 8003e74:	2111      	movs	r1, #17
 8003e76:	0020      	movs	r0, r4
 8003e78:	68ea      	ldr	r2, [r5, #12]
 8003e7a:	f001 f923 	bl	80050c4 <d_print_comp>
 8003e7e:	f7fe fc62 	bl	8002746 <d_print_comp_inner+0x4e>
 8003e82:	2111      	movs	r1, #17
 8003e84:	0020      	movs	r0, r4
 8003e86:	68ea      	ldr	r2, [r5, #12]
 8003e88:	f001 f91c 	bl	80050c4 <d_print_comp>
 8003e8c:	f7fe fc5b 	bl	8002746 <d_print_comp_inner+0x4e>
 8003e90:	2111      	movs	r1, #17
 8003e92:	0020      	movs	r0, r4
 8003e94:	68ea      	ldr	r2, [r5, #12]
 8003e96:	f001 f915 	bl	80050c4 <d_print_comp>
 8003e9a:	f7fe fc54 	bl	8002746 <d_print_comp_inner+0x4e>
 8003e9e:	2690      	movs	r6, #144	; 0x90
 8003ea0:	0076      	lsls	r6, r6, #1
 8003ea2:	59a3      	ldr	r3, [r4, r6]
 8003ea4:	68ea      	ldr	r2, [r5, #12]
 8003ea6:	3301      	adds	r3, #1
 8003ea8:	51a3      	str	r3, [r4, r6]
 8003eaa:	2111      	movs	r1, #17
 8003eac:	0020      	movs	r0, r4
 8003eae:	f001 f909 	bl	80050c4 <d_print_comp>
 8003eb2:	59a3      	ldr	r3, [r4, r6]
 8003eb4:	2729      	movs	r7, #41	; 0x29
 8003eb6:	3b01      	subs	r3, #1
 8003eb8:	51a3      	str	r3, [r4, r6]
 8003eba:	4eeb      	ldr	r6, [pc, #940]	; (8004268 <d_print_comp_inner+0x1b70>)
 8003ebc:	4643      	mov	r3, r8
 8003ebe:	1cb2      	adds	r2, r6, #2
 8003ec0:	4691      	mov	r9, r2
 8003ec2:	2200      	movs	r2, #0
 8003ec4:	4693      	mov	fp, r2
 8003ec6:	320d      	adds	r2, #13
 8003ec8:	32ff      	adds	r2, #255	; 0xff
 8003eca:	4692      	mov	sl, r2
 8003ecc:	58e3      	ldr	r3, [r4, r3]
 8003ece:	e00d      	b.n	8003eec <d_print_comp_inner+0x17f4>
 8003ed0:	001a      	movs	r2, r3
 8003ed2:	3301      	adds	r3, #1
 8003ed4:	2180      	movs	r1, #128	; 0x80
 8003ed6:	0049      	lsls	r1, r1, #1
 8003ed8:	5063      	str	r3, [r4, r1]
 8003eda:	54a7      	strb	r7, [r4, r2]
 8003edc:	2282      	movs	r2, #130	; 0x82
 8003ede:	3601      	adds	r6, #1
 8003ee0:	0052      	lsls	r2, r2, #1
 8003ee2:	4688      	mov	r8, r1
 8003ee4:	54a7      	strb	r7, [r4, r2]
 8003ee6:	454e      	cmp	r6, r9
 8003ee8:	d03f      	beq.n	8003f6a <d_print_comp_inner+0x1872>
 8003eea:	7837      	ldrb	r7, [r6, #0]
 8003eec:	2bff      	cmp	r3, #255	; 0xff
 8003eee:	d1ef      	bne.n	8003ed0 <d_print_comp_inner+0x17d8>
 8003ef0:	465a      	mov	r2, fp
 8003ef2:	54e2      	strb	r2, [r4, r3]
 8003ef4:	4653      	mov	r3, sl
 8003ef6:	58e2      	ldr	r2, [r4, r3]
 8003ef8:	2384      	movs	r3, #132	; 0x84
 8003efa:	005b      	lsls	r3, r3, #1
 8003efc:	58e3      	ldr	r3, [r4, r3]
 8003efe:	21ff      	movs	r1, #255	; 0xff
 8003f00:	0020      	movs	r0, r4
 8003f02:	4798      	blx	r3
 8003f04:	2294      	movs	r2, #148	; 0x94
 8003f06:	0052      	lsls	r2, r2, #1
 8003f08:	58a3      	ldr	r3, [r4, r2]
 8003f0a:	3301      	adds	r3, #1
 8003f0c:	50a3      	str	r3, [r4, r2]
 8003f0e:	2301      	movs	r3, #1
 8003f10:	2200      	movs	r2, #0
 8003f12:	e7df      	b.n	8003ed4 <d_print_comp_inner+0x17dc>
 8003f14:	2111      	movs	r1, #17
 8003f16:	0020      	movs	r0, r4
 8003f18:	68ea      	ldr	r2, [r5, #12]
 8003f1a:	f001 f8d3 	bl	80050c4 <d_print_comp>
 8003f1e:	f7fe fc12 	bl	8002746 <d_print_comp_inner+0x4e>
 8003f22:	2111      	movs	r1, #17
 8003f24:	0020      	movs	r0, r4
 8003f26:	68ea      	ldr	r2, [r5, #12]
 8003f28:	f001 f8cc 	bl	80050c4 <d_print_comp>
 8003f2c:	f7fe fc0b 	bl	8002746 <d_print_comp_inner+0x4e>
 8003f30:	2111      	movs	r1, #17
 8003f32:	0020      	movs	r0, r4
 8003f34:	692a      	ldr	r2, [r5, #16]
 8003f36:	f001 f8c5 	bl	80050c4 <d_print_comp>
 8003f3a:	4643      	mov	r3, r8
 8003f3c:	58e3      	ldr	r3, [r4, r3]
 8003f3e:	2bff      	cmp	r3, #255	; 0xff
 8003f40:	d101      	bne.n	8003f46 <d_print_comp_inner+0x184e>
 8003f42:	f000 fc99 	bl	8004878 <d_print_comp_inner+0x2180>
 8003f46:	1c59      	adds	r1, r3, #1
 8003f48:	2280      	movs	r2, #128	; 0x80
 8003f4a:	0052      	lsls	r2, r2, #1
 8003f4c:	50a1      	str	r1, [r4, r2]
 8003f4e:	3aa3      	subs	r2, #163	; 0xa3
 8003f50:	54e2      	strb	r2, [r4, r3]
 8003f52:	2382      	movs	r3, #130	; 0x82
 8003f54:	005b      	lsls	r3, r3, #1
 8003f56:	54e2      	strb	r2, [r4, r3]
 8003f58:	f7fe fbf5 	bl	8002746 <d_print_comp_inner+0x4e>
 8003f5c:	2111      	movs	r1, #17
 8003f5e:	0020      	movs	r0, r4
 8003f60:	68ea      	ldr	r2, [r5, #12]
 8003f62:	f001 f8af 	bl	80050c4 <d_print_comp>
 8003f66:	f7fe fbee 	bl	8002746 <d_print_comp_inner+0x4e>
 8003f6a:	692a      	ldr	r2, [r5, #16]
 8003f6c:	49bf      	ldr	r1, [pc, #764]	; (800426c <d_print_comp_inner+0x1b74>)
 8003f6e:	3201      	adds	r2, #1
 8003f70:	a806      	add	r0, sp, #24
 8003f72:	f008 f9e7 	bl	800c344 <siprintf>
 8003f76:	a806      	add	r0, sp, #24
 8003f78:	f002 fd30 	bl	80069dc <strlen>
 8003f7c:	4643      	mov	r3, r8
 8003f7e:	58e3      	ldr	r3, [r4, r3]
 8003f80:	2800      	cmp	r0, #0
 8003f82:	d029      	beq.n	8003fd8 <d_print_comp_inner+0x18e0>
 8003f84:	2200      	movs	r2, #0
 8003f86:	4692      	mov	sl, r2
 8003f88:	320d      	adds	r2, #13
 8003f8a:	32ff      	adds	r2, #255	; 0xff
 8003f8c:	4691      	mov	r9, r2
 8003f8e:	ad06      	add	r5, sp, #24
 8003f90:	3a04      	subs	r2, #4
 8003f92:	4690      	mov	r8, r2
 8003f94:	182f      	adds	r7, r5, r0
 8003f96:	e00b      	b.n	8003fb0 <d_print_comp_inner+0x18b8>
 8003f98:	001a      	movs	r2, r3
 8003f9a:	3301      	adds	r3, #1
 8003f9c:	2180      	movs	r1, #128	; 0x80
 8003f9e:	0049      	lsls	r1, r1, #1
 8003fa0:	5063      	str	r3, [r4, r1]
 8003fa2:	54a6      	strb	r6, [r4, r2]
 8003fa4:	2282      	movs	r2, #130	; 0x82
 8003fa6:	3501      	adds	r5, #1
 8003fa8:	0052      	lsls	r2, r2, #1
 8003faa:	54a6      	strb	r6, [r4, r2]
 8003fac:	42bd      	cmp	r5, r7
 8003fae:	d013      	beq.n	8003fd8 <d_print_comp_inner+0x18e0>
 8003fb0:	782e      	ldrb	r6, [r5, #0]
 8003fb2:	2bff      	cmp	r3, #255	; 0xff
 8003fb4:	d1f0      	bne.n	8003f98 <d_print_comp_inner+0x18a0>
 8003fb6:	4652      	mov	r2, sl
 8003fb8:	54e2      	strb	r2, [r4, r3]
 8003fba:	464b      	mov	r3, r9
 8003fbc:	58e2      	ldr	r2, [r4, r3]
 8003fbe:	4643      	mov	r3, r8
 8003fc0:	21ff      	movs	r1, #255	; 0xff
 8003fc2:	58e3      	ldr	r3, [r4, r3]
 8003fc4:	0020      	movs	r0, r4
 8003fc6:	4798      	blx	r3
 8003fc8:	2294      	movs	r2, #148	; 0x94
 8003fca:	0052      	lsls	r2, r2, #1
 8003fcc:	58a3      	ldr	r3, [r4, r2]
 8003fce:	3301      	adds	r3, #1
 8003fd0:	50a3      	str	r3, [r4, r2]
 8003fd2:	2301      	movs	r3, #1
 8003fd4:	2200      	movs	r2, #0
 8003fd6:	e7e1      	b.n	8003f9c <d_print_comp_inner+0x18a4>
 8003fd8:	2bff      	cmp	r3, #255	; 0xff
 8003fda:	d101      	bne.n	8003fe0 <d_print_comp_inner+0x18e8>
 8003fdc:	f000 fcee 	bl	80049bc <d_print_comp_inner+0x22c4>
 8003fe0:	1c59      	adds	r1, r3, #1
 8003fe2:	2280      	movs	r2, #128	; 0x80
 8003fe4:	0052      	lsls	r2, r2, #1
 8003fe6:	50a1      	str	r1, [r4, r2]
 8003fe8:	3a83      	subs	r2, #131	; 0x83
 8003fea:	54e2      	strb	r2, [r4, r3]
 8003fec:	2382      	movs	r3, #130	; 0x82
 8003fee:	005b      	lsls	r3, r3, #1
 8003ff0:	54e2      	strb	r2, [r4, r3]
 8003ff2:	f7fe fba8 	bl	8002746 <d_print_comp_inner+0x4e>
 8003ff6:	2111      	movs	r1, #17
 8003ff8:	0020      	movs	r0, r4
 8003ffa:	68ea      	ldr	r2, [r5, #12]
 8003ffc:	f001 f862 	bl	80050c4 <d_print_comp>
 8004000:	f7fe fba1 	bl	8002746 <d_print_comp_inner+0x4e>
 8004004:	2111      	movs	r1, #17
 8004006:	0020      	movs	r0, r4
 8004008:	68ea      	ldr	r2, [r5, #12]
 800400a:	f001 f85b 	bl	80050c4 <d_print_comp>
 800400e:	4643      	mov	r3, r8
 8004010:	58e3      	ldr	r3, [r4, r3]
 8004012:	2bff      	cmp	r3, #255	; 0xff
 8004014:	d101      	bne.n	800401a <d_print_comp_inner+0x1922>
 8004016:	f000 fc1c 	bl	8004852 <d_print_comp_inner+0x215a>
 800401a:	1c59      	adds	r1, r3, #1
 800401c:	2280      	movs	r2, #128	; 0x80
 800401e:	0052      	lsls	r2, r2, #1
 8004020:	50a1      	str	r1, [r4, r2]
 8004022:	3ad7      	subs	r2, #215	; 0xd7
 8004024:	54e2      	strb	r2, [r4, r3]
 8004026:	2382      	movs	r3, #130	; 0x82
 8004028:	005b      	lsls	r3, r3, #1
 800402a:	54e2      	strb	r2, [r4, r3]
 800402c:	f7fe fb8b 	bl	8002746 <d_print_comp_inner+0x4e>
 8004030:	4642      	mov	r2, r8
 8004032:	6855      	ldr	r5, [r2, #4]
 8004034:	782a      	ldrb	r2, [r5, #0]
 8004036:	3a61      	subs	r2, #97	; 0x61
 8004038:	2a19      	cmp	r2, #25
 800403a:	d800      	bhi.n	800403e <d_print_comp_inner+0x1946>
 800403c:	e3bc      	b.n	80047b8 <d_print_comp_inner+0x20c0>
 800403e:	9a00      	ldr	r2, [sp, #0]
 8004040:	1e57      	subs	r7, r2, #1
 8004042:	5deb      	ldrb	r3, [r5, r7]
 8004044:	2b20      	cmp	r3, #32
 8004046:	d000      	beq.n	800404a <d_print_comp_inner+0x1952>
 8004048:	0017      	movs	r7, r2
 800404a:	2f00      	cmp	r7, #0
 800404c:	d101      	bne.n	8004052 <d_print_comp_inner+0x195a>
 800404e:	f7fe fb7a 	bl	8002746 <d_print_comp_inner+0x4e>
 8004052:	2200      	movs	r2, #0
 8004054:	2380      	movs	r3, #128	; 0x80
 8004056:	4692      	mov	sl, r2
 8004058:	320d      	adds	r2, #13
 800405a:	32ff      	adds	r2, #255	; 0xff
 800405c:	4691      	mov	r9, r2
 800405e:	005b      	lsls	r3, r3, #1
 8004060:	3a04      	subs	r2, #4
 8004062:	4690      	mov	r8, r2
 8004064:	58e3      	ldr	r3, [r4, r3]
 8004066:	19ef      	adds	r7, r5, r7
 8004068:	e00d      	b.n	8004086 <d_print_comp_inner+0x198e>
 800406a:	001a      	movs	r2, r3
 800406c:	3301      	adds	r3, #1
 800406e:	2180      	movs	r1, #128	; 0x80
 8004070:	0049      	lsls	r1, r1, #1
 8004072:	5063      	str	r3, [r4, r1]
 8004074:	54a6      	strb	r6, [r4, r2]
 8004076:	2282      	movs	r2, #130	; 0x82
 8004078:	3501      	adds	r5, #1
 800407a:	0052      	lsls	r2, r2, #1
 800407c:	54a6      	strb	r6, [r4, r2]
 800407e:	42af      	cmp	r7, r5
 8004080:	d101      	bne.n	8004086 <d_print_comp_inner+0x198e>
 8004082:	f7fe fb60 	bl	8002746 <d_print_comp_inner+0x4e>
 8004086:	782e      	ldrb	r6, [r5, #0]
 8004088:	2bff      	cmp	r3, #255	; 0xff
 800408a:	d1ee      	bne.n	800406a <d_print_comp_inner+0x1972>
 800408c:	4652      	mov	r2, sl
 800408e:	54e2      	strb	r2, [r4, r3]
 8004090:	464b      	mov	r3, r9
 8004092:	58e2      	ldr	r2, [r4, r3]
 8004094:	4643      	mov	r3, r8
 8004096:	21ff      	movs	r1, #255	; 0xff
 8004098:	58e3      	ldr	r3, [r4, r3]
 800409a:	0020      	movs	r0, r4
 800409c:	4798      	blx	r3
 800409e:	2294      	movs	r2, #148	; 0x94
 80040a0:	0052      	lsls	r2, r2, #1
 80040a2:	58a3      	ldr	r3, [r4, r2]
 80040a4:	3301      	adds	r3, #1
 80040a6:	50a3      	str	r3, [r4, r2]
 80040a8:	2301      	movs	r3, #1
 80040aa:	2200      	movs	r2, #0
 80040ac:	e7df      	b.n	800406e <d_print_comp_inner+0x1976>
 80040ae:	2111      	movs	r1, #17
 80040b0:	0020      	movs	r0, r4
 80040b2:	68ea      	ldr	r2, [r5, #12]
 80040b4:	f001 f806 	bl	80050c4 <d_print_comp>
 80040b8:	f7fe fb45 	bl	8002746 <d_print_comp_inner+0x4e>
 80040bc:	692a      	ldr	r2, [r5, #16]
 80040be:	2111      	movs	r1, #17
 80040c0:	0020      	movs	r0, r4
 80040c2:	f000 ffff 	bl	80050c4 <d_print_comp>
 80040c6:	4e6a      	ldr	r6, [pc, #424]	; (8004270 <d_print_comp_inner+0x1b78>)
 80040c8:	4643      	mov	r3, r8
 80040ca:	1d72      	adds	r2, r6, #5
 80040cc:	4690      	mov	r8, r2
 80040ce:	2200      	movs	r2, #0
 80040d0:	4693      	mov	fp, r2
 80040d2:	320d      	adds	r2, #13
 80040d4:	32ff      	adds	r2, #255	; 0xff
 80040d6:	4692      	mov	sl, r2
 80040d8:	3a04      	subs	r2, #4
 80040da:	2720      	movs	r7, #32
 80040dc:	4691      	mov	r9, r2
 80040de:	58e3      	ldr	r3, [r4, r3]
 80040e0:	e00c      	b.n	80040fc <d_print_comp_inner+0x1a04>
 80040e2:	001a      	movs	r2, r3
 80040e4:	3301      	adds	r3, #1
 80040e6:	2180      	movs	r1, #128	; 0x80
 80040e8:	0049      	lsls	r1, r1, #1
 80040ea:	5063      	str	r3, [r4, r1]
 80040ec:	54a7      	strb	r7, [r4, r2]
 80040ee:	2282      	movs	r2, #130	; 0x82
 80040f0:	3601      	adds	r6, #1
 80040f2:	0052      	lsls	r2, r2, #1
 80040f4:	54a7      	strb	r7, [r4, r2]
 80040f6:	4546      	cmp	r6, r8
 80040f8:	d013      	beq.n	8004122 <d_print_comp_inner+0x1a2a>
 80040fa:	7837      	ldrb	r7, [r6, #0]
 80040fc:	2bff      	cmp	r3, #255	; 0xff
 80040fe:	d1f0      	bne.n	80040e2 <d_print_comp_inner+0x19ea>
 8004100:	465a      	mov	r2, fp
 8004102:	54e2      	strb	r2, [r4, r3]
 8004104:	4653      	mov	r3, sl
 8004106:	58e2      	ldr	r2, [r4, r3]
 8004108:	464b      	mov	r3, r9
 800410a:	21ff      	movs	r1, #255	; 0xff
 800410c:	58e3      	ldr	r3, [r4, r3]
 800410e:	0020      	movs	r0, r4
 8004110:	4798      	blx	r3
 8004112:	2294      	movs	r2, #148	; 0x94
 8004114:	0052      	lsls	r2, r2, #1
 8004116:	58a3      	ldr	r3, [r4, r2]
 8004118:	3301      	adds	r3, #1
 800411a:	50a3      	str	r3, [r4, r2]
 800411c:	2301      	movs	r3, #1
 800411e:	2200      	movs	r2, #0
 8004120:	e7e1      	b.n	80040e6 <d_print_comp_inner+0x19ee>
 8004122:	2111      	movs	r1, #17
 8004124:	0020      	movs	r0, r4
 8004126:	68ea      	ldr	r2, [r5, #12]
 8004128:	f000 ffcc 	bl	80050c4 <d_print_comp>
 800412c:	f7fe fb0b 	bl	8002746 <d_print_comp_inner+0x4e>
 8004130:	2111      	movs	r1, #17
 8004132:	0020      	movs	r0, r4
 8004134:	68ea      	ldr	r2, [r5, #12]
 8004136:	f000 ffc5 	bl	80050c4 <d_print_comp>
 800413a:	f7fe fb04 	bl	8002746 <d_print_comp_inner+0x4e>
 800413e:	2111      	movs	r1, #17
 8004140:	0020      	movs	r0, r4
 8004142:	68ea      	ldr	r2, [r5, #12]
 8004144:	f000 ffbe 	bl	80050c4 <d_print_comp>
 8004148:	f7fe fafd 	bl	8002746 <d_print_comp_inner+0x4e>
 800414c:	2111      	movs	r1, #17
 800414e:	0020      	movs	r0, r4
 8004150:	68ea      	ldr	r2, [r5, #12]
 8004152:	f000 ffb7 	bl	80050c4 <d_print_comp>
 8004156:	f7fe faf6 	bl	8002746 <d_print_comp_inner+0x4e>
 800415a:	68ea      	ldr	r2, [r5, #12]
 800415c:	2111      	movs	r1, #17
 800415e:	0020      	movs	r0, r4
 8004160:	f000 ffb0 	bl	80050c4 <d_print_comp>
 8004164:	4e43      	ldr	r6, [pc, #268]	; (8004274 <d_print_comp_inner+0x1b7c>)
 8004166:	4643      	mov	r3, r8
 8004168:	1d32      	adds	r2, r6, #4
 800416a:	4690      	mov	r8, r2
 800416c:	2200      	movs	r2, #0
 800416e:	4693      	mov	fp, r2
 8004170:	320d      	adds	r2, #13
 8004172:	32ff      	adds	r2, #255	; 0xff
 8004174:	4692      	mov	sl, r2
 8004176:	3a04      	subs	r2, #4
 8004178:	272d      	movs	r7, #45	; 0x2d
 800417a:	4691      	mov	r9, r2
 800417c:	58e3      	ldr	r3, [r4, r3]
 800417e:	e00c      	b.n	800419a <d_print_comp_inner+0x1aa2>
 8004180:	001a      	movs	r2, r3
 8004182:	3301      	adds	r3, #1
 8004184:	2180      	movs	r1, #128	; 0x80
 8004186:	0049      	lsls	r1, r1, #1
 8004188:	5063      	str	r3, [r4, r1]
 800418a:	54a7      	strb	r7, [r4, r2]
 800418c:	2282      	movs	r2, #130	; 0x82
 800418e:	3601      	adds	r6, #1
 8004190:	0052      	lsls	r2, r2, #1
 8004192:	54a7      	strb	r7, [r4, r2]
 8004194:	45b0      	cmp	r8, r6
 8004196:	d013      	beq.n	80041c0 <d_print_comp_inner+0x1ac8>
 8004198:	7837      	ldrb	r7, [r6, #0]
 800419a:	2bff      	cmp	r3, #255	; 0xff
 800419c:	d1f0      	bne.n	8004180 <d_print_comp_inner+0x1a88>
 800419e:	465a      	mov	r2, fp
 80041a0:	54e2      	strb	r2, [r4, r3]
 80041a2:	4653      	mov	r3, sl
 80041a4:	58e2      	ldr	r2, [r4, r3]
 80041a6:	464b      	mov	r3, r9
 80041a8:	21ff      	movs	r1, #255	; 0xff
 80041aa:	58e3      	ldr	r3, [r4, r3]
 80041ac:	0020      	movs	r0, r4
 80041ae:	4798      	blx	r3
 80041b0:	2294      	movs	r2, #148	; 0x94
 80041b2:	0052      	lsls	r2, r2, #1
 80041b4:	58a3      	ldr	r3, [r4, r2]
 80041b6:	3301      	adds	r3, #1
 80041b8:	50a3      	str	r3, [r4, r2]
 80041ba:	2301      	movs	r3, #1
 80041bc:	2200      	movs	r2, #0
 80041be:	e7e1      	b.n	8004184 <d_print_comp_inner+0x1a8c>
 80041c0:	2111      	movs	r1, #17
 80041c2:	0020      	movs	r0, r4
 80041c4:	692a      	ldr	r2, [r5, #16]
 80041c6:	f000 ff7d 	bl	80050c4 <d_print_comp>
 80041ca:	f7fe fabc 	bl	8002746 <d_print_comp_inner+0x4e>
 80041ce:	2111      	movs	r1, #17
 80041d0:	0020      	movs	r0, r4
 80041d2:	692a      	ldr	r2, [r5, #16]
 80041d4:	f000 ff76 	bl	80050c4 <d_print_comp>
 80041d8:	4643      	mov	r3, r8
 80041da:	58e3      	ldr	r3, [r4, r3]
 80041dc:	2bff      	cmp	r3, #255	; 0xff
 80041de:	d100      	bne.n	80041e2 <d_print_comp_inner+0x1aea>
 80041e0:	e3c8      	b.n	8004974 <d_print_comp_inner+0x227c>
 80041e2:	1c59      	adds	r1, r3, #1
 80041e4:	2280      	movs	r2, #128	; 0x80
 80041e6:	0052      	lsls	r2, r2, #1
 80041e8:	50a1      	str	r1, [r4, r2]
 80041ea:	3aa3      	subs	r2, #163	; 0xa3
 80041ec:	54e2      	strb	r2, [r4, r3]
 80041ee:	2382      	movs	r3, #130	; 0x82
 80041f0:	005b      	lsls	r3, r3, #1
 80041f2:	54e2      	strb	r2, [r4, r3]
 80041f4:	f7fe faa7 	bl	8002746 <d_print_comp_inner+0x4e>
 80041f8:	2111      	movs	r1, #17
 80041fa:	0020      	movs	r0, r4
 80041fc:	68ea      	ldr	r2, [r5, #12]
 80041fe:	f000 ff61 	bl	80050c4 <d_print_comp>
 8004202:	f7fe faa0 	bl	8002746 <d_print_comp_inner+0x4e>
 8004206:	2111      	movs	r1, #17
 8004208:	0020      	movs	r0, r4
 800420a:	68ea      	ldr	r2, [r5, #12]
 800420c:	f000 ff5a 	bl	80050c4 <d_print_comp>
 8004210:	f7fe fa99 	bl	8002746 <d_print_comp_inner+0x4e>
 8004214:	2111      	movs	r1, #17
 8004216:	0020      	movs	r0, r4
 8004218:	68ea      	ldr	r2, [r5, #12]
 800421a:	f000 ff53 	bl	80050c4 <d_print_comp>
 800421e:	f7fe fa92 	bl	8002746 <d_print_comp_inner+0x4e>
 8004222:	2111      	movs	r1, #17
 8004224:	0020      	movs	r0, r4
 8004226:	68ea      	ldr	r2, [r5, #12]
 8004228:	f000 ff4c 	bl	80050c4 <d_print_comp>
 800422c:	f7fe fa8b 	bl	8002746 <d_print_comp_inner+0x4e>
 8004230:	2111      	movs	r1, #17
 8004232:	0020      	movs	r0, r4
 8004234:	68ea      	ldr	r2, [r5, #12]
 8004236:	f000 ff45 	bl	80050c4 <d_print_comp>
 800423a:	f7fe fa84 	bl	8002746 <d_print_comp_inner+0x4e>
 800423e:	2111      	movs	r1, #17
 8004240:	0020      	movs	r0, r4
 8004242:	68ea      	ldr	r2, [r5, #12]
 8004244:	f000 ff3e 	bl	80050c4 <d_print_comp>
 8004248:	f7fe fa7d 	bl	8002746 <d_print_comp_inner+0x4e>
 800424c:	2111      	movs	r1, #17
 800424e:	0020      	movs	r0, r4
 8004250:	68ea      	ldr	r2, [r5, #12]
 8004252:	f000 ff37 	bl	80050c4 <d_print_comp>
 8004256:	f7fe fa76 	bl	8002746 <d_print_comp_inner+0x4e>
 800425a:	2111      	movs	r1, #17
 800425c:	0020      	movs	r0, r4
 800425e:	68ea      	ldr	r2, [r5, #12]
 8004260:	f000 ff30 	bl	80050c4 <d_print_comp>
 8004264:	f7fe fa6f 	bl	8002746 <d_print_comp_inner+0x4e>
 8004268:	0800feac 	.word	0x0800feac
 800426c:	0800fbcc 	.word	0x0800fbcc
 8004270:	0800fd74 	.word	0x0800fd74
 8004274:	0800fcb0 	.word	0x0800fcb0
 8004278:	68ea      	ldr	r2, [r5, #12]
 800427a:	49dc      	ldr	r1, [pc, #880]	; (80045ec <d_print_comp_inner+0x1ef4>)
 800427c:	3201      	adds	r2, #1
 800427e:	a806      	add	r0, sp, #24
 8004280:	f008 f860 	bl	800c344 <siprintf>
 8004284:	a806      	add	r0, sp, #24
 8004286:	f002 fba9 	bl	80069dc <strlen>
 800428a:	4643      	mov	r3, r8
 800428c:	58e3      	ldr	r3, [r4, r3]
 800428e:	2800      	cmp	r0, #0
 8004290:	d029      	beq.n	80042e6 <d_print_comp_inner+0x1bee>
 8004292:	2200      	movs	r2, #0
 8004294:	4692      	mov	sl, r2
 8004296:	320d      	adds	r2, #13
 8004298:	32ff      	adds	r2, #255	; 0xff
 800429a:	4691      	mov	r9, r2
 800429c:	ad06      	add	r5, sp, #24
 800429e:	3a04      	subs	r2, #4
 80042a0:	4690      	mov	r8, r2
 80042a2:	182f      	adds	r7, r5, r0
 80042a4:	e00b      	b.n	80042be <d_print_comp_inner+0x1bc6>
 80042a6:	001a      	movs	r2, r3
 80042a8:	3301      	adds	r3, #1
 80042aa:	2180      	movs	r1, #128	; 0x80
 80042ac:	0049      	lsls	r1, r1, #1
 80042ae:	5063      	str	r3, [r4, r1]
 80042b0:	54a6      	strb	r6, [r4, r2]
 80042b2:	2282      	movs	r2, #130	; 0x82
 80042b4:	3501      	adds	r5, #1
 80042b6:	0052      	lsls	r2, r2, #1
 80042b8:	54a6      	strb	r6, [r4, r2]
 80042ba:	42bd      	cmp	r5, r7
 80042bc:	d013      	beq.n	80042e6 <d_print_comp_inner+0x1bee>
 80042be:	782e      	ldrb	r6, [r5, #0]
 80042c0:	2bff      	cmp	r3, #255	; 0xff
 80042c2:	d1f0      	bne.n	80042a6 <d_print_comp_inner+0x1bae>
 80042c4:	4652      	mov	r2, sl
 80042c6:	54e2      	strb	r2, [r4, r3]
 80042c8:	464b      	mov	r3, r9
 80042ca:	58e2      	ldr	r2, [r4, r3]
 80042cc:	4643      	mov	r3, r8
 80042ce:	21ff      	movs	r1, #255	; 0xff
 80042d0:	58e3      	ldr	r3, [r4, r3]
 80042d2:	0020      	movs	r0, r4
 80042d4:	4798      	blx	r3
 80042d6:	2294      	movs	r2, #148	; 0x94
 80042d8:	0052      	lsls	r2, r2, #1
 80042da:	58a3      	ldr	r3, [r4, r2]
 80042dc:	3301      	adds	r3, #1
 80042de:	50a3      	str	r3, [r4, r2]
 80042e0:	2301      	movs	r3, #1
 80042e2:	2200      	movs	r2, #0
 80042e4:	e7e1      	b.n	80042aa <d_print_comp_inner+0x1bb2>
 80042e6:	2bff      	cmp	r3, #255	; 0xff
 80042e8:	d100      	bne.n	80042ec <d_print_comp_inner+0x1bf4>
 80042ea:	e331      	b.n	8004950 <d_print_comp_inner+0x2258>
 80042ec:	1c59      	adds	r1, r3, #1
 80042ee:	2280      	movs	r2, #128	; 0x80
 80042f0:	0052      	lsls	r2, r2, #1
 80042f2:	50a1      	str	r1, [r4, r2]
 80042f4:	3a83      	subs	r2, #131	; 0x83
 80042f6:	54e2      	strb	r2, [r4, r3]
 80042f8:	2382      	movs	r3, #130	; 0x82
 80042fa:	005b      	lsls	r3, r3, #1
 80042fc:	54e2      	strb	r2, [r4, r3]
 80042fe:	f7fe fa22 	bl	8002746 <d_print_comp_inner+0x4e>
 8004302:	23a4      	movs	r3, #164	; 0xa4
 8004304:	005b      	lsls	r3, r3, #1
 8004306:	58e3      	ldr	r3, [r4, r3]
 8004308:	2b00      	cmp	r3, #0
 800430a:	d006      	beq.n	800431a <d_print_comp_inner+0x1c22>
 800430c:	2188      	movs	r1, #136	; 0x88
 800430e:	0049      	lsls	r1, r1, #1
 8004310:	5860      	ldr	r0, [r4, r1]
 8004312:	aa06      	add	r2, sp, #24
 8004314:	9006      	str	r0, [sp, #24]
 8004316:	5062      	str	r2, [r4, r1]
 8004318:	9307      	str	r3, [sp, #28]
 800431a:	68ea      	ldr	r2, [r5, #12]
 800431c:	7813      	ldrb	r3, [r2, #0]
 800431e:	2b04      	cmp	r3, #4
 8004320:	d100      	bne.n	8004324 <d_print_comp_inner+0x1c2c>
 8004322:	e16b      	b.n	80045fc <d_print_comp_inner+0x1f04>
 8004324:	2111      	movs	r1, #17
 8004326:	0020      	movs	r0, r4
 8004328:	f000 fecc 	bl	80050c4 <d_print_comp>
 800432c:	23a4      	movs	r3, #164	; 0xa4
 800432e:	005b      	lsls	r3, r3, #1
 8004330:	58e3      	ldr	r3, [r4, r3]
 8004332:	2b00      	cmp	r3, #0
 8004334:	d101      	bne.n	800433a <d_print_comp_inner+0x1c42>
 8004336:	f7fe fa06 	bl	8002746 <d_print_comp_inner+0x4e>
 800433a:	2388      	movs	r3, #136	; 0x88
 800433c:	9a06      	ldr	r2, [sp, #24]
 800433e:	005b      	lsls	r3, r3, #1
 8004340:	50e2      	str	r2, [r4, r3]
 8004342:	f7fe fa00 	bl	8002746 <d_print_comp_inner+0x4e>
 8004346:	2111      	movs	r1, #17
 8004348:	0020      	movs	r0, r4
 800434a:	692a      	ldr	r2, [r5, #16]
 800434c:	f000 feba 	bl	80050c4 <d_print_comp>
 8004350:	f7fe f9f9 	bl	8002746 <d_print_comp_inner+0x4e>
 8004354:	002a      	movs	r2, r5
 8004356:	2111      	movs	r1, #17
 8004358:	0020      	movs	r0, r4
 800435a:	f000 fee1 	bl	8005120 <d_print_mod>
 800435e:	f7fe fa17 	bl	8002790 <d_print_comp_inner+0x98>
 8004362:	2794      	movs	r7, #148	; 0x94
 8004364:	4645      	mov	r5, r8
 8004366:	007f      	lsls	r7, r7, #1
 8004368:	59e3      	ldr	r3, [r4, r7]
 800436a:	2111      	movs	r1, #17
 800436c:	4698      	mov	r8, r3
 800436e:	0020      	movs	r0, r4
 8004370:	692a      	ldr	r2, [r5, #16]
 8004372:	f000 fea7 	bl	80050c4 <d_print_comp>
 8004376:	59e3      	ldr	r3, [r4, r7]
 8004378:	4543      	cmp	r3, r8
 800437a:	d001      	beq.n	8004380 <d_print_comp_inner+0x1c88>
 800437c:	f7fe f9e3 	bl	8002746 <d_print_comp_inner+0x4e>
 8004380:	464b      	mov	r3, r9
 8004382:	58e3      	ldr	r3, [r4, r3]
 8004384:	429e      	cmp	r6, r3
 8004386:	d001      	beq.n	800438c <d_print_comp_inner+0x1c94>
 8004388:	f7fe f9dd 	bl	8002746 <d_print_comp_inner+0x4e>
 800438c:	464b      	mov	r3, r9
 800438e:	3e02      	subs	r6, #2
 8004390:	50e6      	str	r6, [r4, r3]
 8004392:	f7fe f9d8 	bl	8002746 <d_print_comp_inner+0x4e>
 8004396:	4642      	mov	r2, r8
 8004398:	58a2      	ldr	r2, [r4, r2]
 800439a:	2aff      	cmp	r2, #255	; 0xff
 800439c:	d101      	bne.n	80043a2 <d_print_comp_inner+0x1caa>
 800439e:	f000 fcc1 	bl	8004d24 <d_print_comp_inner+0x262c>
 80043a2:	1c53      	adds	r3, r2, #1
 80043a4:	4641      	mov	r1, r8
 80043a6:	5063      	str	r3, [r4, r1]
 80043a8:	4653      	mov	r3, sl
 80043aa:	54a6      	strb	r6, [r4, r2]
 80043ac:	2111      	movs	r1, #17
 80043ae:	0020      	movs	r0, r4
 80043b0:	682a      	ldr	r2, [r5, #0]
 80043b2:	54e6      	strb	r6, [r4, r3]
 80043b4:	f000 feb4 	bl	8005120 <d_print_mod>
 80043b8:	f7ff f869 	bl	800348e <d_print_comp_inner+0xd96>
 80043bc:	68db      	ldr	r3, [r3, #12]
 80043be:	2b00      	cmp	r3, #0
 80043c0:	d101      	bne.n	80043c6 <d_print_comp_inner+0x1cce>
 80043c2:	f000 fca6 	bl	8004d12 <d_print_comp_inner+0x261a>
 80043c6:	3010      	adds	r0, #16
 80043c8:	2f04      	cmp	r7, #4
 80043ca:	d100      	bne.n	80043ce <d_print_comp_inner+0x1cd6>
 80043cc:	e20d      	b.n	80047ea <d_print_comp_inner+0x20f2>
 80043ce:	4651      	mov	r1, sl
 80043d0:	46bb      	mov	fp, r7
 80043d2:	f7fe ffe9 	bl	80033a8 <d_print_comp_inner+0xcb0>
 80043d6:	4691      	mov	r9, r2
 80043d8:	2a00      	cmp	r2, #0
 80043da:	d101      	bne.n	80043e0 <d_print_comp_inner+0x1ce8>
 80043dc:	f7fe f9b3 	bl	8002746 <d_print_comp_inner+0x4e>
 80043e0:	2301      	movs	r3, #1
 80043e2:	425b      	negs	r3, r3
 80043e4:	469c      	mov	ip, r3
 80043e6:	4693      	mov	fp, r2
 80043e8:	44e1      	add	r9, ip
 80043ea:	f7fe fbb2 	bl	8002b52 <d_print_comp_inner+0x45a>
 80043ee:	2f07      	cmp	r7, #7
 80043f0:	d001      	beq.n	80043f6 <d_print_comp_inner+0x1cfe>
 80043f2:	f7fe fa8d 	bl	8002910 <d_print_comp_inner+0x218>
 80043f6:	692b      	ldr	r3, [r5, #16]
 80043f8:	7819      	ldrb	r1, [r3, #0]
 80043fa:	2900      	cmp	r1, #0
 80043fc:	d001      	beq.n	8004402 <d_print_comp_inner+0x1d0a>
 80043fe:	f7fe fa87 	bl	8002910 <d_print_comp_inner+0x218>
 8004402:	6919      	ldr	r1, [r3, #16]
 8004404:	2901      	cmp	r1, #1
 8004406:	d001      	beq.n	800440c <d_print_comp_inner+0x1d14>
 8004408:	f7fe fa82 	bl	8002910 <d_print_comp_inner+0x218>
 800440c:	2e3d      	cmp	r6, #61	; 0x3d
 800440e:	d001      	beq.n	8004414 <d_print_comp_inner+0x1d1c>
 8004410:	f7fe fa7e 	bl	8002910 <d_print_comp_inner+0x218>
 8004414:	68db      	ldr	r3, [r3, #12]
 8004416:	781b      	ldrb	r3, [r3, #0]
 8004418:	2b30      	cmp	r3, #48	; 0x30
 800441a:	d101      	bne.n	8004420 <d_print_comp_inner+0x1d28>
 800441c:	f000 fe49 	bl	80050b2 <d_print_comp_inner+0x29ba>
 8004420:	2b31      	cmp	r3, #49	; 0x31
 8004422:	d001      	beq.n	8004428 <d_print_comp_inner+0x1d30>
 8004424:	f7fe fa74 	bl	8002910 <d_print_comp_inner+0x218>
 8004428:	4971      	ldr	r1, [pc, #452]	; (80045f0 <d_print_comp_inner+0x1ef8>)
 800442a:	f7fc f8ad 	bl	8000588 <d_append_string>
 800442e:	f7fe f98a 	bl	8002746 <d_print_comp_inner+0x4e>
 8004432:	4970      	ldr	r1, [pc, #448]	; (80045f4 <d_print_comp_inner+0x1efc>)
 8004434:	f7fc f8a8 	bl	8000588 <d_append_string>
 8004438:	002a      	movs	r2, r5
 800443a:	496c      	ldr	r1, [pc, #432]	; (80045ec <d_print_comp_inner+0x1ef4>)
 800443c:	a806      	add	r0, sp, #24
 800443e:	f007 ff81 	bl	800c344 <siprintf>
 8004442:	a806      	add	r0, sp, #24
 8004444:	f002 faca 	bl	80069dc <strlen>
 8004448:	2380      	movs	r3, #128	; 0x80
 800444a:	005b      	lsls	r3, r3, #1
 800444c:	58e3      	ldr	r3, [r4, r3]
 800444e:	2800      	cmp	r0, #0
 8004450:	d029      	beq.n	80044a6 <d_print_comp_inner+0x1dae>
 8004452:	2200      	movs	r2, #0
 8004454:	4692      	mov	sl, r2
 8004456:	320d      	adds	r2, #13
 8004458:	32ff      	adds	r2, #255	; 0xff
 800445a:	4691      	mov	r9, r2
 800445c:	ad06      	add	r5, sp, #24
 800445e:	3a04      	subs	r2, #4
 8004460:	4690      	mov	r8, r2
 8004462:	182f      	adds	r7, r5, r0
 8004464:	e00b      	b.n	800447e <d_print_comp_inner+0x1d86>
 8004466:	001a      	movs	r2, r3
 8004468:	3301      	adds	r3, #1
 800446a:	2180      	movs	r1, #128	; 0x80
 800446c:	0049      	lsls	r1, r1, #1
 800446e:	5063      	str	r3, [r4, r1]
 8004470:	54a6      	strb	r6, [r4, r2]
 8004472:	2282      	movs	r2, #130	; 0x82
 8004474:	3501      	adds	r5, #1
 8004476:	0052      	lsls	r2, r2, #1
 8004478:	54a6      	strb	r6, [r4, r2]
 800447a:	42af      	cmp	r7, r5
 800447c:	d013      	beq.n	80044a6 <d_print_comp_inner+0x1dae>
 800447e:	782e      	ldrb	r6, [r5, #0]
 8004480:	2bff      	cmp	r3, #255	; 0xff
 8004482:	d1f0      	bne.n	8004466 <d_print_comp_inner+0x1d6e>
 8004484:	4652      	mov	r2, sl
 8004486:	54e2      	strb	r2, [r4, r3]
 8004488:	464b      	mov	r3, r9
 800448a:	58e2      	ldr	r2, [r4, r3]
 800448c:	4643      	mov	r3, r8
 800448e:	21ff      	movs	r1, #255	; 0xff
 8004490:	58e3      	ldr	r3, [r4, r3]
 8004492:	0020      	movs	r0, r4
 8004494:	4798      	blx	r3
 8004496:	2294      	movs	r2, #148	; 0x94
 8004498:	0052      	lsls	r2, r2, #1
 800449a:	58a3      	ldr	r3, [r4, r2]
 800449c:	3301      	adds	r3, #1
 800449e:	50a3      	str	r3, [r4, r2]
 80044a0:	2301      	movs	r3, #1
 80044a2:	2200      	movs	r2, #0
 80044a4:	e7e1      	b.n	800446a <d_print_comp_inner+0x1d72>
 80044a6:	2bff      	cmp	r3, #255	; 0xff
 80044a8:	d101      	bne.n	80044ae <d_print_comp_inner+0x1db6>
 80044aa:	f000 fc8b 	bl	8004dc4 <d_print_comp_inner+0x26cc>
 80044ae:	2280      	movs	r2, #128	; 0x80
 80044b0:	1c59      	adds	r1, r3, #1
 80044b2:	0052      	lsls	r2, r2, #1
 80044b4:	50a1      	str	r1, [r4, r2]
 80044b6:	3a83      	subs	r2, #131	; 0x83
 80044b8:	54e2      	strb	r2, [r4, r3]
 80044ba:	2382      	movs	r3, #130	; 0x82
 80044bc:	005b      	lsls	r3, r3, #1
 80044be:	54e2      	strb	r2, [r4, r3]
 80044c0:	f7fe f941 	bl	8002746 <d_print_comp_inner+0x4e>
 80044c4:	2200      	movs	r2, #0
 80044c6:	2380      	movs	r3, #128	; 0x80
 80044c8:	4692      	mov	sl, r2
 80044ca:	320d      	adds	r2, #13
 80044cc:	32ff      	adds	r2, #255	; 0xff
 80044ce:	4d4a      	ldr	r5, [pc, #296]	; (80045f8 <d_print_comp_inner+0x1f00>)
 80044d0:	4691      	mov	r9, r2
 80044d2:	005b      	lsls	r3, r3, #1
 80044d4:	3a04      	subs	r2, #4
 80044d6:	265f      	movs	r6, #95	; 0x5f
 80044d8:	4690      	mov	r8, r2
 80044da:	58e3      	ldr	r3, [r4, r3]
 80044dc:	1d6f      	adds	r7, r5, #5
 80044de:	e00e      	b.n	80044fe <d_print_comp_inner+0x1e06>
 80044e0:	001a      	movs	r2, r3
 80044e2:	3301      	adds	r3, #1
 80044e4:	2180      	movs	r1, #128	; 0x80
 80044e6:	0049      	lsls	r1, r1, #1
 80044e8:	5063      	str	r3, [r4, r1]
 80044ea:	54a6      	strb	r6, [r4, r2]
 80044ec:	2282      	movs	r2, #130	; 0x82
 80044ee:	0052      	lsls	r2, r2, #1
 80044f0:	54a6      	strb	r6, [r4, r2]
 80044f2:	42af      	cmp	r7, r5
 80044f4:	d101      	bne.n	80044fa <d_print_comp_inner+0x1e02>
 80044f6:	f7fe f926 	bl	8002746 <d_print_comp_inner+0x4e>
 80044fa:	782e      	ldrb	r6, [r5, #0]
 80044fc:	3501      	adds	r5, #1
 80044fe:	2bff      	cmp	r3, #255	; 0xff
 8004500:	d1ee      	bne.n	80044e0 <d_print_comp_inner+0x1de8>
 8004502:	4652      	mov	r2, sl
 8004504:	54e2      	strb	r2, [r4, r3]
 8004506:	464b      	mov	r3, r9
 8004508:	58e2      	ldr	r2, [r4, r3]
 800450a:	4643      	mov	r3, r8
 800450c:	21ff      	movs	r1, #255	; 0xff
 800450e:	58e3      	ldr	r3, [r4, r3]
 8004510:	0020      	movs	r0, r4
 8004512:	4798      	blx	r3
 8004514:	2294      	movs	r2, #148	; 0x94
 8004516:	0052      	lsls	r2, r2, #1
 8004518:	58a3      	ldr	r3, [r4, r2]
 800451a:	3301      	adds	r3, #1
 800451c:	50a3      	str	r3, [r4, r2]
 800451e:	2301      	movs	r3, #1
 8004520:	2200      	movs	r2, #0
 8004522:	e7df      	b.n	80044e4 <d_print_comp_inner+0x1dec>
 8004524:	2700      	movs	r7, #0
 8004526:	f7fe f9c7 	bl	80028b8 <d_print_comp_inner+0x1c0>
 800452a:	0029      	movs	r1, r5
 800452c:	f7fb ffc8 	bl	80004c0 <d_lookup_template_argument>
 8004530:	1e02      	subs	r2, r0, #0
 8004532:	d101      	bne.n	8004538 <d_print_comp_inner+0x1e40>
 8004534:	f7fe f903 	bl	800273e <d_print_comp_inner+0x46>
 8004538:	7803      	ldrb	r3, [r0, #0]
 800453a:	2b2f      	cmp	r3, #47	; 0x2f
 800453c:	d101      	bne.n	8004542 <d_print_comp_inner+0x1e4a>
 800453e:	f7fe f8f2 	bl	8002726 <d_print_comp_inner+0x2e>
 8004542:	2588      	movs	r5, #136	; 0x88
 8004544:	006d      	lsls	r5, r5, #1
 8004546:	5966      	ldr	r6, [r4, r5]
 8004548:	2111      	movs	r1, #17
 800454a:	6833      	ldr	r3, [r6, #0]
 800454c:	0020      	movs	r0, r4
 800454e:	5163      	str	r3, [r4, r5]
 8004550:	f000 fdb8 	bl	80050c4 <d_print_comp>
 8004554:	5166      	str	r6, [r4, r5]
 8004556:	f7fe f8f6 	bl	8002746 <d_print_comp_inner+0x4e>
 800455a:	68ea      	ldr	r2, [r5, #12]
 800455c:	4923      	ldr	r1, [pc, #140]	; (80045ec <d_print_comp_inner+0x1ef4>)
 800455e:	3201      	adds	r2, #1
 8004560:	a806      	add	r0, sp, #24
 8004562:	f007 feef 	bl	800c344 <siprintf>
 8004566:	a806      	add	r0, sp, #24
 8004568:	f002 fa38 	bl	80069dc <strlen>
 800456c:	2800      	cmp	r0, #0
 800456e:	d101      	bne.n	8004574 <d_print_comp_inner+0x1e7c>
 8004570:	f7fe f8e9 	bl	8002746 <d_print_comp_inner+0x4e>
 8004574:	2200      	movs	r2, #0
 8004576:	4643      	mov	r3, r8
 8004578:	4692      	mov	sl, r2
 800457a:	320d      	adds	r2, #13
 800457c:	32ff      	adds	r2, #255	; 0xff
 800457e:	4691      	mov	r9, r2
 8004580:	ad06      	add	r5, sp, #24
 8004582:	3a04      	subs	r2, #4
 8004584:	4690      	mov	r8, r2
 8004586:	58e3      	ldr	r3, [r4, r3]
 8004588:	182f      	adds	r7, r5, r0
 800458a:	e00d      	b.n	80045a8 <d_print_comp_inner+0x1eb0>
 800458c:	001a      	movs	r2, r3
 800458e:	3301      	adds	r3, #1
 8004590:	2180      	movs	r1, #128	; 0x80
 8004592:	0049      	lsls	r1, r1, #1
 8004594:	5063      	str	r3, [r4, r1]
 8004596:	54a6      	strb	r6, [r4, r2]
 8004598:	2282      	movs	r2, #130	; 0x82
 800459a:	3501      	adds	r5, #1
 800459c:	0052      	lsls	r2, r2, #1
 800459e:	54a6      	strb	r6, [r4, r2]
 80045a0:	42bd      	cmp	r5, r7
 80045a2:	d101      	bne.n	80045a8 <d_print_comp_inner+0x1eb0>
 80045a4:	f7fe f8cf 	bl	8002746 <d_print_comp_inner+0x4e>
 80045a8:	782e      	ldrb	r6, [r5, #0]
 80045aa:	2bff      	cmp	r3, #255	; 0xff
 80045ac:	d1ee      	bne.n	800458c <d_print_comp_inner+0x1e94>
 80045ae:	4652      	mov	r2, sl
 80045b0:	54e2      	strb	r2, [r4, r3]
 80045b2:	464b      	mov	r3, r9
 80045b4:	58e2      	ldr	r2, [r4, r3]
 80045b6:	4643      	mov	r3, r8
 80045b8:	21ff      	movs	r1, #255	; 0xff
 80045ba:	58e3      	ldr	r3, [r4, r3]
 80045bc:	0020      	movs	r0, r4
 80045be:	4798      	blx	r3
 80045c0:	2294      	movs	r2, #148	; 0x94
 80045c2:	0052      	lsls	r2, r2, #1
 80045c4:	58a3      	ldr	r3, [r4, r2]
 80045c6:	3301      	adds	r3, #1
 80045c8:	50a3      	str	r3, [r4, r2]
 80045ca:	2301      	movs	r3, #1
 80045cc:	2200      	movs	r2, #0
 80045ce:	e7df      	b.n	8004590 <d_print_comp_inner+0x1e98>
 80045d0:	2700      	movs	r7, #0
 80045d2:	f7fe f99d 	bl	8002910 <d_print_comp_inner+0x218>
 80045d6:	3950      	subs	r1, #80	; 0x50
 80045d8:	2901      	cmp	r1, #1
 80045da:	d800      	bhi.n	80045de <d_print_comp_inner+0x1ee6>
 80045dc:	e379      	b.n	8004cd2 <d_print_comp_inner+0x25da>
 80045de:	4690      	mov	r8, r2
 80045e0:	9f01      	ldr	r7, [sp, #4]
 80045e2:	9d02      	ldr	r5, [sp, #8]
 80045e4:	9e03      	ldr	r6, [sp, #12]
 80045e6:	f7fe ff36 	bl	8003456 <d_print_comp_inner+0xd5e>
 80045ea:	46c0      	nop			; (mov r8, r8)
 80045ec:	0800fbcc 	.word	0x0800fbcc
 80045f0:	0800fe28 	.word	0x0800fe28
 80045f4:	0800fe58 	.word	0x0800fe58
 80045f8:	0800fdd5 	.word	0x0800fdd5
 80045fc:	2111      	movs	r1, #17
 80045fe:	0020      	movs	r0, r4
 8004600:	68d2      	ldr	r2, [r2, #12]
 8004602:	f000 fd5f 	bl	80050c4 <d_print_comp>
 8004606:	23a4      	movs	r3, #164	; 0xa4
 8004608:	005b      	lsls	r3, r3, #1
 800460a:	58e3      	ldr	r3, [r4, r3]
 800460c:	2b00      	cmp	r3, #0
 800460e:	d003      	beq.n	8004618 <d_print_comp_inner+0x1f20>
 8004610:	2388      	movs	r3, #136	; 0x88
 8004612:	9a06      	ldr	r2, [sp, #24]
 8004614:	005b      	lsls	r3, r3, #1
 8004616:	50e2      	str	r2, [r4, r3]
 8004618:	2382      	movs	r3, #130	; 0x82
 800461a:	005b      	lsls	r3, r3, #1
 800461c:	5ce3      	ldrb	r3, [r4, r3]
 800461e:	2b3c      	cmp	r3, #60	; 0x3c
 8004620:	d101      	bne.n	8004626 <d_print_comp_inner+0x1f2e>
 8004622:	f000 fc6d 	bl	8004f00 <d_print_comp_inner+0x2808>
 8004626:	2380      	movs	r3, #128	; 0x80
 8004628:	005b      	lsls	r3, r3, #1
 800462a:	58e3      	ldr	r3, [r4, r3]
 800462c:	2bff      	cmp	r3, #255	; 0xff
 800462e:	d101      	bne.n	8004634 <d_print_comp_inner+0x1f3c>
 8004630:	f000 fc54 	bl	8004edc <d_print_comp_inner+0x27e4>
 8004634:	2280      	movs	r2, #128	; 0x80
 8004636:	2682      	movs	r6, #130	; 0x82
 8004638:	1c59      	adds	r1, r3, #1
 800463a:	0052      	lsls	r2, r2, #1
 800463c:	50a1      	str	r1, [r4, r2]
 800463e:	0076      	lsls	r6, r6, #1
 8004640:	3ac4      	subs	r2, #196	; 0xc4
 8004642:	54e2      	strb	r2, [r4, r3]
 8004644:	55a2      	strb	r2, [r4, r6]
 8004646:	68eb      	ldr	r3, [r5, #12]
 8004648:	2111      	movs	r1, #17
 800464a:	691a      	ldr	r2, [r3, #16]
 800464c:	0020      	movs	r0, r4
 800464e:	f000 fd39 	bl	80050c4 <d_print_comp>
 8004652:	5da3      	ldrb	r3, [r4, r6]
 8004654:	2b3e      	cmp	r3, #62	; 0x3e
 8004656:	d101      	bne.n	800465c <d_print_comp_inner+0x1f64>
 8004658:	f000 fc3a 	bl	8004ed0 <d_print_comp_inner+0x27d8>
 800465c:	2380      	movs	r3, #128	; 0x80
 800465e:	005b      	lsls	r3, r3, #1
 8004660:	58e3      	ldr	r3, [r4, r3]
 8004662:	2bff      	cmp	r3, #255	; 0xff
 8004664:	d101      	bne.n	800466a <d_print_comp_inner+0x1f72>
 8004666:	f000 fc21 	bl	8004eac <d_print_comp_inner+0x27b4>
 800466a:	2280      	movs	r2, #128	; 0x80
 800466c:	1c59      	adds	r1, r3, #1
 800466e:	0052      	lsls	r2, r2, #1
 8004670:	50a1      	str	r1, [r4, r2]
 8004672:	3ac2      	subs	r2, #194	; 0xc2
 8004674:	54e2      	strb	r2, [r4, r3]
 8004676:	2382      	movs	r3, #130	; 0x82
 8004678:	005b      	lsls	r3, r3, #1
 800467a:	54e2      	strb	r2, [r4, r3]
 800467c:	f7fe f863 	bl	8002746 <d_print_comp_inner+0x4e>
 8004680:	68fb      	ldr	r3, [r7, #12]
 8004682:	681b      	ldr	r3, [r3, #0]
 8004684:	781a      	ldrb	r2, [r3, #0]
 8004686:	4698      	mov	r8, r3
 8004688:	2a61      	cmp	r2, #97	; 0x61
 800468a:	d000      	beq.n	800468e <d_print_comp_inner+0x1f96>
 800468c:	e0b6      	b.n	80047fc <d_print_comp_inner+0x2104>
 800468e:	785b      	ldrb	r3, [r3, #1]
 8004690:	2b64      	cmp	r3, #100	; 0x64
 8004692:	d000      	beq.n	8004696 <d_print_comp_inner+0x1f9e>
 8004694:	e0b2      	b.n	80047fc <d_print_comp_inner+0x2104>
 8004696:	4643      	mov	r3, r8
 8004698:	789b      	ldrb	r3, [r3, #2]
 800469a:	2b00      	cmp	r3, #0
 800469c:	d000      	beq.n	80046a0 <d_print_comp_inner+0x1fa8>
 800469e:	e0ad      	b.n	80047fc <d_print_comp_inner+0x2104>
 80046a0:	782b      	ldrb	r3, [r5, #0]
 80046a2:	2b03      	cmp	r3, #3
 80046a4:	d101      	bne.n	80046aa <d_print_comp_inner+0x1fb2>
 80046a6:	f000 fc5a 	bl	8004f5e <d_print_comp_inner+0x2866>
 80046aa:	2b39      	cmp	r3, #57	; 0x39
 80046ac:	d101      	bne.n	80046b2 <d_print_comp_inner+0x1fba>
 80046ae:	f000 fc65 	bl	8004f7c <d_print_comp_inner+0x2884>
 80046b2:	2a73      	cmp	r2, #115	; 0x73
 80046b4:	d113      	bne.n	80046de <d_print_comp_inner+0x1fe6>
 80046b6:	4643      	mov	r3, r8
 80046b8:	785b      	ldrb	r3, [r3, #1]
 80046ba:	2b5a      	cmp	r3, #90	; 0x5a
 80046bc:	d145      	bne.n	800474a <d_print_comp_inner+0x2052>
 80046be:	4643      	mov	r3, r8
 80046c0:	789b      	ldrb	r3, [r3, #2]
 80046c2:	2b00      	cmp	r3, #0
 80046c4:	d141      	bne.n	800474a <d_print_comp_inner+0x2052>
 80046c6:	0029      	movs	r1, r5
 80046c8:	0020      	movs	r0, r4
 80046ca:	f7fb ff19 	bl	8000500 <d_find_pack>
 80046ce:	f7fb fe33 	bl	8000338 <d_pack_length>
 80046d2:	0001      	movs	r1, r0
 80046d4:	0020      	movs	r0, r4
 80046d6:	f7fb ffc1 	bl	800065c <d_append_num>
 80046da:	f7fe f834 	bl	8002746 <d_print_comp_inner+0x4e>
 80046de:	003a      	movs	r2, r7
 80046e0:	2111      	movs	r1, #17
 80046e2:	0020      	movs	r0, r4
 80046e4:	f001 fc00 	bl	8005ee8 <d_print_expr_op>
 80046e8:	4643      	mov	r3, r8
 80046ea:	781a      	ldrb	r2, [r3, #0]
 80046ec:	2a67      	cmp	r2, #103	; 0x67
 80046ee:	d10d      	bne.n	800470c <d_print_comp_inner+0x2014>
 80046f0:	785b      	ldrb	r3, [r3, #1]
 80046f2:	2b73      	cmp	r3, #115	; 0x73
 80046f4:	d10a      	bne.n	800470c <d_print_comp_inner+0x2014>
 80046f6:	4643      	mov	r3, r8
 80046f8:	789b      	ldrb	r3, [r3, #2]
 80046fa:	2b00      	cmp	r3, #0
 80046fc:	d106      	bne.n	800470c <d_print_comp_inner+0x2014>
 80046fe:	002a      	movs	r2, r5
 8004700:	2111      	movs	r1, #17
 8004702:	0020      	movs	r0, r4
 8004704:	f000 fcde 	bl	80050c4 <d_print_comp>
 8004708:	f7fe f81d 	bl	8002746 <d_print_comp_inner+0x4e>
 800470c:	2a73      	cmp	r2, #115	; 0x73
 800470e:	d001      	beq.n	8004714 <d_print_comp_inner+0x201c>
 8004710:	f7fe fbc7 	bl	8002ea2 <d_print_comp_inner+0x7aa>
 8004714:	4643      	mov	r3, r8
 8004716:	785b      	ldrb	r3, [r3, #1]
 8004718:	2b74      	cmp	r3, #116	; 0x74
 800471a:	d001      	beq.n	8004720 <d_print_comp_inner+0x2028>
 800471c:	f7fe fbc1 	bl	8002ea2 <d_print_comp_inner+0x7aa>
 8004720:	4643      	mov	r3, r8
 8004722:	789b      	ldrb	r3, [r3, #2]
 8004724:	2b00      	cmp	r3, #0
 8004726:	d001      	beq.n	800472c <d_print_comp_inner+0x2034>
 8004728:	f7fe fbbb 	bl	8002ea2 <d_print_comp_inner+0x7aa>
 800472c:	0020      	movs	r0, r4
 800472e:	2128      	movs	r1, #40	; 0x28
 8004730:	f7fb fea4 	bl	800047c <d_append_char>
 8004734:	0020      	movs	r0, r4
 8004736:	002a      	movs	r2, r5
 8004738:	2111      	movs	r1, #17
 800473a:	f000 fcc3 	bl	80050c4 <d_print_comp>
 800473e:	2129      	movs	r1, #41	; 0x29
 8004740:	0020      	movs	r0, r4
 8004742:	f7fb fe9b 	bl	800047c <d_append_char>
 8004746:	f7fd fffe 	bl	8002746 <d_print_comp_inner+0x4e>
 800474a:	2a73      	cmp	r2, #115	; 0x73
 800474c:	d1c7      	bne.n	80046de <d_print_comp_inner+0x1fe6>
 800474e:	4643      	mov	r3, r8
 8004750:	785b      	ldrb	r3, [r3, #1]
 8004752:	2b50      	cmp	r3, #80	; 0x50
 8004754:	d1c3      	bne.n	80046de <d_print_comp_inner+0x1fe6>
 8004756:	4643      	mov	r3, r8
 8004758:	789b      	ldrb	r3, [r3, #2]
 800475a:	2600      	movs	r6, #0
 800475c:	2b00      	cmp	r3, #0
 800475e:	d005      	beq.n	800476c <d_print_comp_inner+0x2074>
 8004760:	e7bd      	b.n	80046de <d_print_comp_inner+0x1fe6>
 8004762:	3601      	adds	r6, #1
 8004764:	692d      	ldr	r5, [r5, #16]
 8004766:	2d00      	cmp	r5, #0
 8004768:	d100      	bne.n	800476c <d_print_comp_inner+0x2074>
 800476a:	e2f1      	b.n	8004d50 <d_print_comp_inner+0x2658>
 800476c:	782b      	ldrb	r3, [r5, #0]
 800476e:	2b2f      	cmp	r3, #47	; 0x2f
 8004770:	d000      	beq.n	8004774 <d_print_comp_inner+0x207c>
 8004772:	e2ed      	b.n	8004d50 <d_print_comp_inner+0x2658>
 8004774:	68eb      	ldr	r3, [r5, #12]
 8004776:	2b00      	cmp	r3, #0
 8004778:	d100      	bne.n	800477c <d_print_comp_inner+0x2084>
 800477a:	e2e9      	b.n	8004d50 <d_print_comp_inner+0x2658>
 800477c:	781a      	ldrb	r2, [r3, #0]
 800477e:	2a4c      	cmp	r2, #76	; 0x4c
 8004780:	d1ef      	bne.n	8004762 <d_print_comp_inner+0x206a>
 8004782:	68d9      	ldr	r1, [r3, #12]
 8004784:	0020      	movs	r0, r4
 8004786:	f7fb febb 	bl	8000500 <d_find_pack>
 800478a:	2300      	movs	r3, #0
 800478c:	2800      	cmp	r0, #0
 800478e:	d107      	bne.n	80047a0 <d_print_comp_inner+0x20a8>
 8004790:	e009      	b.n	80047a6 <d_print_comp_inner+0x20ae>
 8004792:	68c2      	ldr	r2, [r0, #12]
 8004794:	2a00      	cmp	r2, #0
 8004796:	d006      	beq.n	80047a6 <d_print_comp_inner+0x20ae>
 8004798:	6900      	ldr	r0, [r0, #16]
 800479a:	3301      	adds	r3, #1
 800479c:	2800      	cmp	r0, #0
 800479e:	d002      	beq.n	80047a6 <d_print_comp_inner+0x20ae>
 80047a0:	7802      	ldrb	r2, [r0, #0]
 80047a2:	2a2f      	cmp	r2, #47	; 0x2f
 80047a4:	d0f5      	beq.n	8004792 <d_print_comp_inner+0x209a>
 80047a6:	18f6      	adds	r6, r6, r3
 80047a8:	e7dc      	b.n	8004764 <d_print_comp_inner+0x206c>
 80047aa:	002a      	movs	r2, r5
 80047ac:	2111      	movs	r1, #17
 80047ae:	0020      	movs	r0, r4
 80047b0:	f000 fcb6 	bl	8005120 <d_print_mod>
 80047b4:	f7fe f86b 	bl	800288e <d_print_comp_inner+0x196>
 80047b8:	2bff      	cmp	r3, #255	; 0xff
 80047ba:	d100      	bne.n	80047be <d_print_comp_inner+0x20c6>
 80047bc:	e3a6      	b.n	8004f0c <d_print_comp_inner+0x2814>
 80047be:	2280      	movs	r2, #128	; 0x80
 80047c0:	1c59      	adds	r1, r3, #1
 80047c2:	0052      	lsls	r2, r2, #1
 80047c4:	50a1      	str	r1, [r4, r2]
 80047c6:	3ae0      	subs	r2, #224	; 0xe0
 80047c8:	54e2      	strb	r2, [r4, r3]
 80047ca:	2382      	movs	r3, #130	; 0x82
 80047cc:	005b      	lsls	r3, r3, #1
 80047ce:	54e2      	strb	r2, [r4, r3]
 80047d0:	e435      	b.n	800403e <d_print_comp_inner+0x1946>
 80047d2:	49ec      	ldr	r1, [pc, #944]	; (8004b84 <d_print_comp_inner+0x248c>)
 80047d4:	f7fb fed8 	bl	8000588 <d_append_string>
 80047d8:	f7fe fd05 	bl	80031e6 <d_print_comp_inner+0xaee>
 80047dc:	33f1      	adds	r3, #241	; 0xf1
 80047de:	58e0      	ldr	r0, [r4, r3]
 80047e0:	68d3      	ldr	r3, [r2, #12]
 80047e2:	0015      	movs	r5, r2
 80047e4:	4698      	mov	r8, r3
 80047e6:	f7fe f876 	bl	80028d6 <d_print_comp_inner+0x1de>
 80047ea:	238a      	movs	r3, #138	; 0x8a
 80047ec:	4652      	mov	r2, sl
 80047ee:	005b      	lsls	r3, r3, #1
 80047f0:	50e2      	str	r2, [r4, r3]
 80047f2:	2201      	movs	r2, #1
 80047f4:	3304      	adds	r3, #4
 80047f6:	50e2      	str	r2, [r4, r3]
 80047f8:	f7fd ffa5 	bl	8002746 <d_print_comp_inner+0x4e>
 80047fc:	782b      	ldrb	r3, [r5, #0]
 80047fe:	e754      	b.n	80046aa <d_print_comp_inner+0x1fb2>
 8004800:	68eb      	ldr	r3, [r5, #12]
 8004802:	2700      	movs	r7, #0
 8004804:	4698      	mov	r8, r3
 8004806:	f7fe f866 	bl	80028d6 <d_print_comp_inner+0x1de>
 800480a:	2111      	movs	r1, #17
 800480c:	0020      	movs	r0, r4
 800480e:	68ea      	ldr	r2, [r5, #12]
 8004810:	f000 fc58 	bl	80050c4 <d_print_comp>
 8004814:	f7fd ff97 	bl	8002746 <d_print_comp_inner+0x4e>
 8004818:	2300      	movs	r3, #0
 800481a:	4698      	mov	r8, r3
 800481c:	55a3      	strb	r3, [r4, r6]
 800481e:	330d      	adds	r3, #13
 8004820:	33ff      	adds	r3, #255	; 0xff
 8004822:	58e2      	ldr	r2, [r4, r3]
 8004824:	3b04      	subs	r3, #4
 8004826:	0031      	movs	r1, r6
 8004828:	58e3      	ldr	r3, [r4, r3]
 800482a:	0020      	movs	r0, r4
 800482c:	4798      	blx	r3
 800482e:	2294      	movs	r2, #148	; 0x94
 8004830:	4643      	mov	r3, r8
 8004832:	0052      	lsls	r2, r2, #1
 8004834:	51e3      	str	r3, [r4, r7]
 8004836:	58a3      	ldr	r3, [r4, r2]
 8004838:	2600      	movs	r6, #0
 800483a:	3301      	adds	r3, #1
 800483c:	50a3      	str	r3, [r4, r2]
 800483e:	f7fd ffe1 	bl	8002804 <d_print_comp_inner+0x10c>
 8004842:	238a      	movs	r3, #138	; 0x8a
 8004844:	005b      	lsls	r3, r3, #1
 8004846:	58e0      	ldr	r0, [r4, r3]
 8004848:	68d3      	ldr	r3, [r2, #12]
 800484a:	0015      	movs	r5, r2
 800484c:	4698      	mov	r8, r3
 800484e:	f7fe f842 	bl	80028d6 <d_print_comp_inner+0x1de>
 8004852:	2200      	movs	r2, #0
 8004854:	54e2      	strb	r2, [r4, r3]
 8004856:	2386      	movs	r3, #134	; 0x86
 8004858:	005b      	lsls	r3, r3, #1
 800485a:	58e2      	ldr	r2, [r4, r3]
 800485c:	3b04      	subs	r3, #4
 800485e:	21ff      	movs	r1, #255	; 0xff
 8004860:	58e3      	ldr	r3, [r4, r3]
 8004862:	0020      	movs	r0, r4
 8004864:	4798      	blx	r3
 8004866:	2294      	movs	r2, #148	; 0x94
 8004868:	0052      	lsls	r2, r2, #1
 800486a:	58a3      	ldr	r3, [r4, r2]
 800486c:	2101      	movs	r1, #1
 800486e:	3301      	adds	r3, #1
 8004870:	50a3      	str	r3, [r4, r2]
 8004872:	2300      	movs	r3, #0
 8004874:	f7ff fbd2 	bl	800401c <d_print_comp_inner+0x1924>
 8004878:	2200      	movs	r2, #0
 800487a:	54e2      	strb	r2, [r4, r3]
 800487c:	2386      	movs	r3, #134	; 0x86
 800487e:	005b      	lsls	r3, r3, #1
 8004880:	58e2      	ldr	r2, [r4, r3]
 8004882:	3b04      	subs	r3, #4
 8004884:	21ff      	movs	r1, #255	; 0xff
 8004886:	58e3      	ldr	r3, [r4, r3]
 8004888:	0020      	movs	r0, r4
 800488a:	4798      	blx	r3
 800488c:	2294      	movs	r2, #148	; 0x94
 800488e:	0052      	lsls	r2, r2, #1
 8004890:	58a3      	ldr	r3, [r4, r2]
 8004892:	2101      	movs	r1, #1
 8004894:	3301      	adds	r3, #1
 8004896:	50a3      	str	r3, [r4, r2]
 8004898:	2300      	movs	r3, #0
 800489a:	f7ff fb55 	bl	8003f48 <d_print_comp_inner+0x1850>
 800489e:	2200      	movs	r2, #0
 80048a0:	54c2      	strb	r2, [r0, r3]
 80048a2:	2386      	movs	r3, #134	; 0x86
 80048a4:	005b      	lsls	r3, r3, #1
 80048a6:	58c2      	ldr	r2, [r0, r3]
 80048a8:	3b04      	subs	r3, #4
 80048aa:	21ff      	movs	r1, #255	; 0xff
 80048ac:	58c3      	ldr	r3, [r0, r3]
 80048ae:	4798      	blx	r3
 80048b0:	2294      	movs	r2, #148	; 0x94
 80048b2:	0052      	lsls	r2, r2, #1
 80048b4:	58a3      	ldr	r3, [r4, r2]
 80048b6:	2101      	movs	r1, #1
 80048b8:	3301      	adds	r3, #1
 80048ba:	50a3      	str	r3, [r4, r2]
 80048bc:	2300      	movs	r3, #0
 80048be:	f7ff fa55 	bl	8003d6c <d_print_comp_inner+0x1674>
 80048c2:	0020      	movs	r0, r4
 80048c4:	49b0      	ldr	r1, [pc, #704]	; (8004b88 <d_print_comp_inner+0x2490>)
 80048c6:	f7fb fe5f 	bl	8000588 <d_append_string>
 80048ca:	693a      	ldr	r2, [r7, #16]
 80048cc:	49af      	ldr	r1, [pc, #700]	; (8004b8c <d_print_comp_inner+0x2494>)
 80048ce:	3201      	adds	r2, #1
 80048d0:	a806      	add	r0, sp, #24
 80048d2:	f007 fd37 	bl	800c344 <siprintf>
 80048d6:	a806      	add	r0, sp, #24
 80048d8:	f002 f880 	bl	80069dc <strlen>
 80048dc:	2800      	cmp	r0, #0
 80048de:	d030      	beq.n	8004942 <d_print_comp_inner+0x224a>
 80048e0:	2200      	movs	r2, #0
 80048e2:	4680      	mov	r8, r0
 80048e4:	4693      	mov	fp, r2
 80048e6:	320d      	adds	r2, #13
 80048e8:	32ff      	adds	r2, #255	; 0xff
 80048ea:	ad06      	add	r5, sp, #24
 80048ec:	44a8      	add	r8, r5
 80048ee:	2380      	movs	r3, #128	; 0x80
 80048f0:	4692      	mov	sl, r2
 80048f2:	3a04      	subs	r2, #4
 80048f4:	4691      	mov	r9, r2
 80048f6:	4642      	mov	r2, r8
 80048f8:	005b      	lsls	r3, r3, #1
 80048fa:	46b8      	mov	r8, r7
 80048fc:	58e3      	ldr	r3, [r4, r3]
 80048fe:	0017      	movs	r7, r2
 8004900:	e00a      	b.n	8004918 <d_print_comp_inner+0x2220>
 8004902:	0019      	movs	r1, r3
 8004904:	3301      	adds	r3, #1
 8004906:	2280      	movs	r2, #128	; 0x80
 8004908:	0052      	lsls	r2, r2, #1
 800490a:	50a3      	str	r3, [r4, r2]
 800490c:	3501      	adds	r5, #1
 800490e:	3204      	adds	r2, #4
 8004910:	5466      	strb	r6, [r4, r1]
 8004912:	54a6      	strb	r6, [r4, r2]
 8004914:	42af      	cmp	r7, r5
 8004916:	d013      	beq.n	8004940 <d_print_comp_inner+0x2248>
 8004918:	782e      	ldrb	r6, [r5, #0]
 800491a:	2bff      	cmp	r3, #255	; 0xff
 800491c:	d1f1      	bne.n	8004902 <d_print_comp_inner+0x220a>
 800491e:	465a      	mov	r2, fp
 8004920:	54e2      	strb	r2, [r4, r3]
 8004922:	4653      	mov	r3, sl
 8004924:	58e2      	ldr	r2, [r4, r3]
 8004926:	464b      	mov	r3, r9
 8004928:	21ff      	movs	r1, #255	; 0xff
 800492a:	58e3      	ldr	r3, [r4, r3]
 800492c:	0020      	movs	r0, r4
 800492e:	4798      	blx	r3
 8004930:	2294      	movs	r2, #148	; 0x94
 8004932:	0052      	lsls	r2, r2, #1
 8004934:	58a3      	ldr	r3, [r4, r2]
 8004936:	2100      	movs	r1, #0
 8004938:	3301      	adds	r3, #1
 800493a:	50a3      	str	r3, [r4, r2]
 800493c:	2301      	movs	r3, #1
 800493e:	e7e2      	b.n	8004906 <d_print_comp_inner+0x220e>
 8004940:	4647      	mov	r7, r8
 8004942:	0020      	movs	r0, r4
 8004944:	4992      	ldr	r1, [pc, #584]	; (8004b90 <d_print_comp_inner+0x2498>)
 8004946:	f7fb fe1f 	bl	8000588 <d_append_string>
 800494a:	68ff      	ldr	r7, [r7, #12]
 800494c:	f7fe f81f 	bl	800298e <d_print_comp_inner+0x296>
 8004950:	2200      	movs	r2, #0
 8004952:	54e2      	strb	r2, [r4, r3]
 8004954:	2386      	movs	r3, #134	; 0x86
 8004956:	005b      	lsls	r3, r3, #1
 8004958:	58e2      	ldr	r2, [r4, r3]
 800495a:	3b04      	subs	r3, #4
 800495c:	21ff      	movs	r1, #255	; 0xff
 800495e:	58e3      	ldr	r3, [r4, r3]
 8004960:	0020      	movs	r0, r4
 8004962:	4798      	blx	r3
 8004964:	2294      	movs	r2, #148	; 0x94
 8004966:	0052      	lsls	r2, r2, #1
 8004968:	58a3      	ldr	r3, [r4, r2]
 800496a:	2101      	movs	r1, #1
 800496c:	3301      	adds	r3, #1
 800496e:	50a3      	str	r3, [r4, r2]
 8004970:	2300      	movs	r3, #0
 8004972:	e4bc      	b.n	80042ee <d_print_comp_inner+0x1bf6>
 8004974:	2200      	movs	r2, #0
 8004976:	54e2      	strb	r2, [r4, r3]
 8004978:	2386      	movs	r3, #134	; 0x86
 800497a:	005b      	lsls	r3, r3, #1
 800497c:	58e2      	ldr	r2, [r4, r3]
 800497e:	3b04      	subs	r3, #4
 8004980:	21ff      	movs	r1, #255	; 0xff
 8004982:	58e3      	ldr	r3, [r4, r3]
 8004984:	0020      	movs	r0, r4
 8004986:	4798      	blx	r3
 8004988:	2294      	movs	r2, #148	; 0x94
 800498a:	0052      	lsls	r2, r2, #1
 800498c:	58a3      	ldr	r3, [r4, r2]
 800498e:	2101      	movs	r1, #1
 8004990:	3301      	adds	r3, #1
 8004992:	50a3      	str	r3, [r4, r2]
 8004994:	2300      	movs	r3, #0
 8004996:	e425      	b.n	80041e4 <d_print_comp_inner+0x1aec>
 8004998:	2200      	movs	r2, #0
 800499a:	54c2      	strb	r2, [r0, r3]
 800499c:	2386      	movs	r3, #134	; 0x86
 800499e:	005b      	lsls	r3, r3, #1
 80049a0:	58c2      	ldr	r2, [r0, r3]
 80049a2:	3b04      	subs	r3, #4
 80049a4:	21ff      	movs	r1, #255	; 0xff
 80049a6:	58c3      	ldr	r3, [r0, r3]
 80049a8:	4798      	blx	r3
 80049aa:	2294      	movs	r2, #148	; 0x94
 80049ac:	0052      	lsls	r2, r2, #1
 80049ae:	58a3      	ldr	r3, [r4, r2]
 80049b0:	2101      	movs	r1, #1
 80049b2:	3301      	adds	r3, #1
 80049b4:	50a3      	str	r3, [r4, r2]
 80049b6:	2300      	movs	r3, #0
 80049b8:	f7fe fbc8 	bl	800314c <d_print_comp_inner+0xa54>
 80049bc:	2200      	movs	r2, #0
 80049be:	54e2      	strb	r2, [r4, r3]
 80049c0:	2386      	movs	r3, #134	; 0x86
 80049c2:	005b      	lsls	r3, r3, #1
 80049c4:	58e2      	ldr	r2, [r4, r3]
 80049c6:	3b04      	subs	r3, #4
 80049c8:	21ff      	movs	r1, #255	; 0xff
 80049ca:	58e3      	ldr	r3, [r4, r3]
 80049cc:	0020      	movs	r0, r4
 80049ce:	4798      	blx	r3
 80049d0:	2294      	movs	r2, #148	; 0x94
 80049d2:	0052      	lsls	r2, r2, #1
 80049d4:	58a3      	ldr	r3, [r4, r2]
 80049d6:	2101      	movs	r1, #1
 80049d8:	3301      	adds	r3, #1
 80049da:	50a3      	str	r3, [r4, r2]
 80049dc:	2300      	movs	r3, #0
 80049de:	f7ff fb00 	bl	8003fe2 <d_print_comp_inner+0x18ea>
 80049e2:	2200      	movs	r2, #0
 80049e4:	54e2      	strb	r2, [r4, r3]
 80049e6:	2386      	movs	r3, #134	; 0x86
 80049e8:	005b      	lsls	r3, r3, #1
 80049ea:	58e2      	ldr	r2, [r4, r3]
 80049ec:	3b04      	subs	r3, #4
 80049ee:	21ff      	movs	r1, #255	; 0xff
 80049f0:	58e3      	ldr	r3, [r4, r3]
 80049f2:	0020      	movs	r0, r4
 80049f4:	4798      	blx	r3
 80049f6:	2294      	movs	r2, #148	; 0x94
 80049f8:	0052      	lsls	r2, r2, #1
 80049fa:	58a3      	ldr	r3, [r4, r2]
 80049fc:	2101      	movs	r1, #1
 80049fe:	3301      	adds	r3, #1
 8004a00:	50a3      	str	r3, [r4, r2]
 8004a02:	2300      	movs	r3, #0
 8004a04:	f7ff f933 	bl	8003c6e <d_print_comp_inner+0x1576>
 8004a08:	2200      	movs	r2, #0
 8004a0a:	54e2      	strb	r2, [r4, r3]
 8004a0c:	2386      	movs	r3, #134	; 0x86
 8004a0e:	005b      	lsls	r3, r3, #1
 8004a10:	58e2      	ldr	r2, [r4, r3]
 8004a12:	3b04      	subs	r3, #4
 8004a14:	58e3      	ldr	r3, [r4, r3]
 8004a16:	21ff      	movs	r1, #255	; 0xff
 8004a18:	0020      	movs	r0, r4
 8004a1a:	4798      	blx	r3
 8004a1c:	2294      	movs	r2, #148	; 0x94
 8004a1e:	0052      	lsls	r2, r2, #1
 8004a20:	58a3      	ldr	r3, [r4, r2]
 8004a22:	3301      	adds	r3, #1
 8004a24:	50a3      	str	r3, [r4, r2]
 8004a26:	3a28      	subs	r2, #40	; 0x28
 8004a28:	2300      	movs	r3, #0
 8004a2a:	3aff      	subs	r2, #255	; 0xff
 8004a2c:	f7ff f90c 	bl	8003c48 <d_print_comp_inner+0x1550>
 8004a30:	2200      	movs	r2, #0
 8004a32:	54e2      	strb	r2, [r4, r3]
 8004a34:	2386      	movs	r3, #134	; 0x86
 8004a36:	005b      	lsls	r3, r3, #1
 8004a38:	58e2      	ldr	r2, [r4, r3]
 8004a3a:	3b04      	subs	r3, #4
 8004a3c:	21ff      	movs	r1, #255	; 0xff
 8004a3e:	58e3      	ldr	r3, [r4, r3]
 8004a40:	0020      	movs	r0, r4
 8004a42:	4798      	blx	r3
 8004a44:	2294      	movs	r2, #148	; 0x94
 8004a46:	0052      	lsls	r2, r2, #1
 8004a48:	58a3      	ldr	r3, [r4, r2]
 8004a4a:	2101      	movs	r1, #1
 8004a4c:	3301      	adds	r3, #1
 8004a4e:	50a3      	str	r3, [r4, r2]
 8004a50:	2300      	movs	r3, #0
 8004a52:	f7ff f8e3 	bl	8003c1c <d_print_comp_inner+0x1524>
 8004a56:	2200      	movs	r2, #0
 8004a58:	54e2      	strb	r2, [r4, r3]
 8004a5a:	2386      	movs	r3, #134	; 0x86
 8004a5c:	005b      	lsls	r3, r3, #1
 8004a5e:	58e2      	ldr	r2, [r4, r3]
 8004a60:	3b04      	subs	r3, #4
 8004a62:	58e3      	ldr	r3, [r4, r3]
 8004a64:	21ff      	movs	r1, #255	; 0xff
 8004a66:	0020      	movs	r0, r4
 8004a68:	4798      	blx	r3
 8004a6a:	2294      	movs	r2, #148	; 0x94
 8004a6c:	0052      	lsls	r2, r2, #1
 8004a6e:	58a3      	ldr	r3, [r4, r2]
 8004a70:	3301      	adds	r3, #1
 8004a72:	50a3      	str	r3, [r4, r2]
 8004a74:	3a28      	subs	r2, #40	; 0x28
 8004a76:	2300      	movs	r3, #0
 8004a78:	3aff      	subs	r2, #255	; 0xff
 8004a7a:	f7ff f8bc 	bl	8003bf6 <d_print_comp_inner+0x14fe>
 8004a7e:	212d      	movs	r1, #45	; 0x2d
 8004a80:	0020      	movs	r0, r4
 8004a82:	f7fb fcfb 	bl	800047c <d_append_char>
 8004a86:	f7fd ff6a 	bl	800295e <d_print_comp_inner+0x266>
 8004a8a:	2200      	movs	r2, #0
 8004a8c:	54e2      	strb	r2, [r4, r3]
 8004a8e:	2386      	movs	r3, #134	; 0x86
 8004a90:	005b      	lsls	r3, r3, #1
 8004a92:	58e2      	ldr	r2, [r4, r3]
 8004a94:	3b04      	subs	r3, #4
 8004a96:	21ff      	movs	r1, #255	; 0xff
 8004a98:	58e3      	ldr	r3, [r4, r3]
 8004a9a:	0020      	movs	r0, r4
 8004a9c:	4798      	blx	r3
 8004a9e:	2294      	movs	r2, #148	; 0x94
 8004aa0:	0052      	lsls	r2, r2, #1
 8004aa2:	58a3      	ldr	r3, [r4, r2]
 8004aa4:	2101      	movs	r1, #1
 8004aa6:	3301      	adds	r3, #1
 8004aa8:	50a3      	str	r3, [r4, r2]
 8004aaa:	2300      	movs	r3, #0
 8004aac:	f7fd ff4a 	bl	8002944 <d_print_comp_inner+0x24c>
 8004ab0:	238c      	movs	r3, #140	; 0x8c
 8004ab2:	4654      	mov	r4, sl
 8004ab4:	005b      	lsls	r3, r3, #1
 8004ab6:	3201      	adds	r2, #1
 8004ab8:	50e2      	str	r2, [r4, r3]
 8004aba:	f7fd fe44 	bl	8002746 <d_print_comp_inner+0x4e>
 8004abe:	2200      	movs	r2, #0
 8004ac0:	54e2      	strb	r2, [r4, r3]
 8004ac2:	2386      	movs	r3, #134	; 0x86
 8004ac4:	005b      	lsls	r3, r3, #1
 8004ac6:	58e2      	ldr	r2, [r4, r3]
 8004ac8:	3b04      	subs	r3, #4
 8004aca:	21ff      	movs	r1, #255	; 0xff
 8004acc:	58e3      	ldr	r3, [r4, r3]
 8004ace:	0020      	movs	r0, r4
 8004ad0:	4798      	blx	r3
 8004ad2:	2294      	movs	r2, #148	; 0x94
 8004ad4:	0052      	lsls	r2, r2, #1
 8004ad6:	58a3      	ldr	r3, [r4, r2]
 8004ad8:	2101      	movs	r1, #1
 8004ada:	3301      	adds	r3, #1
 8004adc:	50a3      	str	r3, [r4, r2]
 8004ade:	2300      	movs	r3, #0
 8004ae0:	68ea      	ldr	r2, [r5, #12]
 8004ae2:	f7fd ff1d 	bl	8002920 <d_print_comp_inner+0x228>
 8004ae6:	0020      	movs	r0, r4
 8004ae8:	215b      	movs	r1, #91	; 0x5b
 8004aea:	f7fb fcc7 	bl	800047c <d_append_char>
 8004aee:	0020      	movs	r0, r4
 8004af0:	2111      	movs	r1, #17
 8004af2:	692a      	ldr	r2, [r5, #16]
 8004af4:	f000 fae6 	bl	80050c4 <d_print_comp>
 8004af8:	215d      	movs	r1, #93	; 0x5d
 8004afa:	0020      	movs	r0, r4
 8004afc:	f7fb fcbe 	bl	800047c <d_append_char>
 8004b00:	f7fd fe21 	bl	8002746 <d_print_comp_inner+0x4e>
 8004b04:	2200      	movs	r2, #0
 8004b06:	54e2      	strb	r2, [r4, r3]
 8004b08:	2386      	movs	r3, #134	; 0x86
 8004b0a:	005b      	lsls	r3, r3, #1
 8004b0c:	58e2      	ldr	r2, [r4, r3]
 8004b0e:	3b04      	subs	r3, #4
 8004b10:	21ff      	movs	r1, #255	; 0xff
 8004b12:	58e3      	ldr	r3, [r4, r3]
 8004b14:	0020      	movs	r0, r4
 8004b16:	4798      	blx	r3
 8004b18:	2294      	movs	r2, #148	; 0x94
 8004b1a:	0052      	lsls	r2, r2, #1
 8004b1c:	58a3      	ldr	r3, [r4, r2]
 8004b1e:	2101      	movs	r1, #1
 8004b20:	3301      	adds	r3, #1
 8004b22:	50a3      	str	r3, [r4, r2]
 8004b24:	2300      	movs	r3, #0
 8004b26:	f7fe ff37 	bl	8003998 <d_print_comp_inner+0x12a0>
 8004b2a:	2120      	movs	r1, #32
 8004b2c:	0020      	movs	r0, r4
 8004b2e:	f7fb fca5 	bl	800047c <d_append_char>
 8004b32:	f7fe ff29 	bl	8003988 <d_print_comp_inner+0x1290>
 8004b36:	2200      	movs	r2, #0
 8004b38:	54e2      	strb	r2, [r4, r3]
 8004b3a:	2386      	movs	r3, #134	; 0x86
 8004b3c:	005b      	lsls	r3, r3, #1
 8004b3e:	58e2      	ldr	r2, [r4, r3]
 8004b40:	3b04      	subs	r3, #4
 8004b42:	21ff      	movs	r1, #255	; 0xff
 8004b44:	58e3      	ldr	r3, [r4, r3]
 8004b46:	0020      	movs	r0, r4
 8004b48:	4798      	blx	r3
 8004b4a:	2294      	movs	r2, #148	; 0x94
 8004b4c:	0052      	lsls	r2, r2, #1
 8004b4e:	58a3      	ldr	r3, [r4, r2]
 8004b50:	2101      	movs	r1, #1
 8004b52:	3301      	adds	r3, #1
 8004b54:	50a3      	str	r3, [r4, r2]
 8004b56:	2300      	movs	r3, #0
 8004b58:	f7fe ff04 	bl	8003964 <d_print_comp_inner+0x126c>
 8004b5c:	2120      	movs	r1, #32
 8004b5e:	0020      	movs	r0, r4
 8004b60:	f7fb fc8c 	bl	800047c <d_append_char>
 8004b64:	f7fe fef6 	bl	8003954 <d_print_comp_inner+0x125c>
 8004b68:	3330      	adds	r3, #48	; 0x30
 8004b6a:	33ff      	adds	r3, #255	; 0xff
 8004b6c:	58c0      	ldr	r0, [r0, r3]
 8004b6e:	2800      	cmp	r0, #0
 8004b70:	dc00      	bgt.n	8004b74 <d_print_comp_inner+0x247c>
 8004b72:	e159      	b.n	8004e28 <d_print_comp_inner+0x2730>
 8004b74:	3b04      	subs	r3, #4
 8004b76:	58e1      	ldr	r1, [r4, r3]
 8004b78:	46a4      	mov	ip, r4
 8004b7a:	2300      	movs	r3, #0
 8004b7c:	0004      	movs	r4, r0
 8004b7e:	4640      	mov	r0, r8
 8004b80:	e00d      	b.n	8004b9e <d_print_comp_inner+0x24a6>
 8004b82:	46c0      	nop			; (mov r8, r8)
 8004b84:	0800fdc4 	.word	0x0800fdc4
 8004b88:	0800fc40 	.word	0x0800fc40
 8004b8c:	0800fbcc 	.word	0x0800fbcc
 8004b90:	0800fc50 	.word	0x0800fc50
 8004b94:	3301      	adds	r3, #1
 8004b96:	3108      	adds	r1, #8
 8004b98:	42a3      	cmp	r3, r4
 8004b9a:	d100      	bne.n	8004b9e <d_print_comp_inner+0x24a6>
 8004b9c:	e141      	b.n	8004e22 <d_print_comp_inner+0x272a>
 8004b9e:	680a      	ldr	r2, [r1, #0]
 8004ba0:	4290      	cmp	r0, r2
 8004ba2:	d1f7      	bne.n	8004b94 <d_print_comp_inner+0x249c>
 8004ba4:	2396      	movs	r3, #150	; 0x96
 8004ba6:	4664      	mov	r4, ip
 8004ba8:	005b      	lsls	r3, r3, #1
 8004baa:	4680      	mov	r8, r0
 8004bac:	58e0      	ldr	r0, [r4, r3]
 8004bae:	1e03      	subs	r3, r0, #0
 8004bb0:	d100      	bne.n	8004bb4 <d_print_comp_inner+0x24bc>
 8004bb2:	e1c0      	b.n	8004f36 <d_print_comp_inner+0x283e>
 8004bb4:	468c      	mov	ip, r1
 8004bb6:	4641      	mov	r1, r8
 8004bb8:	e003      	b.n	8004bc2 <d_print_comp_inner+0x24ca>
 8004bba:	685b      	ldr	r3, [r3, #4]
 8004bbc:	2b00      	cmp	r3, #0
 8004bbe:	d100      	bne.n	8004bc2 <d_print_comp_inner+0x24ca>
 8004bc0:	e1b7      	b.n	8004f32 <d_print_comp_inner+0x283a>
 8004bc2:	681a      	ldr	r2, [r3, #0]
 8004bc4:	428a      	cmp	r2, r1
 8004bc6:	d003      	beq.n	8004bd0 <d_print_comp_inner+0x24d8>
 8004bc8:	42aa      	cmp	r2, r5
 8004bca:	d1f6      	bne.n	8004bba <d_print_comp_inner+0x24c2>
 8004bcc:	4298      	cmp	r0, r3
 8004bce:	d0f4      	beq.n	8004bba <d_print_comp_inner+0x24c2>
 8004bd0:	4688      	mov	r8, r1
 8004bd2:	4641      	mov	r1, r8
 8004bd4:	0020      	movs	r0, r4
 8004bd6:	f7fb fc73 	bl	80004c0 <d_lookup_template_argument>
 8004bda:	1e02      	subs	r2, r0, #0
 8004bdc:	d101      	bne.n	8004be2 <d_print_comp_inner+0x24ea>
 8004bde:	f7fd fdae 	bl	800273e <d_print_comp_inner+0x46>
 8004be2:	7813      	ldrb	r3, [r2, #0]
 8004be4:	2b2f      	cmp	r3, #47	; 0x2f
 8004be6:	d001      	beq.n	8004bec <d_print_comp_inner+0x24f4>
 8004be8:	f7fd fe66 	bl	80028b8 <d_print_comp_inner+0x1c0>
 8004bec:	33f5      	adds	r3, #245	; 0xf5
 8004bee:	58e1      	ldr	r1, [r4, r3]
 8004bf0:	2900      	cmp	r1, #0
 8004bf2:	da01      	bge.n	8004bf8 <d_print_comp_inner+0x2500>
 8004bf4:	f7fd fe6c 	bl	80028d0 <d_print_comp_inner+0x1d8>
 8004bf8:	0010      	movs	r0, r2
 8004bfa:	f7fb fbd3 	bl	80003a4 <d_index_template_argument.part.0>
 8004bfe:	1e02      	subs	r2, r0, #0
 8004c00:	d100      	bne.n	8004c04 <d_print_comp_inner+0x250c>
 8004c02:	e24d      	b.n	80050a0 <d_print_comp_inner+0x29a8>
 8004c04:	7803      	ldrb	r3, [r0, #0]
 8004c06:	f7fd fe57 	bl	80028b8 <d_print_comp_inner+0x1c0>
 8004c0a:	692b      	ldr	r3, [r5, #16]
 8004c0c:	781b      	ldrb	r3, [r3, #0]
 8004c0e:	2b00      	cmp	r3, #0
 8004c10:	d001      	beq.n	8004c16 <d_print_comp_inner+0x251e>
 8004c12:	f7fd fe7d 	bl	8002910 <d_print_comp_inner+0x218>
 8004c16:	2e3e      	cmp	r6, #62	; 0x3e
 8004c18:	d100      	bne.n	8004c1c <d_print_comp_inner+0x2524>
 8004c1a:	e233      	b.n	8005084 <d_print_comp_inner+0x298c>
 8004c1c:	3f02      	subs	r7, #2
 8004c1e:	2111      	movs	r1, #17
 8004c20:	0020      	movs	r0, r4
 8004c22:	692a      	ldr	r2, [r5, #16]
 8004c24:	b2ff      	uxtb	r7, r7
 8004c26:	f000 fa4d 	bl	80050c4 <d_print_comp>
 8004c2a:	2f04      	cmp	r7, #4
 8004c2c:	d901      	bls.n	8004c32 <d_print_comp_inner+0x253a>
 8004c2e:	f7fd fd8a 	bl	8002746 <d_print_comp_inner+0x4e>
 8004c32:	4bf1      	ldr	r3, [pc, #964]	; (8004ff8 <d_print_comp_inner+0x2900>)
 8004c34:	00bf      	lsls	r7, r7, #2
 8004c36:	59db      	ldr	r3, [r3, r7]
 8004c38:	469f      	mov	pc, r3
 8004c3a:	0020      	movs	r0, r4
 8004c3c:	49ef      	ldr	r1, [pc, #956]	; (8004ffc <d_print_comp_inner+0x2904>)
 8004c3e:	f7fb fca3 	bl	8000588 <d_append_string>
 8004c42:	f7fd fd80 	bl	8002746 <d_print_comp_inner+0x4e>
 8004c46:	0020      	movs	r0, r4
 8004c48:	49ed      	ldr	r1, [pc, #948]	; (8005000 <d_print_comp_inner+0x2908>)
 8004c4a:	f7fb fc9d 	bl	8000588 <d_append_string>
 8004c4e:	f7fd fd7a 	bl	8002746 <d_print_comp_inner+0x4e>
 8004c52:	216c      	movs	r1, #108	; 0x6c
 8004c54:	0020      	movs	r0, r4
 8004c56:	f7fb fc11 	bl	800047c <d_append_char>
 8004c5a:	f7fd fd74 	bl	8002746 <d_print_comp_inner+0x4e>
 8004c5e:	2175      	movs	r1, #117	; 0x75
 8004c60:	0020      	movs	r0, r4
 8004c62:	f7fb fc0b 	bl	800047c <d_append_char>
 8004c66:	f7fd fd6e 	bl	8002746 <d_print_comp_inner+0x4e>
 8004c6a:	0020      	movs	r0, r4
 8004c6c:	49e5      	ldr	r1, [pc, #916]	; (8005004 <d_print_comp_inner+0x290c>)
 8004c6e:	f7fb fc8b 	bl	8000588 <d_append_string>
 8004c72:	f7fd fd68 	bl	8002746 <d_print_comp_inner+0x4e>
 8004c76:	781b      	ldrb	r3, [r3, #0]
 8004c78:	2b73      	cmp	r3, #115	; 0x73
 8004c7a:	d00c      	beq.n	8004c96 <d_print_comp_inner+0x259e>
 8004c7c:	3b63      	subs	r3, #99	; 0x63
 8004c7e:	b2db      	uxtb	r3, r3
 8004c80:	2b0f      	cmp	r3, #15
 8004c82:	d901      	bls.n	8004c88 <d_print_comp_inner+0x2590>
 8004c84:	f7fe f89e 	bl	8002dc4 <d_print_comp_inner+0x6cc>
 8004c88:	49df      	ldr	r1, [pc, #892]	; (8005008 <d_print_comp_inner+0x2910>)
 8004c8a:	009b      	lsls	r3, r3, #2
 8004c8c:	585b      	ldr	r3, [r3, r1]
 8004c8e:	2b00      	cmp	r3, #0
 8004c90:	d101      	bne.n	8004c96 <d_print_comp_inner+0x259e>
 8004c92:	f7fe f897 	bl	8002dc4 <d_print_comp_inner+0x6cc>
 8004c96:	0020      	movs	r0, r4
 8004c98:	2111      	movs	r1, #17
 8004c9a:	f001 f925 	bl	8005ee8 <d_print_expr_op>
 8004c9e:	0020      	movs	r0, r4
 8004ca0:	213c      	movs	r1, #60	; 0x3c
 8004ca2:	f7fb fbeb 	bl	800047c <d_append_char>
 8004ca6:	692b      	ldr	r3, [r5, #16]
 8004ca8:	0020      	movs	r0, r4
 8004caa:	68da      	ldr	r2, [r3, #12]
 8004cac:	2111      	movs	r1, #17
 8004cae:	f000 fa09 	bl	80050c4 <d_print_comp>
 8004cb2:	0020      	movs	r0, r4
 8004cb4:	49d5      	ldr	r1, [pc, #852]	; (800500c <d_print_comp_inner+0x2914>)
 8004cb6:	f7fb fc67 	bl	8000588 <d_append_string>
 8004cba:	692b      	ldr	r3, [r5, #16]
 8004cbc:	0020      	movs	r0, r4
 8004cbe:	2111      	movs	r1, #17
 8004cc0:	691a      	ldr	r2, [r3, #16]
 8004cc2:	f000 f9ff 	bl	80050c4 <d_print_comp>
 8004cc6:	2129      	movs	r1, #41	; 0x29
 8004cc8:	0020      	movs	r0, r4
 8004cca:	f7fb fbd7 	bl	800047c <d_append_char>
 8004cce:	f7fd fd3a 	bl	8002746 <d_print_comp_inner+0x4e>
 8004cd2:	9901      	ldr	r1, [sp, #4]
 8004cd4:	2904      	cmp	r1, #4
 8004cd6:	d01f      	beq.n	8004d18 <d_print_comp_inner+0x2620>
 8004cd8:	2110      	movs	r1, #16
 8004cda:	468b      	mov	fp, r1
 8004cdc:	449b      	add	fp, r3
 8004cde:	0019      	movs	r1, r3
 8004ce0:	465d      	mov	r5, fp
 8004ce2:	9300      	str	r3, [sp, #0]
 8004ce4:	c9c1      	ldmia	r1!, {r0, r6, r7}
 8004ce6:	c5c1      	stmia	r5!, {r0, r6, r7}
 8004ce8:	6809      	ldr	r1, [r1, #0]
 8004cea:	6029      	str	r1, [r5, #0]
 8004cec:	4651      	mov	r1, sl
 8004cee:	611b      	str	r3, [r3, #16]
 8004cf0:	3310      	adds	r3, #16
 8004cf2:	5063      	str	r3, [r4, r1]
 8004cf4:	4661      	mov	r1, ip
 8004cf6:	9800      	ldr	r0, [sp, #0]
 8004cf8:	6081      	str	r1, [r0, #8]
 8004cfa:	4641      	mov	r1, r8
 8004cfc:	6042      	str	r2, [r0, #4]
 8004cfe:	60c1      	str	r1, [r0, #12]
 8004d00:	9901      	ldr	r1, [sp, #4]
 8004d02:	68d2      	ldr	r2, [r2, #12]
 8004d04:	3101      	adds	r1, #1
 8004d06:	9101      	str	r1, [sp, #4]
 8004d08:	2a00      	cmp	r2, #0
 8004d0a:	d005      	beq.n	8004d18 <d_print_comp_inner+0x2620>
 8004d0c:	7811      	ldrb	r1, [r2, #0]
 8004d0e:	f7fe fb84 	bl	800341a <d_print_comp_inner+0xd22>
 8004d12:	3315      	adds	r3, #21
 8004d14:	33ff      	adds	r3, #255	; 0xff
 8004d16:	50e0      	str	r0, [r4, r3]
 8004d18:	238c      	movs	r3, #140	; 0x8c
 8004d1a:	2201      	movs	r2, #1
 8004d1c:	005b      	lsls	r3, r3, #1
 8004d1e:	50e2      	str	r2, [r4, r3]
 8004d20:	f7fd fd11 	bl	8002746 <d_print_comp_inner+0x4e>
 8004d24:	54a3      	strb	r3, [r4, r2]
 8004d26:	2386      	movs	r3, #134	; 0x86
 8004d28:	005b      	lsls	r3, r3, #1
 8004d2a:	58e2      	ldr	r2, [r4, r3]
 8004d2c:	3b04      	subs	r3, #4
 8004d2e:	58e3      	ldr	r3, [r4, r3]
 8004d30:	21ff      	movs	r1, #255	; 0xff
 8004d32:	0020      	movs	r0, r4
 8004d34:	4798      	blx	r3
 8004d36:	2294      	movs	r2, #148	; 0x94
 8004d38:	0052      	lsls	r2, r2, #1
 8004d3a:	58a3      	ldr	r3, [r4, r2]
 8004d3c:	3301      	adds	r3, #1
 8004d3e:	50a3      	str	r3, [r4, r2]
 8004d40:	2301      	movs	r3, #1
 8004d42:	2200      	movs	r2, #0
 8004d44:	f7ff fb2e 	bl	80043a4 <d_print_comp_inner+0x1cac>
 8004d48:	68d3      	ldr	r3, [r2, #12]
 8004d4a:	4698      	mov	r8, r3
 8004d4c:	f7fd fd04 	bl	8002758 <d_print_comp_inner+0x60>
 8004d50:	0032      	movs	r2, r6
 8004d52:	49af      	ldr	r1, [pc, #700]	; (8005010 <d_print_comp_inner+0x2918>)
 8004d54:	a806      	add	r0, sp, #24
 8004d56:	f007 faf5 	bl	800c344 <siprintf>
 8004d5a:	a806      	add	r0, sp, #24
 8004d5c:	f001 fe3e 	bl	80069dc <strlen>
 8004d60:	2800      	cmp	r0, #0
 8004d62:	d101      	bne.n	8004d68 <d_print_comp_inner+0x2670>
 8004d64:	f7fd fcef 	bl	8002746 <d_print_comp_inner+0x4e>
 8004d68:	2200      	movs	r2, #0
 8004d6a:	2380      	movs	r3, #128	; 0x80
 8004d6c:	4692      	mov	sl, r2
 8004d6e:	320d      	adds	r2, #13
 8004d70:	32ff      	adds	r2, #255	; 0xff
 8004d72:	4691      	mov	r9, r2
 8004d74:	005b      	lsls	r3, r3, #1
 8004d76:	ad06      	add	r5, sp, #24
 8004d78:	3a04      	subs	r2, #4
 8004d7a:	4690      	mov	r8, r2
 8004d7c:	58e3      	ldr	r3, [r4, r3]
 8004d7e:	182f      	adds	r7, r5, r0
 8004d80:	e00c      	b.n	8004d9c <d_print_comp_inner+0x26a4>
 8004d82:	0019      	movs	r1, r3
 8004d84:	3301      	adds	r3, #1
 8004d86:	2280      	movs	r2, #128	; 0x80
 8004d88:	0052      	lsls	r2, r2, #1
 8004d8a:	50a3      	str	r3, [r4, r2]
 8004d8c:	3501      	adds	r5, #1
 8004d8e:	3204      	adds	r2, #4
 8004d90:	5466      	strb	r6, [r4, r1]
 8004d92:	54a6      	strb	r6, [r4, r2]
 8004d94:	42af      	cmp	r7, r5
 8004d96:	d101      	bne.n	8004d9c <d_print_comp_inner+0x26a4>
 8004d98:	f7fd fcd5 	bl	8002746 <d_print_comp_inner+0x4e>
 8004d9c:	782e      	ldrb	r6, [r5, #0]
 8004d9e:	2bff      	cmp	r3, #255	; 0xff
 8004da0:	d1ef      	bne.n	8004d82 <d_print_comp_inner+0x268a>
 8004da2:	4652      	mov	r2, sl
 8004da4:	54e2      	strb	r2, [r4, r3]
 8004da6:	464b      	mov	r3, r9
 8004da8:	58e2      	ldr	r2, [r4, r3]
 8004daa:	4643      	mov	r3, r8
 8004dac:	21ff      	movs	r1, #255	; 0xff
 8004dae:	58e3      	ldr	r3, [r4, r3]
 8004db0:	0020      	movs	r0, r4
 8004db2:	4798      	blx	r3
 8004db4:	2294      	movs	r2, #148	; 0x94
 8004db6:	0052      	lsls	r2, r2, #1
 8004db8:	58a3      	ldr	r3, [r4, r2]
 8004dba:	2100      	movs	r1, #0
 8004dbc:	3301      	adds	r3, #1
 8004dbe:	50a3      	str	r3, [r4, r2]
 8004dc0:	2301      	movs	r3, #1
 8004dc2:	e7e0      	b.n	8004d86 <d_print_comp_inner+0x268e>
 8004dc4:	2500      	movs	r5, #0
 8004dc6:	2286      	movs	r2, #134	; 0x86
 8004dc8:	54e5      	strb	r5, [r4, r3]
 8004dca:	0052      	lsls	r2, r2, #1
 8004dcc:	3309      	adds	r3, #9
 8004dce:	58e3      	ldr	r3, [r4, r3]
 8004dd0:	58a2      	ldr	r2, [r4, r2]
 8004dd2:	21ff      	movs	r1, #255	; 0xff
 8004dd4:	0020      	movs	r0, r4
 8004dd6:	4798      	blx	r3
 8004dd8:	2294      	movs	r2, #148	; 0x94
 8004dda:	0052      	lsls	r2, r2, #1
 8004ddc:	58a3      	ldr	r3, [r4, r2]
 8004dde:	3301      	adds	r3, #1
 8004de0:	50a3      	str	r3, [r4, r2]
 8004de2:	002b      	movs	r3, r5
 8004de4:	f7ff fb63 	bl	80044ae <d_print_comp_inner+0x1db6>
 8004de8:	2600      	movs	r6, #0
 8004dea:	2286      	movs	r2, #134	; 0x86
 8004dec:	54e6      	strb	r6, [r4, r3]
 8004dee:	0052      	lsls	r2, r2, #1
 8004df0:	3309      	adds	r3, #9
 8004df2:	58e3      	ldr	r3, [r4, r3]
 8004df4:	58a2      	ldr	r2, [r4, r2]
 8004df6:	21ff      	movs	r1, #255	; 0xff
 8004df8:	0020      	movs	r0, r4
 8004dfa:	4798      	blx	r3
 8004dfc:	2294      	movs	r2, #148	; 0x94
 8004dfe:	0052      	lsls	r2, r2, #1
 8004e00:	58a3      	ldr	r3, [r4, r2]
 8004e02:	3301      	adds	r3, #1
 8004e04:	50a3      	str	r3, [r4, r2]
 8004e06:	0033      	movs	r3, r6
 8004e08:	f7fe f9fd 	bl	8003206 <d_print_comp_inner+0xb0e>
 8004e0c:	0020      	movs	r0, r4
 8004e0e:	4652      	mov	r2, sl
 8004e10:	2111      	movs	r1, #17
 8004e12:	f001 fa8b 	bl	800632c <d_print_subexpr>
 8004e16:	0020      	movs	r0, r4
 8004e18:	497e      	ldr	r1, [pc, #504]	; (8005014 <d_print_comp_inner+0x291c>)
 8004e1a:	f7fb fbb5 	bl	8000588 <d_append_string>
 8004e1e:	f7fd fc92 	bl	8002746 <d_print_comp_inner+0x4e>
 8004e22:	4680      	mov	r8, r0
 8004e24:	0020      	movs	r0, r4
 8004e26:	4664      	mov	r4, ip
 8004e28:	239c      	movs	r3, #156	; 0x9c
 8004e2a:	005b      	lsls	r3, r3, #1
 8004e2c:	58e3      	ldr	r3, [r4, r3]
 8004e2e:	4283      	cmp	r3, r0
 8004e30:	dd2c      	ble.n	8004e8c <d_print_comp_inner+0x2794>
 8004e32:	2398      	movs	r3, #152	; 0x98
 8004e34:	005b      	lsls	r3, r3, #1
 8004e36:	58e3      	ldr	r3, [r4, r3]
 8004e38:	00c2      	lsls	r2, r0, #3
 8004e3a:	219a      	movs	r1, #154	; 0x9a
 8004e3c:	189b      	adds	r3, r3, r2
 8004e3e:	4642      	mov	r2, r8
 8004e40:	0049      	lsls	r1, r1, #1
 8004e42:	3001      	adds	r0, #1
 8004e44:	5060      	str	r0, [r4, r1]
 8004e46:	c304      	stmia	r3!, {r2}
 8004e48:	2288      	movs	r2, #136	; 0x88
 8004e4a:	0052      	lsls	r2, r2, #1
 8004e4c:	58a1      	ldr	r1, [r4, r2]
 8004e4e:	2900      	cmp	r1, #0
 8004e50:	d100      	bne.n	8004e54 <d_print_comp_inner+0x275c>
 8004e52:	e11c      	b.n	800508e <d_print_comp_inner+0x2996>
 8004e54:	3234      	adds	r2, #52	; 0x34
 8004e56:	58a2      	ldr	r2, [r4, r2]
 8004e58:	9500      	str	r5, [sp, #0]
 8004e5a:	4692      	mov	sl, r2
 8004e5c:	22a0      	movs	r2, #160	; 0xa0
 8004e5e:	0052      	lsls	r2, r2, #1
 8004e60:	4694      	mov	ip, r2
 8004e62:	58a2      	ldr	r2, [r4, r2]
 8004e64:	e010      	b.n	8004e88 <d_print_comp_inner+0x2790>
 8004e66:	00d0      	lsls	r0, r2, #3
 8004e68:	4683      	mov	fp, r0
 8004e6a:	209e      	movs	r0, #158	; 0x9e
 8004e6c:	4665      	mov	r5, ip
 8004e6e:	0040      	lsls	r0, r0, #1
 8004e70:	5820      	ldr	r0, [r4, r0]
 8004e72:	3201      	adds	r2, #1
 8004e74:	5162      	str	r2, [r4, r5]
 8004e76:	684d      	ldr	r5, [r1, #4]
 8004e78:	4458      	add	r0, fp
 8004e7a:	6045      	str	r5, [r0, #4]
 8004e7c:	6018      	str	r0, [r3, #0]
 8004e7e:	6809      	ldr	r1, [r1, #0]
 8004e80:	0003      	movs	r3, r0
 8004e82:	2900      	cmp	r1, #0
 8004e84:	d100      	bne.n	8004e88 <d_print_comp_inner+0x2790>
 8004e86:	e101      	b.n	800508c <d_print_comp_inner+0x2994>
 8004e88:	4592      	cmp	sl, r2
 8004e8a:	dcec      	bgt.n	8004e66 <d_print_comp_inner+0x276e>
 8004e8c:	238c      	movs	r3, #140	; 0x8c
 8004e8e:	2201      	movs	r2, #1
 8004e90:	005b      	lsls	r3, r3, #1
 8004e92:	50e2      	str	r2, [r4, r3]
 8004e94:	f7fd fc57 	bl	8002746 <d_print_comp_inner+0x4e>
 8004e98:	4641      	mov	r1, r8
 8004e9a:	68c9      	ldr	r1, [r1, #12]
 8004e9c:	4688      	mov	r8, r1
 8004e9e:	2900      	cmp	r1, #0
 8004ea0:	d100      	bne.n	8004ea4 <d_print_comp_inner+0x27ac>
 8004ea2:	e739      	b.n	8004d18 <d_print_comp_inner+0x2620>
 8004ea4:	7809      	ldrb	r1, [r1, #0]
 8004ea6:	9100      	str	r1, [sp, #0]
 8004ea8:	f7fe faa9 	bl	80033fe <d_print_comp_inner+0xd06>
 8004eac:	2500      	movs	r5, #0
 8004eae:	2286      	movs	r2, #134	; 0x86
 8004eb0:	54e5      	strb	r5, [r4, r3]
 8004eb2:	0052      	lsls	r2, r2, #1
 8004eb4:	3309      	adds	r3, #9
 8004eb6:	58e3      	ldr	r3, [r4, r3]
 8004eb8:	58a2      	ldr	r2, [r4, r2]
 8004eba:	21ff      	movs	r1, #255	; 0xff
 8004ebc:	0020      	movs	r0, r4
 8004ebe:	4798      	blx	r3
 8004ec0:	2294      	movs	r2, #148	; 0x94
 8004ec2:	0052      	lsls	r2, r2, #1
 8004ec4:	58a3      	ldr	r3, [r4, r2]
 8004ec6:	3301      	adds	r3, #1
 8004ec8:	50a3      	str	r3, [r4, r2]
 8004eca:	002b      	movs	r3, r5
 8004ecc:	f7ff fbcd 	bl	800466a <d_print_comp_inner+0x1f72>
 8004ed0:	2120      	movs	r1, #32
 8004ed2:	0020      	movs	r0, r4
 8004ed4:	f7fb fad2 	bl	800047c <d_append_char>
 8004ed8:	f7ff fbc0 	bl	800465c <d_print_comp_inner+0x1f64>
 8004edc:	2600      	movs	r6, #0
 8004ede:	2286      	movs	r2, #134	; 0x86
 8004ee0:	54e6      	strb	r6, [r4, r3]
 8004ee2:	0052      	lsls	r2, r2, #1
 8004ee4:	3309      	adds	r3, #9
 8004ee6:	58e3      	ldr	r3, [r4, r3]
 8004ee8:	58a2      	ldr	r2, [r4, r2]
 8004eea:	21ff      	movs	r1, #255	; 0xff
 8004eec:	0020      	movs	r0, r4
 8004eee:	4798      	blx	r3
 8004ef0:	2294      	movs	r2, #148	; 0x94
 8004ef2:	0052      	lsls	r2, r2, #1
 8004ef4:	58a3      	ldr	r3, [r4, r2]
 8004ef6:	3301      	adds	r3, #1
 8004ef8:	50a3      	str	r3, [r4, r2]
 8004efa:	0033      	movs	r3, r6
 8004efc:	f7ff fb9a 	bl	8004634 <d_print_comp_inner+0x1f3c>
 8004f00:	2120      	movs	r1, #32
 8004f02:	0020      	movs	r0, r4
 8004f04:	f7fb faba 	bl	800047c <d_append_char>
 8004f08:	f7ff fb8d 	bl	8004626 <d_print_comp_inner+0x1f2e>
 8004f0c:	2600      	movs	r6, #0
 8004f0e:	2286      	movs	r2, #134	; 0x86
 8004f10:	54e6      	strb	r6, [r4, r3]
 8004f12:	0052      	lsls	r2, r2, #1
 8004f14:	3309      	adds	r3, #9
 8004f16:	58e3      	ldr	r3, [r4, r3]
 8004f18:	58a2      	ldr	r2, [r4, r2]
 8004f1a:	21ff      	movs	r1, #255	; 0xff
 8004f1c:	0020      	movs	r0, r4
 8004f1e:	4798      	blx	r3
 8004f20:	2294      	movs	r2, #148	; 0x94
 8004f22:	0052      	lsls	r2, r2, #1
 8004f24:	58a3      	ldr	r3, [r4, r2]
 8004f26:	3301      	adds	r3, #1
 8004f28:	50a3      	str	r3, [r4, r2]
 8004f2a:	4643      	mov	r3, r8
 8004f2c:	685d      	ldr	r5, [r3, #4]
 8004f2e:	0033      	movs	r3, r6
 8004f30:	e445      	b.n	80047be <d_print_comp_inner+0x20c6>
 8004f32:	4688      	mov	r8, r1
 8004f34:	4661      	mov	r1, ip
 8004f36:	2388      	movs	r3, #136	; 0x88
 8004f38:	005b      	lsls	r3, r3, #1
 8004f3a:	58e2      	ldr	r2, [r4, r3]
 8004f3c:	0020      	movs	r0, r4
 8004f3e:	4691      	mov	r9, r2
 8004f40:	684a      	ldr	r2, [r1, #4]
 8004f42:	4641      	mov	r1, r8
 8004f44:	50e2      	str	r2, [r4, r3]
 8004f46:	f7fb fabb 	bl	80004c0 <d_lookup_template_argument>
 8004f4a:	2701      	movs	r7, #1
 8004f4c:	1e02      	subs	r2, r0, #0
 8004f4e:	d000      	beq.n	8004f52 <d_print_comp_inner+0x285a>
 8004f50:	e647      	b.n	8004be2 <d_print_comp_inner+0x24ea>
 8004f52:	2388      	movs	r3, #136	; 0x88
 8004f54:	464a      	mov	r2, r9
 8004f56:	005b      	lsls	r3, r3, #1
 8004f58:	50e2      	str	r2, [r4, r3]
 8004f5a:	f7fd fbf0 	bl	800273e <d_print_comp_inner+0x46>
 8004f5e:	68eb      	ldr	r3, [r5, #12]
 8004f60:	7819      	ldrb	r1, [r3, #0]
 8004f62:	2901      	cmp	r1, #1
 8004f64:	d001      	beq.n	8004f6a <d_print_comp_inner+0x2872>
 8004f66:	f7ff fba4 	bl	80046b2 <d_print_comp_inner+0x1fba>
 8004f6a:	6929      	ldr	r1, [r5, #16]
 8004f6c:	7809      	ldrb	r1, [r1, #0]
 8004f6e:	2929      	cmp	r1, #41	; 0x29
 8004f70:	d001      	beq.n	8004f76 <d_print_comp_inner+0x287e>
 8004f72:	f7ff fb9e 	bl	80046b2 <d_print_comp_inner+0x1fba>
 8004f76:	001d      	movs	r5, r3
 8004f78:	f7ff fb9b 	bl	80046b2 <d_print_comp_inner+0x1fba>
 8004f7c:	0020      	movs	r0, r4
 8004f7e:	68ea      	ldr	r2, [r5, #12]
 8004f80:	2111      	movs	r1, #17
 8004f82:	f001 f9d3 	bl	800632c <d_print_subexpr>
 8004f86:	003a      	movs	r2, r7
 8004f88:	2111      	movs	r1, #17
 8004f8a:	0020      	movs	r0, r4
 8004f8c:	f000 ffac 	bl	8005ee8 <d_print_expr_op>
 8004f90:	f7fd fbd9 	bl	8002746 <d_print_comp_inner+0x4e>
 8004f94:	692a      	ldr	r2, [r5, #16]
 8004f96:	2111      	movs	r1, #17
 8004f98:	f000 f894 	bl	80050c4 <d_print_comp>
 8004f9c:	4643      	mov	r3, r8
 8004f9e:	465a      	mov	r2, fp
 8004fa0:	50e2      	str	r2, [r4, r3]
 8004fa2:	68b3      	ldr	r3, [r6, #8]
 8004fa4:	2b00      	cmp	r3, #0
 8004fa6:	d101      	bne.n	8004fac <d_print_comp_inner+0x28b4>
 8004fa8:	f7fe f99a 	bl	80032e0 <d_print_comp_inner+0xbe8>
 8004fac:	f7fd fbcb 	bl	8002746 <d_print_comp_inner+0x4e>
 8004fb0:	68da      	ldr	r2, [r3, #12]
 8004fb2:	6891      	ldr	r1, [r2, #8]
 8004fb4:	2901      	cmp	r1, #1
 8004fb6:	d001      	beq.n	8004fbc <d_print_comp_inner+0x28c4>
 8004fb8:	f7fd ff1a 	bl	8002df0 <d_print_comp_inner+0x6f8>
 8004fbc:	6852      	ldr	r2, [r2, #4]
 8004fbe:	7812      	ldrb	r2, [r2, #0]
 8004fc0:	2a3e      	cmp	r2, #62	; 0x3e
 8004fc2:	d001      	beq.n	8004fc8 <d_print_comp_inner+0x28d0>
 8004fc4:	f7fd ff14 	bl	8002df0 <d_print_comp_inner+0x6f8>
 8004fc8:	0020      	movs	r0, r4
 8004fca:	3127      	adds	r1, #39	; 0x27
 8004fcc:	f7fb fa56 	bl	800047c <d_append_char>
 8004fd0:	68eb      	ldr	r3, [r5, #12]
 8004fd2:	f7fd ff0d 	bl	8002df0 <d_print_comp_inner+0x6f8>
 8004fd6:	0020      	movs	r0, r4
 8004fd8:	215b      	movs	r1, #91	; 0x5b
 8004fda:	f7fb fa4f 	bl	800047c <d_append_char>
 8004fde:	692b      	ldr	r3, [r5, #16]
 8004fe0:	0020      	movs	r0, r4
 8004fe2:	2111      	movs	r1, #17
 8004fe4:	691a      	ldr	r2, [r3, #16]
 8004fe6:	f000 f86d 	bl	80050c4 <d_print_comp>
 8004fea:	215d      	movs	r1, #93	; 0x5d
 8004fec:	0020      	movs	r0, r4
 8004fee:	f7fb fa45 	bl	800047c <d_append_char>
 8004ff2:	f7fd ff2b 	bl	8002e4c <d_print_comp_inner+0x754>
 8004ff6:	46c0      	nop			; (mov r8, r8)
 8004ff8:	0800ee3c 	.word	0x0800ee3c
 8004ffc:	0800fe18 	.word	0x0800fe18
 8005000:	0800fe14 	.word	0x0800fe14
 8005004:	0800fe1c 	.word	0x0800fe1c
 8005008:	0800ef8c 	.word	0x0800ef8c
 800500c:	0800fdf8 	.word	0x0800fdf8
 8005010:	0800fbcc 	.word	0x0800fbcc
 8005014:	0800fe4c 	.word	0x0800fe4c
 8005018:	003a      	movs	r2, r7
 800501a:	2111      	movs	r1, #17
 800501c:	0020      	movs	r0, r4
 800501e:	f000 ff63 	bl	8005ee8 <d_print_expr_op>
 8005022:	f7fd ff0d 	bl	8002e40 <d_print_comp_inner+0x748>
 8005026:	6913      	ldr	r3, [r2, #16]
 8005028:	781b      	ldrb	r3, [r3, #0]
 800502a:	2b29      	cmp	r3, #41	; 0x29
 800502c:	d003      	beq.n	8005036 <d_print_comp_inner+0x293e>
 800502e:	238c      	movs	r3, #140	; 0x8c
 8005030:	3902      	subs	r1, #2
 8005032:	005b      	lsls	r3, r3, #1
 8005034:	50e1      	str	r1, [r4, r3]
 8005036:	2111      	movs	r1, #17
 8005038:	0020      	movs	r0, r4
 800503a:	68d2      	ldr	r2, [r2, #12]
 800503c:	f001 f976 	bl	800632c <d_print_subexpr>
 8005040:	f7fd feeb 	bl	8002e1a <d_print_comp_inner+0x722>
 8005044:	0020      	movs	r0, r4
 8005046:	491d      	ldr	r1, [pc, #116]	; (80050bc <d_print_comp_inner+0x29c4>)
 8005048:	f7fb fa9e 	bl	8000588 <d_append_string>
 800504c:	68fb      	ldr	r3, [r7, #12]
 800504e:	2b00      	cmp	r3, #0
 8005050:	d008      	beq.n	8005064 <d_print_comp_inner+0x296c>
 8005052:	2111      	movs	r1, #17
 8005054:	0020      	movs	r0, r4
 8005056:	003a      	movs	r2, r7
 8005058:	f001 f968 	bl	800632c <d_print_subexpr>
 800505c:	2120      	movs	r1, #32
 800505e:	0020      	movs	r0, r4
 8005060:	f7fb fa0c 	bl	800047c <d_append_char>
 8005064:	4642      	mov	r2, r8
 8005066:	2111      	movs	r1, #17
 8005068:	0020      	movs	r0, r4
 800506a:	f000 f82b 	bl	80050c4 <d_print_comp>
 800506e:	2d00      	cmp	r5, #0
 8005070:	d101      	bne.n	8005076 <d_print_comp_inner+0x297e>
 8005072:	f7fd fb68 	bl	8002746 <d_print_comp_inner+0x4e>
 8005076:	002a      	movs	r2, r5
 8005078:	2111      	movs	r1, #17
 800507a:	0020      	movs	r0, r4
 800507c:	f001 f956 	bl	800632c <d_print_subexpr>
 8005080:	f7fd fb61 	bl	8002746 <d_print_comp_inner+0x4e>
 8005084:	212d      	movs	r1, #45	; 0x2d
 8005086:	f7fb f9f9 	bl	800047c <d_append_char>
 800508a:	e5c7      	b.n	8004c1c <d_print_comp_inner+0x2524>
 800508c:	9d00      	ldr	r5, [sp, #0]
 800508e:	2200      	movs	r2, #0
 8005090:	601a      	str	r2, [r3, #0]
 8005092:	e59e      	b.n	8004bd2 <d_print_comp_inner+0x24da>
 8005094:	003a      	movs	r2, r7
 8005096:	2111      	movs	r1, #17
 8005098:	f000 ff26 	bl	8005ee8 <d_print_expr_op>
 800509c:	f7fd ff01 	bl	8002ea2 <d_print_comp_inner+0x7aa>
 80050a0:	2f00      	cmp	r7, #0
 80050a2:	d000      	beq.n	80050a6 <d_print_comp_inner+0x29ae>
 80050a4:	e755      	b.n	8004f52 <d_print_comp_inner+0x285a>
 80050a6:	f7fd fb4a 	bl	800273e <d_print_comp_inner+0x46>
 80050aa:	68eb      	ldr	r3, [r5, #12]
 80050ac:	4698      	mov	r8, r3
 80050ae:	f7fd fb65 	bl	800277c <d_print_comp_inner+0x84>
 80050b2:	4903      	ldr	r1, [pc, #12]	; (80050c0 <d_print_comp_inner+0x29c8>)
 80050b4:	f7fb fa68 	bl	8000588 <d_append_string>
 80050b8:	f7fd fb45 	bl	8002746 <d_print_comp_inner+0x4e>
 80050bc:	0800fe0c 	.word	0x0800fe0c
 80050c0:	0800fe20 	.word	0x0800fe20

080050c4 <d_print_comp>:
 80050c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80050c6:	0005      	movs	r5, r0
 80050c8:	0014      	movs	r4, r2
 80050ca:	b083      	sub	sp, #12
 80050cc:	2a00      	cmp	r2, #0
 80050ce:	d021      	beq.n	8005114 <d_print_comp+0x50>
 80050d0:	6853      	ldr	r3, [r2, #4]
 80050d2:	2b01      	cmp	r3, #1
 80050d4:	dc1e      	bgt.n	8005114 <d_print_comp+0x50>
 80050d6:	268e      	movs	r6, #142	; 0x8e
 80050d8:	2180      	movs	r1, #128	; 0x80
 80050da:	0076      	lsls	r6, r6, #1
 80050dc:	5982      	ldr	r2, [r0, r6]
 80050de:	00c9      	lsls	r1, r1, #3
 80050e0:	428a      	cmp	r2, r1
 80050e2:	dc17      	bgt.n	8005114 <d_print_comp+0x50>
 80050e4:	2796      	movs	r7, #150	; 0x96
 80050e6:	3301      	adds	r3, #1
 80050e8:	007f      	lsls	r7, r7, #1
 80050ea:	6063      	str	r3, [r4, #4]
 80050ec:	59c3      	ldr	r3, [r0, r7]
 80050ee:	3201      	adds	r2, #1
 80050f0:	9301      	str	r3, [sp, #4]
 80050f2:	466b      	mov	r3, sp
 80050f4:	5182      	str	r2, [r0, r6]
 80050f6:	2111      	movs	r1, #17
 80050f8:	51c3      	str	r3, [r0, r7]
 80050fa:	0022      	movs	r2, r4
 80050fc:	9400      	str	r4, [sp, #0]
 80050fe:	f7fd fafb 	bl	80026f8 <d_print_comp_inner>
 8005102:	9b01      	ldr	r3, [sp, #4]
 8005104:	51eb      	str	r3, [r5, r7]
 8005106:	6863      	ldr	r3, [r4, #4]
 8005108:	3b01      	subs	r3, #1
 800510a:	6063      	str	r3, [r4, #4]
 800510c:	59ab      	ldr	r3, [r5, r6]
 800510e:	3b01      	subs	r3, #1
 8005110:	51ab      	str	r3, [r5, r6]
 8005112:	e003      	b.n	800511c <d_print_comp+0x58>
 8005114:	238c      	movs	r3, #140	; 0x8c
 8005116:	2201      	movs	r2, #1
 8005118:	005b      	lsls	r3, r3, #1
 800511a:	50ea      	str	r2, [r5, r3]
 800511c:	b003      	add	sp, #12
 800511e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005120 <d_print_mod>:
 8005120:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005122:	4645      	mov	r5, r8
 8005124:	46de      	mov	lr, fp
 8005126:	4657      	mov	r7, sl
 8005128:	464e      	mov	r6, r9
 800512a:	7813      	ldrb	r3, [r2, #0]
 800512c:	b5e0      	push	{r5, r6, r7, lr}
 800512e:	3b03      	subs	r3, #3
 8005130:	b2db      	uxtb	r3, r3
 8005132:	0004      	movs	r4, r0
 8005134:	0015      	movs	r5, r2
 8005136:	2b4e      	cmp	r3, #78	; 0x4e
 8005138:	d803      	bhi.n	8005142 <d_print_mod+0x22>
 800513a:	4ada      	ldr	r2, [pc, #872]	; (80054a4 <d_print_mod+0x384>)
 800513c:	009b      	lsls	r3, r3, #2
 800513e:	58d3      	ldr	r3, [r2, r3]
 8005140:	469f      	mov	pc, r3
 8005142:	002a      	movs	r2, r5
 8005144:	2111      	movs	r1, #17
 8005146:	0020      	movs	r0, r4
 8005148:	f7ff ffbc 	bl	80050c4 <d_print_comp>
 800514c:	bcf0      	pop	{r4, r5, r6, r7}
 800514e:	46bb      	mov	fp, r7
 8005150:	46b2      	mov	sl, r6
 8005152:	46a9      	mov	r9, r5
 8005154:	46a0      	mov	r8, r4
 8005156:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005158:	2200      	movs	r2, #0
 800515a:	4dd3      	ldr	r5, [pc, #844]	; (80054a8 <d_print_mod+0x388>)
 800515c:	2380      	movs	r3, #128	; 0x80
 800515e:	002f      	movs	r7, r5
 8005160:	4692      	mov	sl, r2
 8005162:	320d      	adds	r2, #13
 8005164:	32ff      	adds	r2, #255	; 0xff
 8005166:	4691      	mov	r9, r2
 8005168:	005b      	lsls	r3, r3, #1
 800516a:	3a04      	subs	r2, #4
 800516c:	2620      	movs	r6, #32
 800516e:	4690      	mov	r8, r2
 8005170:	58c3      	ldr	r3, [r0, r3]
 8005172:	3708      	adds	r7, #8
 8005174:	e00b      	b.n	800518e <d_print_mod+0x6e>
 8005176:	0019      	movs	r1, r3
 8005178:	3301      	adds	r3, #1
 800517a:	2280      	movs	r2, #128	; 0x80
 800517c:	0052      	lsls	r2, r2, #1
 800517e:	50a3      	str	r3, [r4, r2]
 8005180:	3204      	adds	r2, #4
 8005182:	5466      	strb	r6, [r4, r1]
 8005184:	54a6      	strb	r6, [r4, r2]
 8005186:	42bd      	cmp	r5, r7
 8005188:	d0e0      	beq.n	800514c <d_print_mod+0x2c>
 800518a:	782e      	ldrb	r6, [r5, #0]
 800518c:	3501      	adds	r5, #1
 800518e:	2bff      	cmp	r3, #255	; 0xff
 8005190:	d1f1      	bne.n	8005176 <d_print_mod+0x56>
 8005192:	4652      	mov	r2, sl
 8005194:	54e2      	strb	r2, [r4, r3]
 8005196:	464b      	mov	r3, r9
 8005198:	58e2      	ldr	r2, [r4, r3]
 800519a:	4643      	mov	r3, r8
 800519c:	21ff      	movs	r1, #255	; 0xff
 800519e:	58e3      	ldr	r3, [r4, r3]
 80051a0:	0020      	movs	r0, r4
 80051a2:	4798      	blx	r3
 80051a4:	2294      	movs	r2, #148	; 0x94
 80051a6:	0052      	lsls	r2, r2, #1
 80051a8:	58a3      	ldr	r3, [r4, r2]
 80051aa:	2100      	movs	r1, #0
 80051ac:	3301      	adds	r3, #1
 80051ae:	50a3      	str	r3, [r4, r2]
 80051b0:	2301      	movs	r3, #1
 80051b2:	e7e2      	b.n	800517a <d_print_mod+0x5a>
 80051b4:	2200      	movs	r2, #0
 80051b6:	4dbd      	ldr	r5, [pc, #756]	; (80054ac <d_print_mod+0x38c>)
 80051b8:	2380      	movs	r3, #128	; 0x80
 80051ba:	002f      	movs	r7, r5
 80051bc:	4692      	mov	sl, r2
 80051be:	320d      	adds	r2, #13
 80051c0:	32ff      	adds	r2, #255	; 0xff
 80051c2:	4691      	mov	r9, r2
 80051c4:	005b      	lsls	r3, r3, #1
 80051c6:	3a04      	subs	r2, #4
 80051c8:	2620      	movs	r6, #32
 80051ca:	4690      	mov	r8, r2
 80051cc:	58c3      	ldr	r3, [r0, r3]
 80051ce:	3708      	adds	r7, #8
 80051d0:	e00b      	b.n	80051ea <d_print_mod+0xca>
 80051d2:	0019      	movs	r1, r3
 80051d4:	3301      	adds	r3, #1
 80051d6:	2280      	movs	r2, #128	; 0x80
 80051d8:	0052      	lsls	r2, r2, #1
 80051da:	50a3      	str	r3, [r4, r2]
 80051dc:	3204      	adds	r2, #4
 80051de:	5466      	strb	r6, [r4, r1]
 80051e0:	54a6      	strb	r6, [r4, r2]
 80051e2:	42af      	cmp	r7, r5
 80051e4:	d0b2      	beq.n	800514c <d_print_mod+0x2c>
 80051e6:	782e      	ldrb	r6, [r5, #0]
 80051e8:	3501      	adds	r5, #1
 80051ea:	2bff      	cmp	r3, #255	; 0xff
 80051ec:	d1f1      	bne.n	80051d2 <d_print_mod+0xb2>
 80051ee:	4652      	mov	r2, sl
 80051f0:	54e2      	strb	r2, [r4, r3]
 80051f2:	464b      	mov	r3, r9
 80051f4:	58e2      	ldr	r2, [r4, r3]
 80051f6:	4643      	mov	r3, r8
 80051f8:	21ff      	movs	r1, #255	; 0xff
 80051fa:	58e3      	ldr	r3, [r4, r3]
 80051fc:	0020      	movs	r0, r4
 80051fe:	4798      	blx	r3
 8005200:	2294      	movs	r2, #148	; 0x94
 8005202:	0052      	lsls	r2, r2, #1
 8005204:	58a3      	ldr	r3, [r4, r2]
 8005206:	2100      	movs	r1, #0
 8005208:	3301      	adds	r3, #1
 800520a:	50a3      	str	r3, [r4, r2]
 800520c:	2301      	movs	r3, #1
 800520e:	e7e2      	b.n	80051d6 <d_print_mod+0xb6>
 8005210:	2200      	movs	r2, #0
 8005212:	2380      	movs	r3, #128	; 0x80
 8005214:	4692      	mov	sl, r2
 8005216:	320d      	adds	r2, #13
 8005218:	32ff      	adds	r2, #255	; 0xff
 800521a:	4da5      	ldr	r5, [pc, #660]	; (80054b0 <d_print_mod+0x390>)
 800521c:	4691      	mov	r9, r2
 800521e:	005b      	lsls	r3, r3, #1
 8005220:	3a04      	subs	r2, #4
 8005222:	2620      	movs	r6, #32
 8005224:	4690      	mov	r8, r2
 8005226:	58c3      	ldr	r3, [r0, r3]
 8005228:	1d6f      	adds	r7, r5, #5
 800522a:	e00c      	b.n	8005246 <d_print_mod+0x126>
 800522c:	0019      	movs	r1, r3
 800522e:	3301      	adds	r3, #1
 8005230:	2280      	movs	r2, #128	; 0x80
 8005232:	0052      	lsls	r2, r2, #1
 8005234:	50a3      	str	r3, [r4, r2]
 8005236:	3204      	adds	r2, #4
 8005238:	5466      	strb	r6, [r4, r1]
 800523a:	54a6      	strb	r6, [r4, r2]
 800523c:	42bd      	cmp	r5, r7
 800523e:	d100      	bne.n	8005242 <d_print_mod+0x122>
 8005240:	e784      	b.n	800514c <d_print_mod+0x2c>
 8005242:	782e      	ldrb	r6, [r5, #0]
 8005244:	3501      	adds	r5, #1
 8005246:	2bff      	cmp	r3, #255	; 0xff
 8005248:	d1f0      	bne.n	800522c <d_print_mod+0x10c>
 800524a:	4652      	mov	r2, sl
 800524c:	54e2      	strb	r2, [r4, r3]
 800524e:	464b      	mov	r3, r9
 8005250:	58e2      	ldr	r2, [r4, r3]
 8005252:	4643      	mov	r3, r8
 8005254:	21ff      	movs	r1, #255	; 0xff
 8005256:	58e3      	ldr	r3, [r4, r3]
 8005258:	0020      	movs	r0, r4
 800525a:	4798      	blx	r3
 800525c:	2294      	movs	r2, #148	; 0x94
 800525e:	0052      	lsls	r2, r2, #1
 8005260:	58a3      	ldr	r3, [r4, r2]
 8005262:	2100      	movs	r1, #0
 8005264:	3301      	adds	r3, #1
 8005266:	50a3      	str	r3, [r4, r2]
 8005268:	2301      	movs	r3, #1
 800526a:	e7e1      	b.n	8005230 <d_print_mod+0x110>
 800526c:	4e91      	ldr	r6, [pc, #580]	; (80054b4 <d_print_mod+0x394>)
 800526e:	2380      	movs	r3, #128	; 0x80
 8005270:	1d72      	adds	r2, r6, #5
 8005272:	4690      	mov	r8, r2
 8005274:	2200      	movs	r2, #0
 8005276:	4693      	mov	fp, r2
 8005278:	320d      	adds	r2, #13
 800527a:	32ff      	adds	r2, #255	; 0xff
 800527c:	4692      	mov	sl, r2
 800527e:	005b      	lsls	r3, r3, #1
 8005280:	3a04      	subs	r2, #4
 8005282:	2720      	movs	r7, #32
 8005284:	4691      	mov	r9, r2
 8005286:	58c3      	ldr	r3, [r0, r3]
 8005288:	e00c      	b.n	80052a4 <d_print_mod+0x184>
 800528a:	0019      	movs	r1, r3
 800528c:	3301      	adds	r3, #1
 800528e:	2280      	movs	r2, #128	; 0x80
 8005290:	0052      	lsls	r2, r2, #1
 8005292:	50a3      	str	r3, [r4, r2]
 8005294:	3204      	adds	r2, #4
 8005296:	5467      	strb	r7, [r4, r1]
 8005298:	54a7      	strb	r7, [r4, r2]
 800529a:	4546      	cmp	r6, r8
 800529c:	d100      	bne.n	80052a0 <d_print_mod+0x180>
 800529e:	e1c2      	b.n	8005626 <d_print_mod+0x506>
 80052a0:	7837      	ldrb	r7, [r6, #0]
 80052a2:	3601      	adds	r6, #1
 80052a4:	2bff      	cmp	r3, #255	; 0xff
 80052a6:	d1f0      	bne.n	800528a <d_print_mod+0x16a>
 80052a8:	465a      	mov	r2, fp
 80052aa:	54e2      	strb	r2, [r4, r3]
 80052ac:	4653      	mov	r3, sl
 80052ae:	58e2      	ldr	r2, [r4, r3]
 80052b0:	464b      	mov	r3, r9
 80052b2:	21ff      	movs	r1, #255	; 0xff
 80052b4:	58e3      	ldr	r3, [r4, r3]
 80052b6:	0020      	movs	r0, r4
 80052b8:	4798      	blx	r3
 80052ba:	2294      	movs	r2, #148	; 0x94
 80052bc:	0052      	lsls	r2, r2, #1
 80052be:	58a3      	ldr	r3, [r4, r2]
 80052c0:	2100      	movs	r1, #0
 80052c2:	3301      	adds	r3, #1
 80052c4:	50a3      	str	r3, [r4, r2]
 80052c6:	2301      	movs	r3, #1
 80052c8:	e7e1      	b.n	800528e <d_print_mod+0x16e>
 80052ca:	2180      	movs	r1, #128	; 0x80
 80052cc:	0049      	lsls	r1, r1, #1
 80052ce:	5842      	ldr	r2, [r0, r1]
 80052d0:	2aff      	cmp	r2, #255	; 0xff
 80052d2:	d100      	bne.n	80052d6 <d_print_mod+0x1b6>
 80052d4:	e247      	b.n	8005766 <d_print_mod+0x646>
 80052d6:	1c53      	adds	r3, r2, #1
 80052d8:	5043      	str	r3, [r0, r1]
 80052da:	39e0      	subs	r1, #224	; 0xe0
 80052dc:	5481      	strb	r1, [r0, r2]
 80052de:	2282      	movs	r2, #130	; 0x82
 80052e0:	0052      	lsls	r2, r2, #1
 80052e2:	5481      	strb	r1, [r0, r2]
 80052e4:	e02c      	b.n	8005340 <d_print_mod+0x220>
 80052e6:	2380      	movs	r3, #128	; 0x80
 80052e8:	005b      	lsls	r3, r3, #1
 80052ea:	58c2      	ldr	r2, [r0, r3]
 80052ec:	2aff      	cmp	r2, #255	; 0xff
 80052ee:	d100      	bne.n	80052f2 <d_print_mod+0x1d2>
 80052f0:	e228      	b.n	8005744 <d_print_mod+0x624>
 80052f2:	1c53      	adds	r3, r2, #1
 80052f4:	2180      	movs	r1, #128	; 0x80
 80052f6:	0049      	lsls	r1, r1, #1
 80052f8:	5063      	str	r3, [r4, r1]
 80052fa:	39e0      	subs	r1, #224	; 0xe0
 80052fc:	54a1      	strb	r1, [r4, r2]
 80052fe:	2282      	movs	r2, #130	; 0x82
 8005300:	0052      	lsls	r2, r2, #1
 8005302:	54a1      	strb	r1, [r4, r2]
 8005304:	e02c      	b.n	8005360 <d_print_mod+0x240>
 8005306:	2380      	movs	r3, #128	; 0x80
 8005308:	005b      	lsls	r3, r3, #1
 800530a:	58c3      	ldr	r3, [r0, r3]
 800530c:	2bff      	cmp	r3, #255	; 0xff
 800530e:	d100      	bne.n	8005312 <d_print_mod+0x1f2>
 8005310:	e207      	b.n	8005722 <d_print_mod+0x602>
 8005312:	1c59      	adds	r1, r3, #1
 8005314:	2280      	movs	r2, #128	; 0x80
 8005316:	0052      	lsls	r2, r2, #1
 8005318:	50a1      	str	r1, [r4, r2]
 800531a:	3ae0      	subs	r2, #224	; 0xe0
 800531c:	54e2      	strb	r2, [r4, r3]
 800531e:	2382      	movs	r3, #130	; 0x82
 8005320:	005b      	lsls	r3, r3, #1
 8005322:	54e2      	strb	r2, [r4, r3]
 8005324:	2111      	movs	r1, #17
 8005326:	0020      	movs	r0, r4
 8005328:	692a      	ldr	r2, [r5, #16]
 800532a:	f7ff fecb 	bl	80050c4 <d_print_comp>
 800532e:	e70d      	b.n	800514c <d_print_mod+0x2c>
 8005330:	2111      	movs	r1, #17
 8005332:	68ea      	ldr	r2, [r5, #12]
 8005334:	f7ff fec6 	bl	80050c4 <d_print_comp>
 8005338:	e708      	b.n	800514c <d_print_mod+0x2c>
 800533a:	2380      	movs	r3, #128	; 0x80
 800533c:	005b      	lsls	r3, r3, #1
 800533e:	58c3      	ldr	r3, [r0, r3]
 8005340:	2bff      	cmp	r3, #255	; 0xff
 8005342:	d100      	bne.n	8005346 <d_print_mod+0x226>
 8005344:	e1b9      	b.n	80056ba <d_print_mod+0x59a>
 8005346:	1c59      	adds	r1, r3, #1
 8005348:	2280      	movs	r2, #128	; 0x80
 800534a:	0052      	lsls	r2, r2, #1
 800534c:	50a1      	str	r1, [r4, r2]
 800534e:	3ada      	subs	r2, #218	; 0xda
 8005350:	54e2      	strb	r2, [r4, r3]
 8005352:	2382      	movs	r3, #130	; 0x82
 8005354:	005b      	lsls	r3, r3, #1
 8005356:	54e2      	strb	r2, [r4, r3]
 8005358:	e6f8      	b.n	800514c <d_print_mod+0x2c>
 800535a:	2380      	movs	r3, #128	; 0x80
 800535c:	005b      	lsls	r3, r3, #1
 800535e:	58c3      	ldr	r3, [r0, r3]
 8005360:	2200      	movs	r2, #0
 8005362:	4692      	mov	sl, r2
 8005364:	320d      	adds	r2, #13
 8005366:	32ff      	adds	r2, #255	; 0xff
 8005368:	4d53      	ldr	r5, [pc, #332]	; (80054b8 <d_print_mod+0x398>)
 800536a:	4691      	mov	r9, r2
 800536c:	3a04      	subs	r2, #4
 800536e:	2626      	movs	r6, #38	; 0x26
 8005370:	4690      	mov	r8, r2
 8005372:	1caf      	adds	r7, r5, #2
 8005374:	e00c      	b.n	8005390 <d_print_mod+0x270>
 8005376:	0019      	movs	r1, r3
 8005378:	3301      	adds	r3, #1
 800537a:	2280      	movs	r2, #128	; 0x80
 800537c:	0052      	lsls	r2, r2, #1
 800537e:	50a3      	str	r3, [r4, r2]
 8005380:	3501      	adds	r5, #1
 8005382:	3204      	adds	r2, #4
 8005384:	5466      	strb	r6, [r4, r1]
 8005386:	54a6      	strb	r6, [r4, r2]
 8005388:	42af      	cmp	r7, r5
 800538a:	d100      	bne.n	800538e <d_print_mod+0x26e>
 800538c:	e6de      	b.n	800514c <d_print_mod+0x2c>
 800538e:	782e      	ldrb	r6, [r5, #0]
 8005390:	2bff      	cmp	r3, #255	; 0xff
 8005392:	d1f0      	bne.n	8005376 <d_print_mod+0x256>
 8005394:	4652      	mov	r2, sl
 8005396:	54e2      	strb	r2, [r4, r3]
 8005398:	464b      	mov	r3, r9
 800539a:	58e2      	ldr	r2, [r4, r3]
 800539c:	4643      	mov	r3, r8
 800539e:	21ff      	movs	r1, #255	; 0xff
 80053a0:	58e3      	ldr	r3, [r4, r3]
 80053a2:	0020      	movs	r0, r4
 80053a4:	4798      	blx	r3
 80053a6:	2294      	movs	r2, #148	; 0x94
 80053a8:	0052      	lsls	r2, r2, #1
 80053aa:	58a3      	ldr	r3, [r4, r2]
 80053ac:	2100      	movs	r1, #0
 80053ae:	3301      	adds	r3, #1
 80053b0:	50a3      	str	r3, [r4, r2]
 80053b2:	2301      	movs	r3, #1
 80053b4:	e7e1      	b.n	800537a <d_print_mod+0x25a>
 80053b6:	2200      	movs	r2, #0
 80053b8:	4d40      	ldr	r5, [pc, #256]	; (80054bc <d_print_mod+0x39c>)
 80053ba:	2380      	movs	r3, #128	; 0x80
 80053bc:	002f      	movs	r7, r5
 80053be:	4692      	mov	sl, r2
 80053c0:	320d      	adds	r2, #13
 80053c2:	32ff      	adds	r2, #255	; 0xff
 80053c4:	4691      	mov	r9, r2
 80053c6:	005b      	lsls	r3, r3, #1
 80053c8:	3a04      	subs	r2, #4
 80053ca:	2620      	movs	r6, #32
 80053cc:	4690      	mov	r8, r2
 80053ce:	58c3      	ldr	r3, [r0, r3]
 80053d0:	3708      	adds	r7, #8
 80053d2:	e00c      	b.n	80053ee <d_print_mod+0x2ce>
 80053d4:	0019      	movs	r1, r3
 80053d6:	3301      	adds	r3, #1
 80053d8:	2280      	movs	r2, #128	; 0x80
 80053da:	0052      	lsls	r2, r2, #1
 80053dc:	50a3      	str	r3, [r4, r2]
 80053de:	3204      	adds	r2, #4
 80053e0:	5466      	strb	r6, [r4, r1]
 80053e2:	54a6      	strb	r6, [r4, r2]
 80053e4:	42af      	cmp	r7, r5
 80053e6:	d100      	bne.n	80053ea <d_print_mod+0x2ca>
 80053e8:	e6b0      	b.n	800514c <d_print_mod+0x2c>
 80053ea:	782e      	ldrb	r6, [r5, #0]
 80053ec:	3501      	adds	r5, #1
 80053ee:	2bff      	cmp	r3, #255	; 0xff
 80053f0:	d1f0      	bne.n	80053d4 <d_print_mod+0x2b4>
 80053f2:	4652      	mov	r2, sl
 80053f4:	54e2      	strb	r2, [r4, r3]
 80053f6:	464b      	mov	r3, r9
 80053f8:	58e2      	ldr	r2, [r4, r3]
 80053fa:	4643      	mov	r3, r8
 80053fc:	21ff      	movs	r1, #255	; 0xff
 80053fe:	58e3      	ldr	r3, [r4, r3]
 8005400:	0020      	movs	r0, r4
 8005402:	4798      	blx	r3
 8005404:	2294      	movs	r2, #148	; 0x94
 8005406:	0052      	lsls	r2, r2, #1
 8005408:	58a3      	ldr	r3, [r4, r2]
 800540a:	2100      	movs	r1, #0
 800540c:	3301      	adds	r3, #1
 800540e:	50a3      	str	r3, [r4, r2]
 8005410:	2301      	movs	r3, #1
 8005412:	e7e1      	b.n	80053d8 <d_print_mod+0x2b8>
 8005414:	2200      	movs	r2, #0
 8005416:	4d2a      	ldr	r5, [pc, #168]	; (80054c0 <d_print_mod+0x3a0>)
 8005418:	2380      	movs	r3, #128	; 0x80
 800541a:	002f      	movs	r7, r5
 800541c:	4692      	mov	sl, r2
 800541e:	320d      	adds	r2, #13
 8005420:	32ff      	adds	r2, #255	; 0xff
 8005422:	4691      	mov	r9, r2
 8005424:	005b      	lsls	r3, r3, #1
 8005426:	3a04      	subs	r2, #4
 8005428:	2620      	movs	r6, #32
 800542a:	4690      	mov	r8, r2
 800542c:	58c3      	ldr	r3, [r0, r3]
 800542e:	370a      	adds	r7, #10
 8005430:	e00c      	b.n	800544c <d_print_mod+0x32c>
 8005432:	0019      	movs	r1, r3
 8005434:	3301      	adds	r3, #1
 8005436:	2280      	movs	r2, #128	; 0x80
 8005438:	0052      	lsls	r2, r2, #1
 800543a:	50a3      	str	r3, [r4, r2]
 800543c:	3204      	adds	r2, #4
 800543e:	5466      	strb	r6, [r4, r1]
 8005440:	54a6      	strb	r6, [r4, r2]
 8005442:	42af      	cmp	r7, r5
 8005444:	d100      	bne.n	8005448 <d_print_mod+0x328>
 8005446:	e681      	b.n	800514c <d_print_mod+0x2c>
 8005448:	782e      	ldrb	r6, [r5, #0]
 800544a:	3501      	adds	r5, #1
 800544c:	2bff      	cmp	r3, #255	; 0xff
 800544e:	d1f0      	bne.n	8005432 <d_print_mod+0x312>
 8005450:	4652      	mov	r2, sl
 8005452:	54e2      	strb	r2, [r4, r3]
 8005454:	464b      	mov	r3, r9
 8005456:	58e2      	ldr	r2, [r4, r3]
 8005458:	4643      	mov	r3, r8
 800545a:	21ff      	movs	r1, #255	; 0xff
 800545c:	58e3      	ldr	r3, [r4, r3]
 800545e:	0020      	movs	r0, r4
 8005460:	4798      	blx	r3
 8005462:	2294      	movs	r2, #148	; 0x94
 8005464:	0052      	lsls	r2, r2, #1
 8005466:	58a3      	ldr	r3, [r4, r2]
 8005468:	2100      	movs	r1, #0
 800546a:	3301      	adds	r3, #1
 800546c:	50a3      	str	r3, [r4, r2]
 800546e:	2301      	movs	r3, #1
 8005470:	e7e1      	b.n	8005436 <d_print_mod+0x316>
 8005472:	2382      	movs	r3, #130	; 0x82
 8005474:	005b      	lsls	r3, r3, #1
 8005476:	5cc3      	ldrb	r3, [r0, r3]
 8005478:	2b28      	cmp	r3, #40	; 0x28
 800547a:	d000      	beq.n	800547e <d_print_mod+0x35e>
 800547c:	e10e      	b.n	800569c <d_print_mod+0x57c>
 800547e:	68ea      	ldr	r2, [r5, #12]
 8005480:	2111      	movs	r1, #17
 8005482:	0020      	movs	r0, r4
 8005484:	f7ff fe1e 	bl	80050c4 <d_print_comp>
 8005488:	2200      	movs	r2, #0
 800548a:	2380      	movs	r3, #128	; 0x80
 800548c:	4692      	mov	sl, r2
 800548e:	320d      	adds	r2, #13
 8005490:	32ff      	adds	r2, #255	; 0xff
 8005492:	4d0c      	ldr	r5, [pc, #48]	; (80054c4 <d_print_mod+0x3a4>)
 8005494:	4691      	mov	r9, r2
 8005496:	005b      	lsls	r3, r3, #1
 8005498:	3a04      	subs	r2, #4
 800549a:	263a      	movs	r6, #58	; 0x3a
 800549c:	4690      	mov	r8, r2
 800549e:	58e3      	ldr	r3, [r4, r3]
 80054a0:	1cef      	adds	r7, r5, #3
 80054a2:	e01e      	b.n	80054e2 <d_print_mod+0x3c2>
 80054a4:	0800ee50 	.word	0x0800ee50
 80054a8:	0800fecd 	.word	0x0800fecd
 80054ac:	0800fed9 	.word	0x0800fed9
 80054b0:	0800fee5 	.word	0x0800fee5
 80054b4:	0800ff0d 	.word	0x0800ff0d
 80054b8:	0800ff14 	.word	0x0800ff14
 80054bc:	0800ff19 	.word	0x0800ff19
 80054c0:	0800ff25 	.word	0x0800ff25
 80054c4:	0800ff30 	.word	0x0800ff30
 80054c8:	0019      	movs	r1, r3
 80054ca:	3301      	adds	r3, #1
 80054cc:	2280      	movs	r2, #128	; 0x80
 80054ce:	0052      	lsls	r2, r2, #1
 80054d0:	50a3      	str	r3, [r4, r2]
 80054d2:	3501      	adds	r5, #1
 80054d4:	3204      	adds	r2, #4
 80054d6:	5466      	strb	r6, [r4, r1]
 80054d8:	54a6      	strb	r6, [r4, r2]
 80054da:	42bd      	cmp	r5, r7
 80054dc:	d100      	bne.n	80054e0 <d_print_mod+0x3c0>
 80054de:	e635      	b.n	800514c <d_print_mod+0x2c>
 80054e0:	782e      	ldrb	r6, [r5, #0]
 80054e2:	2bff      	cmp	r3, #255	; 0xff
 80054e4:	d1f0      	bne.n	80054c8 <d_print_mod+0x3a8>
 80054e6:	4652      	mov	r2, sl
 80054e8:	54e2      	strb	r2, [r4, r3]
 80054ea:	464b      	mov	r3, r9
 80054ec:	58e2      	ldr	r2, [r4, r3]
 80054ee:	4643      	mov	r3, r8
 80054f0:	21ff      	movs	r1, #255	; 0xff
 80054f2:	58e3      	ldr	r3, [r4, r3]
 80054f4:	0020      	movs	r0, r4
 80054f6:	4798      	blx	r3
 80054f8:	2294      	movs	r2, #148	; 0x94
 80054fa:	0052      	lsls	r2, r2, #1
 80054fc:	58a3      	ldr	r3, [r4, r2]
 80054fe:	2100      	movs	r1, #0
 8005500:	3301      	adds	r3, #1
 8005502:	50a3      	str	r3, [r4, r2]
 8005504:	2301      	movs	r3, #1
 8005506:	e7e1      	b.n	80054cc <d_print_mod+0x3ac>
 8005508:	2209      	movs	r2, #9
 800550a:	4691      	mov	r9, r2
 800550c:	2200      	movs	r2, #0
 800550e:	2380      	movs	r3, #128	; 0x80
 8005510:	4693      	mov	fp, r2
 8005512:	4eaf      	ldr	r6, [pc, #700]	; (80057d0 <d_print_mod+0x6b0>)
 8005514:	320d      	adds	r2, #13
 8005516:	005b      	lsls	r3, r3, #1
 8005518:	32ff      	adds	r2, #255	; 0xff
 800551a:	2720      	movs	r7, #32
 800551c:	4692      	mov	sl, r2
 800551e:	58c3      	ldr	r3, [r0, r3]
 8005520:	44b1      	add	r9, r6
 8005522:	e00e      	b.n	8005542 <d_print_mod+0x422>
 8005524:	001a      	movs	r2, r3
 8005526:	3301      	adds	r3, #1
 8005528:	2180      	movs	r1, #128	; 0x80
 800552a:	0049      	lsls	r1, r1, #1
 800552c:	5063      	str	r3, [r4, r1]
 800552e:	54a7      	strb	r7, [r4, r2]
 8005530:	2282      	movs	r2, #130	; 0x82
 8005532:	0052      	lsls	r2, r2, #1
 8005534:	4688      	mov	r8, r1
 8005536:	54a7      	strb	r7, [r4, r2]
 8005538:	45b1      	cmp	r9, r6
 800553a:	d100      	bne.n	800553e <d_print_mod+0x41e>
 800553c:	e09b      	b.n	8005676 <d_print_mod+0x556>
 800553e:	7837      	ldrb	r7, [r6, #0]
 8005540:	3601      	adds	r6, #1
 8005542:	2bff      	cmp	r3, #255	; 0xff
 8005544:	d1ee      	bne.n	8005524 <d_print_mod+0x404>
 8005546:	465a      	mov	r2, fp
 8005548:	54e2      	strb	r2, [r4, r3]
 800554a:	4653      	mov	r3, sl
 800554c:	58e2      	ldr	r2, [r4, r3]
 800554e:	2384      	movs	r3, #132	; 0x84
 8005550:	005b      	lsls	r3, r3, #1
 8005552:	58e3      	ldr	r3, [r4, r3]
 8005554:	21ff      	movs	r1, #255	; 0xff
 8005556:	0020      	movs	r0, r4
 8005558:	4798      	blx	r3
 800555a:	2294      	movs	r2, #148	; 0x94
 800555c:	0052      	lsls	r2, r2, #1
 800555e:	58a3      	ldr	r3, [r4, r2]
 8005560:	3301      	adds	r3, #1
 8005562:	50a3      	str	r3, [r4, r2]
 8005564:	2301      	movs	r3, #1
 8005566:	2200      	movs	r2, #0
 8005568:	e7de      	b.n	8005528 <d_print_mod+0x408>
 800556a:	2200      	movs	r2, #0
 800556c:	4d99      	ldr	r5, [pc, #612]	; (80057d4 <d_print_mod+0x6b4>)
 800556e:	2380      	movs	r3, #128	; 0x80
 8005570:	002f      	movs	r7, r5
 8005572:	4692      	mov	sl, r2
 8005574:	320d      	adds	r2, #13
 8005576:	32ff      	adds	r2, #255	; 0xff
 8005578:	4691      	mov	r9, r2
 800557a:	005b      	lsls	r3, r3, #1
 800557c:	3a04      	subs	r2, #4
 800557e:	2620      	movs	r6, #32
 8005580:	4690      	mov	r8, r2
 8005582:	58c3      	ldr	r3, [r0, r3]
 8005584:	3711      	adds	r7, #17
 8005586:	e00c      	b.n	80055a2 <d_print_mod+0x482>
 8005588:	0019      	movs	r1, r3
 800558a:	3301      	adds	r3, #1
 800558c:	2280      	movs	r2, #128	; 0x80
 800558e:	0052      	lsls	r2, r2, #1
 8005590:	50a3      	str	r3, [r4, r2]
 8005592:	3501      	adds	r5, #1
 8005594:	3204      	adds	r2, #4
 8005596:	5466      	strb	r6, [r4, r1]
 8005598:	54a6      	strb	r6, [r4, r2]
 800559a:	42af      	cmp	r7, r5
 800559c:	d100      	bne.n	80055a0 <d_print_mod+0x480>
 800559e:	e5d5      	b.n	800514c <d_print_mod+0x2c>
 80055a0:	782e      	ldrb	r6, [r5, #0]
 80055a2:	2bff      	cmp	r3, #255	; 0xff
 80055a4:	d1f0      	bne.n	8005588 <d_print_mod+0x468>
 80055a6:	4652      	mov	r2, sl
 80055a8:	54e2      	strb	r2, [r4, r3]
 80055aa:	464b      	mov	r3, r9
 80055ac:	58e2      	ldr	r2, [r4, r3]
 80055ae:	4643      	mov	r3, r8
 80055b0:	21ff      	movs	r1, #255	; 0xff
 80055b2:	58e3      	ldr	r3, [r4, r3]
 80055b4:	0020      	movs	r0, r4
 80055b6:	4798      	blx	r3
 80055b8:	2294      	movs	r2, #148	; 0x94
 80055ba:	0052      	lsls	r2, r2, #1
 80055bc:	58a3      	ldr	r3, [r4, r2]
 80055be:	2100      	movs	r1, #0
 80055c0:	3301      	adds	r3, #1
 80055c2:	50a3      	str	r3, [r4, r2]
 80055c4:	2301      	movs	r3, #1
 80055c6:	e7e1      	b.n	800558c <d_print_mod+0x46c>
 80055c8:	2208      	movs	r2, #8
 80055ca:	4690      	mov	r8, r2
 80055cc:	2200      	movs	r2, #0
 80055ce:	2380      	movs	r3, #128	; 0x80
 80055d0:	4693      	mov	fp, r2
 80055d2:	320d      	adds	r2, #13
 80055d4:	32ff      	adds	r2, #255	; 0xff
 80055d6:	4e80      	ldr	r6, [pc, #512]	; (80057d8 <d_print_mod+0x6b8>)
 80055d8:	4692      	mov	sl, r2
 80055da:	005b      	lsls	r3, r3, #1
 80055dc:	3a04      	subs	r2, #4
 80055de:	2720      	movs	r7, #32
 80055e0:	4691      	mov	r9, r2
 80055e2:	58c3      	ldr	r3, [r0, r3]
 80055e4:	44b0      	add	r8, r6
 80055e6:	e00b      	b.n	8005600 <d_print_mod+0x4e0>
 80055e8:	0019      	movs	r1, r3
 80055ea:	3301      	adds	r3, #1
 80055ec:	2280      	movs	r2, #128	; 0x80
 80055ee:	0052      	lsls	r2, r2, #1
 80055f0:	50a3      	str	r3, [r4, r2]
 80055f2:	3204      	adds	r2, #4
 80055f4:	5467      	strb	r7, [r4, r1]
 80055f6:	54a7      	strb	r7, [r4, r2]
 80055f8:	45b0      	cmp	r8, r6
 80055fa:	d014      	beq.n	8005626 <d_print_mod+0x506>
 80055fc:	7837      	ldrb	r7, [r6, #0]
 80055fe:	3601      	adds	r6, #1
 8005600:	2bff      	cmp	r3, #255	; 0xff
 8005602:	d1f1      	bne.n	80055e8 <d_print_mod+0x4c8>
 8005604:	465a      	mov	r2, fp
 8005606:	54e2      	strb	r2, [r4, r3]
 8005608:	4653      	mov	r3, sl
 800560a:	58e2      	ldr	r2, [r4, r3]
 800560c:	464b      	mov	r3, r9
 800560e:	21ff      	movs	r1, #255	; 0xff
 8005610:	58e3      	ldr	r3, [r4, r3]
 8005612:	0020      	movs	r0, r4
 8005614:	4798      	blx	r3
 8005616:	2294      	movs	r2, #148	; 0x94
 8005618:	0052      	lsls	r2, r2, #1
 800561a:	58a3      	ldr	r3, [r4, r2]
 800561c:	2100      	movs	r1, #0
 800561e:	3301      	adds	r3, #1
 8005620:	50a3      	str	r3, [r4, r2]
 8005622:	2301      	movs	r3, #1
 8005624:	e7e2      	b.n	80055ec <d_print_mod+0x4cc>
 8005626:	692a      	ldr	r2, [r5, #16]
 8005628:	2a00      	cmp	r2, #0
 800562a:	d100      	bne.n	800562e <d_print_mod+0x50e>
 800562c:	e58e      	b.n	800514c <d_print_mod+0x2c>
 800562e:	2bff      	cmp	r3, #255	; 0xff
 8005630:	d064      	beq.n	80056fc <d_print_mod+0x5dc>
 8005632:	1c59      	adds	r1, r3, #1
 8005634:	2580      	movs	r5, #128	; 0x80
 8005636:	006d      	lsls	r5, r5, #1
 8005638:	5161      	str	r1, [r4, r5]
 800563a:	2128      	movs	r1, #40	; 0x28
 800563c:	54e1      	strb	r1, [r4, r3]
 800563e:	2382      	movs	r3, #130	; 0x82
 8005640:	005b      	lsls	r3, r3, #1
 8005642:	54e1      	strb	r1, [r4, r3]
 8005644:	0020      	movs	r0, r4
 8005646:	3917      	subs	r1, #23
 8005648:	f7ff fd3c 	bl	80050c4 <d_print_comp>
 800564c:	5963      	ldr	r3, [r4, r5]
 800564e:	2bff      	cmp	r3, #255	; 0xff
 8005650:	d11a      	bne.n	8005688 <d_print_mod+0x568>
 8005652:	2200      	movs	r2, #0
 8005654:	54e2      	strb	r2, [r4, r3]
 8005656:	2386      	movs	r3, #134	; 0x86
 8005658:	005b      	lsls	r3, r3, #1
 800565a:	58e2      	ldr	r2, [r4, r3]
 800565c:	3b04      	subs	r3, #4
 800565e:	21ff      	movs	r1, #255	; 0xff
 8005660:	58e3      	ldr	r3, [r4, r3]
 8005662:	0020      	movs	r0, r4
 8005664:	4798      	blx	r3
 8005666:	2294      	movs	r2, #148	; 0x94
 8005668:	0052      	lsls	r2, r2, #1
 800566a:	58a3      	ldr	r3, [r4, r2]
 800566c:	2101      	movs	r1, #1
 800566e:	3301      	adds	r3, #1
 8005670:	50a3      	str	r3, [r4, r2]
 8005672:	2300      	movs	r3, #0
 8005674:	e009      	b.n	800568a <d_print_mod+0x56a>
 8005676:	2111      	movs	r1, #17
 8005678:	0020      	movs	r0, r4
 800567a:	68ea      	ldr	r2, [r5, #12]
 800567c:	f7ff fd22 	bl	80050c4 <d_print_comp>
 8005680:	4643      	mov	r3, r8
 8005682:	58e3      	ldr	r3, [r4, r3]
 8005684:	2bff      	cmp	r3, #255	; 0xff
 8005686:	d0e4      	beq.n	8005652 <d_print_mod+0x532>
 8005688:	1c59      	adds	r1, r3, #1
 800568a:	2280      	movs	r2, #128	; 0x80
 800568c:	0052      	lsls	r2, r2, #1
 800568e:	50a1      	str	r1, [r4, r2]
 8005690:	3ad7      	subs	r2, #215	; 0xd7
 8005692:	54e2      	strb	r2, [r4, r3]
 8005694:	2382      	movs	r3, #130	; 0x82
 8005696:	005b      	lsls	r3, r3, #1
 8005698:	54e2      	strb	r2, [r4, r3]
 800569a:	e557      	b.n	800514c <d_print_mod+0x2c>
 800569c:	2380      	movs	r3, #128	; 0x80
 800569e:	005b      	lsls	r3, r3, #1
 80056a0:	58c3      	ldr	r3, [r0, r3]
 80056a2:	2bff      	cmp	r3, #255	; 0xff
 80056a4:	d071      	beq.n	800578a <d_print_mod+0x66a>
 80056a6:	1c59      	adds	r1, r3, #1
 80056a8:	2280      	movs	r2, #128	; 0x80
 80056aa:	0052      	lsls	r2, r2, #1
 80056ac:	50a1      	str	r1, [r4, r2]
 80056ae:	3ae0      	subs	r2, #224	; 0xe0
 80056b0:	54e2      	strb	r2, [r4, r3]
 80056b2:	2382      	movs	r3, #130	; 0x82
 80056b4:	005b      	lsls	r3, r3, #1
 80056b6:	54e2      	strb	r2, [r4, r3]
 80056b8:	e6e1      	b.n	800547e <d_print_mod+0x35e>
 80056ba:	2200      	movs	r2, #0
 80056bc:	54e2      	strb	r2, [r4, r3]
 80056be:	2386      	movs	r3, #134	; 0x86
 80056c0:	005b      	lsls	r3, r3, #1
 80056c2:	58e2      	ldr	r2, [r4, r3]
 80056c4:	3b04      	subs	r3, #4
 80056c6:	21ff      	movs	r1, #255	; 0xff
 80056c8:	58e3      	ldr	r3, [r4, r3]
 80056ca:	0020      	movs	r0, r4
 80056cc:	4798      	blx	r3
 80056ce:	2294      	movs	r2, #148	; 0x94
 80056d0:	0052      	lsls	r2, r2, #1
 80056d2:	58a3      	ldr	r3, [r4, r2]
 80056d4:	2101      	movs	r1, #1
 80056d6:	3301      	adds	r3, #1
 80056d8:	50a3      	str	r3, [r4, r2]
 80056da:	2300      	movs	r3, #0
 80056dc:	e634      	b.n	8005348 <d_print_mod+0x228>
 80056de:	2380      	movs	r3, #128	; 0x80
 80056e0:	005b      	lsls	r3, r3, #1
 80056e2:	58c3      	ldr	r3, [r0, r3]
 80056e4:	2bff      	cmp	r3, #255	; 0xff
 80056e6:	d061      	beq.n	80057ac <d_print_mod+0x68c>
 80056e8:	1c59      	adds	r1, r3, #1
 80056ea:	2280      	movs	r2, #128	; 0x80
 80056ec:	0052      	lsls	r2, r2, #1
 80056ee:	50a1      	str	r1, [r4, r2]
 80056f0:	3ad6      	subs	r2, #214	; 0xd6
 80056f2:	54e2      	strb	r2, [r4, r3]
 80056f4:	2382      	movs	r3, #130	; 0x82
 80056f6:	005b      	lsls	r3, r3, #1
 80056f8:	54e2      	strb	r2, [r4, r3]
 80056fa:	e527      	b.n	800514c <d_print_mod+0x2c>
 80056fc:	2200      	movs	r2, #0
 80056fe:	54e2      	strb	r2, [r4, r3]
 8005700:	2386      	movs	r3, #134	; 0x86
 8005702:	005b      	lsls	r3, r3, #1
 8005704:	58e2      	ldr	r2, [r4, r3]
 8005706:	3b04      	subs	r3, #4
 8005708:	21ff      	movs	r1, #255	; 0xff
 800570a:	58e3      	ldr	r3, [r4, r3]
 800570c:	0020      	movs	r0, r4
 800570e:	4798      	blx	r3
 8005710:	2294      	movs	r2, #148	; 0x94
 8005712:	0052      	lsls	r2, r2, #1
 8005714:	58a3      	ldr	r3, [r4, r2]
 8005716:	2101      	movs	r1, #1
 8005718:	3301      	adds	r3, #1
 800571a:	50a3      	str	r3, [r4, r2]
 800571c:	2300      	movs	r3, #0
 800571e:	692a      	ldr	r2, [r5, #16]
 8005720:	e788      	b.n	8005634 <d_print_mod+0x514>
 8005722:	2200      	movs	r2, #0
 8005724:	54c2      	strb	r2, [r0, r3]
 8005726:	2386      	movs	r3, #134	; 0x86
 8005728:	005b      	lsls	r3, r3, #1
 800572a:	58c2      	ldr	r2, [r0, r3]
 800572c:	3b04      	subs	r3, #4
 800572e:	21ff      	movs	r1, #255	; 0xff
 8005730:	58c3      	ldr	r3, [r0, r3]
 8005732:	4798      	blx	r3
 8005734:	2294      	movs	r2, #148	; 0x94
 8005736:	0052      	lsls	r2, r2, #1
 8005738:	58a3      	ldr	r3, [r4, r2]
 800573a:	2101      	movs	r1, #1
 800573c:	3301      	adds	r3, #1
 800573e:	50a3      	str	r3, [r4, r2]
 8005740:	2300      	movs	r3, #0
 8005742:	e5e7      	b.n	8005314 <d_print_mod+0x1f4>
 8005744:	2300      	movs	r3, #0
 8005746:	5483      	strb	r3, [r0, r2]
 8005748:	330d      	adds	r3, #13
 800574a:	33ff      	adds	r3, #255	; 0xff
 800574c:	58c2      	ldr	r2, [r0, r3]
 800574e:	3b04      	subs	r3, #4
 8005750:	58c3      	ldr	r3, [r0, r3]
 8005752:	21ff      	movs	r1, #255	; 0xff
 8005754:	4798      	blx	r3
 8005756:	2294      	movs	r2, #148	; 0x94
 8005758:	0052      	lsls	r2, r2, #1
 800575a:	58a3      	ldr	r3, [r4, r2]
 800575c:	3301      	adds	r3, #1
 800575e:	50a3      	str	r3, [r4, r2]
 8005760:	2301      	movs	r3, #1
 8005762:	2200      	movs	r2, #0
 8005764:	e5c6      	b.n	80052f4 <d_print_mod+0x1d4>
 8005766:	2300      	movs	r3, #0
 8005768:	5483      	strb	r3, [r0, r2]
 800576a:	330d      	adds	r3, #13
 800576c:	33ff      	adds	r3, #255	; 0xff
 800576e:	58c2      	ldr	r2, [r0, r3]
 8005770:	3b04      	subs	r3, #4
 8005772:	58c3      	ldr	r3, [r0, r3]
 8005774:	21ff      	movs	r1, #255	; 0xff
 8005776:	4798      	blx	r3
 8005778:	2294      	movs	r2, #148	; 0x94
 800577a:	0052      	lsls	r2, r2, #1
 800577c:	58a3      	ldr	r3, [r4, r2]
 800577e:	3301      	adds	r3, #1
 8005780:	50a3      	str	r3, [r4, r2]
 8005782:	2320      	movs	r3, #32
 8005784:	7023      	strb	r3, [r4, #0]
 8005786:	3b1f      	subs	r3, #31
 8005788:	e5dd      	b.n	8005346 <d_print_mod+0x226>
 800578a:	2200      	movs	r2, #0
 800578c:	54c2      	strb	r2, [r0, r3]
 800578e:	2386      	movs	r3, #134	; 0x86
 8005790:	005b      	lsls	r3, r3, #1
 8005792:	58c2      	ldr	r2, [r0, r3]
 8005794:	3b04      	subs	r3, #4
 8005796:	21ff      	movs	r1, #255	; 0xff
 8005798:	58c3      	ldr	r3, [r0, r3]
 800579a:	4798      	blx	r3
 800579c:	2294      	movs	r2, #148	; 0x94
 800579e:	0052      	lsls	r2, r2, #1
 80057a0:	58a3      	ldr	r3, [r4, r2]
 80057a2:	2101      	movs	r1, #1
 80057a4:	3301      	adds	r3, #1
 80057a6:	50a3      	str	r3, [r4, r2]
 80057a8:	2300      	movs	r3, #0
 80057aa:	e77d      	b.n	80056a8 <d_print_mod+0x588>
 80057ac:	2200      	movs	r2, #0
 80057ae:	54c2      	strb	r2, [r0, r3]
 80057b0:	2386      	movs	r3, #134	; 0x86
 80057b2:	005b      	lsls	r3, r3, #1
 80057b4:	58c2      	ldr	r2, [r0, r3]
 80057b6:	3b04      	subs	r3, #4
 80057b8:	21ff      	movs	r1, #255	; 0xff
 80057ba:	58c3      	ldr	r3, [r0, r3]
 80057bc:	4798      	blx	r3
 80057be:	2294      	movs	r2, #148	; 0x94
 80057c0:	0052      	lsls	r2, r2, #1
 80057c2:	58a3      	ldr	r3, [r4, r2]
 80057c4:	2101      	movs	r1, #1
 80057c6:	3301      	adds	r3, #1
 80057c8:	50a3      	str	r3, [r4, r2]
 80057ca:	2300      	movs	r3, #0
 80057cc:	e78d      	b.n	80056ea <d_print_mod+0x5ca>
 80057ce:	46c0      	nop			; (mov r8, r8)
 80057d0:	0800ff35 	.word	0x0800ff35
 80057d4:	0800feec 	.word	0x0800feec
 80057d8:	0800ff01 	.word	0x0800ff01

080057dc <d_print_function_type>:
 80057dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80057de:	464e      	mov	r6, r9
 80057e0:	4645      	mov	r5, r8
 80057e2:	46de      	mov	lr, fp
 80057e4:	4657      	mov	r7, sl
 80057e6:	0004      	movs	r4, r0
 80057e8:	b5e0      	push	{r5, r6, r7, lr}
 80057ea:	0016      	movs	r6, r2
 80057ec:	1e1d      	subs	r5, r3, #0
 80057ee:	d018      	beq.n	8005822 <d_print_function_type+0x46>
 80057f0:	22e0      	movs	r2, #224	; 0xe0
 80057f2:	0112      	lsls	r2, r2, #4
 80057f4:	2701      	movs	r7, #1
 80057f6:	4694      	mov	ip, r2
 80057f8:	4886      	ldr	r0, [pc, #536]	; (8005a14 <d_print_function_type+0x238>)
 80057fa:	689a      	ldr	r2, [r3, #8]
 80057fc:	2a00      	cmp	r2, #0
 80057fe:	d110      	bne.n	8005822 <d_print_function_type+0x46>
 8005800:	685a      	ldr	r2, [r3, #4]
 8005802:	7811      	ldrb	r1, [r2, #0]
 8005804:	3919      	subs	r1, #25
 8005806:	b2c9      	uxtb	r1, r1
 8005808:	2912      	cmp	r1, #18
 800580a:	d807      	bhi.n	800581c <d_print_function_type+0x40>
 800580c:	003a      	movs	r2, r7
 800580e:	408a      	lsls	r2, r1
 8005810:	4202      	tst	r2, r0
 8005812:	d156      	bne.n	80058c2 <d_print_function_type+0xe6>
 8005814:	4661      	mov	r1, ip
 8005816:	420a      	tst	r2, r1
 8005818:	d000      	beq.n	800581c <d_print_function_type+0x40>
 800581a:	e09f      	b.n	800595c <d_print_function_type+0x180>
 800581c:	681b      	ldr	r3, [r3, #0]
 800581e:	2b00      	cmp	r3, #0
 8005820:	d1eb      	bne.n	80057fa <d_print_function_type+0x1e>
 8005822:	238a      	movs	r3, #138	; 0x8a
 8005824:	2200      	movs	r2, #0
 8005826:	005b      	lsls	r3, r3, #1
 8005828:	58e7      	ldr	r7, [r4, r3]
 800582a:	2111      	movs	r1, #17
 800582c:	50e2      	str	r2, [r4, r3]
 800582e:	0020      	movs	r0, r4
 8005830:	2300      	movs	r3, #0
 8005832:	002a      	movs	r2, r5
 8005834:	f000 f8f2 	bl	8005a1c <d_print_mod_list>
 8005838:	2380      	movs	r3, #128	; 0x80
 800583a:	005b      	lsls	r3, r3, #1
 800583c:	58e2      	ldr	r2, [r4, r3]
 800583e:	2aff      	cmp	r2, #255	; 0xff
 8005840:	d06d      	beq.n	800591e <d_print_function_type+0x142>
 8005842:	2180      	movs	r1, #128	; 0x80
 8005844:	1c53      	adds	r3, r2, #1
 8005846:	0049      	lsls	r1, r1, #1
 8005848:	5063      	str	r3, [r4, r1]
 800584a:	39d8      	subs	r1, #216	; 0xd8
 800584c:	54a1      	strb	r1, [r4, r2]
 800584e:	2282      	movs	r2, #130	; 0x82
 8005850:	0052      	lsls	r2, r2, #1
 8005852:	54a1      	strb	r1, [r4, r2]
 8005854:	6932      	ldr	r2, [r6, #16]
 8005856:	2a00      	cmp	r2, #0
 8005858:	d006      	beq.n	8005868 <d_print_function_type+0x8c>
 800585a:	2111      	movs	r1, #17
 800585c:	0020      	movs	r0, r4
 800585e:	f7ff fc31 	bl	80050c4 <d_print_comp>
 8005862:	2380      	movs	r3, #128	; 0x80
 8005864:	005b      	lsls	r3, r3, #1
 8005866:	58e3      	ldr	r3, [r4, r3]
 8005868:	2bff      	cmp	r3, #255	; 0xff
 800586a:	d018      	beq.n	800589e <d_print_function_type+0xc2>
 800586c:	1c59      	adds	r1, r3, #1
 800586e:	2280      	movs	r2, #128	; 0x80
 8005870:	0052      	lsls	r2, r2, #1
 8005872:	50a1      	str	r1, [r4, r2]
 8005874:	3ad7      	subs	r2, #215	; 0xd7
 8005876:	54e2      	strb	r2, [r4, r3]
 8005878:	2382      	movs	r3, #130	; 0x82
 800587a:	005b      	lsls	r3, r3, #1
 800587c:	54e2      	strb	r2, [r4, r3]
 800587e:	3b04      	subs	r3, #4
 8005880:	002a      	movs	r2, r5
 8005882:	2111      	movs	r1, #17
 8005884:	0020      	movs	r0, r4
 8005886:	3bff      	subs	r3, #255	; 0xff
 8005888:	f000 f8c8 	bl	8005a1c <d_print_mod_list>
 800588c:	238a      	movs	r3, #138	; 0x8a
 800588e:	005b      	lsls	r3, r3, #1
 8005890:	50e7      	str	r7, [r4, r3]
 8005892:	bcf0      	pop	{r4, r5, r6, r7}
 8005894:	46bb      	mov	fp, r7
 8005896:	46b2      	mov	sl, r6
 8005898:	46a9      	mov	r9, r5
 800589a:	46a0      	mov	r8, r4
 800589c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800589e:	2200      	movs	r2, #0
 80058a0:	54e2      	strb	r2, [r4, r3]
 80058a2:	2386      	movs	r3, #134	; 0x86
 80058a4:	005b      	lsls	r3, r3, #1
 80058a6:	58e2      	ldr	r2, [r4, r3]
 80058a8:	3b04      	subs	r3, #4
 80058aa:	21ff      	movs	r1, #255	; 0xff
 80058ac:	58e3      	ldr	r3, [r4, r3]
 80058ae:	0020      	movs	r0, r4
 80058b0:	4798      	blx	r3
 80058b2:	2294      	movs	r2, #148	; 0x94
 80058b4:	0052      	lsls	r2, r2, #1
 80058b6:	58a3      	ldr	r3, [r4, r2]
 80058b8:	2101      	movs	r1, #1
 80058ba:	3301      	adds	r3, #1
 80058bc:	50a3      	str	r3, [r4, r2]
 80058be:	2300      	movs	r3, #0
 80058c0:	e7d5      	b.n	800586e <d_print_function_type+0x92>
 80058c2:	2382      	movs	r3, #130	; 0x82
 80058c4:	005b      	lsls	r3, r3, #1
 80058c6:	5ce3      	ldrb	r3, [r4, r3]
 80058c8:	2b20      	cmp	r3, #32
 80058ca:	d151      	bne.n	8005970 <d_print_function_type+0x194>
 80058cc:	2380      	movs	r3, #128	; 0x80
 80058ce:	005b      	lsls	r3, r3, #1
 80058d0:	58e3      	ldr	r3, [r4, r3]
 80058d2:	2bff      	cmp	r3, #255	; 0xff
 80058d4:	d05a      	beq.n	800598c <d_print_function_type+0x1b0>
 80058d6:	1c5a      	adds	r2, r3, #1
 80058d8:	2180      	movs	r1, #128	; 0x80
 80058da:	0049      	lsls	r1, r1, #1
 80058dc:	5062      	str	r2, [r4, r1]
 80058de:	2228      	movs	r2, #40	; 0x28
 80058e0:	54e2      	strb	r2, [r4, r3]
 80058e2:	2382      	movs	r3, #130	; 0x82
 80058e4:	005b      	lsls	r3, r3, #1
 80058e6:	54e2      	strb	r2, [r4, r3]
 80058e8:	4691      	mov	r9, r2
 80058ea:	2200      	movs	r2, #0
 80058ec:	4688      	mov	r8, r1
 80058ee:	469a      	mov	sl, r3
 80058f0:	3310      	adds	r3, #16
 80058f2:	58e7      	ldr	r7, [r4, r3]
 80058f4:	4693      	mov	fp, r2
 80058f6:	50e2      	str	r2, [r4, r3]
 80058f8:	0020      	movs	r0, r4
 80058fa:	2300      	movs	r3, #0
 80058fc:	002a      	movs	r2, r5
 80058fe:	39ef      	subs	r1, #239	; 0xef
 8005900:	f000 f88c 	bl	8005a1c <d_print_mod_list>
 8005904:	4643      	mov	r3, r8
 8005906:	58e3      	ldr	r3, [r4, r3]
 8005908:	2bff      	cmp	r3, #255	; 0xff
 800590a:	d052      	beq.n	80059b2 <d_print_function_type+0x1d6>
 800590c:	4641      	mov	r1, r8
 800590e:	1c5a      	adds	r2, r3, #1
 8005910:	5062      	str	r2, [r4, r1]
 8005912:	39d7      	subs	r1, #215	; 0xd7
 8005914:	54e1      	strb	r1, [r4, r3]
 8005916:	4653      	mov	r3, sl
 8005918:	54e1      	strb	r1, [r4, r3]
 800591a:	2aff      	cmp	r2, #255	; 0xff
 800591c:	d191      	bne.n	8005842 <d_print_function_type+0x66>
 800591e:	2300      	movs	r3, #0
 8005920:	54a3      	strb	r3, [r4, r2]
 8005922:	330d      	adds	r3, #13
 8005924:	33ff      	adds	r3, #255	; 0xff
 8005926:	58e2      	ldr	r2, [r4, r3]
 8005928:	3b04      	subs	r3, #4
 800592a:	58e3      	ldr	r3, [r4, r3]
 800592c:	21ff      	movs	r1, #255	; 0xff
 800592e:	0020      	movs	r0, r4
 8005930:	4798      	blx	r3
 8005932:	2294      	movs	r2, #148	; 0x94
 8005934:	0052      	lsls	r2, r2, #1
 8005936:	58a3      	ldr	r3, [r4, r2]
 8005938:	3301      	adds	r3, #1
 800593a:	50a3      	str	r3, [r4, r2]
 800593c:	2380      	movs	r3, #128	; 0x80
 800593e:	3a28      	subs	r2, #40	; 0x28
 8005940:	005b      	lsls	r3, r3, #1
 8005942:	3aff      	subs	r2, #255	; 0xff
 8005944:	50e2      	str	r2, [r4, r3]
 8005946:	3204      	adds	r2, #4
 8005948:	3bd8      	subs	r3, #216	; 0xd8
 800594a:	32ff      	adds	r2, #255	; 0xff
 800594c:	7023      	strb	r3, [r4, #0]
 800594e:	54a3      	strb	r3, [r4, r2]
 8005950:	6932      	ldr	r2, [r6, #16]
 8005952:	2a00      	cmp	r2, #0
 8005954:	d000      	beq.n	8005958 <d_print_function_type+0x17c>
 8005956:	e780      	b.n	800585a <d_print_function_type+0x7e>
 8005958:	2301      	movs	r3, #1
 800595a:	e787      	b.n	800586c <d_print_function_type+0x90>
 800595c:	2382      	movs	r3, #130	; 0x82
 800595e:	005b      	lsls	r3, r3, #1
 8005960:	5ce3      	ldrb	r3, [r4, r3]
 8005962:	2202      	movs	r2, #2
 8005964:	0019      	movs	r1, r3
 8005966:	4391      	bics	r1, r2
 8005968:	2928      	cmp	r1, #40	; 0x28
 800596a:	d0af      	beq.n	80058cc <d_print_function_type+0xf0>
 800596c:	2b20      	cmp	r3, #32
 800596e:	d0ad      	beq.n	80058cc <d_print_function_type+0xf0>
 8005970:	2180      	movs	r1, #128	; 0x80
 8005972:	0049      	lsls	r1, r1, #1
 8005974:	5862      	ldr	r2, [r4, r1]
 8005976:	2aff      	cmp	r2, #255	; 0xff
 8005978:	d038      	beq.n	80059ec <d_print_function_type+0x210>
 800597a:	1c53      	adds	r3, r2, #1
 800597c:	5063      	str	r3, [r4, r1]
 800597e:	39e0      	subs	r1, #224	; 0xe0
 8005980:	54a1      	strb	r1, [r4, r2]
 8005982:	2282      	movs	r2, #130	; 0x82
 8005984:	0052      	lsls	r2, r2, #1
 8005986:	54a1      	strb	r1, [r4, r2]
 8005988:	2bff      	cmp	r3, #255	; 0xff
 800598a:	d1a4      	bne.n	80058d6 <d_print_function_type+0xfa>
 800598c:	2200      	movs	r2, #0
 800598e:	54e2      	strb	r2, [r4, r3]
 8005990:	2386      	movs	r3, #134	; 0x86
 8005992:	005b      	lsls	r3, r3, #1
 8005994:	58e2      	ldr	r2, [r4, r3]
 8005996:	3b04      	subs	r3, #4
 8005998:	58e3      	ldr	r3, [r4, r3]
 800599a:	21ff      	movs	r1, #255	; 0xff
 800599c:	0020      	movs	r0, r4
 800599e:	4798      	blx	r3
 80059a0:	2294      	movs	r2, #148	; 0x94
 80059a2:	0052      	lsls	r2, r2, #1
 80059a4:	58a3      	ldr	r3, [r4, r2]
 80059a6:	3301      	adds	r3, #1
 80059a8:	50a3      	str	r3, [r4, r2]
 80059aa:	3a28      	subs	r2, #40	; 0x28
 80059ac:	2300      	movs	r3, #0
 80059ae:	3aff      	subs	r2, #255	; 0xff
 80059b0:	e792      	b.n	80058d8 <d_print_function_type+0xfc>
 80059b2:	465a      	mov	r2, fp
 80059b4:	54e2      	strb	r2, [r4, r3]
 80059b6:	2386      	movs	r3, #134	; 0x86
 80059b8:	005b      	lsls	r3, r3, #1
 80059ba:	58e2      	ldr	r2, [r4, r3]
 80059bc:	3b04      	subs	r3, #4
 80059be:	58e3      	ldr	r3, [r4, r3]
 80059c0:	21ff      	movs	r1, #255	; 0xff
 80059c2:	0020      	movs	r0, r4
 80059c4:	4798      	blx	r3
 80059c6:	2294      	movs	r2, #148	; 0x94
 80059c8:	0052      	lsls	r2, r2, #1
 80059ca:	58a3      	ldr	r3, [r4, r2]
 80059cc:	3301      	adds	r3, #1
 80059ce:	50a3      	str	r3, [r4, r2]
 80059d0:	2302      	movs	r3, #2
 80059d2:	4642      	mov	r2, r8
 80059d4:	50a3      	str	r3, [r4, r2]
 80059d6:	4b10      	ldr	r3, [pc, #64]	; (8005a18 <d_print_function_type+0x23c>)
 80059d8:	464a      	mov	r2, r9
 80059da:	8023      	strh	r3, [r4, #0]
 80059dc:	4653      	mov	r3, sl
 80059de:	54e2      	strb	r2, [r4, r3]
 80059e0:	6932      	ldr	r2, [r6, #16]
 80059e2:	2302      	movs	r3, #2
 80059e4:	2a00      	cmp	r2, #0
 80059e6:	d000      	beq.n	80059ea <d_print_function_type+0x20e>
 80059e8:	e737      	b.n	800585a <d_print_function_type+0x7e>
 80059ea:	e73f      	b.n	800586c <d_print_function_type+0x90>
 80059ec:	2300      	movs	r3, #0
 80059ee:	54a3      	strb	r3, [r4, r2]
 80059f0:	330d      	adds	r3, #13
 80059f2:	33ff      	adds	r3, #255	; 0xff
 80059f4:	58e2      	ldr	r2, [r4, r3]
 80059f6:	3b04      	subs	r3, #4
 80059f8:	58e3      	ldr	r3, [r4, r3]
 80059fa:	21ff      	movs	r1, #255	; 0xff
 80059fc:	0020      	movs	r0, r4
 80059fe:	4798      	blx	r3
 8005a00:	2294      	movs	r2, #148	; 0x94
 8005a02:	0052      	lsls	r2, r2, #1
 8005a04:	58a3      	ldr	r3, [r4, r2]
 8005a06:	3301      	adds	r3, #1
 8005a08:	50a3      	str	r3, [r4, r2]
 8005a0a:	2320      	movs	r3, #32
 8005a0c:	7023      	strb	r3, [r4, #0]
 8005a0e:	3b1f      	subs	r3, #31
 8005a10:	e761      	b.n	80058d6 <d_print_function_type+0xfa>
 8005a12:	46c0      	nop			; (mov r8, r8)
 8005a14:	00043107 	.word	0x00043107
 8005a18:	00002829 	.word	0x00002829

08005a1c <d_print_mod_list>:
 8005a1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005a1e:	464e      	mov	r6, r9
 8005a20:	4645      	mov	r5, r8
 8005a22:	46de      	mov	lr, fp
 8005a24:	4657      	mov	r7, sl
 8005a26:	b5e0      	push	{r5, r6, r7, lr}
 8005a28:	0014      	movs	r4, r2
 8005a2a:	0005      	movs	r5, r0
 8005a2c:	4699      	mov	r9, r3
 8005a2e:	b089      	sub	sp, #36	; 0x24
 8005a30:	2a00      	cmp	r2, #0
 8005a32:	d03f      	beq.n	8005ab4 <d_print_mod_list+0x98>
 8005a34:	238c      	movs	r3, #140	; 0x8c
 8005a36:	2788      	movs	r7, #136	; 0x88
 8005a38:	005b      	lsls	r3, r3, #1
 8005a3a:	4698      	mov	r8, r3
 8005a3c:	3b18      	subs	r3, #24
 8005a3e:	3bff      	subs	r3, #255	; 0xff
 8005a40:	469a      	mov	sl, r3
 8005a42:	464e      	mov	r6, r9
 8005a44:	007f      	lsls	r7, r7, #1
 8005a46:	e014      	b.n	8005a72 <d_print_mod_list+0x56>
 8005a48:	4651      	mov	r1, sl
 8005a4a:	60a1      	str	r1, [r4, #8]
 8005a4c:	59e9      	ldr	r1, [r5, r7]
 8005a4e:	4689      	mov	r9, r1
 8005a50:	68e1      	ldr	r1, [r4, #12]
 8005a52:	51e9      	str	r1, [r5, r7]
 8005a54:	2b29      	cmp	r3, #41	; 0x29
 8005a56:	d026      	beq.n	8005aa6 <d_print_mod_list+0x8a>
 8005a58:	2b2a      	cmp	r3, #42	; 0x2a
 8005a5a:	d03c      	beq.n	8005ad6 <d_print_mod_list+0xba>
 8005a5c:	2b02      	cmp	r3, #2
 8005a5e:	d042      	beq.n	8005ae6 <d_print_mod_list+0xca>
 8005a60:	2111      	movs	r1, #17
 8005a62:	0028      	movs	r0, r5
 8005a64:	f7ff fb5c 	bl	8005120 <d_print_mod>
 8005a68:	464b      	mov	r3, r9
 8005a6a:	51eb      	str	r3, [r5, r7]
 8005a6c:	6824      	ldr	r4, [r4, #0]
 8005a6e:	2c00      	cmp	r4, #0
 8005a70:	d020      	beq.n	8005ab4 <d_print_mod_list+0x98>
 8005a72:	4643      	mov	r3, r8
 8005a74:	58eb      	ldr	r3, [r5, r3]
 8005a76:	2b00      	cmp	r3, #0
 8005a78:	d11c      	bne.n	8005ab4 <d_print_mod_list+0x98>
 8005a7a:	68a3      	ldr	r3, [r4, #8]
 8005a7c:	2b00      	cmp	r3, #0
 8005a7e:	d1f5      	bne.n	8005a6c <d_print_mod_list+0x50>
 8005a80:	6862      	ldr	r2, [r4, #4]
 8005a82:	7813      	ldrb	r3, [r2, #0]
 8005a84:	2e00      	cmp	r6, #0
 8005a86:	d1df      	bne.n	8005a48 <d_print_mod_list+0x2c>
 8005a88:	2b4e      	cmp	r3, #78	; 0x4e
 8005a8a:	d0ef      	beq.n	8005a6c <d_print_mod_list+0x50>
 8005a8c:	d819      	bhi.n	8005ac2 <d_print_mod_list+0xa6>
 8005a8e:	0019      	movs	r1, r3
 8005a90:	391c      	subs	r1, #28
 8005a92:	2904      	cmp	r1, #4
 8005a94:	d9ea      	bls.n	8005a6c <d_print_mod_list+0x50>
 8005a96:	4651      	mov	r1, sl
 8005a98:	60a1      	str	r1, [r4, #8]
 8005a9a:	59e9      	ldr	r1, [r5, r7]
 8005a9c:	4689      	mov	r9, r1
 8005a9e:	68e1      	ldr	r1, [r4, #12]
 8005aa0:	51e9      	str	r1, [r5, r7]
 8005aa2:	2b29      	cmp	r3, #41	; 0x29
 8005aa4:	d1d8      	bne.n	8005a58 <d_print_mod_list+0x3c>
 8005aa6:	464e      	mov	r6, r9
 8005aa8:	2111      	movs	r1, #17
 8005aaa:	0028      	movs	r0, r5
 8005aac:	6823      	ldr	r3, [r4, #0]
 8005aae:	f7ff fe95 	bl	80057dc <d_print_function_type>
 8005ab2:	51ee      	str	r6, [r5, r7]
 8005ab4:	b009      	add	sp, #36	; 0x24
 8005ab6:	bcf0      	pop	{r4, r5, r6, r7}
 8005ab8:	46bb      	mov	fp, r7
 8005aba:	46b2      	mov	sl, r6
 8005abc:	46a9      	mov	r9, r5
 8005abe:	46a0      	mov	r8, r4
 8005ac0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005ac2:	3b50      	subs	r3, #80	; 0x50
 8005ac4:	2b01      	cmp	r3, #1
 8005ac6:	d9d1      	bls.n	8005a6c <d_print_mod_list+0x50>
 8005ac8:	4653      	mov	r3, sl
 8005aca:	60a3      	str	r3, [r4, #8]
 8005acc:	59eb      	ldr	r3, [r5, r7]
 8005ace:	4699      	mov	r9, r3
 8005ad0:	68e3      	ldr	r3, [r4, #12]
 8005ad2:	51eb      	str	r3, [r5, r7]
 8005ad4:	e7c4      	b.n	8005a60 <d_print_mod_list+0x44>
 8005ad6:	464e      	mov	r6, r9
 8005ad8:	2111      	movs	r1, #17
 8005ada:	0028      	movs	r0, r5
 8005adc:	6823      	ldr	r3, [r4, #0]
 8005ade:	f000 f8ff 	bl	8005ce0 <d_print_array_type>
 8005ae2:	51ee      	str	r6, [r5, r7]
 8005ae4:	e7e6      	b.n	8005ab4 <d_print_mod_list+0x98>
 8005ae6:	278a      	movs	r7, #138	; 0x8a
 8005ae8:	007f      	lsls	r7, r7, #1
 8005aea:	59eb      	ldr	r3, [r5, r7]
 8005aec:	68d2      	ldr	r2, [r2, #12]
 8005aee:	4698      	mov	r8, r3
 8005af0:	2300      	movs	r3, #0
 8005af2:	2111      	movs	r1, #17
 8005af4:	51eb      	str	r3, [r5, r7]
 8005af6:	0028      	movs	r0, r5
 8005af8:	f7ff fae4 	bl	80050c4 <d_print_comp>
 8005afc:	4643      	mov	r3, r8
 8005afe:	51eb      	str	r3, [r5, r7]
 8005b00:	4f73      	ldr	r7, [pc, #460]	; (8005cd0 <d_print_mod_list+0x2b4>)
 8005b02:	464e      	mov	r6, r9
 8005b04:	1cba      	adds	r2, r7, #2
 8005b06:	4691      	mov	r9, r2
 8005b08:	223a      	movs	r2, #58	; 0x3a
 8005b0a:	4690      	mov	r8, r2
 8005b0c:	2200      	movs	r2, #0
 8005b0e:	4693      	mov	fp, r2
 8005b10:	320d      	adds	r2, #13
 8005b12:	32ff      	adds	r2, #255	; 0xff
 8005b14:	2380      	movs	r3, #128	; 0x80
 8005b16:	4692      	mov	sl, r2
 8005b18:	0022      	movs	r2, r4
 8005b1a:	005b      	lsls	r3, r3, #1
 8005b1c:	4644      	mov	r4, r8
 8005b1e:	58eb      	ldr	r3, [r5, r3]
 8005b20:	4690      	mov	r8, r2
 8005b22:	e00c      	b.n	8005b3e <d_print_mod_list+0x122>
 8005b24:	001a      	movs	r2, r3
 8005b26:	3301      	adds	r3, #1
 8005b28:	2180      	movs	r1, #128	; 0x80
 8005b2a:	0049      	lsls	r1, r1, #1
 8005b2c:	506b      	str	r3, [r5, r1]
 8005b2e:	54ac      	strb	r4, [r5, r2]
 8005b30:	2282      	movs	r2, #130	; 0x82
 8005b32:	3701      	adds	r7, #1
 8005b34:	0052      	lsls	r2, r2, #1
 8005b36:	54ac      	strb	r4, [r5, r2]
 8005b38:	454f      	cmp	r7, r9
 8005b3a:	d014      	beq.n	8005b66 <d_print_mod_list+0x14a>
 8005b3c:	783c      	ldrb	r4, [r7, #0]
 8005b3e:	2bff      	cmp	r3, #255	; 0xff
 8005b40:	d1f0      	bne.n	8005b24 <d_print_mod_list+0x108>
 8005b42:	465a      	mov	r2, fp
 8005b44:	54ea      	strb	r2, [r5, r3]
 8005b46:	4653      	mov	r3, sl
 8005b48:	58ea      	ldr	r2, [r5, r3]
 8005b4a:	2384      	movs	r3, #132	; 0x84
 8005b4c:	005b      	lsls	r3, r3, #1
 8005b4e:	58eb      	ldr	r3, [r5, r3]
 8005b50:	21ff      	movs	r1, #255	; 0xff
 8005b52:	0028      	movs	r0, r5
 8005b54:	4798      	blx	r3
 8005b56:	2294      	movs	r2, #148	; 0x94
 8005b58:	0052      	lsls	r2, r2, #1
 8005b5a:	58ab      	ldr	r3, [r5, r2]
 8005b5c:	3301      	adds	r3, #1
 8005b5e:	50ab      	str	r3, [r5, r2]
 8005b60:	2301      	movs	r3, #1
 8005b62:	2200      	movs	r2, #0
 8005b64:	e7e0      	b.n	8005b28 <d_print_mod_list+0x10c>
 8005b66:	4644      	mov	r4, r8
 8005b68:	6862      	ldr	r2, [r4, #4]
 8005b6a:	6914      	ldr	r4, [r2, #16]
 8005b6c:	7822      	ldrb	r2, [r4, #0]
 8005b6e:	2a48      	cmp	r2, #72	; 0x48
 8005b70:	d014      	beq.n	8005b9c <d_print_mod_list+0x180>
 8005b72:	2a4e      	cmp	r2, #78	; 0x4e
 8005b74:	d00f      	beq.n	8005b96 <d_print_mod_list+0x17a>
 8005b76:	d80b      	bhi.n	8005b90 <d_print_mod_list+0x174>
 8005b78:	3a1c      	subs	r2, #28
 8005b7a:	2a04      	cmp	r2, #4
 8005b7c:	d90b      	bls.n	8005b96 <d_print_mod_list+0x17a>
 8005b7e:	0022      	movs	r2, r4
 8005b80:	2111      	movs	r1, #17
 8005b82:	0028      	movs	r0, r5
 8005b84:	f7ff fa9e 	bl	80050c4 <d_print_comp>
 8005b88:	2388      	movs	r3, #136	; 0x88
 8005b8a:	005b      	lsls	r3, r3, #1
 8005b8c:	50ee      	str	r6, [r5, r3]
 8005b8e:	e791      	b.n	8005ab4 <d_print_mod_list+0x98>
 8005b90:	3a50      	subs	r2, #80	; 0x50
 8005b92:	2a01      	cmp	r2, #1
 8005b94:	d8f3      	bhi.n	8005b7e <d_print_mod_list+0x162>
 8005b96:	68e4      	ldr	r4, [r4, #12]
 8005b98:	7822      	ldrb	r2, [r4, #0]
 8005b9a:	e7ea      	b.n	8005b72 <d_print_mod_list+0x156>
 8005b9c:	3a3c      	subs	r2, #60	; 0x3c
 8005b9e:	4692      	mov	sl, r2
 8005ba0:	326f      	adds	r2, #111	; 0x6f
 8005ba2:	4690      	mov	r8, r2
 8005ba4:	2200      	movs	r2, #0
 8005ba6:	4693      	mov	fp, r2
 8005ba8:	0022      	movs	r2, r4
 8005baa:	4f4a      	ldr	r7, [pc, #296]	; (8005cd4 <d_print_mod_list+0x2b8>)
 8005bac:	4644      	mov	r4, r8
 8005bae:	44ba      	add	sl, r7
 8005bb0:	4690      	mov	r8, r2
 8005bb2:	e00d      	b.n	8005bd0 <d_print_mod_list+0x1b4>
 8005bb4:	001a      	movs	r2, r3
 8005bb6:	3301      	adds	r3, #1
 8005bb8:	2180      	movs	r1, #128	; 0x80
 8005bba:	0049      	lsls	r1, r1, #1
 8005bbc:	506b      	str	r3, [r5, r1]
 8005bbe:	54ac      	strb	r4, [r5, r2]
 8005bc0:	2282      	movs	r2, #130	; 0x82
 8005bc2:	0052      	lsls	r2, r2, #1
 8005bc4:	4689      	mov	r9, r1
 8005bc6:	54ac      	strb	r4, [r5, r2]
 8005bc8:	4557      	cmp	r7, sl
 8005bca:	d015      	beq.n	8005bf8 <d_print_mod_list+0x1dc>
 8005bcc:	783c      	ldrb	r4, [r7, #0]
 8005bce:	3701      	adds	r7, #1
 8005bd0:	2bff      	cmp	r3, #255	; 0xff
 8005bd2:	d1ef      	bne.n	8005bb4 <d_print_mod_list+0x198>
 8005bd4:	465a      	mov	r2, fp
 8005bd6:	54ea      	strb	r2, [r5, r3]
 8005bd8:	2386      	movs	r3, #134	; 0x86
 8005bda:	005b      	lsls	r3, r3, #1
 8005bdc:	58ea      	ldr	r2, [r5, r3]
 8005bde:	3b04      	subs	r3, #4
 8005be0:	58eb      	ldr	r3, [r5, r3]
 8005be2:	21ff      	movs	r1, #255	; 0xff
 8005be4:	0028      	movs	r0, r5
 8005be6:	4798      	blx	r3
 8005be8:	2294      	movs	r2, #148	; 0x94
 8005bea:	0052      	lsls	r2, r2, #1
 8005bec:	58ab      	ldr	r3, [r5, r2]
 8005bee:	3301      	adds	r3, #1
 8005bf0:	50ab      	str	r3, [r5, r2]
 8005bf2:	2301      	movs	r3, #1
 8005bf4:	2200      	movs	r2, #0
 8005bf6:	e7df      	b.n	8005bb8 <d_print_mod_list+0x19c>
 8005bf8:	4644      	mov	r4, r8
 8005bfa:	6922      	ldr	r2, [r4, #16]
 8005bfc:	4936      	ldr	r1, [pc, #216]	; (8005cd8 <d_print_mod_list+0x2bc>)
 8005bfe:	3201      	adds	r2, #1
 8005c00:	a801      	add	r0, sp, #4
 8005c02:	f006 fb9f 	bl	800c344 <siprintf>
 8005c06:	a801      	add	r0, sp, #4
 8005c08:	f000 fee8 	bl	80069dc <strlen>
 8005c0c:	464b      	mov	r3, r9
 8005c0e:	58eb      	ldr	r3, [r5, r3]
 8005c10:	2800      	cmp	r0, #0
 8005c12:	d02d      	beq.n	8005c70 <d_print_mod_list+0x254>
 8005c14:	2200      	movs	r2, #0
 8005c16:	4681      	mov	r9, r0
 8005c18:	4693      	mov	fp, r2
 8005c1a:	af01      	add	r7, sp, #4
 8005c1c:	320d      	adds	r2, #13
 8005c1e:	44b9      	add	r9, r7
 8005c20:	32ff      	adds	r2, #255	; 0xff
 8005c22:	46b0      	mov	r8, r6
 8005c24:	4692      	mov	sl, r2
 8005c26:	464e      	mov	r6, r9
 8005c28:	46a1      	mov	r9, r4
 8005c2a:	e00a      	b.n	8005c42 <d_print_mod_list+0x226>
 8005c2c:	0019      	movs	r1, r3
 8005c2e:	3301      	adds	r3, #1
 8005c30:	2280      	movs	r2, #128	; 0x80
 8005c32:	0052      	lsls	r2, r2, #1
 8005c34:	50ab      	str	r3, [r5, r2]
 8005c36:	3701      	adds	r7, #1
 8005c38:	3204      	adds	r2, #4
 8005c3a:	546c      	strb	r4, [r5, r1]
 8005c3c:	54ac      	strb	r4, [r5, r2]
 8005c3e:	42b7      	cmp	r7, r6
 8005c40:	d014      	beq.n	8005c6c <d_print_mod_list+0x250>
 8005c42:	783c      	ldrb	r4, [r7, #0]
 8005c44:	2bff      	cmp	r3, #255	; 0xff
 8005c46:	d1f1      	bne.n	8005c2c <d_print_mod_list+0x210>
 8005c48:	465a      	mov	r2, fp
 8005c4a:	54ea      	strb	r2, [r5, r3]
 8005c4c:	4653      	mov	r3, sl
 8005c4e:	58ea      	ldr	r2, [r5, r3]
 8005c50:	2384      	movs	r3, #132	; 0x84
 8005c52:	005b      	lsls	r3, r3, #1
 8005c54:	21ff      	movs	r1, #255	; 0xff
 8005c56:	58eb      	ldr	r3, [r5, r3]
 8005c58:	0028      	movs	r0, r5
 8005c5a:	4798      	blx	r3
 8005c5c:	2294      	movs	r2, #148	; 0x94
 8005c5e:	0052      	lsls	r2, r2, #1
 8005c60:	58ab      	ldr	r3, [r5, r2]
 8005c62:	2100      	movs	r1, #0
 8005c64:	3301      	adds	r3, #1
 8005c66:	50ab      	str	r3, [r5, r2]
 8005c68:	2301      	movs	r3, #1
 8005c6a:	e7e1      	b.n	8005c30 <d_print_mod_list+0x214>
 8005c6c:	4646      	mov	r6, r8
 8005c6e:	464c      	mov	r4, r9
 8005c70:	4f1a      	ldr	r7, [pc, #104]	; (8005cdc <d_print_mod_list+0x2c0>)
 8005c72:	1cfa      	adds	r2, r7, #3
 8005c74:	4691      	mov	r9, r2
 8005c76:	227d      	movs	r2, #125	; 0x7d
 8005c78:	4690      	mov	r8, r2
 8005c7a:	2200      	movs	r2, #0
 8005c7c:	4693      	mov	fp, r2
 8005c7e:	320d      	adds	r2, #13
 8005c80:	32ff      	adds	r2, #255	; 0xff
 8005c82:	4692      	mov	sl, r2
 8005c84:	4642      	mov	r2, r8
 8005c86:	46a0      	mov	r8, r4
 8005c88:	0014      	movs	r4, r2
 8005c8a:	e00b      	b.n	8005ca4 <d_print_mod_list+0x288>
 8005c8c:	0019      	movs	r1, r3
 8005c8e:	3301      	adds	r3, #1
 8005c90:	2280      	movs	r2, #128	; 0x80
 8005c92:	0052      	lsls	r2, r2, #1
 8005c94:	50ab      	str	r3, [r5, r2]
 8005c96:	3701      	adds	r7, #1
 8005c98:	3204      	adds	r2, #4
 8005c9a:	546c      	strb	r4, [r5, r1]
 8005c9c:	54ac      	strb	r4, [r5, r2]
 8005c9e:	454f      	cmp	r7, r9
 8005ca0:	d014      	beq.n	8005ccc <d_print_mod_list+0x2b0>
 8005ca2:	783c      	ldrb	r4, [r7, #0]
 8005ca4:	2bff      	cmp	r3, #255	; 0xff
 8005ca6:	d1f1      	bne.n	8005c8c <d_print_mod_list+0x270>
 8005ca8:	465a      	mov	r2, fp
 8005caa:	54ea      	strb	r2, [r5, r3]
 8005cac:	4653      	mov	r3, sl
 8005cae:	58ea      	ldr	r2, [r5, r3]
 8005cb0:	2384      	movs	r3, #132	; 0x84
 8005cb2:	005b      	lsls	r3, r3, #1
 8005cb4:	21ff      	movs	r1, #255	; 0xff
 8005cb6:	58eb      	ldr	r3, [r5, r3]
 8005cb8:	0028      	movs	r0, r5
 8005cba:	4798      	blx	r3
 8005cbc:	2294      	movs	r2, #148	; 0x94
 8005cbe:	0052      	lsls	r2, r2, #1
 8005cc0:	58ab      	ldr	r3, [r5, r2]
 8005cc2:	2100      	movs	r1, #0
 8005cc4:	3301      	adds	r3, #1
 8005cc6:	50ab      	str	r3, [r5, r2]
 8005cc8:	2301      	movs	r3, #1
 8005cca:	e7e1      	b.n	8005c90 <d_print_mod_list+0x274>
 8005ccc:	4644      	mov	r4, r8
 8005cce:	e762      	b.n	8005b96 <d_print_mod_list+0x17a>
 8005cd0:	0800fc3c 	.word	0x0800fc3c
 8005cd4:	0800fc41 	.word	0x0800fc41
 8005cd8:	0800fbcc 	.word	0x0800fbcc
 8005cdc:	0800fc50 	.word	0x0800fc50

08005ce0 <d_print_array_type>:
 8005ce0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005ce2:	464e      	mov	r6, r9
 8005ce4:	4645      	mov	r5, r8
 8005ce6:	46de      	mov	lr, fp
 8005ce8:	4657      	mov	r7, sl
 8005cea:	0004      	movs	r4, r0
 8005cec:	b5e0      	push	{r5, r6, r7, lr}
 8005cee:	4690      	mov	r8, r2
 8005cf0:	1e1e      	subs	r6, r3, #0
 8005cf2:	d00b      	beq.n	8005d0c <d_print_array_type+0x2c>
 8005cf4:	689a      	ldr	r2, [r3, #8]
 8005cf6:	2a00      	cmp	r2, #0
 8005cf8:	d050      	beq.n	8005d9c <d_print_array_type+0xbc>
 8005cfa:	681b      	ldr	r3, [r3, #0]
 8005cfc:	2b00      	cmp	r3, #0
 8005cfe:	d1f9      	bne.n	8005cf4 <d_print_array_type+0x14>
 8005d00:	2300      	movs	r3, #0
 8005d02:	0032      	movs	r2, r6
 8005d04:	2111      	movs	r1, #17
 8005d06:	0020      	movs	r0, r4
 8005d08:	f7ff fe88 	bl	8005a1c <d_print_mod_list>
 8005d0c:	2380      	movs	r3, #128	; 0x80
 8005d0e:	005b      	lsls	r3, r3, #1
 8005d10:	58e3      	ldr	r3, [r4, r3]
 8005d12:	2bff      	cmp	r3, #255	; 0xff
 8005d14:	d100      	bne.n	8005d18 <d_print_array_type+0x38>
 8005d16:	e0ae      	b.n	8005e76 <d_print_array_type+0x196>
 8005d18:	2180      	movs	r1, #128	; 0x80
 8005d1a:	1c5a      	adds	r2, r3, #1
 8005d1c:	0049      	lsls	r1, r1, #1
 8005d1e:	5062      	str	r2, [r4, r1]
 8005d20:	39e0      	subs	r1, #224	; 0xe0
 8005d22:	54e1      	strb	r1, [r4, r3]
 8005d24:	2382      	movs	r3, #130	; 0x82
 8005d26:	005b      	lsls	r3, r3, #1
 8005d28:	54e1      	strb	r1, [r4, r3]
 8005d2a:	2aff      	cmp	r2, #255	; 0xff
 8005d2c:	d045      	beq.n	8005dba <d_print_array_type+0xda>
 8005d2e:	2180      	movs	r1, #128	; 0x80
 8005d30:	1c53      	adds	r3, r2, #1
 8005d32:	0049      	lsls	r1, r1, #1
 8005d34:	5063      	str	r3, [r4, r1]
 8005d36:	39a5      	subs	r1, #165	; 0xa5
 8005d38:	54a1      	strb	r1, [r4, r2]
 8005d3a:	2282      	movs	r2, #130	; 0x82
 8005d3c:	0052      	lsls	r2, r2, #1
 8005d3e:	54a1      	strb	r1, [r4, r2]
 8005d40:	4642      	mov	r2, r8
 8005d42:	68d2      	ldr	r2, [r2, #12]
 8005d44:	2a00      	cmp	r2, #0
 8005d46:	d006      	beq.n	8005d56 <d_print_array_type+0x76>
 8005d48:	2111      	movs	r1, #17
 8005d4a:	0020      	movs	r0, r4
 8005d4c:	f7ff f9ba 	bl	80050c4 <d_print_comp>
 8005d50:	2380      	movs	r3, #128	; 0x80
 8005d52:	005b      	lsls	r3, r3, #1
 8005d54:	58e3      	ldr	r3, [r4, r3]
 8005d56:	2bff      	cmp	r3, #255	; 0xff
 8005d58:	d00e      	beq.n	8005d78 <d_print_array_type+0x98>
 8005d5a:	1c59      	adds	r1, r3, #1
 8005d5c:	2280      	movs	r2, #128	; 0x80
 8005d5e:	0052      	lsls	r2, r2, #1
 8005d60:	50a1      	str	r1, [r4, r2]
 8005d62:	3aa3      	subs	r2, #163	; 0xa3
 8005d64:	54e2      	strb	r2, [r4, r3]
 8005d66:	2382      	movs	r3, #130	; 0x82
 8005d68:	005b      	lsls	r3, r3, #1
 8005d6a:	54e2      	strb	r2, [r4, r3]
 8005d6c:	bcf0      	pop	{r4, r5, r6, r7}
 8005d6e:	46bb      	mov	fp, r7
 8005d70:	46b2      	mov	sl, r6
 8005d72:	46a9      	mov	r9, r5
 8005d74:	46a0      	mov	r8, r4
 8005d76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005d78:	2200      	movs	r2, #0
 8005d7a:	54e2      	strb	r2, [r4, r3]
 8005d7c:	2386      	movs	r3, #134	; 0x86
 8005d7e:	005b      	lsls	r3, r3, #1
 8005d80:	58e2      	ldr	r2, [r4, r3]
 8005d82:	3b04      	subs	r3, #4
 8005d84:	21ff      	movs	r1, #255	; 0xff
 8005d86:	58e3      	ldr	r3, [r4, r3]
 8005d88:	0020      	movs	r0, r4
 8005d8a:	4798      	blx	r3
 8005d8c:	2294      	movs	r2, #148	; 0x94
 8005d8e:	0052      	lsls	r2, r2, #1
 8005d90:	58a3      	ldr	r3, [r4, r2]
 8005d92:	2101      	movs	r1, #1
 8005d94:	3301      	adds	r3, #1
 8005d96:	50a3      	str	r3, [r4, r2]
 8005d98:	2300      	movs	r3, #0
 8005d9a:	e7df      	b.n	8005d5c <d_print_array_type+0x7c>
 8005d9c:	685b      	ldr	r3, [r3, #4]
 8005d9e:	781b      	ldrb	r3, [r3, #0]
 8005da0:	2b2a      	cmp	r3, #42	; 0x2a
 8005da2:	d129      	bne.n	8005df8 <d_print_array_type+0x118>
 8005da4:	2300      	movs	r3, #0
 8005da6:	0032      	movs	r2, r6
 8005da8:	2111      	movs	r1, #17
 8005daa:	0020      	movs	r0, r4
 8005dac:	f7ff fe36 	bl	8005a1c <d_print_mod_list>
 8005db0:	2380      	movs	r3, #128	; 0x80
 8005db2:	005b      	lsls	r3, r3, #1
 8005db4:	58e2      	ldr	r2, [r4, r3]
 8005db6:	2aff      	cmp	r2, #255	; 0xff
 8005db8:	d1b9      	bne.n	8005d2e <d_print_array_type+0x4e>
 8005dba:	2300      	movs	r3, #0
 8005dbc:	54a3      	strb	r3, [r4, r2]
 8005dbe:	330d      	adds	r3, #13
 8005dc0:	33ff      	adds	r3, #255	; 0xff
 8005dc2:	58e2      	ldr	r2, [r4, r3]
 8005dc4:	3b04      	subs	r3, #4
 8005dc6:	58e3      	ldr	r3, [r4, r3]
 8005dc8:	21ff      	movs	r1, #255	; 0xff
 8005dca:	0020      	movs	r0, r4
 8005dcc:	4798      	blx	r3
 8005dce:	2294      	movs	r2, #148	; 0x94
 8005dd0:	0052      	lsls	r2, r2, #1
 8005dd2:	58a3      	ldr	r3, [r4, r2]
 8005dd4:	3301      	adds	r3, #1
 8005dd6:	50a3      	str	r3, [r4, r2]
 8005dd8:	2380      	movs	r3, #128	; 0x80
 8005dda:	3a28      	subs	r2, #40	; 0x28
 8005ddc:	005b      	lsls	r3, r3, #1
 8005dde:	3aff      	subs	r2, #255	; 0xff
 8005de0:	50e2      	str	r2, [r4, r3]
 8005de2:	3204      	adds	r2, #4
 8005de4:	3ba5      	subs	r3, #165	; 0xa5
 8005de6:	32ff      	adds	r2, #255	; 0xff
 8005de8:	7023      	strb	r3, [r4, #0]
 8005dea:	54a3      	strb	r3, [r4, r2]
 8005dec:	4643      	mov	r3, r8
 8005dee:	68da      	ldr	r2, [r3, #12]
 8005df0:	2a00      	cmp	r2, #0
 8005df2:	d1a9      	bne.n	8005d48 <d_print_array_type+0x68>
 8005df4:	2301      	movs	r3, #1
 8005df6:	e7b0      	b.n	8005d5a <d_print_array_type+0x7a>
 8005df8:	2380      	movs	r3, #128	; 0x80
 8005dfa:	4d39      	ldr	r5, [pc, #228]	; (8005ee0 <d_print_array_type+0x200>)
 8005dfc:	005b      	lsls	r3, r3, #1
 8005dfe:	1caa      	adds	r2, r5, #2
 8005e00:	4693      	mov	fp, r2
 8005e02:	2720      	movs	r7, #32
 8005e04:	58e3      	ldr	r3, [r4, r3]
 8005e06:	e00e      	b.n	8005e26 <d_print_array_type+0x146>
 8005e08:	001a      	movs	r2, r3
 8005e0a:	3301      	adds	r3, #1
 8005e0c:	2180      	movs	r1, #128	; 0x80
 8005e0e:	0049      	lsls	r1, r1, #1
 8005e10:	5063      	str	r3, [r4, r1]
 8005e12:	54a7      	strb	r7, [r4, r2]
 8005e14:	2282      	movs	r2, #130	; 0x82
 8005e16:	3501      	adds	r5, #1
 8005e18:	0052      	lsls	r2, r2, #1
 8005e1a:	4689      	mov	r9, r1
 8005e1c:	4692      	mov	sl, r2
 8005e1e:	54a7      	strb	r7, [r4, r2]
 8005e20:	455d      	cmp	r5, fp
 8005e22:	d014      	beq.n	8005e4e <d_print_array_type+0x16e>
 8005e24:	782f      	ldrb	r7, [r5, #0]
 8005e26:	2bff      	cmp	r3, #255	; 0xff
 8005e28:	d1ee      	bne.n	8005e08 <d_print_array_type+0x128>
 8005e2a:	2200      	movs	r2, #0
 8005e2c:	54e2      	strb	r2, [r4, r3]
 8005e2e:	2386      	movs	r3, #134	; 0x86
 8005e30:	005b      	lsls	r3, r3, #1
 8005e32:	58e2      	ldr	r2, [r4, r3]
 8005e34:	3b04      	subs	r3, #4
 8005e36:	58e3      	ldr	r3, [r4, r3]
 8005e38:	21ff      	movs	r1, #255	; 0xff
 8005e3a:	0020      	movs	r0, r4
 8005e3c:	4798      	blx	r3
 8005e3e:	2294      	movs	r2, #148	; 0x94
 8005e40:	0052      	lsls	r2, r2, #1
 8005e42:	58a3      	ldr	r3, [r4, r2]
 8005e44:	3301      	adds	r3, #1
 8005e46:	50a3      	str	r3, [r4, r2]
 8005e48:	2301      	movs	r3, #1
 8005e4a:	2200      	movs	r2, #0
 8005e4c:	e7de      	b.n	8005e0c <d_print_array_type+0x12c>
 8005e4e:	2300      	movs	r3, #0
 8005e50:	0032      	movs	r2, r6
 8005e52:	2111      	movs	r1, #17
 8005e54:	0020      	movs	r0, r4
 8005e56:	f7ff fde1 	bl	8005a1c <d_print_mod_list>
 8005e5a:	464b      	mov	r3, r9
 8005e5c:	58e2      	ldr	r2, [r4, r3]
 8005e5e:	2aff      	cmp	r2, #255	; 0xff
 8005e60:	d02a      	beq.n	8005eb8 <d_print_array_type+0x1d8>
 8005e62:	4649      	mov	r1, r9
 8005e64:	1c53      	adds	r3, r2, #1
 8005e66:	5063      	str	r3, [r4, r1]
 8005e68:	2129      	movs	r1, #41	; 0x29
 8005e6a:	54a1      	strb	r1, [r4, r2]
 8005e6c:	4652      	mov	r2, sl
 8005e6e:	54a1      	strb	r1, [r4, r2]
 8005e70:	2bff      	cmp	r3, #255	; 0xff
 8005e72:	d000      	beq.n	8005e76 <d_print_array_type+0x196>
 8005e74:	e750      	b.n	8005d18 <d_print_array_type+0x38>
 8005e76:	2200      	movs	r2, #0
 8005e78:	54e2      	strb	r2, [r4, r3]
 8005e7a:	2386      	movs	r3, #134	; 0x86
 8005e7c:	005b      	lsls	r3, r3, #1
 8005e7e:	58e2      	ldr	r2, [r4, r3]
 8005e80:	3b04      	subs	r3, #4
 8005e82:	58e3      	ldr	r3, [r4, r3]
 8005e84:	21ff      	movs	r1, #255	; 0xff
 8005e86:	0020      	movs	r0, r4
 8005e88:	4798      	blx	r3
 8005e8a:	2294      	movs	r2, #148	; 0x94
 8005e8c:	0052      	lsls	r2, r2, #1
 8005e8e:	58a3      	ldr	r3, [r4, r2]
 8005e90:	3301      	adds	r3, #1
 8005e92:	50a3      	str	r3, [r4, r2]
 8005e94:	2380      	movs	r3, #128	; 0x80
 8005e96:	3a27      	subs	r2, #39	; 0x27
 8005e98:	005b      	lsls	r3, r3, #1
 8005e9a:	3aff      	subs	r2, #255	; 0xff
 8005e9c:	50e2      	str	r2, [r4, r3]
 8005e9e:	4b11      	ldr	r3, [pc, #68]	; (8005ee4 <d_print_array_type+0x204>)
 8005ea0:	3259      	adds	r2, #89	; 0x59
 8005ea2:	8023      	strh	r3, [r4, #0]
 8005ea4:	2382      	movs	r3, #130	; 0x82
 8005ea6:	005b      	lsls	r3, r3, #1
 8005ea8:	54e2      	strb	r2, [r4, r3]
 8005eaa:	4643      	mov	r3, r8
 8005eac:	68da      	ldr	r2, [r3, #12]
 8005eae:	2302      	movs	r3, #2
 8005eb0:	2a00      	cmp	r2, #0
 8005eb2:	d000      	beq.n	8005eb6 <d_print_array_type+0x1d6>
 8005eb4:	e748      	b.n	8005d48 <d_print_array_type+0x68>
 8005eb6:	e750      	b.n	8005d5a <d_print_array_type+0x7a>
 8005eb8:	2300      	movs	r3, #0
 8005eba:	54a3      	strb	r3, [r4, r2]
 8005ebc:	330d      	adds	r3, #13
 8005ebe:	33ff      	adds	r3, #255	; 0xff
 8005ec0:	58e2      	ldr	r2, [r4, r3]
 8005ec2:	3b04      	subs	r3, #4
 8005ec4:	58e3      	ldr	r3, [r4, r3]
 8005ec6:	21ff      	movs	r1, #255	; 0xff
 8005ec8:	0020      	movs	r0, r4
 8005eca:	4798      	blx	r3
 8005ecc:	2294      	movs	r2, #148	; 0x94
 8005ece:	0052      	lsls	r2, r2, #1
 8005ed0:	58a3      	ldr	r3, [r4, r2]
 8005ed2:	3301      	adds	r3, #1
 8005ed4:	50a3      	str	r3, [r4, r2]
 8005ed6:	2329      	movs	r3, #41	; 0x29
 8005ed8:	7023      	strb	r3, [r4, #0]
 8005eda:	3b28      	subs	r3, #40	; 0x28
 8005edc:	e71c      	b.n	8005d18 <d_print_array_type+0x38>
 8005ede:	46c0      	nop			; (mov r8, r8)
 8005ee0:	0800fe48 	.word	0x0800fe48
 8005ee4:	00005b20 	.word	0x00005b20

08005ee8 <d_print_expr_op>:
 8005ee8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005eea:	46d6      	mov	lr, sl
 8005eec:	464f      	mov	r7, r9
 8005eee:	4646      	mov	r6, r8
 8005ef0:	7813      	ldrb	r3, [r2, #0]
 8005ef2:	0004      	movs	r4, r0
 8005ef4:	b5c0      	push	{r6, r7, lr}
 8005ef6:	2b32      	cmp	r3, #50	; 0x32
 8005ef8:	d007      	beq.n	8005f0a <d_print_expr_op+0x22>
 8005efa:	2111      	movs	r1, #17
 8005efc:	f7ff f8e2 	bl	80050c4 <d_print_comp>
 8005f00:	bce0      	pop	{r5, r6, r7}
 8005f02:	46ba      	mov	sl, r7
 8005f04:	46b1      	mov	r9, r6
 8005f06:	46a8      	mov	r8, r5
 8005f08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005f0a:	68d3      	ldr	r3, [r2, #12]
 8005f0c:	689f      	ldr	r7, [r3, #8]
 8005f0e:	685d      	ldr	r5, [r3, #4]
 8005f10:	2f00      	cmp	r7, #0
 8005f12:	d0f5      	beq.n	8005f00 <d_print_expr_op+0x18>
 8005f14:	2200      	movs	r2, #0
 8005f16:	2380      	movs	r3, #128	; 0x80
 8005f18:	4692      	mov	sl, r2
 8005f1a:	320d      	adds	r2, #13
 8005f1c:	32ff      	adds	r2, #255	; 0xff
 8005f1e:	4691      	mov	r9, r2
 8005f20:	005b      	lsls	r3, r3, #1
 8005f22:	3a04      	subs	r2, #4
 8005f24:	4690      	mov	r8, r2
 8005f26:	58c3      	ldr	r3, [r0, r3]
 8005f28:	19ef      	adds	r7, r5, r7
 8005f2a:	e00a      	b.n	8005f42 <d_print_expr_op+0x5a>
 8005f2c:	0019      	movs	r1, r3
 8005f2e:	3301      	adds	r3, #1
 8005f30:	2280      	movs	r2, #128	; 0x80
 8005f32:	0052      	lsls	r2, r2, #1
 8005f34:	50a3      	str	r3, [r4, r2]
 8005f36:	3501      	adds	r5, #1
 8005f38:	3204      	adds	r2, #4
 8005f3a:	5466      	strb	r6, [r4, r1]
 8005f3c:	54a6      	strb	r6, [r4, r2]
 8005f3e:	42bd      	cmp	r5, r7
 8005f40:	d0de      	beq.n	8005f00 <d_print_expr_op+0x18>
 8005f42:	782e      	ldrb	r6, [r5, #0]
 8005f44:	2bff      	cmp	r3, #255	; 0xff
 8005f46:	d1f1      	bne.n	8005f2c <d_print_expr_op+0x44>
 8005f48:	4652      	mov	r2, sl
 8005f4a:	54e2      	strb	r2, [r4, r3]
 8005f4c:	464b      	mov	r3, r9
 8005f4e:	58e2      	ldr	r2, [r4, r3]
 8005f50:	4643      	mov	r3, r8
 8005f52:	21ff      	movs	r1, #255	; 0xff
 8005f54:	58e3      	ldr	r3, [r4, r3]
 8005f56:	0020      	movs	r0, r4
 8005f58:	4798      	blx	r3
 8005f5a:	2294      	movs	r2, #148	; 0x94
 8005f5c:	0052      	lsls	r2, r2, #1
 8005f5e:	58a3      	ldr	r3, [r4, r2]
 8005f60:	2100      	movs	r1, #0
 8005f62:	3301      	adds	r3, #1
 8005f64:	50a3      	str	r3, [r4, r2]
 8005f66:	2301      	movs	r3, #1
 8005f68:	e7e2      	b.n	8005f30 <d_print_expr_op+0x48>
 8005f6a:	46c0      	nop			; (mov r8, r8)

08005f6c <d_demangle_callback.constprop.0>:
 8005f6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005f6e:	4657      	mov	r7, sl
 8005f70:	4645      	mov	r5, r8
 8005f72:	46de      	mov	lr, fp
 8005f74:	464e      	mov	r6, r9
 8005f76:	b5e0      	push	{r5, r6, r7, lr}
 8005f78:	b0e9      	sub	sp, #420	; 0x1a4
 8005f7a:	7803      	ldrb	r3, [r0, #0]
 8005f7c:	af00      	add	r7, sp, #0
 8005f7e:	0005      	movs	r5, r0
 8005f80:	60b9      	str	r1, [r7, #8]
 8005f82:	607a      	str	r2, [r7, #4]
 8005f84:	2b5f      	cmp	r3, #95	; 0x5f
 8005f86:	d100      	bne.n	8005f8a <d_demangle_callback.constprop.0+0x1e>
 8005f88:	e145      	b.n	8006216 <d_demangle_callback.constprop.0+0x2aa>
 8005f8a:	2208      	movs	r2, #8
 8005f8c:	0028      	movs	r0, r5
 8005f8e:	49a6      	ldr	r1, [pc, #664]	; (8006228 <d_demangle_callback.constprop.0+0x2bc>)
 8005f90:	f006 fb13 	bl	800c5ba <strncmp>
 8005f94:	2300      	movs	r3, #0
 8005f96:	469a      	mov	sl, r3
 8005f98:	2800      	cmp	r0, #0
 8005f9a:	d100      	bne.n	8005f9e <d_demangle_callback.constprop.0+0x32>
 8005f9c:	e0ff      	b.n	800619e <d_demangle_callback.constprop.0+0x232>
 8005f9e:	2301      	movs	r3, #1
 8005fa0:	64fb      	str	r3, [r7, #76]	; 0x4c
 8005fa2:	4653      	mov	r3, sl
 8005fa4:	3b02      	subs	r3, #2
 8005fa6:	001a      	movs	r2, r3
 8005fa8:	1e51      	subs	r1, r2, #1
 8005faa:	418a      	sbcs	r2, r1
 8005fac:	b2db      	uxtb	r3, r3
 8005fae:	3245      	adds	r2, #69	; 0x45
 8005fb0:	4698      	mov	r8, r3
 8005fb2:	60fa      	str	r2, [r7, #12]
 8005fb4:	e038      	b.n	8006028 <d_demangle_callback.constprop.0+0xbc>
 8005fb6:	4643      	mov	r3, r8
 8005fb8:	2b01      	cmp	r3, #1
 8005fba:	d900      	bls.n	8005fbe <d_demangle_callback.constprop.0+0x52>
 8005fbc:	e0d6      	b.n	800616c <d_demangle_callback.constprop.0+0x200>
 8005fbe:	002c      	movs	r4, r5
 8005fc0:	7aeb      	ldrb	r3, [r5, #11]
 8005fc2:	340b      	adds	r4, #11
 8005fc4:	623c      	str	r4, [r7, #32]
 8005fc6:	2b5f      	cmp	r3, #95	; 0x5f
 8005fc8:	d103      	bne.n	8005fd2 <d_demangle_callback.constprop.0+0x66>
 8005fca:	7b2b      	ldrb	r3, [r5, #12]
 8005fcc:	2b5a      	cmp	r3, #90	; 0x5a
 8005fce:	d100      	bne.n	8005fd2 <d_demangle_callback.constprop.0+0x66>
 8005fd0:	e0d6      	b.n	8006180 <d_demangle_callback.constprop.0+0x214>
 8005fd2:	2a00      	cmp	r2, #0
 8005fd4:	dc00      	bgt.n	8005fd8 <d_demangle_callback.constprop.0+0x6c>
 8005fd6:	e0d1      	b.n	800617c <d_demangle_callback.constprop.0+0x210>
 8005fd8:	0020      	movs	r0, r4
 8005fda:	f000 fcff 	bl	80069dc <strlen>
 8005fde:	2300      	movs	r3, #0
 8005fe0:	2201      	movs	r2, #1
 8005fe2:	6073      	str	r3, [r6, #4]
 8005fe4:	60b3      	str	r3, [r6, #8]
 8005fe6:	62ba      	str	r2, [r7, #40]	; 0x28
 8005fe8:	2800      	cmp	r0, #0
 8005fea:	d100      	bne.n	8005fee <d_demangle_callback.constprop.0+0x82>
 8005fec:	e0c6      	b.n	800617c <d_demangle_callback.constprop.0+0x210>
 8005fee:	7033      	strb	r3, [r6, #0]
 8005ff0:	60f4      	str	r4, [r6, #12]
 8005ff2:	6130      	str	r0, [r6, #16]
 8005ff4:	2014      	movs	r0, #20
 8005ff6:	2300      	movs	r3, #0
 8005ff8:	0032      	movs	r2, r6
 8005ffa:	68f9      	ldr	r1, [r7, #12]
 8005ffc:	1838      	adds	r0, r7, r0
 8005ffe:	f7fa f87f 	bl	8000100 <d_make_comp>
 8006002:	0006      	movs	r6, r0
 8006004:	0020      	movs	r0, r4
 8006006:	f000 fce9 	bl	80069dc <strlen>
 800600a:	1820      	adds	r0, r4, r0
 800600c:	6238      	str	r0, [r7, #32]
 800600e:	7803      	ldrb	r3, [r0, #0]
 8006010:	2b00      	cmp	r3, #0
 8006012:	d102      	bne.n	800601a <d_demangle_callback.constprop.0+0xae>
 8006014:	2e00      	cmp	r6, #0
 8006016:	d000      	beq.n	800601a <d_demangle_callback.constprop.0+0xae>
 8006018:	e108      	b.n	800622c <d_demangle_callback.constprop.0+0x2c0>
 800601a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800601c:	3301      	adds	r3, #1
 800601e:	d000      	beq.n	8006022 <d_demangle_callback.constprop.0+0xb6>
 8006020:	e0ef      	b.n	8006202 <d_demangle_callback.constprop.0+0x296>
 8006022:	2300      	movs	r3, #0
 8006024:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006026:	46cd      	mov	sp, r9
 8006028:	0028      	movs	r0, r5
 800602a:	f000 fcd7 	bl	80069dc <strlen>
 800602e:	182b      	adds	r3, r5, r0
 8006030:	61bb      	str	r3, [r7, #24]
 8006032:	2311      	movs	r3, #17
 8006034:	61fb      	str	r3, [r7, #28]
 8006036:	2300      	movs	r3, #0
 8006038:	62bb      	str	r3, [r7, #40]	; 0x28
 800603a:	637b      	str	r3, [r7, #52]	; 0x34
 800603c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800603e:	643b      	str	r3, [r7, #64]	; 0x40
 8006040:	647b      	str	r3, [r7, #68]	; 0x44
 8006042:	64bb      	str	r3, [r7, #72]	; 0x48
 8006044:	653b      	str	r3, [r7, #80]	; 0x50
 8006046:	2380      	movs	r3, #128	; 0x80
 8006048:	0042      	lsls	r2, r0, #1
 800604a:	617d      	str	r5, [r7, #20]
 800604c:	623d      	str	r5, [r7, #32]
 800604e:	62fa      	str	r2, [r7, #44]	; 0x2c
 8006050:	63b8      	str	r0, [r7, #56]	; 0x38
 8006052:	011b      	lsls	r3, r3, #4
 8006054:	429a      	cmp	r2, r3
 8006056:	d900      	bls.n	800605a <d_demangle_callback.constprop.0+0xee>
 8006058:	e0e4      	b.n	8006224 <d_demangle_callback.constprop.0+0x2b8>
 800605a:	4669      	mov	r1, sp
 800605c:	0083      	lsls	r3, r0, #2
 800605e:	1818      	adds	r0, r3, r0
 8006060:	00c0      	lsls	r0, r0, #3
 8006062:	1a09      	subs	r1, r1, r0
 8006064:	46e9      	mov	r9, sp
 8006066:	468d      	mov	sp, r1
 8006068:	3307      	adds	r3, #7
 800606a:	08db      	lsrs	r3, r3, #3
 800606c:	00db      	lsls	r3, r3, #3
 800606e:	1acb      	subs	r3, r1, r3
 8006070:	466e      	mov	r6, sp
 8006072:	633b      	str	r3, [r7, #48]	; 0x30
 8006074:	469d      	mov	sp, r3
 8006076:	4653      	mov	r3, sl
 8006078:	627e      	str	r6, [r7, #36]	; 0x24
 800607a:	2b01      	cmp	r3, #1
 800607c:	d19b      	bne.n	8005fb6 <d_demangle_callback.constprop.0+0x4a>
 800607e:	782b      	ldrb	r3, [r5, #0]
 8006080:	2b5f      	cmp	r3, #95	; 0x5f
 8006082:	d1ca      	bne.n	800601a <d_demangle_callback.constprop.0+0xae>
 8006084:	1c6b      	adds	r3, r5, #1
 8006086:	623b      	str	r3, [r7, #32]
 8006088:	786b      	ldrb	r3, [r5, #1]
 800608a:	2b5a      	cmp	r3, #90	; 0x5a
 800608c:	d1c5      	bne.n	800601a <d_demangle_callback.constprop.0+0xae>
 800608e:	1cab      	adds	r3, r5, #2
 8006090:	623b      	str	r3, [r7, #32]
 8006092:	78ab      	ldrb	r3, [r5, #2]
 8006094:	2b47      	cmp	r3, #71	; 0x47
 8006096:	d100      	bne.n	800609a <d_demangle_callback.constprop.0+0x12e>
 8006098:	e0a5      	b.n	80061e6 <d_demangle_callback.constprop.0+0x27a>
 800609a:	2b54      	cmp	r3, #84	; 0x54
 800609c:	d100      	bne.n	80060a0 <d_demangle_callback.constprop.0+0x134>
 800609e:	e0a2      	b.n	80061e6 <d_demangle_callback.constprop.0+0x27a>
 80060a0:	2314      	movs	r3, #20
 80060a2:	2101      	movs	r1, #1
 80060a4:	18f8      	adds	r0, r7, r3
 80060a6:	f7fc faaf 	bl	8002608 <d_encoding.part.0>
 80060aa:	69fb      	ldr	r3, [r7, #28]
 80060ac:	0006      	movs	r6, r0
 80060ae:	07db      	lsls	r3, r3, #31
 80060b0:	d400      	bmi.n	80060b4 <d_demangle_callback.constprop.0+0x148>
 80060b2:	e0a1      	b.n	80061f8 <d_demangle_callback.constprop.0+0x28c>
 80060b4:	2200      	movs	r2, #0
 80060b6:	6a39      	ldr	r1, [r7, #32]
 80060b8:	4693      	mov	fp, r2
 80060ba:	780b      	ldrb	r3, [r1, #0]
 80060bc:	2b2e      	cmp	r3, #46	; 0x2e
 80060be:	d1a7      	bne.n	8006010 <d_demangle_callback.constprop.0+0xa4>
 80060c0:	0008      	movs	r0, r1
 80060c2:	7843      	ldrb	r3, [r0, #1]
 80060c4:	0032      	movs	r2, r6
 80060c6:	0019      	movs	r1, r3
 80060c8:	3961      	subs	r1, #97	; 0x61
 80060ca:	603d      	str	r5, [r7, #0]
 80060cc:	2919      	cmp	r1, #25
 80060ce:	d943      	bls.n	8006158 <d_demangle_callback.constprop.0+0x1ec>
 80060d0:	2b5f      	cmp	r3, #95	; 0x5f
 80060d2:	d041      	beq.n	8006158 <d_demangle_callback.constprop.0+0x1ec>
 80060d4:	3b30      	subs	r3, #48	; 0x30
 80060d6:	2b09      	cmp	r3, #9
 80060d8:	d900      	bls.n	80060dc <d_demangle_callback.constprop.0+0x170>
 80060da:	e123      	b.n	8006324 <d_demangle_callback.constprop.0+0x3b8>
 80060dc:	0004      	movs	r4, r0
 80060de:	7803      	ldrb	r3, [r0, #0]
 80060e0:	2b2e      	cmp	r3, #46	; 0x2e
 80060e2:	d112      	bne.n	800610a <d_demangle_callback.constprop.0+0x19e>
 80060e4:	7863      	ldrb	r3, [r4, #1]
 80060e6:	3b30      	subs	r3, #48	; 0x30
 80060e8:	2b09      	cmp	r3, #9
 80060ea:	d80e      	bhi.n	800610a <d_demangle_callback.constprop.0+0x19e>
 80060ec:	78a3      	ldrb	r3, [r4, #2]
 80060ee:	1ca5      	adds	r5, r4, #2
 80060f0:	0019      	movs	r1, r3
 80060f2:	3930      	subs	r1, #48	; 0x30
 80060f4:	002c      	movs	r4, r5
 80060f6:	2909      	cmp	r1, #9
 80060f8:	d8f2      	bhi.n	80060e0 <d_demangle_callback.constprop.0+0x174>
 80060fa:	7863      	ldrb	r3, [r4, #1]
 80060fc:	3401      	adds	r4, #1
 80060fe:	0019      	movs	r1, r3
 8006100:	3930      	subs	r1, #48	; 0x30
 8006102:	2909      	cmp	r1, #9
 8006104:	d9f9      	bls.n	80060fa <d_demangle_callback.constprop.0+0x18e>
 8006106:	2b2e      	cmp	r3, #46	; 0x2e
 8006108:	d0ec      	beq.n	80060e4 <d_demangle_callback.constprop.0+0x178>
 800610a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800610c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800610e:	1a26      	subs	r6, r4, r0
 8006110:	623c      	str	r4, [r7, #32]
 8006112:	4299      	cmp	r1, r3
 8006114:	da73      	bge.n	80061fe <d_demangle_callback.constprop.0+0x292>
 8006116:	008b      	lsls	r3, r1, #2
 8006118:	185b      	adds	r3, r3, r1
 800611a:	009d      	lsls	r5, r3, #2
 800611c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800611e:	3101      	adds	r1, #1
 8006120:	195b      	adds	r3, r3, r5
 8006122:	465d      	mov	r5, fp
 8006124:	605d      	str	r5, [r3, #4]
 8006126:	609d      	str	r5, [r3, #8]
 8006128:	62b9      	str	r1, [r7, #40]	; 0x28
 800612a:	2e00      	cmp	r6, #0
 800612c:	dd67      	ble.n	80061fe <d_demangle_callback.constprop.0+0x292>
 800612e:	605d      	str	r5, [r3, #4]
 8006130:	609d      	str	r5, [r3, #8]
 8006132:	701d      	strb	r5, [r3, #0]
 8006134:	60d8      	str	r0, [r3, #12]
 8006136:	611e      	str	r6, [r3, #16]
 8006138:	2014      	movs	r0, #20
 800613a:	214f      	movs	r1, #79	; 0x4f
 800613c:	1838      	adds	r0, r7, r0
 800613e:	f7f9 ffdf 	bl	8000100 <d_make_comp>
 8006142:	7823      	ldrb	r3, [r4, #0]
 8006144:	0002      	movs	r2, r0
 8006146:	2b2e      	cmp	r3, #46	; 0x2e
 8006148:	d000      	beq.n	800614c <d_demangle_callback.constprop.0+0x1e0>
 800614a:	e0e8      	b.n	800631e <d_demangle_callback.constprop.0+0x3b2>
 800614c:	0020      	movs	r0, r4
 800614e:	7843      	ldrb	r3, [r0, #1]
 8006150:	0019      	movs	r1, r3
 8006152:	3961      	subs	r1, #97	; 0x61
 8006154:	2919      	cmp	r1, #25
 8006156:	d8bb      	bhi.n	80060d0 <d_demangle_callback.constprop.0+0x164>
 8006158:	1c84      	adds	r4, r0, #2
 800615a:	7823      	ldrb	r3, [r4, #0]
 800615c:	0019      	movs	r1, r3
 800615e:	3961      	subs	r1, #97	; 0x61
 8006160:	2919      	cmp	r1, #25
 8006162:	d901      	bls.n	8006168 <d_demangle_callback.constprop.0+0x1fc>
 8006164:	2b5f      	cmp	r3, #95	; 0x5f
 8006166:	d1bb      	bne.n	80060e0 <d_demangle_callback.constprop.0+0x174>
 8006168:	3401      	adds	r4, #1
 800616a:	e7f6      	b.n	800615a <d_demangle_callback.constprop.0+0x1ee>
 800616c:	2314      	movs	r3, #20
 800616e:	18f8      	adds	r0, r7, r3
 8006170:	f7fa fbf4 	bl	800095c <d_type>
 8006174:	6a3b      	ldr	r3, [r7, #32]
 8006176:	0006      	movs	r6, r0
 8006178:	781b      	ldrb	r3, [r3, #0]
 800617a:	e749      	b.n	8006010 <d_demangle_callback.constprop.0+0xa4>
 800617c:	2600      	movs	r6, #0
 800617e:	e739      	b.n	8005ff4 <d_demangle_callback.constprop.0+0x88>
 8006180:	002b      	movs	r3, r5
 8006182:	330d      	adds	r3, #13
 8006184:	623b      	str	r3, [r7, #32]
 8006186:	7b6b      	ldrb	r3, [r5, #13]
 8006188:	2b47      	cmp	r3, #71	; 0x47
 800618a:	d001      	beq.n	8006190 <d_demangle_callback.constprop.0+0x224>
 800618c:	2b54      	cmp	r3, #84	; 0x54
 800618e:	d122      	bne.n	80061d6 <d_demangle_callback.constprop.0+0x26a>
 8006190:	2314      	movs	r3, #20
 8006192:	18f8      	adds	r0, r7, r3
 8006194:	f7fb fef6 	bl	8001f84 <d_special_name>
 8006198:	6a3c      	ldr	r4, [r7, #32]
 800619a:	0006      	movs	r6, r0
 800619c:	e72a      	b.n	8005ff4 <d_demangle_callback.constprop.0+0x88>
 800619e:	7a2b      	ldrb	r3, [r5, #8]
 80061a0:	2b2e      	cmp	r3, #46	; 0x2e
 80061a2:	d004      	beq.n	80061ae <d_demangle_callback.constprop.0+0x242>
 80061a4:	2b5f      	cmp	r3, #95	; 0x5f
 80061a6:	d002      	beq.n	80061ae <d_demangle_callback.constprop.0+0x242>
 80061a8:	2b24      	cmp	r3, #36	; 0x24
 80061aa:	d000      	beq.n	80061ae <d_demangle_callback.constprop.0+0x242>
 80061ac:	e6f7      	b.n	8005f9e <d_demangle_callback.constprop.0+0x32>
 80061ae:	7a6b      	ldrb	r3, [r5, #9]
 80061b0:	2b44      	cmp	r3, #68	; 0x44
 80061b2:	d004      	beq.n	80061be <d_demangle_callback.constprop.0+0x252>
 80061b4:	2200      	movs	r2, #0
 80061b6:	4692      	mov	sl, r2
 80061b8:	2b49      	cmp	r3, #73	; 0x49
 80061ba:	d000      	beq.n	80061be <d_demangle_callback.constprop.0+0x252>
 80061bc:	e6ef      	b.n	8005f9e <d_demangle_callback.constprop.0+0x32>
 80061be:	2100      	movs	r1, #0
 80061c0:	7aaa      	ldrb	r2, [r5, #10]
 80061c2:	468a      	mov	sl, r1
 80061c4:	2a5f      	cmp	r2, #95	; 0x5f
 80061c6:	d000      	beq.n	80061ca <d_demangle_callback.constprop.0+0x25e>
 80061c8:	e6e9      	b.n	8005f9e <d_demangle_callback.constprop.0+0x32>
 80061ca:	3b49      	subs	r3, #73	; 0x49
 80061cc:	1e5a      	subs	r2, r3, #1
 80061ce:	4193      	sbcs	r3, r2
 80061d0:	3302      	adds	r3, #2
 80061d2:	469a      	mov	sl, r3
 80061d4:	e6e3      	b.n	8005f9e <d_demangle_callback.constprop.0+0x32>
 80061d6:	2314      	movs	r3, #20
 80061d8:	2100      	movs	r1, #0
 80061da:	18f8      	adds	r0, r7, r3
 80061dc:	f7fc fa14 	bl	8002608 <d_encoding.part.0>
 80061e0:	6a3c      	ldr	r4, [r7, #32]
 80061e2:	0006      	movs	r6, r0
 80061e4:	e706      	b.n	8005ff4 <d_demangle_callback.constprop.0+0x88>
 80061e6:	2314      	movs	r3, #20
 80061e8:	18f8      	adds	r0, r7, r3
 80061ea:	f7fb fecb 	bl	8001f84 <d_special_name>
 80061ee:	69fb      	ldr	r3, [r7, #28]
 80061f0:	0006      	movs	r6, r0
 80061f2:	07db      	lsls	r3, r3, #31
 80061f4:	d500      	bpl.n	80061f8 <d_demangle_callback.constprop.0+0x28c>
 80061f6:	e75d      	b.n	80060b4 <d_demangle_callback.constprop.0+0x148>
 80061f8:	6a3b      	ldr	r3, [r7, #32]
 80061fa:	781b      	ldrb	r3, [r3, #0]
 80061fc:	e708      	b.n	8006010 <d_demangle_callback.constprop.0+0xa4>
 80061fe:	2300      	movs	r3, #0
 8006200:	e79a      	b.n	8006138 <d_demangle_callback.constprop.0+0x1cc>
 8006202:	2000      	movs	r0, #0
 8006204:	46cd      	mov	sp, r9
 8006206:	46bd      	mov	sp, r7
 8006208:	b069      	add	sp, #420	; 0x1a4
 800620a:	bcf0      	pop	{r4, r5, r6, r7}
 800620c:	46bb      	mov	fp, r7
 800620e:	46b2      	mov	sl, r6
 8006210:	46a9      	mov	r9, r5
 8006212:	46a0      	mov	r8, r4
 8006214:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006216:	7843      	ldrb	r3, [r0, #1]
 8006218:	2b5a      	cmp	r3, #90	; 0x5a
 800621a:	d000      	beq.n	800621e <d_demangle_callback.constprop.0+0x2b2>
 800621c:	e6b5      	b.n	8005f8a <d_demangle_callback.constprop.0+0x1e>
 800621e:	2301      	movs	r3, #1
 8006220:	469a      	mov	sl, r3
 8006222:	e6bc      	b.n	8005f9e <d_demangle_callback.constprop.0+0x32>
 8006224:	2000      	movs	r0, #0
 8006226:	e7ee      	b.n	8006206 <d_demangle_callback.constprop.0+0x29a>
 8006228:	0800fbd0 	.word	0x0800fbd0
 800622c:	4698      	mov	r8, r3
 800622e:	2210      	movs	r2, #16
 8006230:	2344      	movs	r3, #68	; 0x44
 8006232:	189b      	adds	r3, r3, r2
 8006234:	19dc      	adds	r4, r3, r7
 8006236:	33f0      	adds	r3, #240	; 0xf0
 8006238:	189b      	adds	r3, r3, r2
 800623a:	4642      	mov	r2, r8
 800623c:	19db      	adds	r3, r3, r7
 800623e:	601a      	str	r2, [r3, #0]
 8006240:	2382      	movs	r3, #130	; 0x82
 8006242:	005b      	lsls	r3, r3, #1
 8006244:	54e2      	strb	r2, [r4, r3]
 8006246:	330c      	adds	r3, #12
 8006248:	50e2      	str	r2, [r4, r3]
 800624a:	3304      	adds	r3, #4
 800624c:	50e2      	str	r2, [r4, r3]
 800624e:	3310      	adds	r3, #16
 8006250:	50e2      	str	r2, [r4, r3]
 8006252:	3304      	adds	r3, #4
 8006254:	50e2      	str	r2, [r4, r3]
 8006256:	68ba      	ldr	r2, [r7, #8]
 8006258:	3b20      	subs	r3, #32
 800625a:	50e2      	str	r2, [r4, r3]
 800625c:	687a      	ldr	r2, [r7, #4]
 800625e:	3304      	adds	r3, #4
 8006260:	50e2      	str	r2, [r4, r3]
 8006262:	4642      	mov	r2, r8
 8006264:	330c      	adds	r3, #12
 8006266:	50e2      	str	r2, [r4, r3]
 8006268:	2390      	movs	r3, #144	; 0x90
 800626a:	258e      	movs	r5, #142	; 0x8e
 800626c:	005b      	lsls	r3, r3, #1
 800626e:	50e2      	str	r2, [r4, r3]
 8006270:	330c      	adds	r3, #12
 8006272:	50e2      	str	r2, [r4, r3]
 8006274:	3308      	adds	r3, #8
 8006276:	50e2      	str	r2, [r4, r3]
 8006278:	3304      	adds	r3, #4
 800627a:	50e2      	str	r2, [r4, r3]
 800627c:	3308      	adds	r3, #8
 800627e:	50e2      	str	r2, [r4, r3]
 8006280:	006d      	lsls	r5, r5, #1
 8006282:	3304      	adds	r3, #4
 8006284:	0031      	movs	r1, r6
 8006286:	0020      	movs	r0, r4
 8006288:	50e2      	str	r2, [r4, r3]
 800628a:	5162      	str	r2, [r4, r5]
 800628c:	f7fa f816 	bl	80002bc <d_count_templates_scopes>
 8006290:	2380      	movs	r3, #128	; 0x80
 8006292:	5962      	ldr	r2, [r4, r5]
 8006294:	011b      	lsls	r3, r3, #4
 8006296:	429a      	cmp	r2, r3
 8006298:	da01      	bge.n	800629e <d_demangle_callback.constprop.0+0x332>
 800629a:	4643      	mov	r3, r8
 800629c:	5163      	str	r3, [r4, r5]
 800629e:	239c      	movs	r3, #156	; 0x9c
 80062a0:	21a2      	movs	r1, #162	; 0xa2
 80062a2:	2000      	movs	r0, #0
 80062a4:	0049      	lsls	r1, r1, #1
 80062a6:	005b      	lsls	r3, r3, #1
 80062a8:	58e2      	ldr	r2, [r4, r3]
 80062aa:	5863      	ldr	r3, [r4, r1]
 80062ac:	466d      	mov	r5, sp
 80062ae:	4353      	muls	r3, r2
 80062b0:	5063      	str	r3, [r4, r1]
 80062b2:	3104      	adds	r1, #4
 80062b4:	5060      	str	r0, [r4, r1]
 80062b6:	2a00      	cmp	r2, #0
 80062b8:	dd29      	ble.n	800630e <d_demangle_callback.constprop.0+0x3a2>
 80062ba:	4669      	mov	r1, sp
 80062bc:	00d2      	lsls	r2, r2, #3
 80062be:	1a8a      	subs	r2, r1, r2
 80062c0:	4695      	mov	sp, r2
 80062c2:	2b00      	cmp	r3, #0
 80062c4:	dd21      	ble.n	800630a <d_demangle_callback.constprop.0+0x39e>
 80062c6:	4669      	mov	r1, sp
 80062c8:	00db      	lsls	r3, r3, #3
 80062ca:	1acb      	subs	r3, r1, r3
 80062cc:	469d      	mov	sp, r3
 80062ce:	2398      	movs	r3, #152	; 0x98
 80062d0:	005b      	lsls	r3, r3, #1
 80062d2:	50e2      	str	r2, [r4, r3]
 80062d4:	466a      	mov	r2, sp
 80062d6:	330c      	adds	r3, #12
 80062d8:	50e2      	str	r2, [r4, r3]
 80062da:	2111      	movs	r1, #17
 80062dc:	0032      	movs	r2, r6
 80062de:	0020      	movs	r0, r4
 80062e0:	f7fe fef0 	bl	80050c4 <d_print_comp>
 80062e4:	2380      	movs	r3, #128	; 0x80
 80062e6:	005b      	lsls	r3, r3, #1
 80062e8:	58e1      	ldr	r1, [r4, r3]
 80062ea:	2300      	movs	r3, #0
 80062ec:	5463      	strb	r3, [r4, r1]
 80062ee:	330d      	adds	r3, #13
 80062f0:	33ff      	adds	r3, #255	; 0xff
 80062f2:	58e2      	ldr	r2, [r4, r3]
 80062f4:	3b04      	subs	r3, #4
 80062f6:	0020      	movs	r0, r4
 80062f8:	58e3      	ldr	r3, [r4, r3]
 80062fa:	46ad      	mov	sp, r5
 80062fc:	4798      	blx	r3
 80062fe:	238c      	movs	r3, #140	; 0x8c
 8006300:	005b      	lsls	r3, r3, #1
 8006302:	58e0      	ldr	r0, [r4, r3]
 8006304:	4243      	negs	r3, r0
 8006306:	4158      	adcs	r0, r3
 8006308:	e77c      	b.n	8006204 <d_demangle_callback.constprop.0+0x298>
 800630a:	2301      	movs	r3, #1
 800630c:	e7db      	b.n	80062c6 <d_demangle_callback.constprop.0+0x35a>
 800630e:	2201      	movs	r2, #1
 8006310:	4669      	mov	r1, sp
 8006312:	00d2      	lsls	r2, r2, #3
 8006314:	1a8a      	subs	r2, r1, r2
 8006316:	4695      	mov	sp, r2
 8006318:	2b00      	cmp	r3, #0
 800631a:	dcd4      	bgt.n	80062c6 <d_demangle_callback.constprop.0+0x35a>
 800631c:	e7f5      	b.n	800630a <d_demangle_callback.constprop.0+0x39e>
 800631e:	0006      	movs	r6, r0
 8006320:	683d      	ldr	r5, [r7, #0]
 8006322:	e675      	b.n	8006010 <d_demangle_callback.constprop.0+0xa4>
 8006324:	0016      	movs	r6, r2
 8006326:	683d      	ldr	r5, [r7, #0]
 8006328:	e766      	b.n	80061f8 <d_demangle_callback.constprop.0+0x28c>
 800632a:	46c0      	nop			; (mov r8, r8)

0800632c <d_print_subexpr>:
 800632c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800632e:	46c6      	mov	lr, r8
 8006330:	b500      	push	{lr}
 8006332:	7813      	ldrb	r3, [r2, #0]
 8006334:	0004      	movs	r4, r0
 8006336:	0015      	movs	r5, r2
 8006338:	2601      	movs	r6, #1
 800633a:	b082      	sub	sp, #8
 800633c:	2b01      	cmp	r3, #1
 800633e:	d903      	bls.n	8006348 <d_print_subexpr+0x1c>
 8006340:	2b31      	cmp	r3, #49	; 0x31
 8006342:	d001      	beq.n	8006348 <d_print_subexpr+0x1c>
 8006344:	2b06      	cmp	r3, #6
 8006346:	d13f      	bne.n	80063c8 <d_print_subexpr+0x9c>
 8006348:	686b      	ldr	r3, [r5, #4]
 800634a:	2b01      	cmp	r3, #1
 800634c:	dc32      	bgt.n	80063b4 <d_print_subexpr+0x88>
 800634e:	278e      	movs	r7, #142	; 0x8e
 8006350:	2180      	movs	r1, #128	; 0x80
 8006352:	007f      	lsls	r7, r7, #1
 8006354:	59e2      	ldr	r2, [r4, r7]
 8006356:	00c9      	lsls	r1, r1, #3
 8006358:	428a      	cmp	r2, r1
 800635a:	dc2b      	bgt.n	80063b4 <d_print_subexpr+0x88>
 800635c:	3301      	adds	r3, #1
 800635e:	606b      	str	r3, [r5, #4]
 8006360:	2396      	movs	r3, #150	; 0x96
 8006362:	005b      	lsls	r3, r3, #1
 8006364:	4698      	mov	r8, r3
 8006366:	58e3      	ldr	r3, [r4, r3]
 8006368:	3201      	adds	r2, #1
 800636a:	51e2      	str	r2, [r4, r7]
 800636c:	9301      	str	r3, [sp, #4]
 800636e:	466a      	mov	r2, sp
 8006370:	4643      	mov	r3, r8
 8006372:	2111      	movs	r1, #17
 8006374:	50e2      	str	r2, [r4, r3]
 8006376:	0020      	movs	r0, r4
 8006378:	002a      	movs	r2, r5
 800637a:	9500      	str	r5, [sp, #0]
 800637c:	f7fc f9bc 	bl	80026f8 <d_print_comp_inner>
 8006380:	4642      	mov	r2, r8
 8006382:	9b01      	ldr	r3, [sp, #4]
 8006384:	50a3      	str	r3, [r4, r2]
 8006386:	686b      	ldr	r3, [r5, #4]
 8006388:	3b01      	subs	r3, #1
 800638a:	606b      	str	r3, [r5, #4]
 800638c:	59e3      	ldr	r3, [r4, r7]
 800638e:	3b01      	subs	r3, #1
 8006390:	51e3      	str	r3, [r4, r7]
 8006392:	2e00      	cmp	r6, #0
 8006394:	d114      	bne.n	80063c0 <d_print_subexpr+0x94>
 8006396:	2380      	movs	r3, #128	; 0x80
 8006398:	005b      	lsls	r3, r3, #1
 800639a:	58e3      	ldr	r3, [r4, r3]
 800639c:	2bff      	cmp	r3, #255	; 0xff
 800639e:	d026      	beq.n	80063ee <d_print_subexpr+0xc2>
 80063a0:	1c59      	adds	r1, r3, #1
 80063a2:	2280      	movs	r2, #128	; 0x80
 80063a4:	0052      	lsls	r2, r2, #1
 80063a6:	50a1      	str	r1, [r4, r2]
 80063a8:	3ad7      	subs	r2, #215	; 0xd7
 80063aa:	54e2      	strb	r2, [r4, r3]
 80063ac:	2382      	movs	r3, #130	; 0x82
 80063ae:	005b      	lsls	r3, r3, #1
 80063b0:	54e2      	strb	r2, [r4, r3]
 80063b2:	e005      	b.n	80063c0 <d_print_subexpr+0x94>
 80063b4:	238c      	movs	r3, #140	; 0x8c
 80063b6:	2201      	movs	r2, #1
 80063b8:	005b      	lsls	r3, r3, #1
 80063ba:	50e2      	str	r2, [r4, r3]
 80063bc:	2e00      	cmp	r6, #0
 80063be:	d0ea      	beq.n	8006396 <d_print_subexpr+0x6a>
 80063c0:	b002      	add	sp, #8
 80063c2:	bc80      	pop	{r7}
 80063c4:	46b8      	mov	r8, r7
 80063c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80063c8:	2380      	movs	r3, #128	; 0x80
 80063ca:	005b      	lsls	r3, r3, #1
 80063cc:	58c3      	ldr	r3, [r0, r3]
 80063ce:	2bff      	cmp	r3, #255	; 0xff
 80063d0:	d01e      	beq.n	8006410 <d_print_subexpr+0xe4>
 80063d2:	1c59      	adds	r1, r3, #1
 80063d4:	2280      	movs	r2, #128	; 0x80
 80063d6:	0052      	lsls	r2, r2, #1
 80063d8:	50a1      	str	r1, [r4, r2]
 80063da:	3ad8      	subs	r2, #216	; 0xd8
 80063dc:	54e2      	strb	r2, [r4, r3]
 80063de:	2382      	movs	r3, #130	; 0x82
 80063e0:	005b      	lsls	r3, r3, #1
 80063e2:	54e2      	strb	r2, [r4, r3]
 80063e4:	686b      	ldr	r3, [r5, #4]
 80063e6:	2600      	movs	r6, #0
 80063e8:	2b01      	cmp	r3, #1
 80063ea:	ddb0      	ble.n	800634e <d_print_subexpr+0x22>
 80063ec:	e7e2      	b.n	80063b4 <d_print_subexpr+0x88>
 80063ee:	54e6      	strb	r6, [r4, r3]
 80063f0:	2386      	movs	r3, #134	; 0x86
 80063f2:	005b      	lsls	r3, r3, #1
 80063f4:	58e2      	ldr	r2, [r4, r3]
 80063f6:	3b04      	subs	r3, #4
 80063f8:	21ff      	movs	r1, #255	; 0xff
 80063fa:	58e3      	ldr	r3, [r4, r3]
 80063fc:	0020      	movs	r0, r4
 80063fe:	4798      	blx	r3
 8006400:	2294      	movs	r2, #148	; 0x94
 8006402:	0052      	lsls	r2, r2, #1
 8006404:	58a3      	ldr	r3, [r4, r2]
 8006406:	2101      	movs	r1, #1
 8006408:	3301      	adds	r3, #1
 800640a:	50a3      	str	r3, [r4, r2]
 800640c:	2300      	movs	r3, #0
 800640e:	e7c8      	b.n	80063a2 <d_print_subexpr+0x76>
 8006410:	2200      	movs	r2, #0
 8006412:	54c2      	strb	r2, [r0, r3]
 8006414:	2386      	movs	r3, #134	; 0x86
 8006416:	005b      	lsls	r3, r3, #1
 8006418:	58c2      	ldr	r2, [r0, r3]
 800641a:	3b04      	subs	r3, #4
 800641c:	21ff      	movs	r1, #255	; 0xff
 800641e:	58c3      	ldr	r3, [r0, r3]
 8006420:	4798      	blx	r3
 8006422:	2294      	movs	r2, #148	; 0x94
 8006424:	0052      	lsls	r2, r2, #1
 8006426:	58a3      	ldr	r3, [r4, r2]
 8006428:	2101      	movs	r1, #1
 800642a:	3301      	adds	r3, #1
 800642c:	50a3      	str	r3, [r4, r2]
 800642e:	2300      	movs	r3, #0
 8006430:	e7d0      	b.n	80063d4 <d_print_subexpr+0xa8>
 8006432:	46c0      	nop			; (mov r8, r8)

08006434 <d_maybe_print_fold_expression>:
 8006434:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006436:	46de      	mov	lr, fp
 8006438:	4657      	mov	r7, sl
 800643a:	464e      	mov	r6, r9
 800643c:	4645      	mov	r5, r8
 800643e:	68d3      	ldr	r3, [r2, #12]
 8006440:	b5e0      	push	{r5, r6, r7, lr}
 8006442:	68db      	ldr	r3, [r3, #12]
 8006444:	0004      	movs	r4, r0
 8006446:	681b      	ldr	r3, [r3, #0]
 8006448:	2000      	movs	r0, #0
 800644a:	7819      	ldrb	r1, [r3, #0]
 800644c:	2966      	cmp	r1, #102	; 0x66
 800644e:	d176      	bne.n	800653e <d_maybe_print_fold_expression+0x10a>
 8006450:	6912      	ldr	r2, [r2, #16]
 8006452:	68d1      	ldr	r1, [r2, #12]
 8006454:	6912      	ldr	r2, [r2, #16]
 8006456:	468b      	mov	fp, r1
 8006458:	2100      	movs	r1, #0
 800645a:	4690      	mov	r8, r2
 800645c:	7812      	ldrb	r2, [r2, #0]
 800645e:	4689      	mov	r9, r1
 8006460:	2a3c      	cmp	r2, #60	; 0x3c
 8006462:	d100      	bne.n	8006466 <d_maybe_print_fold_expression+0x32>
 8006464:	e0b7      	b.n	80065d6 <d_maybe_print_fold_expression+0x1a2>
 8006466:	2292      	movs	r2, #146	; 0x92
 8006468:	0052      	lsls	r2, r2, #1
 800646a:	58a1      	ldr	r1, [r4, r2]
 800646c:	468a      	mov	sl, r1
 800646e:	2101      	movs	r1, #1
 8006470:	4249      	negs	r1, r1
 8006472:	50a1      	str	r1, [r4, r2]
 8006474:	785b      	ldrb	r3, [r3, #1]
 8006476:	2b6c      	cmp	r3, #108	; 0x6c
 8006478:	d100      	bne.n	800647c <d_maybe_print_fold_expression+0x48>
 800647a:	e0b3      	b.n	80065e4 <d_maybe_print_fold_expression+0x1b0>
 800647c:	d865      	bhi.n	800654a <d_maybe_print_fold_expression+0x116>
 800647e:	2b4c      	cmp	r3, #76	; 0x4c
 8006480:	d001      	beq.n	8006486 <d_maybe_print_fold_expression+0x52>
 8006482:	2b52      	cmp	r3, #82	; 0x52
 8006484:	d156      	bne.n	8006534 <d_maybe_print_fold_expression+0x100>
 8006486:	2380      	movs	r3, #128	; 0x80
 8006488:	005b      	lsls	r3, r3, #1
 800648a:	58e3      	ldr	r3, [r4, r3]
 800648c:	2bff      	cmp	r3, #255	; 0xff
 800648e:	d100      	bne.n	8006492 <d_maybe_print_fold_expression+0x5e>
 8006490:	e0fd      	b.n	800668e <d_maybe_print_fold_expression+0x25a>
 8006492:	1c5a      	adds	r2, r3, #1
 8006494:	2580      	movs	r5, #128	; 0x80
 8006496:	006d      	lsls	r5, r5, #1
 8006498:	5162      	str	r2, [r4, r5]
 800649a:	2228      	movs	r2, #40	; 0x28
 800649c:	54e2      	strb	r2, [r4, r3]
 800649e:	2382      	movs	r3, #130	; 0x82
 80064a0:	005b      	lsls	r3, r3, #1
 80064a2:	54e2      	strb	r2, [r4, r3]
 80064a4:	2111      	movs	r1, #17
 80064a6:	4642      	mov	r2, r8
 80064a8:	0020      	movs	r0, r4
 80064aa:	f7ff ff3f 	bl	800632c <d_print_subexpr>
 80064ae:	465a      	mov	r2, fp
 80064b0:	2111      	movs	r1, #17
 80064b2:	0020      	movs	r0, r4
 80064b4:	f7ff fd18 	bl	8005ee8 <d_print_expr_op>
 80064b8:	5963      	ldr	r3, [r4, r5]
 80064ba:	4d7e      	ldr	r5, [pc, #504]	; (80066b4 <d_maybe_print_fold_expression+0x280>)
 80064bc:	262e      	movs	r6, #46	; 0x2e
 80064be:	1cea      	adds	r2, r5, #3
 80064c0:	4690      	mov	r8, r2
 80064c2:	e00c      	b.n	80064de <d_maybe_print_fold_expression+0xaa>
 80064c4:	001a      	movs	r2, r3
 80064c6:	3301      	adds	r3, #1
 80064c8:	2780      	movs	r7, #128	; 0x80
 80064ca:	007f      	lsls	r7, r7, #1
 80064cc:	51e3      	str	r3, [r4, r7]
 80064ce:	54a6      	strb	r6, [r4, r2]
 80064d0:	2282      	movs	r2, #130	; 0x82
 80064d2:	3501      	adds	r5, #1
 80064d4:	0052      	lsls	r2, r2, #1
 80064d6:	54a6      	strb	r6, [r4, r2]
 80064d8:	4545      	cmp	r5, r8
 80064da:	d014      	beq.n	8006506 <d_maybe_print_fold_expression+0xd2>
 80064dc:	782e      	ldrb	r6, [r5, #0]
 80064de:	2bff      	cmp	r3, #255	; 0xff
 80064e0:	d1f0      	bne.n	80064c4 <d_maybe_print_fold_expression+0x90>
 80064e2:	2200      	movs	r2, #0
 80064e4:	54e2      	strb	r2, [r4, r3]
 80064e6:	2386      	movs	r3, #134	; 0x86
 80064e8:	005b      	lsls	r3, r3, #1
 80064ea:	58e2      	ldr	r2, [r4, r3]
 80064ec:	3b04      	subs	r3, #4
 80064ee:	58e3      	ldr	r3, [r4, r3]
 80064f0:	21ff      	movs	r1, #255	; 0xff
 80064f2:	0020      	movs	r0, r4
 80064f4:	4798      	blx	r3
 80064f6:	2294      	movs	r2, #148	; 0x94
 80064f8:	0052      	lsls	r2, r2, #1
 80064fa:	58a3      	ldr	r3, [r4, r2]
 80064fc:	3301      	adds	r3, #1
 80064fe:	50a3      	str	r3, [r4, r2]
 8006500:	2301      	movs	r3, #1
 8006502:	2200      	movs	r2, #0
 8006504:	e7e0      	b.n	80064c8 <d_maybe_print_fold_expression+0x94>
 8006506:	465a      	mov	r2, fp
 8006508:	2111      	movs	r1, #17
 800650a:	0020      	movs	r0, r4
 800650c:	f7ff fcec 	bl	8005ee8 <d_print_expr_op>
 8006510:	464a      	mov	r2, r9
 8006512:	2111      	movs	r1, #17
 8006514:	0020      	movs	r0, r4
 8006516:	f7ff ff09 	bl	800632c <d_print_subexpr>
 800651a:	59e3      	ldr	r3, [r4, r7]
 800651c:	2bff      	cmp	r3, #255	; 0xff
 800651e:	d100      	bne.n	8006522 <d_maybe_print_fold_expression+0xee>
 8006520:	e090      	b.n	8006644 <d_maybe_print_fold_expression+0x210>
 8006522:	1c59      	adds	r1, r3, #1
 8006524:	2280      	movs	r2, #128	; 0x80
 8006526:	0052      	lsls	r2, r2, #1
 8006528:	50a1      	str	r1, [r4, r2]
 800652a:	3ad7      	subs	r2, #215	; 0xd7
 800652c:	54e2      	strb	r2, [r4, r3]
 800652e:	2382      	movs	r3, #130	; 0x82
 8006530:	005b      	lsls	r3, r3, #1
 8006532:	54e2      	strb	r2, [r4, r3]
 8006534:	2392      	movs	r3, #146	; 0x92
 8006536:	4652      	mov	r2, sl
 8006538:	2001      	movs	r0, #1
 800653a:	005b      	lsls	r3, r3, #1
 800653c:	50e2      	str	r2, [r4, r3]
 800653e:	bcf0      	pop	{r4, r5, r6, r7}
 8006540:	46bb      	mov	fp, r7
 8006542:	46b2      	mov	sl, r6
 8006544:	46a9      	mov	r9, r5
 8006546:	46a0      	mov	r8, r4
 8006548:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800654a:	2b72      	cmp	r3, #114	; 0x72
 800654c:	d1f2      	bne.n	8006534 <d_maybe_print_fold_expression+0x100>
 800654e:	2380      	movs	r3, #128	; 0x80
 8006550:	005b      	lsls	r3, r3, #1
 8006552:	58e3      	ldr	r3, [r4, r3]
 8006554:	2bff      	cmp	r3, #255	; 0xff
 8006556:	d100      	bne.n	800655a <d_maybe_print_fold_expression+0x126>
 8006558:	e086      	b.n	8006668 <d_maybe_print_fold_expression+0x234>
 800655a:	1c5a      	adds	r2, r3, #1
 800655c:	2580      	movs	r5, #128	; 0x80
 800655e:	006d      	lsls	r5, r5, #1
 8006560:	5162      	str	r2, [r4, r5]
 8006562:	2228      	movs	r2, #40	; 0x28
 8006564:	54e2      	strb	r2, [r4, r3]
 8006566:	2382      	movs	r3, #130	; 0x82
 8006568:	005b      	lsls	r3, r3, #1
 800656a:	54e2      	strb	r2, [r4, r3]
 800656c:	2111      	movs	r1, #17
 800656e:	4642      	mov	r2, r8
 8006570:	0020      	movs	r0, r4
 8006572:	f7ff fedb 	bl	800632c <d_print_subexpr>
 8006576:	465a      	mov	r2, fp
 8006578:	2111      	movs	r1, #17
 800657a:	0020      	movs	r0, r4
 800657c:	f7ff fcb4 	bl	8005ee8 <d_print_expr_op>
 8006580:	2200      	movs	r2, #0
 8006582:	4693      	mov	fp, r2
 8006584:	320d      	adds	r2, #13
 8006586:	32ff      	adds	r2, #255	; 0xff
 8006588:	5963      	ldr	r3, [r4, r5]
 800658a:	4d4b      	ldr	r5, [pc, #300]	; (80066b8 <d_maybe_print_fold_expression+0x284>)
 800658c:	4691      	mov	r9, r2
 800658e:	3a04      	subs	r2, #4
 8006590:	262e      	movs	r6, #46	; 0x2e
 8006592:	4690      	mov	r8, r2
 8006594:	1d2f      	adds	r7, r5, #4
 8006596:	e00b      	b.n	80065b0 <d_maybe_print_fold_expression+0x17c>
 8006598:	0019      	movs	r1, r3
 800659a:	3301      	adds	r3, #1
 800659c:	2280      	movs	r2, #128	; 0x80
 800659e:	0052      	lsls	r2, r2, #1
 80065a0:	50a3      	str	r3, [r4, r2]
 80065a2:	3501      	adds	r5, #1
 80065a4:	3204      	adds	r2, #4
 80065a6:	5466      	strb	r6, [r4, r1]
 80065a8:	54a6      	strb	r6, [r4, r2]
 80065aa:	42bd      	cmp	r5, r7
 80065ac:	d0c2      	beq.n	8006534 <d_maybe_print_fold_expression+0x100>
 80065ae:	782e      	ldrb	r6, [r5, #0]
 80065b0:	2bff      	cmp	r3, #255	; 0xff
 80065b2:	d1f1      	bne.n	8006598 <d_maybe_print_fold_expression+0x164>
 80065b4:	465a      	mov	r2, fp
 80065b6:	54e2      	strb	r2, [r4, r3]
 80065b8:	464b      	mov	r3, r9
 80065ba:	58e2      	ldr	r2, [r4, r3]
 80065bc:	4643      	mov	r3, r8
 80065be:	21ff      	movs	r1, #255	; 0xff
 80065c0:	58e3      	ldr	r3, [r4, r3]
 80065c2:	0020      	movs	r0, r4
 80065c4:	4798      	blx	r3
 80065c6:	2294      	movs	r2, #148	; 0x94
 80065c8:	0052      	lsls	r2, r2, #1
 80065ca:	58a3      	ldr	r3, [r4, r2]
 80065cc:	2100      	movs	r1, #0
 80065ce:	3301      	adds	r3, #1
 80065d0:	50a3      	str	r3, [r4, r2]
 80065d2:	2301      	movs	r3, #1
 80065d4:	e7e2      	b.n	800659c <d_maybe_print_fold_expression+0x168>
 80065d6:	4642      	mov	r2, r8
 80065d8:	6912      	ldr	r2, [r2, #16]
 80065da:	4691      	mov	r9, r2
 80065dc:	4642      	mov	r2, r8
 80065de:	68d2      	ldr	r2, [r2, #12]
 80065e0:	4690      	mov	r8, r2
 80065e2:	e740      	b.n	8006466 <d_maybe_print_fold_expression+0x32>
 80065e4:	2380      	movs	r3, #128	; 0x80
 80065e6:	4d35      	ldr	r5, [pc, #212]	; (80066bc <d_maybe_print_fold_expression+0x288>)
 80065e8:	005b      	lsls	r3, r3, #1
 80065ea:	1d2a      	adds	r2, r5, #4
 80065ec:	4691      	mov	r9, r2
 80065ee:	2628      	movs	r6, #40	; 0x28
 80065f0:	58e3      	ldr	r3, [r4, r3]
 80065f2:	e00c      	b.n	800660e <d_maybe_print_fold_expression+0x1da>
 80065f4:	001a      	movs	r2, r3
 80065f6:	3301      	adds	r3, #1
 80065f8:	2780      	movs	r7, #128	; 0x80
 80065fa:	007f      	lsls	r7, r7, #1
 80065fc:	51e3      	str	r3, [r4, r7]
 80065fe:	54a6      	strb	r6, [r4, r2]
 8006600:	2282      	movs	r2, #130	; 0x82
 8006602:	3501      	adds	r5, #1
 8006604:	0052      	lsls	r2, r2, #1
 8006606:	54a6      	strb	r6, [r4, r2]
 8006608:	45a9      	cmp	r9, r5
 800660a:	d014      	beq.n	8006636 <d_maybe_print_fold_expression+0x202>
 800660c:	782e      	ldrb	r6, [r5, #0]
 800660e:	2bff      	cmp	r3, #255	; 0xff
 8006610:	d1f0      	bne.n	80065f4 <d_maybe_print_fold_expression+0x1c0>
 8006612:	2200      	movs	r2, #0
 8006614:	54e2      	strb	r2, [r4, r3]
 8006616:	2386      	movs	r3, #134	; 0x86
 8006618:	005b      	lsls	r3, r3, #1
 800661a:	58e2      	ldr	r2, [r4, r3]
 800661c:	3b04      	subs	r3, #4
 800661e:	58e3      	ldr	r3, [r4, r3]
 8006620:	21ff      	movs	r1, #255	; 0xff
 8006622:	0020      	movs	r0, r4
 8006624:	4798      	blx	r3
 8006626:	2294      	movs	r2, #148	; 0x94
 8006628:	0052      	lsls	r2, r2, #1
 800662a:	58a3      	ldr	r3, [r4, r2]
 800662c:	3301      	adds	r3, #1
 800662e:	50a3      	str	r3, [r4, r2]
 8006630:	2301      	movs	r3, #1
 8006632:	2200      	movs	r2, #0
 8006634:	e7e0      	b.n	80065f8 <d_maybe_print_fold_expression+0x1c4>
 8006636:	465a      	mov	r2, fp
 8006638:	2111      	movs	r1, #17
 800663a:	0020      	movs	r0, r4
 800663c:	f7ff fc54 	bl	8005ee8 <d_print_expr_op>
 8006640:	4642      	mov	r2, r8
 8006642:	e766      	b.n	8006512 <d_maybe_print_fold_expression+0xde>
 8006644:	2200      	movs	r2, #0
 8006646:	54e2      	strb	r2, [r4, r3]
 8006648:	2386      	movs	r3, #134	; 0x86
 800664a:	005b      	lsls	r3, r3, #1
 800664c:	58e2      	ldr	r2, [r4, r3]
 800664e:	3b04      	subs	r3, #4
 8006650:	21ff      	movs	r1, #255	; 0xff
 8006652:	58e3      	ldr	r3, [r4, r3]
 8006654:	0020      	movs	r0, r4
 8006656:	4798      	blx	r3
 8006658:	2294      	movs	r2, #148	; 0x94
 800665a:	0052      	lsls	r2, r2, #1
 800665c:	58a3      	ldr	r3, [r4, r2]
 800665e:	2101      	movs	r1, #1
 8006660:	3301      	adds	r3, #1
 8006662:	50a3      	str	r3, [r4, r2]
 8006664:	2300      	movs	r3, #0
 8006666:	e75d      	b.n	8006524 <d_maybe_print_fold_expression+0xf0>
 8006668:	2200      	movs	r2, #0
 800666a:	54e2      	strb	r2, [r4, r3]
 800666c:	2386      	movs	r3, #134	; 0x86
 800666e:	005b      	lsls	r3, r3, #1
 8006670:	58e2      	ldr	r2, [r4, r3]
 8006672:	3b04      	subs	r3, #4
 8006674:	58e3      	ldr	r3, [r4, r3]
 8006676:	21ff      	movs	r1, #255	; 0xff
 8006678:	0020      	movs	r0, r4
 800667a:	4798      	blx	r3
 800667c:	2294      	movs	r2, #148	; 0x94
 800667e:	0052      	lsls	r2, r2, #1
 8006680:	58a3      	ldr	r3, [r4, r2]
 8006682:	3301      	adds	r3, #1
 8006684:	50a3      	str	r3, [r4, r2]
 8006686:	3a28      	subs	r2, #40	; 0x28
 8006688:	2300      	movs	r3, #0
 800668a:	3aff      	subs	r2, #255	; 0xff
 800668c:	e766      	b.n	800655c <d_maybe_print_fold_expression+0x128>
 800668e:	2200      	movs	r2, #0
 8006690:	54e2      	strb	r2, [r4, r3]
 8006692:	2386      	movs	r3, #134	; 0x86
 8006694:	005b      	lsls	r3, r3, #1
 8006696:	58e2      	ldr	r2, [r4, r3]
 8006698:	3b04      	subs	r3, #4
 800669a:	58e3      	ldr	r3, [r4, r3]
 800669c:	21ff      	movs	r1, #255	; 0xff
 800669e:	0020      	movs	r0, r4
 80066a0:	4798      	blx	r3
 80066a2:	2294      	movs	r2, #148	; 0x94
 80066a4:	0052      	lsls	r2, r2, #1
 80066a6:	58a3      	ldr	r3, [r4, r2]
 80066a8:	3301      	adds	r3, #1
 80066aa:	50a3      	str	r3, [r4, r2]
 80066ac:	3a28      	subs	r2, #40	; 0x28
 80066ae:	2300      	movs	r3, #0
 80066b0:	3aff      	subs	r2, #255	; 0xff
 80066b2:	e6ef      	b.n	8006494 <d_maybe_print_fold_expression+0x60>
 80066b4:	0800fe4c 	.word	0x0800fe4c
 80066b8:	0800ff48 	.word	0x0800ff48
 80066bc:	0800ff40 	.word	0x0800ff40

080066c0 <d_maybe_print_designated_init>:
 80066c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80066c2:	2102      	movs	r1, #2
 80066c4:	46de      	mov	lr, fp
 80066c6:	4657      	mov	r7, sl
 80066c8:	464e      	mov	r6, r9
 80066ca:	4645      	mov	r5, r8
 80066cc:	7813      	ldrb	r3, [r2, #0]
 80066ce:	0004      	movs	r4, r0
 80066d0:	b5e0      	push	{r5, r6, r7, lr}
 80066d2:	2000      	movs	r0, #0
 80066d4:	438b      	bics	r3, r1
 80066d6:	2b38      	cmp	r3, #56	; 0x38
 80066d8:	d005      	beq.n	80066e6 <d_maybe_print_designated_init+0x26>
 80066da:	bcf0      	pop	{r4, r5, r6, r7}
 80066dc:	46bb      	mov	fp, r7
 80066de:	46b2      	mov	sl, r6
 80066e0:	46a9      	mov	r9, r5
 80066e2:	46a0      	mov	r8, r4
 80066e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80066e6:	68d3      	ldr	r3, [r2, #12]
 80066e8:	68db      	ldr	r3, [r3, #12]
 80066ea:	681b      	ldr	r3, [r3, #0]
 80066ec:	4698      	mov	r8, r3
 80066ee:	781b      	ldrb	r3, [r3, #0]
 80066f0:	2b64      	cmp	r3, #100	; 0x64
 80066f2:	d1f2      	bne.n	80066da <d_maybe_print_designated_init+0x1a>
 80066f4:	4643      	mov	r3, r8
 80066f6:	785b      	ldrb	r3, [r3, #1]
 80066f8:	2b69      	cmp	r3, #105	; 0x69
 80066fa:	d013      	beq.n	8006724 <d_maybe_print_designated_init+0x64>
 80066fc:	311e      	adds	r1, #30
 80066fe:	438b      	bics	r3, r1
 8006700:	2b58      	cmp	r3, #88	; 0x58
 8006702:	d1ea      	bne.n	80066da <d_maybe_print_designated_init+0x1a>
 8006704:	6913      	ldr	r3, [r2, #16]
 8006706:	68dd      	ldr	r5, [r3, #12]
 8006708:	691f      	ldr	r7, [r3, #16]
 800670a:	2380      	movs	r3, #128	; 0x80
 800670c:	005b      	lsls	r3, r3, #1
 800670e:	58e3      	ldr	r3, [r4, r3]
 8006710:	2bff      	cmp	r3, #255	; 0xff
 8006712:	d100      	bne.n	8006716 <d_maybe_print_designated_init+0x56>
 8006714:	e095      	b.n	8006842 <d_maybe_print_designated_init+0x182>
 8006716:	1c5a      	adds	r2, r3, #1
 8006718:	2180      	movs	r1, #128	; 0x80
 800671a:	0049      	lsls	r1, r1, #1
 800671c:	5062      	str	r2, [r4, r1]
 800671e:	225b      	movs	r2, #91	; 0x5b
 8006720:	54e2      	strb	r2, [r4, r3]
 8006722:	e00e      	b.n	8006742 <d_maybe_print_designated_init+0x82>
 8006724:	6913      	ldr	r3, [r2, #16]
 8006726:	68dd      	ldr	r5, [r3, #12]
 8006728:	691f      	ldr	r7, [r3, #16]
 800672a:	2380      	movs	r3, #128	; 0x80
 800672c:	005b      	lsls	r3, r3, #1
 800672e:	58e3      	ldr	r3, [r4, r3]
 8006730:	2bff      	cmp	r3, #255	; 0xff
 8006732:	d100      	bne.n	8006736 <d_maybe_print_designated_init+0x76>
 8006734:	e0bb      	b.n	80068ae <d_maybe_print_designated_init+0x1ee>
 8006736:	1c5a      	adds	r2, r3, #1
 8006738:	2180      	movs	r1, #128	; 0x80
 800673a:	0049      	lsls	r1, r1, #1
 800673c:	5062      	str	r2, [r4, r1]
 800673e:	222e      	movs	r2, #46	; 0x2e
 8006740:	54e2      	strb	r2, [r4, r3]
 8006742:	2382      	movs	r3, #130	; 0x82
 8006744:	005b      	lsls	r3, r3, #1
 8006746:	54e2      	strb	r2, [r4, r3]
 8006748:	2111      	movs	r1, #17
 800674a:	002a      	movs	r2, r5
 800674c:	0020      	movs	r0, r4
 800674e:	f7fe fcb9 	bl	80050c4 <d_print_comp>
 8006752:	4643      	mov	r3, r8
 8006754:	785b      	ldrb	r3, [r3, #1]
 8006756:	2b58      	cmp	r3, #88	; 0x58
 8006758:	d03e      	beq.n	80067d8 <d_maybe_print_designated_init+0x118>
 800675a:	2b69      	cmp	r3, #105	; 0x69
 800675c:	d00e      	beq.n	800677c <d_maybe_print_designated_init+0xbc>
 800675e:	2380      	movs	r3, #128	; 0x80
 8006760:	005b      	lsls	r3, r3, #1
 8006762:	58e3      	ldr	r3, [r4, r3]
 8006764:	2bff      	cmp	r3, #255	; 0xff
 8006766:	d100      	bne.n	800676a <d_maybe_print_designated_init+0xaa>
 8006768:	e08f      	b.n	800688a <d_maybe_print_designated_init+0x1ca>
 800676a:	1c59      	adds	r1, r3, #1
 800676c:	2280      	movs	r2, #128	; 0x80
 800676e:	0052      	lsls	r2, r2, #1
 8006770:	50a1      	str	r1, [r4, r2]
 8006772:	3aa3      	subs	r2, #163	; 0xa3
 8006774:	54e2      	strb	r2, [r4, r3]
 8006776:	2382      	movs	r3, #130	; 0x82
 8006778:	005b      	lsls	r3, r3, #1
 800677a:	54e2      	strb	r2, [r4, r3]
 800677c:	2202      	movs	r2, #2
 800677e:	783b      	ldrb	r3, [r7, #0]
 8006780:	4393      	bics	r3, r2
 8006782:	2b38      	cmp	r3, #56	; 0x38
 8006784:	d014      	beq.n	80067b0 <d_maybe_print_designated_init+0xf0>
 8006786:	2380      	movs	r3, #128	; 0x80
 8006788:	005b      	lsls	r3, r3, #1
 800678a:	58e3      	ldr	r3, [r4, r3]
 800678c:	2bff      	cmp	r3, #255	; 0xff
 800678e:	d06a      	beq.n	8006866 <d_maybe_print_designated_init+0x1a6>
 8006790:	1c59      	adds	r1, r3, #1
 8006792:	2280      	movs	r2, #128	; 0x80
 8006794:	0052      	lsls	r2, r2, #1
 8006796:	50a1      	str	r1, [r4, r2]
 8006798:	3ac3      	subs	r2, #195	; 0xc3
 800679a:	54e2      	strb	r2, [r4, r3]
 800679c:	2382      	movs	r3, #130	; 0x82
 800679e:	005b      	lsls	r3, r3, #1
 80067a0:	0020      	movs	r0, r4
 80067a2:	54e2      	strb	r2, [r4, r3]
 80067a4:	2111      	movs	r1, #17
 80067a6:	003a      	movs	r2, r7
 80067a8:	f7ff fdc0 	bl	800632c <d_print_subexpr>
 80067ac:	2001      	movs	r0, #1
 80067ae:	e794      	b.n	80066da <d_maybe_print_designated_init+0x1a>
 80067b0:	68fb      	ldr	r3, [r7, #12]
 80067b2:	68db      	ldr	r3, [r3, #12]
 80067b4:	681b      	ldr	r3, [r3, #0]
 80067b6:	781a      	ldrb	r2, [r3, #0]
 80067b8:	2a64      	cmp	r2, #100	; 0x64
 80067ba:	d1e4      	bne.n	8006786 <d_maybe_print_designated_init+0xc6>
 80067bc:	785b      	ldrb	r3, [r3, #1]
 80067be:	2b69      	cmp	r3, #105	; 0x69
 80067c0:	d003      	beq.n	80067ca <d_maybe_print_designated_init+0x10a>
 80067c2:	3a44      	subs	r2, #68	; 0x44
 80067c4:	4393      	bics	r3, r2
 80067c6:	2b58      	cmp	r3, #88	; 0x58
 80067c8:	d1dd      	bne.n	8006786 <d_maybe_print_designated_init+0xc6>
 80067ca:	0020      	movs	r0, r4
 80067cc:	003a      	movs	r2, r7
 80067ce:	2111      	movs	r1, #17
 80067d0:	f7fe fc78 	bl	80050c4 <d_print_comp>
 80067d4:	2001      	movs	r0, #1
 80067d6:	e780      	b.n	80066da <d_maybe_print_designated_init+0x1a>
 80067d8:	4d3e      	ldr	r5, [pc, #248]	; (80068d4 <d_maybe_print_designated_init+0x214>)
 80067da:	33a8      	adds	r3, #168	; 0xa8
 80067dc:	1d6a      	adds	r2, r5, #5
 80067de:	4691      	mov	r9, r2
 80067e0:	2200      	movs	r2, #0
 80067e2:	4693      	mov	fp, r2
 80067e4:	320d      	adds	r2, #13
 80067e6:	32ff      	adds	r2, #255	; 0xff
 80067e8:	2620      	movs	r6, #32
 80067ea:	4692      	mov	sl, r2
 80067ec:	58e3      	ldr	r3, [r4, r3]
 80067ee:	e00b      	b.n	8006808 <d_maybe_print_designated_init+0x148>
 80067f0:	0019      	movs	r1, r3
 80067f2:	3301      	adds	r3, #1
 80067f4:	2280      	movs	r2, #128	; 0x80
 80067f6:	0052      	lsls	r2, r2, #1
 80067f8:	50a3      	str	r3, [r4, r2]
 80067fa:	3501      	adds	r5, #1
 80067fc:	3204      	adds	r2, #4
 80067fe:	5466      	strb	r6, [r4, r1]
 8006800:	54a6      	strb	r6, [r4, r2]
 8006802:	45a9      	cmp	r9, r5
 8006804:	d014      	beq.n	8006830 <d_maybe_print_designated_init+0x170>
 8006806:	782e      	ldrb	r6, [r5, #0]
 8006808:	2bff      	cmp	r3, #255	; 0xff
 800680a:	d1f1      	bne.n	80067f0 <d_maybe_print_designated_init+0x130>
 800680c:	465a      	mov	r2, fp
 800680e:	54e2      	strb	r2, [r4, r3]
 8006810:	4653      	mov	r3, sl
 8006812:	58e2      	ldr	r2, [r4, r3]
 8006814:	2384      	movs	r3, #132	; 0x84
 8006816:	005b      	lsls	r3, r3, #1
 8006818:	21ff      	movs	r1, #255	; 0xff
 800681a:	58e3      	ldr	r3, [r4, r3]
 800681c:	0020      	movs	r0, r4
 800681e:	4798      	blx	r3
 8006820:	2294      	movs	r2, #148	; 0x94
 8006822:	0052      	lsls	r2, r2, #1
 8006824:	58a3      	ldr	r3, [r4, r2]
 8006826:	2100      	movs	r1, #0
 8006828:	3301      	adds	r3, #1
 800682a:	50a3      	str	r3, [r4, r2]
 800682c:	2301      	movs	r3, #1
 800682e:	e7e1      	b.n	80067f4 <d_maybe_print_designated_init+0x134>
 8006830:	68fa      	ldr	r2, [r7, #12]
 8006832:	2111      	movs	r1, #17
 8006834:	0020      	movs	r0, r4
 8006836:	f7fe fc45 	bl	80050c4 <d_print_comp>
 800683a:	4643      	mov	r3, r8
 800683c:	693f      	ldr	r7, [r7, #16]
 800683e:	785b      	ldrb	r3, [r3, #1]
 8006840:	e78b      	b.n	800675a <d_maybe_print_designated_init+0x9a>
 8006842:	54e0      	strb	r0, [r4, r3]
 8006844:	2386      	movs	r3, #134	; 0x86
 8006846:	005b      	lsls	r3, r3, #1
 8006848:	58e2      	ldr	r2, [r4, r3]
 800684a:	3b04      	subs	r3, #4
 800684c:	58e3      	ldr	r3, [r4, r3]
 800684e:	21ff      	movs	r1, #255	; 0xff
 8006850:	0020      	movs	r0, r4
 8006852:	4798      	blx	r3
 8006854:	2294      	movs	r2, #148	; 0x94
 8006856:	0052      	lsls	r2, r2, #1
 8006858:	58a3      	ldr	r3, [r4, r2]
 800685a:	3301      	adds	r3, #1
 800685c:	50a3      	str	r3, [r4, r2]
 800685e:	3a28      	subs	r2, #40	; 0x28
 8006860:	2300      	movs	r3, #0
 8006862:	3aff      	subs	r2, #255	; 0xff
 8006864:	e758      	b.n	8006718 <d_maybe_print_designated_init+0x58>
 8006866:	2200      	movs	r2, #0
 8006868:	54e2      	strb	r2, [r4, r3]
 800686a:	2386      	movs	r3, #134	; 0x86
 800686c:	005b      	lsls	r3, r3, #1
 800686e:	58e2      	ldr	r2, [r4, r3]
 8006870:	3b04      	subs	r3, #4
 8006872:	21ff      	movs	r1, #255	; 0xff
 8006874:	58e3      	ldr	r3, [r4, r3]
 8006876:	0020      	movs	r0, r4
 8006878:	4798      	blx	r3
 800687a:	2294      	movs	r2, #148	; 0x94
 800687c:	0052      	lsls	r2, r2, #1
 800687e:	58a3      	ldr	r3, [r4, r2]
 8006880:	2101      	movs	r1, #1
 8006882:	3301      	adds	r3, #1
 8006884:	50a3      	str	r3, [r4, r2]
 8006886:	2300      	movs	r3, #0
 8006888:	e783      	b.n	8006792 <d_maybe_print_designated_init+0xd2>
 800688a:	2200      	movs	r2, #0
 800688c:	54e2      	strb	r2, [r4, r3]
 800688e:	2386      	movs	r3, #134	; 0x86
 8006890:	005b      	lsls	r3, r3, #1
 8006892:	58e2      	ldr	r2, [r4, r3]
 8006894:	3b04      	subs	r3, #4
 8006896:	21ff      	movs	r1, #255	; 0xff
 8006898:	58e3      	ldr	r3, [r4, r3]
 800689a:	0020      	movs	r0, r4
 800689c:	4798      	blx	r3
 800689e:	2294      	movs	r2, #148	; 0x94
 80068a0:	0052      	lsls	r2, r2, #1
 80068a2:	58a3      	ldr	r3, [r4, r2]
 80068a4:	2101      	movs	r1, #1
 80068a6:	3301      	adds	r3, #1
 80068a8:	50a3      	str	r3, [r4, r2]
 80068aa:	2300      	movs	r3, #0
 80068ac:	e75e      	b.n	800676c <d_maybe_print_designated_init+0xac>
 80068ae:	54e0      	strb	r0, [r4, r3]
 80068b0:	2386      	movs	r3, #134	; 0x86
 80068b2:	005b      	lsls	r3, r3, #1
 80068b4:	58e2      	ldr	r2, [r4, r3]
 80068b6:	3b04      	subs	r3, #4
 80068b8:	58e3      	ldr	r3, [r4, r3]
 80068ba:	21ff      	movs	r1, #255	; 0xff
 80068bc:	0020      	movs	r0, r4
 80068be:	4798      	blx	r3
 80068c0:	2294      	movs	r2, #148	; 0x94
 80068c2:	0052      	lsls	r2, r2, #1
 80068c4:	58a3      	ldr	r3, [r4, r2]
 80068c6:	3301      	adds	r3, #1
 80068c8:	50a3      	str	r3, [r4, r2]
 80068ca:	3a28      	subs	r2, #40	; 0x28
 80068cc:	2300      	movs	r3, #0
 80068ce:	3aff      	subs	r2, #255	; 0xff
 80068d0:	e732      	b.n	8006738 <d_maybe_print_designated_init+0x78>
 80068d2:	46c0      	nop			; (mov r8, r8)
 80068d4:	0800ff50 	.word	0x0800ff50

080068d8 <__cxa_demangle>:
 80068d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80068da:	46c6      	mov	lr, r8
 80068dc:	b500      	push	{lr}
 80068de:	000c      	movs	r4, r1
 80068e0:	0015      	movs	r5, r2
 80068e2:	001e      	movs	r6, r3
 80068e4:	b084      	sub	sp, #16
 80068e6:	2800      	cmp	r0, #0
 80068e8:	d047      	beq.n	800697a <__cxa_demangle+0xa2>
 80068ea:	2900      	cmp	r1, #0
 80068ec:	d001      	beq.n	80068f2 <__cxa_demangle+0x1a>
 80068ee:	2a00      	cmp	r2, #0
 80068f0:	d043      	beq.n	800697a <__cxa_demangle+0xa2>
 80068f2:	2300      	movs	r3, #0
 80068f4:	466a      	mov	r2, sp
 80068f6:	492b      	ldr	r1, [pc, #172]	; (80069a4 <__cxa_demangle+0xcc>)
 80068f8:	9300      	str	r3, [sp, #0]
 80068fa:	9301      	str	r3, [sp, #4]
 80068fc:	9302      	str	r3, [sp, #8]
 80068fe:	9303      	str	r3, [sp, #12]
 8006900:	f7ff fb34 	bl	8005f6c <d_demangle_callback.constprop.0>
 8006904:	2800      	cmp	r0, #0
 8006906:	d03f      	beq.n	8006988 <__cxa_demangle+0xb0>
 8006908:	9b03      	ldr	r3, [sp, #12]
 800690a:	2b00      	cmp	r3, #0
 800690c:	d01e      	beq.n	800694c <__cxa_demangle+0x74>
 800690e:	2301      	movs	r3, #1
 8006910:	9f00      	ldr	r7, [sp, #0]
 8006912:	4698      	mov	r8, r3
 8006914:	2f00      	cmp	r7, #0
 8006916:	d041      	beq.n	800699c <__cxa_demangle+0xc4>
 8006918:	2c00      	cmp	r4, #0
 800691a:	d02b      	beq.n	8006974 <__cxa_demangle+0x9c>
 800691c:	0038      	movs	r0, r7
 800691e:	f000 f85d 	bl	80069dc <strlen>
 8006922:	682b      	ldr	r3, [r5, #0]
 8006924:	4298      	cmp	r0, r3
 8006926:	d21f      	bcs.n	8006968 <__cxa_demangle+0x90>
 8006928:	0039      	movs	r1, r7
 800692a:	1c42      	adds	r2, r0, #1
 800692c:	0020      	movs	r0, r4
 800692e:	f005 ff37 	bl	800c7a0 <memcpy>
 8006932:	0038      	movs	r0, r7
 8006934:	f005 fa28 	bl	800bd88 <free>
 8006938:	0027      	movs	r7, r4
 800693a:	2e00      	cmp	r6, #0
 800693c:	d001      	beq.n	8006942 <__cxa_demangle+0x6a>
 800693e:	2300      	movs	r3, #0
 8006940:	6033      	str	r3, [r6, #0]
 8006942:	0038      	movs	r0, r7
 8006944:	b004      	add	sp, #16
 8006946:	bc80      	pop	{r7}
 8006948:	46b8      	mov	r8, r7
 800694a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800694c:	9b02      	ldr	r3, [sp, #8]
 800694e:	9f00      	ldr	r7, [sp, #0]
 8006950:	4698      	mov	r8, r3
 8006952:	2f00      	cmp	r7, #0
 8006954:	d1e0      	bne.n	8006918 <__cxa_demangle+0x40>
 8006956:	2e00      	cmp	r6, #0
 8006958:	d014      	beq.n	8006984 <__cxa_demangle+0xac>
 800695a:	2b01      	cmp	r3, #1
 800695c:	d119      	bne.n	8006992 <__cxa_demangle+0xba>
 800695e:	2301      	movs	r3, #1
 8006960:	425b      	negs	r3, r3
 8006962:	2700      	movs	r7, #0
 8006964:	6033      	str	r3, [r6, #0]
 8006966:	e7ec      	b.n	8006942 <__cxa_demangle+0x6a>
 8006968:	0020      	movs	r0, r4
 800696a:	f005 fa0d 	bl	800bd88 <free>
 800696e:	4643      	mov	r3, r8
 8006970:	602b      	str	r3, [r5, #0]
 8006972:	e7e2      	b.n	800693a <__cxa_demangle+0x62>
 8006974:	2d00      	cmp	r5, #0
 8006976:	d1fa      	bne.n	800696e <__cxa_demangle+0x96>
 8006978:	e7df      	b.n	800693a <__cxa_demangle+0x62>
 800697a:	2e00      	cmp	r6, #0
 800697c:	d002      	beq.n	8006984 <__cxa_demangle+0xac>
 800697e:	2303      	movs	r3, #3
 8006980:	425b      	negs	r3, r3
 8006982:	6033      	str	r3, [r6, #0]
 8006984:	2700      	movs	r7, #0
 8006986:	e7dc      	b.n	8006942 <__cxa_demangle+0x6a>
 8006988:	9800      	ldr	r0, [sp, #0]
 800698a:	f005 f9fd 	bl	800bd88 <free>
 800698e:	2e00      	cmp	r6, #0
 8006990:	d0f8      	beq.n	8006984 <__cxa_demangle+0xac>
 8006992:	2302      	movs	r3, #2
 8006994:	425b      	negs	r3, r3
 8006996:	2700      	movs	r7, #0
 8006998:	6033      	str	r3, [r6, #0]
 800699a:	e7d2      	b.n	8006942 <__cxa_demangle+0x6a>
 800699c:	2e00      	cmp	r6, #0
 800699e:	d1de      	bne.n	800695e <__cxa_demangle+0x86>
 80069a0:	2700      	movs	r7, #0
 80069a2:	e7ce      	b.n	8006942 <__cxa_demangle+0x6a>
 80069a4:	080003c5 	.word	0x080003c5

080069a8 <__gcclibcxx_demangle_callback>:
 80069a8:	b510      	push	{r4, lr}
 80069aa:	2800      	cmp	r0, #0
 80069ac:	d008      	beq.n	80069c0 <__gcclibcxx_demangle_callback+0x18>
 80069ae:	2900      	cmp	r1, #0
 80069b0:	d006      	beq.n	80069c0 <__gcclibcxx_demangle_callback+0x18>
 80069b2:	f7ff fadb 	bl	8005f6c <d_demangle_callback.constprop.0>
 80069b6:	1e43      	subs	r3, r0, #1
 80069b8:	4198      	sbcs	r0, r3
 80069ba:	0040      	lsls	r0, r0, #1
 80069bc:	3802      	subs	r0, #2
 80069be:	bd10      	pop	{r4, pc}
 80069c0:	2003      	movs	r0, #3
 80069c2:	4240      	negs	r0, r0
 80069c4:	e7fb      	b.n	80069be <__gcclibcxx_demangle_callback+0x16>
 80069c6:	46c0      	nop			; (mov r8, r8)

080069c8 <strcmp>:
 80069c8:	7802      	ldrb	r2, [r0, #0]
 80069ca:	780b      	ldrb	r3, [r1, #0]
 80069cc:	2a00      	cmp	r2, #0
 80069ce:	d003      	beq.n	80069d8 <strcmp+0x10>
 80069d0:	3001      	adds	r0, #1
 80069d2:	3101      	adds	r1, #1
 80069d4:	429a      	cmp	r2, r3
 80069d6:	d0f7      	beq.n	80069c8 <strcmp>
 80069d8:	1ad0      	subs	r0, r2, r3
 80069da:	4770      	bx	lr

080069dc <strlen>:
 80069dc:	2300      	movs	r3, #0
 80069de:	5cc2      	ldrb	r2, [r0, r3]
 80069e0:	3301      	adds	r3, #1
 80069e2:	2a00      	cmp	r2, #0
 80069e4:	d1fb      	bne.n	80069de <strlen+0x2>
 80069e6:	1e58      	subs	r0, r3, #1
 80069e8:	4770      	bx	lr
	...

080069ec <__gnu_thumb1_case_sqi>:
 80069ec:	b402      	push	{r1}
 80069ee:	4671      	mov	r1, lr
 80069f0:	0849      	lsrs	r1, r1, #1
 80069f2:	0049      	lsls	r1, r1, #1
 80069f4:	5609      	ldrsb	r1, [r1, r0]
 80069f6:	0049      	lsls	r1, r1, #1
 80069f8:	448e      	add	lr, r1
 80069fa:	bc02      	pop	{r1}
 80069fc:	4770      	bx	lr
 80069fe:	46c0      	nop			; (mov r8, r8)

08006a00 <__gnu_thumb1_case_shi>:
 8006a00:	b403      	push	{r0, r1}
 8006a02:	4671      	mov	r1, lr
 8006a04:	0849      	lsrs	r1, r1, #1
 8006a06:	0040      	lsls	r0, r0, #1
 8006a08:	0049      	lsls	r1, r1, #1
 8006a0a:	5e09      	ldrsh	r1, [r1, r0]
 8006a0c:	0049      	lsls	r1, r1, #1
 8006a0e:	448e      	add	lr, r1
 8006a10:	bc03      	pop	{r0, r1}
 8006a12:	4770      	bx	lr

08006a14 <__udivsi3>:
 8006a14:	2200      	movs	r2, #0
 8006a16:	0843      	lsrs	r3, r0, #1
 8006a18:	428b      	cmp	r3, r1
 8006a1a:	d374      	bcc.n	8006b06 <__udivsi3+0xf2>
 8006a1c:	0903      	lsrs	r3, r0, #4
 8006a1e:	428b      	cmp	r3, r1
 8006a20:	d35f      	bcc.n	8006ae2 <__udivsi3+0xce>
 8006a22:	0a03      	lsrs	r3, r0, #8
 8006a24:	428b      	cmp	r3, r1
 8006a26:	d344      	bcc.n	8006ab2 <__udivsi3+0x9e>
 8006a28:	0b03      	lsrs	r3, r0, #12
 8006a2a:	428b      	cmp	r3, r1
 8006a2c:	d328      	bcc.n	8006a80 <__udivsi3+0x6c>
 8006a2e:	0c03      	lsrs	r3, r0, #16
 8006a30:	428b      	cmp	r3, r1
 8006a32:	d30d      	bcc.n	8006a50 <__udivsi3+0x3c>
 8006a34:	22ff      	movs	r2, #255	; 0xff
 8006a36:	0209      	lsls	r1, r1, #8
 8006a38:	ba12      	rev	r2, r2
 8006a3a:	0c03      	lsrs	r3, r0, #16
 8006a3c:	428b      	cmp	r3, r1
 8006a3e:	d302      	bcc.n	8006a46 <__udivsi3+0x32>
 8006a40:	1212      	asrs	r2, r2, #8
 8006a42:	0209      	lsls	r1, r1, #8
 8006a44:	d065      	beq.n	8006b12 <__udivsi3+0xfe>
 8006a46:	0b03      	lsrs	r3, r0, #12
 8006a48:	428b      	cmp	r3, r1
 8006a4a:	d319      	bcc.n	8006a80 <__udivsi3+0x6c>
 8006a4c:	e000      	b.n	8006a50 <__udivsi3+0x3c>
 8006a4e:	0a09      	lsrs	r1, r1, #8
 8006a50:	0bc3      	lsrs	r3, r0, #15
 8006a52:	428b      	cmp	r3, r1
 8006a54:	d301      	bcc.n	8006a5a <__udivsi3+0x46>
 8006a56:	03cb      	lsls	r3, r1, #15
 8006a58:	1ac0      	subs	r0, r0, r3
 8006a5a:	4152      	adcs	r2, r2
 8006a5c:	0b83      	lsrs	r3, r0, #14
 8006a5e:	428b      	cmp	r3, r1
 8006a60:	d301      	bcc.n	8006a66 <__udivsi3+0x52>
 8006a62:	038b      	lsls	r3, r1, #14
 8006a64:	1ac0      	subs	r0, r0, r3
 8006a66:	4152      	adcs	r2, r2
 8006a68:	0b43      	lsrs	r3, r0, #13
 8006a6a:	428b      	cmp	r3, r1
 8006a6c:	d301      	bcc.n	8006a72 <__udivsi3+0x5e>
 8006a6e:	034b      	lsls	r3, r1, #13
 8006a70:	1ac0      	subs	r0, r0, r3
 8006a72:	4152      	adcs	r2, r2
 8006a74:	0b03      	lsrs	r3, r0, #12
 8006a76:	428b      	cmp	r3, r1
 8006a78:	d301      	bcc.n	8006a7e <__udivsi3+0x6a>
 8006a7a:	030b      	lsls	r3, r1, #12
 8006a7c:	1ac0      	subs	r0, r0, r3
 8006a7e:	4152      	adcs	r2, r2
 8006a80:	0ac3      	lsrs	r3, r0, #11
 8006a82:	428b      	cmp	r3, r1
 8006a84:	d301      	bcc.n	8006a8a <__udivsi3+0x76>
 8006a86:	02cb      	lsls	r3, r1, #11
 8006a88:	1ac0      	subs	r0, r0, r3
 8006a8a:	4152      	adcs	r2, r2
 8006a8c:	0a83      	lsrs	r3, r0, #10
 8006a8e:	428b      	cmp	r3, r1
 8006a90:	d301      	bcc.n	8006a96 <__udivsi3+0x82>
 8006a92:	028b      	lsls	r3, r1, #10
 8006a94:	1ac0      	subs	r0, r0, r3
 8006a96:	4152      	adcs	r2, r2
 8006a98:	0a43      	lsrs	r3, r0, #9
 8006a9a:	428b      	cmp	r3, r1
 8006a9c:	d301      	bcc.n	8006aa2 <__udivsi3+0x8e>
 8006a9e:	024b      	lsls	r3, r1, #9
 8006aa0:	1ac0      	subs	r0, r0, r3
 8006aa2:	4152      	adcs	r2, r2
 8006aa4:	0a03      	lsrs	r3, r0, #8
 8006aa6:	428b      	cmp	r3, r1
 8006aa8:	d301      	bcc.n	8006aae <__udivsi3+0x9a>
 8006aaa:	020b      	lsls	r3, r1, #8
 8006aac:	1ac0      	subs	r0, r0, r3
 8006aae:	4152      	adcs	r2, r2
 8006ab0:	d2cd      	bcs.n	8006a4e <__udivsi3+0x3a>
 8006ab2:	09c3      	lsrs	r3, r0, #7
 8006ab4:	428b      	cmp	r3, r1
 8006ab6:	d301      	bcc.n	8006abc <__udivsi3+0xa8>
 8006ab8:	01cb      	lsls	r3, r1, #7
 8006aba:	1ac0      	subs	r0, r0, r3
 8006abc:	4152      	adcs	r2, r2
 8006abe:	0983      	lsrs	r3, r0, #6
 8006ac0:	428b      	cmp	r3, r1
 8006ac2:	d301      	bcc.n	8006ac8 <__udivsi3+0xb4>
 8006ac4:	018b      	lsls	r3, r1, #6
 8006ac6:	1ac0      	subs	r0, r0, r3
 8006ac8:	4152      	adcs	r2, r2
 8006aca:	0943      	lsrs	r3, r0, #5
 8006acc:	428b      	cmp	r3, r1
 8006ace:	d301      	bcc.n	8006ad4 <__udivsi3+0xc0>
 8006ad0:	014b      	lsls	r3, r1, #5
 8006ad2:	1ac0      	subs	r0, r0, r3
 8006ad4:	4152      	adcs	r2, r2
 8006ad6:	0903      	lsrs	r3, r0, #4
 8006ad8:	428b      	cmp	r3, r1
 8006ada:	d301      	bcc.n	8006ae0 <__udivsi3+0xcc>
 8006adc:	010b      	lsls	r3, r1, #4
 8006ade:	1ac0      	subs	r0, r0, r3
 8006ae0:	4152      	adcs	r2, r2
 8006ae2:	08c3      	lsrs	r3, r0, #3
 8006ae4:	428b      	cmp	r3, r1
 8006ae6:	d301      	bcc.n	8006aec <__udivsi3+0xd8>
 8006ae8:	00cb      	lsls	r3, r1, #3
 8006aea:	1ac0      	subs	r0, r0, r3
 8006aec:	4152      	adcs	r2, r2
 8006aee:	0883      	lsrs	r3, r0, #2
 8006af0:	428b      	cmp	r3, r1
 8006af2:	d301      	bcc.n	8006af8 <__udivsi3+0xe4>
 8006af4:	008b      	lsls	r3, r1, #2
 8006af6:	1ac0      	subs	r0, r0, r3
 8006af8:	4152      	adcs	r2, r2
 8006afa:	0843      	lsrs	r3, r0, #1
 8006afc:	428b      	cmp	r3, r1
 8006afe:	d301      	bcc.n	8006b04 <__udivsi3+0xf0>
 8006b00:	004b      	lsls	r3, r1, #1
 8006b02:	1ac0      	subs	r0, r0, r3
 8006b04:	4152      	adcs	r2, r2
 8006b06:	1a41      	subs	r1, r0, r1
 8006b08:	d200      	bcs.n	8006b0c <__udivsi3+0xf8>
 8006b0a:	4601      	mov	r1, r0
 8006b0c:	4152      	adcs	r2, r2
 8006b0e:	4610      	mov	r0, r2
 8006b10:	4770      	bx	lr
 8006b12:	e7ff      	b.n	8006b14 <__udivsi3+0x100>
 8006b14:	b501      	push	{r0, lr}
 8006b16:	2000      	movs	r0, #0
 8006b18:	f000 f8f0 	bl	8006cfc <__aeabi_idiv0>
 8006b1c:	bd02      	pop	{r1, pc}
 8006b1e:	46c0      	nop			; (mov r8, r8)

08006b20 <__aeabi_uidivmod>:
 8006b20:	2900      	cmp	r1, #0
 8006b22:	d0f7      	beq.n	8006b14 <__udivsi3+0x100>
 8006b24:	e776      	b.n	8006a14 <__udivsi3>
 8006b26:	4770      	bx	lr

08006b28 <__divsi3>:
 8006b28:	4603      	mov	r3, r0
 8006b2a:	430b      	orrs	r3, r1
 8006b2c:	d47f      	bmi.n	8006c2e <__divsi3+0x106>
 8006b2e:	2200      	movs	r2, #0
 8006b30:	0843      	lsrs	r3, r0, #1
 8006b32:	428b      	cmp	r3, r1
 8006b34:	d374      	bcc.n	8006c20 <__divsi3+0xf8>
 8006b36:	0903      	lsrs	r3, r0, #4
 8006b38:	428b      	cmp	r3, r1
 8006b3a:	d35f      	bcc.n	8006bfc <__divsi3+0xd4>
 8006b3c:	0a03      	lsrs	r3, r0, #8
 8006b3e:	428b      	cmp	r3, r1
 8006b40:	d344      	bcc.n	8006bcc <__divsi3+0xa4>
 8006b42:	0b03      	lsrs	r3, r0, #12
 8006b44:	428b      	cmp	r3, r1
 8006b46:	d328      	bcc.n	8006b9a <__divsi3+0x72>
 8006b48:	0c03      	lsrs	r3, r0, #16
 8006b4a:	428b      	cmp	r3, r1
 8006b4c:	d30d      	bcc.n	8006b6a <__divsi3+0x42>
 8006b4e:	22ff      	movs	r2, #255	; 0xff
 8006b50:	0209      	lsls	r1, r1, #8
 8006b52:	ba12      	rev	r2, r2
 8006b54:	0c03      	lsrs	r3, r0, #16
 8006b56:	428b      	cmp	r3, r1
 8006b58:	d302      	bcc.n	8006b60 <__divsi3+0x38>
 8006b5a:	1212      	asrs	r2, r2, #8
 8006b5c:	0209      	lsls	r1, r1, #8
 8006b5e:	d065      	beq.n	8006c2c <__divsi3+0x104>
 8006b60:	0b03      	lsrs	r3, r0, #12
 8006b62:	428b      	cmp	r3, r1
 8006b64:	d319      	bcc.n	8006b9a <__divsi3+0x72>
 8006b66:	e000      	b.n	8006b6a <__divsi3+0x42>
 8006b68:	0a09      	lsrs	r1, r1, #8
 8006b6a:	0bc3      	lsrs	r3, r0, #15
 8006b6c:	428b      	cmp	r3, r1
 8006b6e:	d301      	bcc.n	8006b74 <__divsi3+0x4c>
 8006b70:	03cb      	lsls	r3, r1, #15
 8006b72:	1ac0      	subs	r0, r0, r3
 8006b74:	4152      	adcs	r2, r2
 8006b76:	0b83      	lsrs	r3, r0, #14
 8006b78:	428b      	cmp	r3, r1
 8006b7a:	d301      	bcc.n	8006b80 <__divsi3+0x58>
 8006b7c:	038b      	lsls	r3, r1, #14
 8006b7e:	1ac0      	subs	r0, r0, r3
 8006b80:	4152      	adcs	r2, r2
 8006b82:	0b43      	lsrs	r3, r0, #13
 8006b84:	428b      	cmp	r3, r1
 8006b86:	d301      	bcc.n	8006b8c <__divsi3+0x64>
 8006b88:	034b      	lsls	r3, r1, #13
 8006b8a:	1ac0      	subs	r0, r0, r3
 8006b8c:	4152      	adcs	r2, r2
 8006b8e:	0b03      	lsrs	r3, r0, #12
 8006b90:	428b      	cmp	r3, r1
 8006b92:	d301      	bcc.n	8006b98 <__divsi3+0x70>
 8006b94:	030b      	lsls	r3, r1, #12
 8006b96:	1ac0      	subs	r0, r0, r3
 8006b98:	4152      	adcs	r2, r2
 8006b9a:	0ac3      	lsrs	r3, r0, #11
 8006b9c:	428b      	cmp	r3, r1
 8006b9e:	d301      	bcc.n	8006ba4 <__divsi3+0x7c>
 8006ba0:	02cb      	lsls	r3, r1, #11
 8006ba2:	1ac0      	subs	r0, r0, r3
 8006ba4:	4152      	adcs	r2, r2
 8006ba6:	0a83      	lsrs	r3, r0, #10
 8006ba8:	428b      	cmp	r3, r1
 8006baa:	d301      	bcc.n	8006bb0 <__divsi3+0x88>
 8006bac:	028b      	lsls	r3, r1, #10
 8006bae:	1ac0      	subs	r0, r0, r3
 8006bb0:	4152      	adcs	r2, r2
 8006bb2:	0a43      	lsrs	r3, r0, #9
 8006bb4:	428b      	cmp	r3, r1
 8006bb6:	d301      	bcc.n	8006bbc <__divsi3+0x94>
 8006bb8:	024b      	lsls	r3, r1, #9
 8006bba:	1ac0      	subs	r0, r0, r3
 8006bbc:	4152      	adcs	r2, r2
 8006bbe:	0a03      	lsrs	r3, r0, #8
 8006bc0:	428b      	cmp	r3, r1
 8006bc2:	d301      	bcc.n	8006bc8 <__divsi3+0xa0>
 8006bc4:	020b      	lsls	r3, r1, #8
 8006bc6:	1ac0      	subs	r0, r0, r3
 8006bc8:	4152      	adcs	r2, r2
 8006bca:	d2cd      	bcs.n	8006b68 <__divsi3+0x40>
 8006bcc:	09c3      	lsrs	r3, r0, #7
 8006bce:	428b      	cmp	r3, r1
 8006bd0:	d301      	bcc.n	8006bd6 <__divsi3+0xae>
 8006bd2:	01cb      	lsls	r3, r1, #7
 8006bd4:	1ac0      	subs	r0, r0, r3
 8006bd6:	4152      	adcs	r2, r2
 8006bd8:	0983      	lsrs	r3, r0, #6
 8006bda:	428b      	cmp	r3, r1
 8006bdc:	d301      	bcc.n	8006be2 <__divsi3+0xba>
 8006bde:	018b      	lsls	r3, r1, #6
 8006be0:	1ac0      	subs	r0, r0, r3
 8006be2:	4152      	adcs	r2, r2
 8006be4:	0943      	lsrs	r3, r0, #5
 8006be6:	428b      	cmp	r3, r1
 8006be8:	d301      	bcc.n	8006bee <__divsi3+0xc6>
 8006bea:	014b      	lsls	r3, r1, #5
 8006bec:	1ac0      	subs	r0, r0, r3
 8006bee:	4152      	adcs	r2, r2
 8006bf0:	0903      	lsrs	r3, r0, #4
 8006bf2:	428b      	cmp	r3, r1
 8006bf4:	d301      	bcc.n	8006bfa <__divsi3+0xd2>
 8006bf6:	010b      	lsls	r3, r1, #4
 8006bf8:	1ac0      	subs	r0, r0, r3
 8006bfa:	4152      	adcs	r2, r2
 8006bfc:	08c3      	lsrs	r3, r0, #3
 8006bfe:	428b      	cmp	r3, r1
 8006c00:	d301      	bcc.n	8006c06 <__divsi3+0xde>
 8006c02:	00cb      	lsls	r3, r1, #3
 8006c04:	1ac0      	subs	r0, r0, r3
 8006c06:	4152      	adcs	r2, r2
 8006c08:	0883      	lsrs	r3, r0, #2
 8006c0a:	428b      	cmp	r3, r1
 8006c0c:	d301      	bcc.n	8006c12 <__divsi3+0xea>
 8006c0e:	008b      	lsls	r3, r1, #2
 8006c10:	1ac0      	subs	r0, r0, r3
 8006c12:	4152      	adcs	r2, r2
 8006c14:	0843      	lsrs	r3, r0, #1
 8006c16:	428b      	cmp	r3, r1
 8006c18:	d301      	bcc.n	8006c1e <__divsi3+0xf6>
 8006c1a:	004b      	lsls	r3, r1, #1
 8006c1c:	1ac0      	subs	r0, r0, r3
 8006c1e:	4152      	adcs	r2, r2
 8006c20:	1a41      	subs	r1, r0, r1
 8006c22:	d200      	bcs.n	8006c26 <__divsi3+0xfe>
 8006c24:	4601      	mov	r1, r0
 8006c26:	4152      	adcs	r2, r2
 8006c28:	4610      	mov	r0, r2
 8006c2a:	4770      	bx	lr
 8006c2c:	e05d      	b.n	8006cea <__divsi3+0x1c2>
 8006c2e:	0fca      	lsrs	r2, r1, #31
 8006c30:	d000      	beq.n	8006c34 <__divsi3+0x10c>
 8006c32:	4249      	negs	r1, r1
 8006c34:	1003      	asrs	r3, r0, #32
 8006c36:	d300      	bcc.n	8006c3a <__divsi3+0x112>
 8006c38:	4240      	negs	r0, r0
 8006c3a:	4053      	eors	r3, r2
 8006c3c:	2200      	movs	r2, #0
 8006c3e:	469c      	mov	ip, r3
 8006c40:	0903      	lsrs	r3, r0, #4
 8006c42:	428b      	cmp	r3, r1
 8006c44:	d32d      	bcc.n	8006ca2 <__divsi3+0x17a>
 8006c46:	0a03      	lsrs	r3, r0, #8
 8006c48:	428b      	cmp	r3, r1
 8006c4a:	d312      	bcc.n	8006c72 <__divsi3+0x14a>
 8006c4c:	22fc      	movs	r2, #252	; 0xfc
 8006c4e:	0189      	lsls	r1, r1, #6
 8006c50:	ba12      	rev	r2, r2
 8006c52:	0a03      	lsrs	r3, r0, #8
 8006c54:	428b      	cmp	r3, r1
 8006c56:	d30c      	bcc.n	8006c72 <__divsi3+0x14a>
 8006c58:	0189      	lsls	r1, r1, #6
 8006c5a:	1192      	asrs	r2, r2, #6
 8006c5c:	428b      	cmp	r3, r1
 8006c5e:	d308      	bcc.n	8006c72 <__divsi3+0x14a>
 8006c60:	0189      	lsls	r1, r1, #6
 8006c62:	1192      	asrs	r2, r2, #6
 8006c64:	428b      	cmp	r3, r1
 8006c66:	d304      	bcc.n	8006c72 <__divsi3+0x14a>
 8006c68:	0189      	lsls	r1, r1, #6
 8006c6a:	d03a      	beq.n	8006ce2 <__divsi3+0x1ba>
 8006c6c:	1192      	asrs	r2, r2, #6
 8006c6e:	e000      	b.n	8006c72 <__divsi3+0x14a>
 8006c70:	0989      	lsrs	r1, r1, #6
 8006c72:	09c3      	lsrs	r3, r0, #7
 8006c74:	428b      	cmp	r3, r1
 8006c76:	d301      	bcc.n	8006c7c <__divsi3+0x154>
 8006c78:	01cb      	lsls	r3, r1, #7
 8006c7a:	1ac0      	subs	r0, r0, r3
 8006c7c:	4152      	adcs	r2, r2
 8006c7e:	0983      	lsrs	r3, r0, #6
 8006c80:	428b      	cmp	r3, r1
 8006c82:	d301      	bcc.n	8006c88 <__divsi3+0x160>
 8006c84:	018b      	lsls	r3, r1, #6
 8006c86:	1ac0      	subs	r0, r0, r3
 8006c88:	4152      	adcs	r2, r2
 8006c8a:	0943      	lsrs	r3, r0, #5
 8006c8c:	428b      	cmp	r3, r1
 8006c8e:	d301      	bcc.n	8006c94 <__divsi3+0x16c>
 8006c90:	014b      	lsls	r3, r1, #5
 8006c92:	1ac0      	subs	r0, r0, r3
 8006c94:	4152      	adcs	r2, r2
 8006c96:	0903      	lsrs	r3, r0, #4
 8006c98:	428b      	cmp	r3, r1
 8006c9a:	d301      	bcc.n	8006ca0 <__divsi3+0x178>
 8006c9c:	010b      	lsls	r3, r1, #4
 8006c9e:	1ac0      	subs	r0, r0, r3
 8006ca0:	4152      	adcs	r2, r2
 8006ca2:	08c3      	lsrs	r3, r0, #3
 8006ca4:	428b      	cmp	r3, r1
 8006ca6:	d301      	bcc.n	8006cac <__divsi3+0x184>
 8006ca8:	00cb      	lsls	r3, r1, #3
 8006caa:	1ac0      	subs	r0, r0, r3
 8006cac:	4152      	adcs	r2, r2
 8006cae:	0883      	lsrs	r3, r0, #2
 8006cb0:	428b      	cmp	r3, r1
 8006cb2:	d301      	bcc.n	8006cb8 <__divsi3+0x190>
 8006cb4:	008b      	lsls	r3, r1, #2
 8006cb6:	1ac0      	subs	r0, r0, r3
 8006cb8:	4152      	adcs	r2, r2
 8006cba:	d2d9      	bcs.n	8006c70 <__divsi3+0x148>
 8006cbc:	0843      	lsrs	r3, r0, #1
 8006cbe:	428b      	cmp	r3, r1
 8006cc0:	d301      	bcc.n	8006cc6 <__divsi3+0x19e>
 8006cc2:	004b      	lsls	r3, r1, #1
 8006cc4:	1ac0      	subs	r0, r0, r3
 8006cc6:	4152      	adcs	r2, r2
 8006cc8:	1a41      	subs	r1, r0, r1
 8006cca:	d200      	bcs.n	8006cce <__divsi3+0x1a6>
 8006ccc:	4601      	mov	r1, r0
 8006cce:	4663      	mov	r3, ip
 8006cd0:	4152      	adcs	r2, r2
 8006cd2:	105b      	asrs	r3, r3, #1
 8006cd4:	4610      	mov	r0, r2
 8006cd6:	d301      	bcc.n	8006cdc <__divsi3+0x1b4>
 8006cd8:	4240      	negs	r0, r0
 8006cda:	2b00      	cmp	r3, #0
 8006cdc:	d500      	bpl.n	8006ce0 <__divsi3+0x1b8>
 8006cde:	4249      	negs	r1, r1
 8006ce0:	4770      	bx	lr
 8006ce2:	4663      	mov	r3, ip
 8006ce4:	105b      	asrs	r3, r3, #1
 8006ce6:	d300      	bcc.n	8006cea <__divsi3+0x1c2>
 8006ce8:	4240      	negs	r0, r0
 8006cea:	b501      	push	{r0, lr}
 8006cec:	2000      	movs	r0, #0
 8006cee:	f000 f805 	bl	8006cfc <__aeabi_idiv0>
 8006cf2:	bd02      	pop	{r1, pc}

08006cf4 <__aeabi_idivmod>:
 8006cf4:	2900      	cmp	r1, #0
 8006cf6:	d0f8      	beq.n	8006cea <__divsi3+0x1c2>
 8006cf8:	e716      	b.n	8006b28 <__divsi3>
 8006cfa:	4770      	bx	lr

08006cfc <__aeabi_idiv0>:
 8006cfc:	4770      	bx	lr
 8006cfe:	46c0      	nop			; (mov r8, r8)

08006d00 <selfrel_offset31>:
 8006d00:	6803      	ldr	r3, [r0, #0]
 8006d02:	005a      	lsls	r2, r3, #1
 8006d04:	d504      	bpl.n	8006d10 <selfrel_offset31+0x10>
 8006d06:	2280      	movs	r2, #128	; 0x80
 8006d08:	0612      	lsls	r2, r2, #24
 8006d0a:	4313      	orrs	r3, r2
 8006d0c:	18c0      	adds	r0, r0, r3
 8006d0e:	4770      	bx	lr
 8006d10:	005b      	lsls	r3, r3, #1
 8006d12:	085b      	lsrs	r3, r3, #1
 8006d14:	e7fa      	b.n	8006d0c <selfrel_offset31+0xc>
 8006d16:	46c0      	nop			; (mov r8, r8)

08006d18 <search_EIT_table>:
 8006d18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006d1a:	4657      	mov	r7, sl
 8006d1c:	4645      	mov	r5, r8
 8006d1e:	46de      	mov	lr, fp
 8006d20:	464e      	mov	r6, r9
 8006d22:	4690      	mov	r8, r2
 8006d24:	b5e0      	push	{r5, r6, r7, lr}
 8006d26:	0007      	movs	r7, r0
 8006d28:	2900      	cmp	r1, #0
 8006d2a:	d024      	beq.n	8006d76 <search_EIT_table+0x5e>
 8006d2c:	1e4b      	subs	r3, r1, #1
 8006d2e:	469a      	mov	sl, r3
 8006d30:	4699      	mov	r9, r3
 8006d32:	2300      	movs	r3, #0
 8006d34:	469b      	mov	fp, r3
 8006d36:	465b      	mov	r3, fp
 8006d38:	444b      	add	r3, r9
 8006d3a:	0fdc      	lsrs	r4, r3, #31
 8006d3c:	18e4      	adds	r4, r4, r3
 8006d3e:	1064      	asrs	r4, r4, #1
 8006d40:	00e5      	lsls	r5, r4, #3
 8006d42:	197e      	adds	r6, r7, r5
 8006d44:	0030      	movs	r0, r6
 8006d46:	f7ff ffdb 	bl	8006d00 <selfrel_offset31>
 8006d4a:	45a2      	cmp	sl, r4
 8006d4c:	d00c      	beq.n	8006d68 <search_EIT_table+0x50>
 8006d4e:	4540      	cmp	r0, r8
 8006d50:	d80c      	bhi.n	8006d6c <search_EIT_table+0x54>
 8006d52:	0028      	movs	r0, r5
 8006d54:	3008      	adds	r0, #8
 8006d56:	1838      	adds	r0, r7, r0
 8006d58:	f7ff ffd2 	bl	8006d00 <selfrel_offset31>
 8006d5c:	3801      	subs	r0, #1
 8006d5e:	4540      	cmp	r0, r8
 8006d60:	d20a      	bcs.n	8006d78 <search_EIT_table+0x60>
 8006d62:	1c63      	adds	r3, r4, #1
 8006d64:	469b      	mov	fp, r3
 8006d66:	e7e6      	b.n	8006d36 <search_EIT_table+0x1e>
 8006d68:	4540      	cmp	r0, r8
 8006d6a:	d905      	bls.n	8006d78 <search_EIT_table+0x60>
 8006d6c:	45a3      	cmp	fp, r4
 8006d6e:	d002      	beq.n	8006d76 <search_EIT_table+0x5e>
 8006d70:	1e63      	subs	r3, r4, #1
 8006d72:	4699      	mov	r9, r3
 8006d74:	e7df      	b.n	8006d36 <search_EIT_table+0x1e>
 8006d76:	2600      	movs	r6, #0
 8006d78:	0030      	movs	r0, r6
 8006d7a:	bcf0      	pop	{r4, r5, r6, r7}
 8006d7c:	46bb      	mov	fp, r7
 8006d7e:	46b2      	mov	sl, r6
 8006d80:	46a9      	mov	r9, r5
 8006d82:	46a0      	mov	r8, r4
 8006d84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006d86:	46c0      	nop			; (mov r8, r8)

08006d88 <__gnu_unwind_get_pr_addr>:
 8006d88:	0003      	movs	r3, r0
 8006d8a:	2801      	cmp	r0, #1
 8006d8c:	d005      	beq.n	8006d9a <__gnu_unwind_get_pr_addr+0x12>
 8006d8e:	2802      	cmp	r0, #2
 8006d90:	d007      	beq.n	8006da2 <__gnu_unwind_get_pr_addr+0x1a>
 8006d92:	2000      	movs	r0, #0
 8006d94:	2b00      	cmp	r3, #0
 8006d96:	d002      	beq.n	8006d9e <__gnu_unwind_get_pr_addr+0x16>
 8006d98:	4770      	bx	lr
 8006d9a:	4803      	ldr	r0, [pc, #12]	; (8006da8 <__gnu_unwind_get_pr_addr+0x20>)
 8006d9c:	e7fc      	b.n	8006d98 <__gnu_unwind_get_pr_addr+0x10>
 8006d9e:	4803      	ldr	r0, [pc, #12]	; (8006dac <__gnu_unwind_get_pr_addr+0x24>)
 8006da0:	e7fa      	b.n	8006d98 <__gnu_unwind_get_pr_addr+0x10>
 8006da2:	4803      	ldr	r0, [pc, #12]	; (8006db0 <__gnu_unwind_get_pr_addr+0x28>)
 8006da4:	e7f8      	b.n	8006d98 <__gnu_unwind_get_pr_addr+0x10>
 8006da6:	46c0      	nop			; (mov r8, r8)
 8006da8:	0800749d 	.word	0x0800749d
 8006dac:	08007491 	.word	0x08007491
 8006db0:	080074a9 	.word	0x080074a9

08006db4 <get_eit_entry>:
 8006db4:	b530      	push	{r4, r5, lr}
 8006db6:	4b21      	ldr	r3, [pc, #132]	; (8006e3c <get_eit_entry+0x88>)
 8006db8:	0005      	movs	r5, r0
 8006dba:	b083      	sub	sp, #12
 8006dbc:	1e8c      	subs	r4, r1, #2
 8006dbe:	2b00      	cmp	r3, #0
 8006dc0:	d026      	beq.n	8006e10 <get_eit_entry+0x5c>
 8006dc2:	0020      	movs	r0, r4
 8006dc4:	a901      	add	r1, sp, #4
 8006dc6:	e000      	b.n	8006dca <get_eit_entry+0x16>
 8006dc8:	bf00      	nop
 8006dca:	2800      	cmp	r0, #0
 8006dcc:	d01d      	beq.n	8006e0a <get_eit_entry+0x56>
 8006dce:	9901      	ldr	r1, [sp, #4]
 8006dd0:	0022      	movs	r2, r4
 8006dd2:	f7ff ffa1 	bl	8006d18 <search_EIT_table>
 8006dd6:	1e04      	subs	r4, r0, #0
 8006dd8:	d017      	beq.n	8006e0a <get_eit_entry+0x56>
 8006dda:	f7ff ff91 	bl	8006d00 <selfrel_offset31>
 8006dde:	6863      	ldr	r3, [r4, #4]
 8006de0:	64a8      	str	r0, [r5, #72]	; 0x48
 8006de2:	2b01      	cmp	r3, #1
 8006de4:	d027      	beq.n	8006e36 <get_eit_entry+0x82>
 8006de6:	1d20      	adds	r0, r4, #4
 8006de8:	2b00      	cmp	r3, #0
 8006dea:	db22      	blt.n	8006e32 <get_eit_entry+0x7e>
 8006dec:	f7ff ff88 	bl	8006d00 <selfrel_offset31>
 8006df0:	2300      	movs	r3, #0
 8006df2:	652b      	str	r3, [r5, #80]	; 0x50
 8006df4:	6803      	ldr	r3, [r0, #0]
 8006df6:	64e8      	str	r0, [r5, #76]	; 0x4c
 8006df8:	2b00      	cmp	r3, #0
 8006dfa:	db0f      	blt.n	8006e1c <get_eit_entry+0x68>
 8006dfc:	f7ff ff80 	bl	8006d00 <selfrel_offset31>
 8006e00:	0003      	movs	r3, r0
 8006e02:	2000      	movs	r0, #0
 8006e04:	612b      	str	r3, [r5, #16]
 8006e06:	b003      	add	sp, #12
 8006e08:	bd30      	pop	{r4, r5, pc}
 8006e0a:	2300      	movs	r3, #0
 8006e0c:	2009      	movs	r0, #9
 8006e0e:	e7f9      	b.n	8006e04 <get_eit_entry+0x50>
 8006e10:	4b0b      	ldr	r3, [pc, #44]	; (8006e40 <get_eit_entry+0x8c>)
 8006e12:	480c      	ldr	r0, [pc, #48]	; (8006e44 <get_eit_entry+0x90>)
 8006e14:	1a1b      	subs	r3, r3, r0
 8006e16:	10d9      	asrs	r1, r3, #3
 8006e18:	9101      	str	r1, [sp, #4]
 8006e1a:	e7d9      	b.n	8006dd0 <get_eit_entry+0x1c>
 8006e1c:	0118      	lsls	r0, r3, #4
 8006e1e:	0f00      	lsrs	r0, r0, #28
 8006e20:	f7ff ffb2 	bl	8006d88 <__gnu_unwind_get_pr_addr>
 8006e24:	4242      	negs	r2, r0
 8006e26:	4142      	adcs	r2, r0
 8006e28:	0003      	movs	r3, r0
 8006e2a:	2009      	movs	r0, #9
 8006e2c:	4252      	negs	r2, r2
 8006e2e:	4010      	ands	r0, r2
 8006e30:	e7e8      	b.n	8006e04 <get_eit_entry+0x50>
 8006e32:	2301      	movs	r3, #1
 8006e34:	e7dd      	b.n	8006df2 <get_eit_entry+0x3e>
 8006e36:	2300      	movs	r3, #0
 8006e38:	2005      	movs	r0, #5
 8006e3a:	e7e3      	b.n	8006e04 <get_eit_entry+0x50>
 8006e3c:	00000000 	.word	0x00000000
 8006e40:	080107d8 	.word	0x080107d8
 8006e44:	080105f0 	.word	0x080105f0

08006e48 <restore_non_core_regs>:
 8006e48:	6803      	ldr	r3, [r0, #0]
 8006e4a:	b510      	push	{r4, lr}
 8006e4c:	0004      	movs	r4, r0
 8006e4e:	07da      	lsls	r2, r3, #31
 8006e50:	d405      	bmi.n	8006e5e <restore_non_core_regs+0x16>
 8006e52:	079b      	lsls	r3, r3, #30
 8006e54:	d50a      	bpl.n	8006e6c <restore_non_core_regs+0x24>
 8006e56:	3048      	adds	r0, #72	; 0x48
 8006e58:	f000 fca0 	bl	800779c <__gnu_Unwind_Restore_VFP_D>
 8006e5c:	6823      	ldr	r3, [r4, #0]
 8006e5e:	075a      	lsls	r2, r3, #29
 8006e60:	d50a      	bpl.n	8006e78 <restore_non_core_regs+0x30>
 8006e62:	071a      	lsls	r2, r3, #28
 8006e64:	d50f      	bpl.n	8006e86 <restore_non_core_regs+0x3e>
 8006e66:	06db      	lsls	r3, r3, #27
 8006e68:	d515      	bpl.n	8006e96 <restore_non_core_regs+0x4e>
 8006e6a:	bd10      	pop	{r4, pc}
 8006e6c:	3048      	adds	r0, #72	; 0x48
 8006e6e:	f000 fc91 	bl	8007794 <__gnu_Unwind_Restore_VFP>
 8006e72:	6823      	ldr	r3, [r4, #0]
 8006e74:	075a      	lsls	r2, r3, #29
 8006e76:	d4f4      	bmi.n	8006e62 <restore_non_core_regs+0x1a>
 8006e78:	0020      	movs	r0, r4
 8006e7a:	30d0      	adds	r0, #208	; 0xd0
 8006e7c:	f000 fc92 	bl	80077a4 <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8006e80:	6823      	ldr	r3, [r4, #0]
 8006e82:	071a      	lsls	r2, r3, #28
 8006e84:	d4ef      	bmi.n	8006e66 <restore_non_core_regs+0x1e>
 8006e86:	0020      	movs	r0, r4
 8006e88:	3051      	adds	r0, #81	; 0x51
 8006e8a:	30ff      	adds	r0, #255	; 0xff
 8006e8c:	f000 fc8e 	bl	80077ac <__gnu_Unwind_Restore_WMMXD>
 8006e90:	6823      	ldr	r3, [r4, #0]
 8006e92:	06db      	lsls	r3, r3, #27
 8006e94:	d4e9      	bmi.n	8006e6a <restore_non_core_regs+0x22>
 8006e96:	0020      	movs	r0, r4
 8006e98:	30d1      	adds	r0, #209	; 0xd1
 8006e9a:	30ff      	adds	r0, #255	; 0xff
 8006e9c:	f000 fc8a 	bl	80077b4 <__gnu_Unwind_Restore_WMMXC>
 8006ea0:	e7e3      	b.n	8006e6a <restore_non_core_regs+0x22>
 8006ea2:	46c0      	nop			; (mov r8, r8)

08006ea4 <__gnu_unwind_24bit.constprop.0>:
 8006ea4:	2009      	movs	r0, #9
 8006ea6:	4770      	bx	lr

08006ea8 <_Unwind_decode_typeinfo_ptr.constprop.0>:
 8006ea8:	0003      	movs	r3, r0
 8006eaa:	6800      	ldr	r0, [r0, #0]
 8006eac:	2800      	cmp	r0, #0
 8006eae:	d000      	beq.n	8006eb2 <_Unwind_decode_typeinfo_ptr.constprop.0+0xa>
 8006eb0:	18c0      	adds	r0, r0, r3
 8006eb2:	4770      	bx	lr

08006eb4 <_Unwind_DebugHook>:
 8006eb4:	4770      	bx	lr
 8006eb6:	46c0      	nop			; (mov r8, r8)

08006eb8 <unwind_phase2>:
 8006eb8:	b570      	push	{r4, r5, r6, lr}
 8006eba:	0004      	movs	r4, r0
 8006ebc:	000d      	movs	r5, r1
 8006ebe:	0020      	movs	r0, r4
 8006ec0:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8006ec2:	f7ff ff77 	bl	8006db4 <get_eit_entry>
 8006ec6:	2800      	cmp	r0, #0
 8006ec8:	d111      	bne.n	8006eee <unwind_phase2+0x36>
 8006eca:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8006ecc:	002a      	movs	r2, r5
 8006ece:	6163      	str	r3, [r4, #20]
 8006ed0:	0021      	movs	r1, r4
 8006ed2:	2001      	movs	r0, #1
 8006ed4:	6923      	ldr	r3, [r4, #16]
 8006ed6:	4798      	blx	r3
 8006ed8:	2808      	cmp	r0, #8
 8006eda:	d0f0      	beq.n	8006ebe <unwind_phase2+0x6>
 8006edc:	2807      	cmp	r0, #7
 8006ede:	d106      	bne.n	8006eee <unwind_phase2+0x36>
 8006ee0:	2000      	movs	r0, #0
 8006ee2:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8006ee4:	f7ff ffe6 	bl	8006eb4 <_Unwind_DebugHook>
 8006ee8:	1d28      	adds	r0, r5, #4
 8006eea:	f000 fc3d 	bl	8007768 <__restore_core_regs>
 8006eee:	f004 ff39 	bl	800bd64 <abort>
 8006ef2:	46c0      	nop			; (mov r8, r8)

08006ef4 <unwind_phase2_forced>:
 8006ef4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006ef6:	46ce      	mov	lr, r9
 8006ef8:	4647      	mov	r7, r8
 8006efa:	b580      	push	{r7, lr}
 8006efc:	68c3      	ldr	r3, [r0, #12]
 8006efe:	4c2e      	ldr	r4, [pc, #184]	; (8006fb8 <unwind_phase2_forced+0xc4>)
 8006f00:	4699      	mov	r9, r3
 8006f02:	44a5      	add	sp, r4
 8006f04:	6983      	ldr	r3, [r0, #24]
 8006f06:	0004      	movs	r4, r0
 8006f08:	0015      	movs	r5, r2
 8006f0a:	3104      	adds	r1, #4
 8006f0c:	2240      	movs	r2, #64	; 0x40
 8006f0e:	a803      	add	r0, sp, #12
 8006f10:	4698      	mov	r8, r3
 8006f12:	f005 fc45 	bl	800c7a0 <memcpy>
 8006f16:	2300      	movs	r3, #0
 8006f18:	9302      	str	r3, [sp, #8]
 8006f1a:	e023      	b.n	8006f64 <unwind_phase2_forced+0x70>
 8006f1c:	22f0      	movs	r2, #240	; 0xf0
 8006f1e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006f20:	0052      	lsls	r2, r2, #1
 8006f22:	6163      	str	r3, [r4, #20]
 8006f24:	a902      	add	r1, sp, #8
 8006f26:	a87a      	add	r0, sp, #488	; 0x1e8
 8006f28:	f005 fc3a 	bl	800c7a0 <memcpy>
 8006f2c:	0021      	movs	r1, r4
 8006f2e:	0030      	movs	r0, r6
 8006f30:	6923      	ldr	r3, [r4, #16]
 8006f32:	aa7a      	add	r2, sp, #488	; 0x1e8
 8006f34:	4798      	blx	r3
 8006f36:	9b88      	ldr	r3, [sp, #544]	; 0x220
 8006f38:	0006      	movs	r6, r0
 8006f3a:	9313      	str	r3, [sp, #76]	; 0x4c
 8006f3c:	4643      	mov	r3, r8
 8006f3e:	9301      	str	r3, [sp, #4]
 8006f40:	ab02      	add	r3, sp, #8
 8006f42:	9300      	str	r3, [sp, #0]
 8006f44:	0022      	movs	r2, r4
 8006f46:	0023      	movs	r3, r4
 8006f48:	0029      	movs	r1, r5
 8006f4a:	2001      	movs	r0, #1
 8006f4c:	47c8      	blx	r9
 8006f4e:	2800      	cmp	r0, #0
 8006f50:	d11f      	bne.n	8006f92 <unwind_phase2_forced+0x9e>
 8006f52:	22f0      	movs	r2, #240	; 0xf0
 8006f54:	a97a      	add	r1, sp, #488	; 0x1e8
 8006f56:	0052      	lsls	r2, r2, #1
 8006f58:	a802      	add	r0, sp, #8
 8006f5a:	f005 fc21 	bl	800c7a0 <memcpy>
 8006f5e:	2500      	movs	r5, #0
 8006f60:	2e08      	cmp	r6, #8
 8006f62:	d11f      	bne.n	8006fa4 <unwind_phase2_forced+0xb0>
 8006f64:	0020      	movs	r0, r4
 8006f66:	9912      	ldr	r1, [sp, #72]	; 0x48
 8006f68:	f7ff ff24 	bl	8006db4 <get_eit_entry>
 8006f6c:	3509      	adds	r5, #9
 8006f6e:	0007      	movs	r7, r0
 8006f70:	b2ee      	uxtb	r6, r5
 8006f72:	2800      	cmp	r0, #0
 8006f74:	d0d2      	beq.n	8006f1c <unwind_phase2_forced+0x28>
 8006f76:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006f78:	2110      	movs	r1, #16
 8006f7a:	9313      	str	r3, [sp, #76]	; 0x4c
 8006f7c:	4643      	mov	r3, r8
 8006f7e:	9301      	str	r3, [sp, #4]
 8006f80:	ab02      	add	r3, sp, #8
 8006f82:	9300      	str	r3, [sp, #0]
 8006f84:	0022      	movs	r2, r4
 8006f86:	0023      	movs	r3, r4
 8006f88:	2001      	movs	r0, #1
 8006f8a:	4331      	orrs	r1, r6
 8006f8c:	47c8      	blx	r9
 8006f8e:	2800      	cmp	r0, #0
 8006f90:	d000      	beq.n	8006f94 <unwind_phase2_forced+0xa0>
 8006f92:	2709      	movs	r7, #9
 8006f94:	0038      	movs	r0, r7
 8006f96:	23f3      	movs	r3, #243	; 0xf3
 8006f98:	009b      	lsls	r3, r3, #2
 8006f9a:	449d      	add	sp, r3
 8006f9c:	bcc0      	pop	{r6, r7}
 8006f9e:	46b9      	mov	r9, r7
 8006fa0:	46b0      	mov	r8, r6
 8006fa2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006fa4:	2e07      	cmp	r6, #7
 8006fa6:	d1f4      	bne.n	8006f92 <unwind_phase2_forced+0x9e>
 8006fa8:	0028      	movs	r0, r5
 8006faa:	9912      	ldr	r1, [sp, #72]	; 0x48
 8006fac:	f7ff ff82 	bl	8006eb4 <_Unwind_DebugHook>
 8006fb0:	a803      	add	r0, sp, #12
 8006fb2:	f000 fbd9 	bl	8007768 <__restore_core_regs>
 8006fb6:	46c0      	nop			; (mov r8, r8)
 8006fb8:	fffffc34 	.word	0xfffffc34

08006fbc <_Unwind_GetCFA>:
 8006fbc:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8006fbe:	4770      	bx	lr

08006fc0 <__gnu_Unwind_RaiseException>:
 8006fc0:	b570      	push	{r4, r5, r6, lr}
 8006fc2:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 8006fc4:	b0f8      	sub	sp, #480	; 0x1e0
 8006fc6:	640b      	str	r3, [r1, #64]	; 0x40
 8006fc8:	0005      	movs	r5, r0
 8006fca:	000e      	movs	r6, r1
 8006fcc:	2240      	movs	r2, #64	; 0x40
 8006fce:	3104      	adds	r1, #4
 8006fd0:	a801      	add	r0, sp, #4
 8006fd2:	f005 fbe5 	bl	800c7a0 <memcpy>
 8006fd6:	2301      	movs	r3, #1
 8006fd8:	425b      	negs	r3, r3
 8006fda:	9300      	str	r3, [sp, #0]
 8006fdc:	e006      	b.n	8006fec <__gnu_Unwind_RaiseException+0x2c>
 8006fde:	466a      	mov	r2, sp
 8006fe0:	0029      	movs	r1, r5
 8006fe2:	692b      	ldr	r3, [r5, #16]
 8006fe4:	4798      	blx	r3
 8006fe6:	0004      	movs	r4, r0
 8006fe8:	2808      	cmp	r0, #8
 8006fea:	d108      	bne.n	8006ffe <__gnu_Unwind_RaiseException+0x3e>
 8006fec:	0028      	movs	r0, r5
 8006fee:	9910      	ldr	r1, [sp, #64]	; 0x40
 8006ff0:	f7ff fee0 	bl	8006db4 <get_eit_entry>
 8006ff4:	2800      	cmp	r0, #0
 8006ff6:	d0f2      	beq.n	8006fde <__gnu_Unwind_RaiseException+0x1e>
 8006ff8:	2009      	movs	r0, #9
 8006ffa:	b078      	add	sp, #480	; 0x1e0
 8006ffc:	bd70      	pop	{r4, r5, r6, pc}
 8006ffe:	4668      	mov	r0, sp
 8007000:	f7ff ff22 	bl	8006e48 <restore_non_core_regs>
 8007004:	2c06      	cmp	r4, #6
 8007006:	d1f7      	bne.n	8006ff8 <__gnu_Unwind_RaiseException+0x38>
 8007008:	0031      	movs	r1, r6
 800700a:	0028      	movs	r0, r5
 800700c:	f7ff ff54 	bl	8006eb8 <unwind_phase2>

08007010 <__gnu_Unwind_ForcedUnwind>:
 8007010:	b510      	push	{r4, lr}
 8007012:	6182      	str	r2, [r0, #24]
 8007014:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8007016:	60c1      	str	r1, [r0, #12]
 8007018:	641a      	str	r2, [r3, #64]	; 0x40
 800701a:	0019      	movs	r1, r3
 800701c:	2200      	movs	r2, #0
 800701e:	f7ff ff69 	bl	8006ef4 <unwind_phase2_forced>
 8007022:	bd10      	pop	{r4, pc}

08007024 <__gnu_Unwind_Resume>:
 8007024:	6943      	ldr	r3, [r0, #20]
 8007026:	b570      	push	{r4, r5, r6, lr}
 8007028:	640b      	str	r3, [r1, #64]	; 0x40
 800702a:	68c3      	ldr	r3, [r0, #12]
 800702c:	0004      	movs	r4, r0
 800702e:	000d      	movs	r5, r1
 8007030:	2b00      	cmp	r3, #0
 8007032:	d113      	bne.n	800705c <__gnu_Unwind_Resume+0x38>
 8007034:	000a      	movs	r2, r1
 8007036:	6903      	ldr	r3, [r0, #16]
 8007038:	0001      	movs	r1, r0
 800703a:	2002      	movs	r0, #2
 800703c:	4798      	blx	r3
 800703e:	2807      	cmp	r0, #7
 8007040:	d005      	beq.n	800704e <__gnu_Unwind_Resume+0x2a>
 8007042:	2808      	cmp	r0, #8
 8007044:	d10f      	bne.n	8007066 <__gnu_Unwind_Resume+0x42>
 8007046:	0029      	movs	r1, r5
 8007048:	0020      	movs	r0, r4
 800704a:	f7ff ff35 	bl	8006eb8 <unwind_phase2>
 800704e:	2000      	movs	r0, #0
 8007050:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8007052:	f7ff ff2f 	bl	8006eb4 <_Unwind_DebugHook>
 8007056:	1d28      	adds	r0, r5, #4
 8007058:	f000 fb86 	bl	8007768 <__restore_core_regs>
 800705c:	2201      	movs	r2, #1
 800705e:	f7ff ff49 	bl	8006ef4 <unwind_phase2_forced>
 8007062:	f004 fe7f 	bl	800bd64 <abort>
 8007066:	f004 fe7d 	bl	800bd64 <abort>
 800706a:	46c0      	nop			; (mov r8, r8)

0800706c <__gnu_Unwind_Resume_or_Rethrow>:
 800706c:	68c3      	ldr	r3, [r0, #12]
 800706e:	b510      	push	{r4, lr}
 8007070:	2b00      	cmp	r3, #0
 8007072:	d005      	beq.n	8007080 <__gnu_Unwind_Resume_or_Rethrow+0x14>
 8007074:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 8007076:	2200      	movs	r2, #0
 8007078:	640b      	str	r3, [r1, #64]	; 0x40
 800707a:	f7ff ff3b 	bl	8006ef4 <unwind_phase2_forced>
 800707e:	bd10      	pop	{r4, pc}
 8007080:	f7ff ff9e 	bl	8006fc0 <__gnu_Unwind_RaiseException>
 8007084:	e7fb      	b.n	800707e <__gnu_Unwind_Resume_or_Rethrow+0x12>
 8007086:	46c0      	nop			; (mov r8, r8)

08007088 <_Unwind_Complete>:
 8007088:	4770      	bx	lr
 800708a:	46c0      	nop			; (mov r8, r8)

0800708c <_Unwind_DeleteException>:
 800708c:	6883      	ldr	r3, [r0, #8]
 800708e:	0001      	movs	r1, r0
 8007090:	b510      	push	{r4, lr}
 8007092:	2b00      	cmp	r3, #0
 8007094:	d001      	beq.n	800709a <_Unwind_DeleteException+0xe>
 8007096:	2001      	movs	r0, #1
 8007098:	4798      	blx	r3
 800709a:	bd10      	pop	{r4, pc}

0800709c <_Unwind_VRS_Get>:
 800709c:	2901      	cmp	r1, #1
 800709e:	d015      	beq.n	80070cc <_Unwind_VRS_Get+0x30>
 80070a0:	d80a      	bhi.n	80070b8 <_Unwind_VRS_Get+0x1c>
 80070a2:	2b00      	cmp	r3, #0
 80070a4:	d110      	bne.n	80070c8 <_Unwind_VRS_Get+0x2c>
 80070a6:	2a0f      	cmp	r2, #15
 80070a8:	d80e      	bhi.n	80070c8 <_Unwind_VRS_Get+0x2c>
 80070aa:	0092      	lsls	r2, r2, #2
 80070ac:	1880      	adds	r0, r0, r2
 80070ae:	6843      	ldr	r3, [r0, #4]
 80070b0:	9a00      	ldr	r2, [sp, #0]
 80070b2:	2000      	movs	r0, #0
 80070b4:	6013      	str	r3, [r2, #0]
 80070b6:	e006      	b.n	80070c6 <_Unwind_VRS_Get+0x2a>
 80070b8:	2001      	movs	r0, #1
 80070ba:	3903      	subs	r1, #3
 80070bc:	b2c9      	uxtb	r1, r1
 80070be:	4288      	cmp	r0, r1
 80070c0:	4180      	sbcs	r0, r0
 80070c2:	4240      	negs	r0, r0
 80070c4:	3001      	adds	r0, #1
 80070c6:	4770      	bx	lr
 80070c8:	2002      	movs	r0, #2
 80070ca:	e7fc      	b.n	80070c6 <_Unwind_VRS_Get+0x2a>
 80070cc:	2001      	movs	r0, #1
 80070ce:	e7fa      	b.n	80070c6 <_Unwind_VRS_Get+0x2a>

080070d0 <_Unwind_GetGR>:
 80070d0:	b500      	push	{lr}
 80070d2:	b085      	sub	sp, #20
 80070d4:	ab03      	add	r3, sp, #12
 80070d6:	000a      	movs	r2, r1
 80070d8:	9300      	str	r3, [sp, #0]
 80070da:	2100      	movs	r1, #0
 80070dc:	2300      	movs	r3, #0
 80070de:	f7ff ffdd 	bl	800709c <_Unwind_VRS_Get>
 80070e2:	9803      	ldr	r0, [sp, #12]
 80070e4:	b005      	add	sp, #20
 80070e6:	bd00      	pop	{pc}

080070e8 <_Unwind_VRS_Set>:
 80070e8:	2901      	cmp	r1, #1
 80070ea:	d015      	beq.n	8007118 <_Unwind_VRS_Set+0x30>
 80070ec:	d80a      	bhi.n	8007104 <_Unwind_VRS_Set+0x1c>
 80070ee:	2b00      	cmp	r3, #0
 80070f0:	d110      	bne.n	8007114 <_Unwind_VRS_Set+0x2c>
 80070f2:	2a0f      	cmp	r2, #15
 80070f4:	d80e      	bhi.n	8007114 <_Unwind_VRS_Set+0x2c>
 80070f6:	9b00      	ldr	r3, [sp, #0]
 80070f8:	0092      	lsls	r2, r2, #2
 80070fa:	681b      	ldr	r3, [r3, #0]
 80070fc:	1880      	adds	r0, r0, r2
 80070fe:	6043      	str	r3, [r0, #4]
 8007100:	2000      	movs	r0, #0
 8007102:	e006      	b.n	8007112 <_Unwind_VRS_Set+0x2a>
 8007104:	2001      	movs	r0, #1
 8007106:	3903      	subs	r1, #3
 8007108:	b2c9      	uxtb	r1, r1
 800710a:	4288      	cmp	r0, r1
 800710c:	4180      	sbcs	r0, r0
 800710e:	4240      	negs	r0, r0
 8007110:	3001      	adds	r0, #1
 8007112:	4770      	bx	lr
 8007114:	2002      	movs	r0, #2
 8007116:	e7fc      	b.n	8007112 <_Unwind_VRS_Set+0x2a>
 8007118:	2001      	movs	r0, #1
 800711a:	e7fa      	b.n	8007112 <_Unwind_VRS_Set+0x2a>

0800711c <_Unwind_SetGR>:
 800711c:	b500      	push	{lr}
 800711e:	b085      	sub	sp, #20
 8007120:	ab03      	add	r3, sp, #12
 8007122:	9203      	str	r2, [sp, #12]
 8007124:	9300      	str	r3, [sp, #0]
 8007126:	000a      	movs	r2, r1
 8007128:	2300      	movs	r3, #0
 800712a:	2100      	movs	r1, #0
 800712c:	f7ff ffdc 	bl	80070e8 <_Unwind_VRS_Set>
 8007130:	b005      	add	sp, #20
 8007132:	bd00      	pop	{pc}

08007134 <__gnu_Unwind_Backtrace>:
 8007134:	b570      	push	{r4, r5, r6, lr}
 8007136:	4c19      	ldr	r4, [pc, #100]	; (800719c <__gnu_Unwind_Backtrace+0x68>)
 8007138:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 800713a:	44a5      	add	sp, r4
 800713c:	6413      	str	r3, [r2, #64]	; 0x40
 800713e:	0005      	movs	r5, r0
 8007140:	000c      	movs	r4, r1
 8007142:	a817      	add	r0, sp, #92	; 0x5c
 8007144:	1d11      	adds	r1, r2, #4
 8007146:	2240      	movs	r2, #64	; 0x40
 8007148:	f005 fb2a 	bl	800c7a0 <memcpy>
 800714c:	2301      	movs	r3, #1
 800714e:	425b      	negs	r3, r3
 8007150:	9316      	str	r3, [sp, #88]	; 0x58
 8007152:	e013      	b.n	800717c <__gnu_Unwind_Backtrace+0x48>
 8007154:	210c      	movs	r1, #12
 8007156:	a816      	add	r0, sp, #88	; 0x58
 8007158:	466a      	mov	r2, sp
 800715a:	f7ff ffdf 	bl	800711c <_Unwind_SetGR>
 800715e:	0021      	movs	r1, r4
 8007160:	a816      	add	r0, sp, #88	; 0x58
 8007162:	47a8      	blx	r5
 8007164:	2800      	cmp	r0, #0
 8007166:	d10f      	bne.n	8007188 <__gnu_Unwind_Backtrace+0x54>
 8007168:	4669      	mov	r1, sp
 800716a:	9b04      	ldr	r3, [sp, #16]
 800716c:	aa16      	add	r2, sp, #88	; 0x58
 800716e:	3008      	adds	r0, #8
 8007170:	4798      	blx	r3
 8007172:	0006      	movs	r6, r0
 8007174:	2805      	cmp	r0, #5
 8007176:	d008      	beq.n	800718a <__gnu_Unwind_Backtrace+0x56>
 8007178:	2809      	cmp	r0, #9
 800717a:	d005      	beq.n	8007188 <__gnu_Unwind_Backtrace+0x54>
 800717c:	4668      	mov	r0, sp
 800717e:	9926      	ldr	r1, [sp, #152]	; 0x98
 8007180:	f7ff fe18 	bl	8006db4 <get_eit_entry>
 8007184:	2800      	cmp	r0, #0
 8007186:	d0e5      	beq.n	8007154 <__gnu_Unwind_Backtrace+0x20>
 8007188:	2609      	movs	r6, #9
 800718a:	a816      	add	r0, sp, #88	; 0x58
 800718c:	f7ff fe5c 	bl	8006e48 <restore_non_core_regs>
 8007190:	0030      	movs	r0, r6
 8007192:	238e      	movs	r3, #142	; 0x8e
 8007194:	009b      	lsls	r3, r3, #2
 8007196:	449d      	add	sp, r3
 8007198:	bd70      	pop	{r4, r5, r6, pc}
 800719a:	46c0      	nop			; (mov r8, r8)
 800719c:	fffffdc8 	.word	0xfffffdc8

080071a0 <__gnu_unwind_pr_common>:
 80071a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80071a2:	464e      	mov	r6, r9
 80071a4:	4699      	mov	r9, r3
 80071a6:	4645      	mov	r5, r8
 80071a8:	4657      	mov	r7, sl
 80071aa:	46de      	mov	lr, fp
 80071ac:	2303      	movs	r3, #3
 80071ae:	4692      	mov	sl, r2
 80071b0:	464a      	mov	r2, r9
 80071b2:	b5e0      	push	{r5, r6, r7, lr}
 80071b4:	6ccd      	ldr	r5, [r1, #76]	; 0x4c
 80071b6:	b089      	sub	sp, #36	; 0x24
 80071b8:	4003      	ands	r3, r0
 80071ba:	9300      	str	r3, [sp, #0]
 80071bc:	cd08      	ldmia	r5!, {r3}
 80071be:	4688      	mov	r8, r1
 80071c0:	9506      	str	r5, [sp, #24]
 80071c2:	2a00      	cmp	r2, #0
 80071c4:	d100      	bne.n	80071c8 <__gnu_unwind_pr_common+0x28>
 80071c6:	e081      	b.n	80072cc <__gnu_unwind_pr_common+0x12c>
 80071c8:	0c1a      	lsrs	r2, r3, #16
 80071ca:	041b      	lsls	r3, r3, #16
 80071cc:	9305      	str	r3, [sp, #20]
 80071ce:	23ff      	movs	r3, #255	; 0xff
 80071d0:	4013      	ands	r3, r2
 80071d2:	009b      	lsls	r3, r3, #2
 80071d4:	18ed      	adds	r5, r5, r3
 80071d6:	2302      	movs	r3, #2
 80071d8:	a904      	add	r1, sp, #16
 80071da:	734a      	strb	r2, [r1, #13]
 80071dc:	aa04      	add	r2, sp, #16
 80071de:	7313      	strb	r3, [r2, #12]
 80071e0:	9b00      	ldr	r3, [sp, #0]
 80071e2:	2b02      	cmp	r3, #2
 80071e4:	d101      	bne.n	80071ea <__gnu_unwind_pr_common+0x4a>
 80071e6:	4643      	mov	r3, r8
 80071e8:	6b9d      	ldr	r5, [r3, #56]	; 0x38
 80071ea:	4643      	mov	r3, r8
 80071ec:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80071ee:	07db      	lsls	r3, r3, #31
 80071f0:	d50f      	bpl.n	8007212 <__gnu_unwind_pr_common+0x72>
 80071f2:	4650      	mov	r0, sl
 80071f4:	a905      	add	r1, sp, #20
 80071f6:	f000 fb83 	bl	8007900 <__gnu_unwind_execute>
 80071fa:	2800      	cmp	r0, #0
 80071fc:	d101      	bne.n	8007202 <__gnu_unwind_pr_common+0x62>
 80071fe:	2008      	movs	r0, #8
 8007200:	e000      	b.n	8007204 <__gnu_unwind_pr_common+0x64>
 8007202:	2009      	movs	r0, #9
 8007204:	b009      	add	sp, #36	; 0x24
 8007206:	bcf0      	pop	{r4, r5, r6, r7}
 8007208:	46bb      	mov	fp, r7
 800720a:	46b2      	mov	sl, r6
 800720c:	46a9      	mov	r9, r5
 800720e:	46a0      	mov	r8, r4
 8007210:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007212:	682f      	ldr	r7, [r5, #0]
 8007214:	2f00      	cmp	r7, #0
 8007216:	d0ec      	beq.n	80071f2 <__gnu_unwind_pr_common+0x52>
 8007218:	2308      	movs	r3, #8
 800721a:	4003      	ands	r3, r0
 800721c:	9302      	str	r3, [sp, #8]
 800721e:	2300      	movs	r3, #0
 8007220:	9301      	str	r3, [sp, #4]
 8007222:	3301      	adds	r3, #1
 8007224:	4654      	mov	r4, sl
 8007226:	469b      	mov	fp, r3
 8007228:	4646      	mov	r6, r8
 800722a:	46ba      	mov	sl, r7
 800722c:	464b      	mov	r3, r9
 800722e:	2b02      	cmp	r3, #2
 8007230:	d049      	beq.n	80072c6 <__gnu_unwind_pr_common+0x126>
 8007232:	882b      	ldrh	r3, [r5, #0]
 8007234:	886f      	ldrh	r7, [r5, #2]
 8007236:	469a      	mov	sl, r3
 8007238:	3504      	adds	r5, #4
 800723a:	4659      	mov	r1, fp
 800723c:	003b      	movs	r3, r7
 800723e:	438b      	bics	r3, r1
 8007240:	4698      	mov	r8, r3
 8007242:	6cb2      	ldr	r2, [r6, #72]	; 0x48
 8007244:	210f      	movs	r1, #15
 8007246:	0020      	movs	r0, r4
 8007248:	4490      	add	r8, r2
 800724a:	f7ff ff41 	bl	80070d0 <_Unwind_GetGR>
 800724e:	2300      	movs	r3, #0
 8007250:	4580      	cmp	r8, r0
 8007252:	d806      	bhi.n	8007262 <__gnu_unwind_pr_common+0xc2>
 8007254:	4653      	mov	r3, sl
 8007256:	465a      	mov	r2, fp
 8007258:	4393      	bics	r3, r2
 800725a:	4443      	add	r3, r8
 800725c:	4298      	cmp	r0, r3
 800725e:	419b      	sbcs	r3, r3
 8007260:	425b      	negs	r3, r3
 8007262:	2202      	movs	r2, #2
 8007264:	007f      	lsls	r7, r7, #1
 8007266:	4017      	ands	r7, r2
 8007268:	4659      	mov	r1, fp
 800726a:	4652      	mov	r2, sl
 800726c:	400a      	ands	r2, r1
 800726e:	4317      	orrs	r7, r2
 8007270:	2f01      	cmp	r7, #1
 8007272:	d031      	beq.n	80072d8 <__gnu_unwind_pr_common+0x138>
 8007274:	2f02      	cmp	r7, #2
 8007276:	d04d      	beq.n	8007314 <__gnu_unwind_pr_common+0x174>
 8007278:	2f00      	cmp	r7, #0
 800727a:	d1c2      	bne.n	8007202 <__gnu_unwind_pr_common+0x62>
 800727c:	9a00      	ldr	r2, [sp, #0]
 800727e:	2a00      	cmp	r2, #0
 8007280:	d002      	beq.n	8007288 <__gnu_unwind_pr_common+0xe8>
 8007282:	2b00      	cmp	r3, #0
 8007284:	d000      	beq.n	8007288 <__gnu_unwind_pr_common+0xe8>
 8007286:	e09d      	b.n	80073c4 <__gnu_unwind_pr_common+0x224>
 8007288:	3504      	adds	r5, #4
 800728a:	682b      	ldr	r3, [r5, #0]
 800728c:	469a      	mov	sl, r3
 800728e:	2b00      	cmp	r3, #0
 8007290:	d1cc      	bne.n	800722c <__gnu_unwind_pr_common+0x8c>
 8007292:	0020      	movs	r0, r4
 8007294:	a905      	add	r1, sp, #20
 8007296:	46a2      	mov	sl, r4
 8007298:	f000 fb32 	bl	8007900 <__gnu_unwind_execute>
 800729c:	2800      	cmp	r0, #0
 800729e:	d1b0      	bne.n	8007202 <__gnu_unwind_pr_common+0x62>
 80072a0:	9b01      	ldr	r3, [sp, #4]
 80072a2:	2b00      	cmp	r3, #0
 80072a4:	d0ab      	beq.n	80071fe <__gnu_unwind_pr_common+0x5e>
 80072a6:	210f      	movs	r1, #15
 80072a8:	4650      	mov	r0, sl
 80072aa:	f7ff ff11 	bl	80070d0 <_Unwind_GetGR>
 80072ae:	210e      	movs	r1, #14
 80072b0:	0002      	movs	r2, r0
 80072b2:	4650      	mov	r0, sl
 80072b4:	f7ff ff32 	bl	800711c <_Unwind_SetGR>
 80072b8:	4650      	mov	r0, sl
 80072ba:	210f      	movs	r1, #15
 80072bc:	4a73      	ldr	r2, [pc, #460]	; (800748c <__gnu_unwind_pr_common+0x2ec>)
 80072be:	f7ff ff2d 	bl	800711c <_Unwind_SetGR>
 80072c2:	2007      	movs	r0, #7
 80072c4:	e79e      	b.n	8007204 <__gnu_unwind_pr_common+0x64>
 80072c6:	686f      	ldr	r7, [r5, #4]
 80072c8:	3508      	adds	r5, #8
 80072ca:	e7b6      	b.n	800723a <__gnu_unwind_pr_common+0x9a>
 80072cc:	021b      	lsls	r3, r3, #8
 80072ce:	9305      	str	r3, [sp, #20]
 80072d0:	ab04      	add	r3, sp, #16
 80072d2:	735a      	strb	r2, [r3, #13]
 80072d4:	2303      	movs	r3, #3
 80072d6:	e781      	b.n	80071dc <__gnu_unwind_pr_common+0x3c>
 80072d8:	9a00      	ldr	r2, [sp, #0]
 80072da:	2a00      	cmp	r2, #0
 80072dc:	d149      	bne.n	8007372 <__gnu_unwind_pr_common+0x1d2>
 80072de:	2b00      	cmp	r3, #0
 80072e0:	d016      	beq.n	8007310 <__gnu_unwind_pr_common+0x170>
 80072e2:	682f      	ldr	r7, [r5, #0]
 80072e4:	686b      	ldr	r3, [r5, #4]
 80072e6:	0fff      	lsrs	r7, r7, #31
 80072e8:	1c9a      	adds	r2, r3, #2
 80072ea:	d100      	bne.n	80072ee <__gnu_unwind_pr_common+0x14e>
 80072ec:	e789      	b.n	8007202 <__gnu_unwind_pr_common+0x62>
 80072ee:	0032      	movs	r2, r6
 80072f0:	3258      	adds	r2, #88	; 0x58
 80072f2:	9204      	str	r2, [sp, #16]
 80072f4:	3301      	adds	r3, #1
 80072f6:	d100      	bne.n	80072fa <__gnu_unwind_pr_common+0x15a>
 80072f8:	e0b7      	b.n	800746a <__gnu_unwind_pr_common+0x2ca>
 80072fa:	1d28      	adds	r0, r5, #4
 80072fc:	f7ff fdd4 	bl	8006ea8 <_Unwind_decode_typeinfo_ptr.constprop.0>
 8007300:	003a      	movs	r2, r7
 8007302:	0001      	movs	r1, r0
 8007304:	ab04      	add	r3, sp, #16
 8007306:	0030      	movs	r0, r6
 8007308:	f003 fc1c 	bl	800ab44 <__cxa_type_match>
 800730c:	2800      	cmp	r0, #0
 800730e:	d16d      	bne.n	80073ec <__gnu_unwind_pr_common+0x24c>
 8007310:	3508      	adds	r5, #8
 8007312:	e7ba      	b.n	800728a <__gnu_unwind_pr_common+0xea>
 8007314:	682a      	ldr	r2, [r5, #0]
 8007316:	0057      	lsls	r7, r2, #1
 8007318:	4690      	mov	r8, r2
 800731a:	9a00      	ldr	r2, [sp, #0]
 800731c:	087f      	lsrs	r7, r7, #1
 800731e:	2a00      	cmp	r2, #0
 8007320:	d10e      	bne.n	8007340 <__gnu_unwind_pr_common+0x1a0>
 8007322:	2b00      	cmp	r3, #0
 8007324:	d004      	beq.n	8007330 <__gnu_unwind_pr_common+0x190>
 8007326:	9b02      	ldr	r3, [sp, #8]
 8007328:	2b00      	cmp	r3, #0
 800732a:	d071      	beq.n	8007410 <__gnu_unwind_pr_common+0x270>
 800732c:	2f00      	cmp	r7, #0
 800732e:	d03b      	beq.n	80073a8 <__gnu_unwind_pr_common+0x208>
 8007330:	4643      	mov	r3, r8
 8007332:	2b00      	cmp	r3, #0
 8007334:	da00      	bge.n	8007338 <__gnu_unwind_pr_common+0x198>
 8007336:	3504      	adds	r5, #4
 8007338:	3701      	adds	r7, #1
 800733a:	00bf      	lsls	r7, r7, #2
 800733c:	19ed      	adds	r5, r5, r7
 800733e:	e7a4      	b.n	800728a <__gnu_unwind_pr_common+0xea>
 8007340:	6a33      	ldr	r3, [r6, #32]
 8007342:	210d      	movs	r1, #13
 8007344:	0020      	movs	r0, r4
 8007346:	469a      	mov	sl, r3
 8007348:	f7ff fec2 	bl	80070d0 <_Unwind_GetGR>
 800734c:	4582      	cmp	sl, r0
 800734e:	d1ef      	bne.n	8007330 <__gnu_unwind_pr_common+0x190>
 8007350:	6ab3      	ldr	r3, [r6, #40]	; 0x28
 8007352:	429d      	cmp	r5, r3
 8007354:	d1ec      	bne.n	8007330 <__gnu_unwind_pr_common+0x190>
 8007356:	2300      	movs	r3, #0
 8007358:	62f3      	str	r3, [r6, #44]	; 0x2c
 800735a:	3304      	adds	r3, #4
 800735c:	6333      	str	r3, [r6, #48]	; 0x30
 800735e:	1d2b      	adds	r3, r5, #4
 8007360:	62b7      	str	r7, [r6, #40]	; 0x28
 8007362:	6373      	str	r3, [r6, #52]	; 0x34
 8007364:	682b      	ldr	r3, [r5, #0]
 8007366:	2b00      	cmp	r3, #0
 8007368:	da00      	bge.n	800736c <__gnu_unwind_pr_common+0x1cc>
 800736a:	e089      	b.n	8007480 <__gnu_unwind_pr_common+0x2e0>
 800736c:	2301      	movs	r3, #1
 800736e:	9301      	str	r3, [sp, #4]
 8007370:	e7e2      	b.n	8007338 <__gnu_unwind_pr_common+0x198>
 8007372:	210d      	movs	r1, #13
 8007374:	0020      	movs	r0, r4
 8007376:	6a37      	ldr	r7, [r6, #32]
 8007378:	f7ff feaa 	bl	80070d0 <_Unwind_GetGR>
 800737c:	4287      	cmp	r7, r0
 800737e:	d1c7      	bne.n	8007310 <__gnu_unwind_pr_common+0x170>
 8007380:	6ab3      	ldr	r3, [r6, #40]	; 0x28
 8007382:	429d      	cmp	r5, r3
 8007384:	d1c4      	bne.n	8007310 <__gnu_unwind_pr_common+0x170>
 8007386:	46b0      	mov	r8, r6
 8007388:	46a2      	mov	sl, r4
 800738a:	0028      	movs	r0, r5
 800738c:	f7ff fcb8 	bl	8006d00 <selfrel_offset31>
 8007390:	210f      	movs	r1, #15
 8007392:	0002      	movs	r2, r0
 8007394:	4650      	mov	r0, sl
 8007396:	f7ff fec1 	bl	800711c <_Unwind_SetGR>
 800739a:	4650      	mov	r0, sl
 800739c:	4642      	mov	r2, r8
 800739e:	2100      	movs	r1, #0
 80073a0:	f7ff febc 	bl	800711c <_Unwind_SetGR>
 80073a4:	2007      	movs	r0, #7
 80073a6:	e72d      	b.n	8007204 <__gnu_unwind_pr_common+0x64>
 80073a8:	46b0      	mov	r8, r6
 80073aa:	46a2      	mov	sl, r4
 80073ac:	210d      	movs	r1, #13
 80073ae:	4650      	mov	r0, sl
 80073b0:	f7ff fe8e 	bl	80070d0 <_Unwind_GetGR>
 80073b4:	4643      	mov	r3, r8
 80073b6:	4642      	mov	r2, r8
 80073b8:	6218      	str	r0, [r3, #32]
 80073ba:	9b04      	ldr	r3, [sp, #16]
 80073bc:	2006      	movs	r0, #6
 80073be:	6253      	str	r3, [r2, #36]	; 0x24
 80073c0:	6295      	str	r5, [r2, #40]	; 0x28
 80073c2:	e71f      	b.n	8007204 <__gnu_unwind_pr_common+0x64>
 80073c4:	0028      	movs	r0, r5
 80073c6:	f7ff fc9b 	bl	8006d00 <selfrel_offset31>
 80073ca:	3504      	adds	r5, #4
 80073cc:	46a2      	mov	sl, r4
 80073ce:	63b5      	str	r5, [r6, #56]	; 0x38
 80073d0:	0004      	movs	r4, r0
 80073d2:	0030      	movs	r0, r6
 80073d4:	f003 fc14 	bl	800ac00 <__cxa_begin_cleanup>
 80073d8:	2800      	cmp	r0, #0
 80073da:	d100      	bne.n	80073de <__gnu_unwind_pr_common+0x23e>
 80073dc:	e711      	b.n	8007202 <__gnu_unwind_pr_common+0x62>
 80073de:	4650      	mov	r0, sl
 80073e0:	0022      	movs	r2, r4
 80073e2:	210f      	movs	r1, #15
 80073e4:	f7ff fe9a 	bl	800711c <_Unwind_SetGR>
 80073e8:	2007      	movs	r0, #7
 80073ea:	e70b      	b.n	8007204 <__gnu_unwind_pr_common+0x64>
 80073ec:	46a2      	mov	sl, r4
 80073ee:	210d      	movs	r1, #13
 80073f0:	0004      	movs	r4, r0
 80073f2:	4650      	mov	r0, sl
 80073f4:	f7ff fe6c 	bl	80070d0 <_Unwind_GetGR>
 80073f8:	46b0      	mov	r8, r6
 80073fa:	6230      	str	r0, [r6, #32]
 80073fc:	2c02      	cmp	r4, #2
 80073fe:	d13d      	bne.n	800747c <__gnu_unwind_pr_common+0x2dc>
 8007400:	9b04      	ldr	r3, [sp, #16]
 8007402:	362c      	adds	r6, #44	; 0x2c
 8007404:	6033      	str	r3, [r6, #0]
 8007406:	4643      	mov	r3, r8
 8007408:	2006      	movs	r0, #6
 800740a:	625e      	str	r6, [r3, #36]	; 0x24
 800740c:	629d      	str	r5, [r3, #40]	; 0x28
 800740e:	e6f9      	b.n	8007204 <__gnu_unwind_pr_common+0x64>
 8007410:	1d2b      	adds	r3, r5, #4
 8007412:	469a      	mov	sl, r3
 8007414:	2300      	movs	r3, #0
 8007416:	4698      	mov	r8, r3
 8007418:	3358      	adds	r3, #88	; 0x58
 800741a:	469c      	mov	ip, r3
 800741c:	0021      	movs	r1, r4
 800741e:	464a      	mov	r2, r9
 8007420:	44b4      	add	ip, r6
 8007422:	4654      	mov	r4, sl
 8007424:	46a9      	mov	r9, r5
 8007426:	468a      	mov	sl, r1
 8007428:	003d      	movs	r5, r7
 800742a:	9203      	str	r2, [sp, #12]
 800742c:	4647      	mov	r7, r8
 800742e:	46e0      	mov	r8, ip
 8007430:	e00e      	b.n	8007450 <__gnu_unwind_pr_common+0x2b0>
 8007432:	4643      	mov	r3, r8
 8007434:	0020      	movs	r0, r4
 8007436:	9304      	str	r3, [sp, #16]
 8007438:	f7ff fd36 	bl	8006ea8 <_Unwind_decode_typeinfo_ptr.constprop.0>
 800743c:	2200      	movs	r2, #0
 800743e:	0001      	movs	r1, r0
 8007440:	ab04      	add	r3, sp, #16
 8007442:	0030      	movs	r0, r6
 8007444:	f003 fb7e 	bl	800ab44 <__cxa_type_match>
 8007448:	3701      	adds	r7, #1
 800744a:	3404      	adds	r4, #4
 800744c:	2800      	cmp	r0, #0
 800744e:	d104      	bne.n	800745a <__gnu_unwind_pr_common+0x2ba>
 8007450:	42af      	cmp	r7, r5
 8007452:	d1ee      	bne.n	8007432 <__gnu_unwind_pr_common+0x292>
 8007454:	464d      	mov	r5, r9
 8007456:	46b0      	mov	r8, r6
 8007458:	e7a8      	b.n	80073ac <__gnu_unwind_pr_common+0x20c>
 800745a:	002f      	movs	r7, r5
 800745c:	464d      	mov	r5, r9
 800745e:	9b03      	ldr	r3, [sp, #12]
 8007460:	4654      	mov	r4, sl
 8007462:	4699      	mov	r9, r3
 8007464:	682b      	ldr	r3, [r5, #0]
 8007466:	4698      	mov	r8, r3
 8007468:	e762      	b.n	8007330 <__gnu_unwind_pr_common+0x190>
 800746a:	46b0      	mov	r8, r6
 800746c:	210d      	movs	r1, #13
 800746e:	0020      	movs	r0, r4
 8007470:	0016      	movs	r6, r2
 8007472:	f7ff fe2d 	bl	80070d0 <_Unwind_GetGR>
 8007476:	4643      	mov	r3, r8
 8007478:	6218      	str	r0, [r3, #32]
 800747a:	e7c4      	b.n	8007406 <__gnu_unwind_pr_common+0x266>
 800747c:	9e04      	ldr	r6, [sp, #16]
 800747e:	e7c2      	b.n	8007406 <__gnu_unwind_pr_common+0x266>
 8007480:	1c78      	adds	r0, r7, #1
 8007482:	0080      	lsls	r0, r0, #2
 8007484:	46b0      	mov	r8, r6
 8007486:	46a2      	mov	sl, r4
 8007488:	1828      	adds	r0, r5, r0
 800748a:	e77f      	b.n	800738c <__gnu_unwind_pr_common+0x1ec>
 800748c:	0800bb41 	.word	0x0800bb41

08007490 <__aeabi_unwind_cpp_pr0>:
 8007490:	b510      	push	{r4, lr}
 8007492:	2300      	movs	r3, #0
 8007494:	f7ff fe84 	bl	80071a0 <__gnu_unwind_pr_common>
 8007498:	bd10      	pop	{r4, pc}
 800749a:	46c0      	nop			; (mov r8, r8)

0800749c <__aeabi_unwind_cpp_pr1>:
 800749c:	b510      	push	{r4, lr}
 800749e:	2301      	movs	r3, #1
 80074a0:	f7ff fe7e 	bl	80071a0 <__gnu_unwind_pr_common>
 80074a4:	bd10      	pop	{r4, pc}
 80074a6:	46c0      	nop			; (mov r8, r8)

080074a8 <__aeabi_unwind_cpp_pr2>:
 80074a8:	b510      	push	{r4, lr}
 80074aa:	2302      	movs	r3, #2
 80074ac:	f7ff fe78 	bl	80071a0 <__gnu_unwind_pr_common>
 80074b0:	bd10      	pop	{r4, pc}
 80074b2:	46c0      	nop			; (mov r8, r8)

080074b4 <_Unwind_VRS_Pop>:
 80074b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80074b6:	46ce      	mov	lr, r9
 80074b8:	4647      	mov	r7, r8
 80074ba:	b580      	push	{r7, lr}
 80074bc:	0006      	movs	r6, r0
 80074be:	0014      	movs	r4, r2
 80074c0:	001d      	movs	r5, r3
 80074c2:	b0c3      	sub	sp, #268	; 0x10c
 80074c4:	2903      	cmp	r1, #3
 80074c6:	d07d      	beq.n	80075c4 <_Unwind_VRS_Pop+0x110>
 80074c8:	d859      	bhi.n	800757e <_Unwind_VRS_Pop+0xca>
 80074ca:	2900      	cmp	r1, #0
 80074cc:	d100      	bne.n	80074d0 <_Unwind_VRS_Pop+0x1c>
 80074ce:	e081      	b.n	80075d4 <_Unwind_VRS_Pop+0x120>
 80074d0:	2901      	cmp	r1, #1
 80074d2:	d179      	bne.n	80075c8 <_Unwind_VRS_Pop+0x114>
 80074d4:	0c13      	lsrs	r3, r2, #16
 80074d6:	0414      	lsls	r4, r2, #16
 80074d8:	4698      	mov	r8, r3
 80074da:	0c24      	lsrs	r4, r4, #16
 80074dc:	2d01      	cmp	r5, #1
 80074de:	d100      	bne.n	80074e2 <_Unwind_VRS_Pop+0x2e>
 80074e0:	e0b2      	b.n	8007648 <_Unwind_VRS_Pop+0x194>
 80074e2:	2d05      	cmp	r5, #5
 80074e4:	d170      	bne.n	80075c8 <_Unwind_VRS_Pop+0x114>
 80074e6:	191b      	adds	r3, r3, r4
 80074e8:	2b20      	cmp	r3, #32
 80074ea:	d86d      	bhi.n	80075c8 <_Unwind_VRS_Pop+0x114>
 80074ec:	4642      	mov	r2, r8
 80074ee:	2a0f      	cmp	r2, #15
 80074f0:	d800      	bhi.n	80074f4 <_Unwind_VRS_Pop+0x40>
 80074f2:	e0ca      	b.n	800768a <_Unwind_VRS_Pop+0x1d6>
 80074f4:	46a1      	mov	r9, r4
 80074f6:	2c00      	cmp	r4, #0
 80074f8:	d000      	beq.n	80074fc <_Unwind_VRS_Pop+0x48>
 80074fa:	e0d8      	b.n	80076ae <_Unwind_VRS_Pop+0x1fa>
 80074fc:	2b0f      	cmp	r3, #15
 80074fe:	d83c      	bhi.n	800757a <_Unwind_VRS_Pop+0xc6>
 8007500:	2201      	movs	r2, #1
 8007502:	6833      	ldr	r3, [r6, #0]
 8007504:	421a      	tst	r2, r3
 8007506:	d007      	beq.n	8007518 <_Unwind_VRS_Pop+0x64>
 8007508:	4393      	bics	r3, r2
 800750a:	2202      	movs	r2, #2
 800750c:	0030      	movs	r0, r6
 800750e:	4313      	orrs	r3, r2
 8007510:	6033      	str	r3, [r6, #0]
 8007512:	3048      	adds	r0, #72	; 0x48
 8007514:	f000 f944 	bl	80077a0 <__gnu_Unwind_Save_VFP_D>
 8007518:	6bb0      	ldr	r0, [r6, #56]	; 0x38
 800751a:	af20      	add	r7, sp, #128	; 0x80
 800751c:	2c00      	cmp	r4, #0
 800751e:	d02c      	beq.n	800757a <_Unwind_VRS_Pop+0xc6>
 8007520:	2300      	movs	r3, #0
 8007522:	4699      	mov	r9, r3
 8007524:	4643      	mov	r3, r8
 8007526:	2200      	movs	r2, #0
 8007528:	00d9      	lsls	r1, r3, #3
 800752a:	1879      	adds	r1, r7, r1
 800752c:	00e4      	lsls	r4, r4, #3
 800752e:	5883      	ldr	r3, [r0, r2]
 8007530:	508b      	str	r3, [r1, r2]
 8007532:	3204      	adds	r2, #4
 8007534:	4294      	cmp	r4, r2
 8007536:	d1fa      	bne.n	800752e <_Unwind_VRS_Pop+0x7a>
 8007538:	464b      	mov	r3, r9
 800753a:	1900      	adds	r0, r0, r4
 800753c:	2b00      	cmp	r3, #0
 800753e:	d100      	bne.n	8007542 <_Unwind_VRS_Pop+0x8e>
 8007540:	e0db      	b.n	80076fa <_Unwind_VRS_Pop+0x246>
 8007542:	466f      	mov	r7, sp
 8007544:	4641      	mov	r1, r8
 8007546:	2910      	cmp	r1, #16
 8007548:	d200      	bcs.n	800754c <_Unwind_VRS_Pop+0x98>
 800754a:	2110      	movs	r1, #16
 800754c:	464b      	mov	r3, r9
 800754e:	2200      	movs	r2, #0
 8007550:	3910      	subs	r1, #16
 8007552:	00c9      	lsls	r1, r1, #3
 8007554:	1879      	adds	r1, r7, r1
 8007556:	00dc      	lsls	r4, r3, #3
 8007558:	5883      	ldr	r3, [r0, r2]
 800755a:	508b      	str	r3, [r1, r2]
 800755c:	3204      	adds	r2, #4
 800755e:	4294      	cmp	r4, r2
 8007560:	d1fa      	bne.n	8007558 <_Unwind_VRS_Pop+0xa4>
 8007562:	1900      	adds	r0, r0, r4
 8007564:	2d01      	cmp	r5, #1
 8007566:	d100      	bne.n	800756a <_Unwind_VRS_Pop+0xb6>
 8007568:	e0d7      	b.n	800771a <_Unwind_VRS_Pop+0x266>
 800756a:	4643      	mov	r3, r8
 800756c:	63b0      	str	r0, [r6, #56]	; 0x38
 800756e:	2b0f      	cmp	r3, #15
 8007570:	d800      	bhi.n	8007574 <_Unwind_VRS_Pop+0xc0>
 8007572:	e0db      	b.n	800772c <_Unwind_VRS_Pop+0x278>
 8007574:	0038      	movs	r0, r7
 8007576:	f000 f915 	bl	80077a4 <__gnu_Unwind_Restore_VFP_D_16_to_31>
 800757a:	2000      	movs	r0, #0
 800757c:	e025      	b.n	80075ca <_Unwind_VRS_Pop+0x116>
 800757e:	2904      	cmp	r1, #4
 8007580:	d122      	bne.n	80075c8 <_Unwind_VRS_Pop+0x114>
 8007582:	2b00      	cmp	r3, #0
 8007584:	d120      	bne.n	80075c8 <_Unwind_VRS_Pop+0x114>
 8007586:	2a10      	cmp	r2, #16
 8007588:	d81e      	bhi.n	80075c8 <_Unwind_VRS_Pop+0x114>
 800758a:	2210      	movs	r2, #16
 800758c:	6803      	ldr	r3, [r0, #0]
 800758e:	421a      	tst	r2, r3
 8007590:	d000      	beq.n	8007594 <_Unwind_VRS_Pop+0xe0>
 8007592:	e0a4      	b.n	80076de <_Unwind_VRS_Pop+0x22a>
 8007594:	af20      	add	r7, sp, #128	; 0x80
 8007596:	0038      	movs	r0, r7
 8007598:	f000 f90e 	bl	80077b8 <__gnu_Unwind_Save_WMMXC>
 800759c:	2501      	movs	r5, #1
 800759e:	0039      	movs	r1, r7
 80075a0:	2300      	movs	r3, #0
 80075a2:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 80075a4:	0028      	movs	r0, r5
 80075a6:	4098      	lsls	r0, r3
 80075a8:	4204      	tst	r4, r0
 80075aa:	d001      	beq.n	80075b0 <_Unwind_VRS_Pop+0xfc>
 80075ac:	ca01      	ldmia	r2!, {r0}
 80075ae:	6008      	str	r0, [r1, #0]
 80075b0:	3301      	adds	r3, #1
 80075b2:	3104      	adds	r1, #4
 80075b4:	2b04      	cmp	r3, #4
 80075b6:	d1f5      	bne.n	80075a4 <_Unwind_VRS_Pop+0xf0>
 80075b8:	0038      	movs	r0, r7
 80075ba:	63b2      	str	r2, [r6, #56]	; 0x38
 80075bc:	f000 f8fa 	bl	80077b4 <__gnu_Unwind_Restore_WMMXC>
 80075c0:	2000      	movs	r0, #0
 80075c2:	e002      	b.n	80075ca <_Unwind_VRS_Pop+0x116>
 80075c4:	2b03      	cmp	r3, #3
 80075c6:	d01c      	beq.n	8007602 <_Unwind_VRS_Pop+0x14e>
 80075c8:	2002      	movs	r0, #2
 80075ca:	b043      	add	sp, #268	; 0x10c
 80075cc:	bcc0      	pop	{r6, r7}
 80075ce:	46b9      	mov	r9, r7
 80075d0:	46b0      	mov	r8, r6
 80075d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80075d4:	2b00      	cmp	r3, #0
 80075d6:	d1f7      	bne.n	80075c8 <_Unwind_VRS_Pop+0x114>
 80075d8:	2300      	movs	r3, #0
 80075da:	2701      	movs	r7, #1
 80075dc:	0410      	lsls	r0, r2, #16
 80075de:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 80075e0:	0c00      	lsrs	r0, r0, #16
 80075e2:	1d31      	adds	r1, r6, #4
 80075e4:	003d      	movs	r5, r7
 80075e6:	409d      	lsls	r5, r3
 80075e8:	4228      	tst	r0, r5
 80075ea:	d001      	beq.n	80075f0 <_Unwind_VRS_Pop+0x13c>
 80075ec:	ca20      	ldmia	r2!, {r5}
 80075ee:	600d      	str	r5, [r1, #0]
 80075f0:	3301      	adds	r3, #1
 80075f2:	3104      	adds	r1, #4
 80075f4:	2b10      	cmp	r3, #16
 80075f6:	d1f5      	bne.n	80075e4 <_Unwind_VRS_Pop+0x130>
 80075f8:	2000      	movs	r0, #0
 80075fa:	04a4      	lsls	r4, r4, #18
 80075fc:	d4e5      	bmi.n	80075ca <_Unwind_VRS_Pop+0x116>
 80075fe:	63b2      	str	r2, [r6, #56]	; 0x38
 8007600:	e7e3      	b.n	80075ca <_Unwind_VRS_Pop+0x116>
 8007602:	0414      	lsls	r4, r2, #16
 8007604:	0c15      	lsrs	r5, r2, #16
 8007606:	0c24      	lsrs	r4, r4, #16
 8007608:	192b      	adds	r3, r5, r4
 800760a:	2b10      	cmp	r3, #16
 800760c:	d8dc      	bhi.n	80075c8 <_Unwind_VRS_Pop+0x114>
 800760e:	2208      	movs	r2, #8
 8007610:	6803      	ldr	r3, [r0, #0]
 8007612:	421a      	tst	r2, r3
 8007614:	d16a      	bne.n	80076ec <_Unwind_VRS_Pop+0x238>
 8007616:	af20      	add	r7, sp, #128	; 0x80
 8007618:	0038      	movs	r0, r7
 800761a:	f000 f8c9 	bl	80077b0 <__gnu_Unwind_Save_WMMXD>
 800761e:	00ed      	lsls	r5, r5, #3
 8007620:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8007622:	2c00      	cmp	r4, #0
 8007624:	d00a      	beq.n	800763c <_Unwind_VRS_Pop+0x188>
 8007626:	1aed      	subs	r5, r5, r3
 8007628:	00e4      	lsls	r4, r4, #3
 800762a:	1f2a      	subs	r2, r5, #4
 800762c:	191c      	adds	r4, r3, r4
 800762e:	18ba      	adds	r2, r7, r2
 8007630:	0019      	movs	r1, r3
 8007632:	6809      	ldr	r1, [r1, #0]
 8007634:	3304      	adds	r3, #4
 8007636:	5099      	str	r1, [r3, r2]
 8007638:	42a3      	cmp	r3, r4
 800763a:	d1f9      	bne.n	8007630 <_Unwind_VRS_Pop+0x17c>
 800763c:	0038      	movs	r0, r7
 800763e:	63b3      	str	r3, [r6, #56]	; 0x38
 8007640:	f000 f8b4 	bl	80077ac <__gnu_Unwind_Restore_WMMXD>
 8007644:	2000      	movs	r0, #0
 8007646:	e7c0      	b.n	80075ca <_Unwind_VRS_Pop+0x116>
 8007648:	191b      	adds	r3, r3, r4
 800764a:	2b10      	cmp	r3, #16
 800764c:	d8bc      	bhi.n	80075c8 <_Unwind_VRS_Pop+0x114>
 800764e:	4643      	mov	r3, r8
 8007650:	2b0f      	cmp	r3, #15
 8007652:	d8b9      	bhi.n	80075c8 <_Unwind_VRS_Pop+0x114>
 8007654:	6833      	ldr	r3, [r6, #0]
 8007656:	421d      	tst	r5, r3
 8007658:	d006      	beq.n	8007668 <_Unwind_VRS_Pop+0x1b4>
 800765a:	2203      	movs	r2, #3
 800765c:	0030      	movs	r0, r6
 800765e:	4393      	bics	r3, r2
 8007660:	6033      	str	r3, [r6, #0]
 8007662:	3048      	adds	r0, #72	; 0x48
 8007664:	f000 f898 	bl	8007798 <__gnu_Unwind_Save_VFP>
 8007668:	af20      	add	r7, sp, #128	; 0x80
 800766a:	0038      	movs	r0, r7
 800766c:	f000 f894 	bl	8007798 <__gnu_Unwind_Save_VFP>
 8007670:	2300      	movs	r3, #0
 8007672:	6bb0      	ldr	r0, [r6, #56]	; 0x38
 8007674:	4699      	mov	r9, r3
 8007676:	2c00      	cmp	r4, #0
 8007678:	d000      	beq.n	800767c <_Unwind_VRS_Pop+0x1c8>
 800767a:	e753      	b.n	8007524 <_Unwind_VRS_Pop+0x70>
 800767c:	3004      	adds	r0, #4
 800767e:	63b0      	str	r0, [r6, #56]	; 0x38
 8007680:	0038      	movs	r0, r7
 8007682:	f000 f887 	bl	8007794 <__gnu_Unwind_Restore_VFP>
 8007686:	2000      	movs	r0, #0
 8007688:	e79f      	b.n	80075ca <_Unwind_VRS_Pop+0x116>
 800768a:	2b10      	cmp	r3, #16
 800768c:	d950      	bls.n	8007730 <_Unwind_VRS_Pop+0x27c>
 800768e:	2210      	movs	r2, #16
 8007690:	4252      	negs	r2, r2
 8007692:	4691      	mov	r9, r2
 8007694:	4499      	add	r9, r3
 8007696:	6833      	ldr	r3, [r6, #0]
 8007698:	4219      	tst	r1, r3
 800769a:	d009      	beq.n	80076b0 <_Unwind_VRS_Pop+0x1fc>
 800769c:	2201      	movs	r2, #1
 800769e:	0030      	movs	r0, r6
 80076a0:	4393      	bics	r3, r2
 80076a2:	3201      	adds	r2, #1
 80076a4:	4313      	orrs	r3, r2
 80076a6:	6033      	str	r3, [r6, #0]
 80076a8:	3048      	adds	r0, #72	; 0x48
 80076aa:	f000 f879 	bl	80077a0 <__gnu_Unwind_Save_VFP_D>
 80076ae:	6833      	ldr	r3, [r6, #0]
 80076b0:	2204      	movs	r2, #4
 80076b2:	421a      	tst	r2, r3
 80076b4:	d133      	bne.n	800771e <_Unwind_VRS_Pop+0x26a>
 80076b6:	4643      	mov	r3, r8
 80076b8:	2b0f      	cmp	r3, #15
 80076ba:	d803      	bhi.n	80076c4 <_Unwind_VRS_Pop+0x210>
 80076bc:	af20      	add	r7, sp, #128	; 0x80
 80076be:	0038      	movs	r0, r7
 80076c0:	f000 f86e 	bl	80077a0 <__gnu_Unwind_Save_VFP_D>
 80076c4:	466f      	mov	r7, sp
 80076c6:	0038      	movs	r0, r7
 80076c8:	f000 f86e 	bl	80077a8 <__gnu_Unwind_Save_VFP_D_16_to_31>
 80076cc:	2410      	movs	r4, #16
 80076ce:	4643      	mov	r3, r8
 80076d0:	6bb0      	ldr	r0, [r6, #56]	; 0x38
 80076d2:	1ae4      	subs	r4, r4, r3
 80076d4:	2c00      	cmp	r4, #0
 80076d6:	dc00      	bgt.n	80076da <_Unwind_VRS_Pop+0x226>
 80076d8:	e734      	b.n	8007544 <_Unwind_VRS_Pop+0x90>
 80076da:	af20      	add	r7, sp, #128	; 0x80
 80076dc:	e722      	b.n	8007524 <_Unwind_VRS_Pop+0x70>
 80076de:	4393      	bics	r3, r2
 80076e0:	6003      	str	r3, [r0, #0]
 80076e2:	30d1      	adds	r0, #209	; 0xd1
 80076e4:	30ff      	adds	r0, #255	; 0xff
 80076e6:	f000 f867 	bl	80077b8 <__gnu_Unwind_Save_WMMXC>
 80076ea:	e753      	b.n	8007594 <_Unwind_VRS_Pop+0xe0>
 80076ec:	4393      	bics	r3, r2
 80076ee:	6003      	str	r3, [r0, #0]
 80076f0:	3051      	adds	r0, #81	; 0x51
 80076f2:	30ff      	adds	r0, #255	; 0xff
 80076f4:	f000 f85c 	bl	80077b0 <__gnu_Unwind_Save_WMMXD>
 80076f8:	e78d      	b.n	8007616 <_Unwind_VRS_Pop+0x162>
 80076fa:	2d01      	cmp	r5, #1
 80076fc:	d0be      	beq.n	800767c <_Unwind_VRS_Pop+0x1c8>
 80076fe:	4643      	mov	r3, r8
 8007700:	63b0      	str	r0, [r6, #56]	; 0x38
 8007702:	2b0f      	cmp	r3, #15
 8007704:	d900      	bls.n	8007708 <_Unwind_VRS_Pop+0x254>
 8007706:	e738      	b.n	800757a <_Unwind_VRS_Pop+0xc6>
 8007708:	0038      	movs	r0, r7
 800770a:	f000 f847 	bl	800779c <__gnu_Unwind_Restore_VFP_D>
 800770e:	464b      	mov	r3, r9
 8007710:	2b00      	cmp	r3, #0
 8007712:	d100      	bne.n	8007716 <_Unwind_VRS_Pop+0x262>
 8007714:	e731      	b.n	800757a <_Unwind_VRS_Pop+0xc6>
 8007716:	466f      	mov	r7, sp
 8007718:	e72c      	b.n	8007574 <_Unwind_VRS_Pop+0xc0>
 800771a:	af20      	add	r7, sp, #128	; 0x80
 800771c:	e7ae      	b.n	800767c <_Unwind_VRS_Pop+0x1c8>
 800771e:	0030      	movs	r0, r6
 8007720:	4393      	bics	r3, r2
 8007722:	6033      	str	r3, [r6, #0]
 8007724:	30d0      	adds	r0, #208	; 0xd0
 8007726:	f000 f83f 	bl	80077a8 <__gnu_Unwind_Save_VFP_D_16_to_31>
 800772a:	e7c4      	b.n	80076b6 <_Unwind_VRS_Pop+0x202>
 800772c:	af20      	add	r7, sp, #128	; 0x80
 800772e:	e7eb      	b.n	8007708 <_Unwind_VRS_Pop+0x254>
 8007730:	6833      	ldr	r3, [r6, #0]
 8007732:	420b      	tst	r3, r1
 8007734:	d015      	beq.n	8007762 <_Unwind_VRS_Pop+0x2ae>
 8007736:	2201      	movs	r2, #1
 8007738:	0030      	movs	r0, r6
 800773a:	4393      	bics	r3, r2
 800773c:	1892      	adds	r2, r2, r2
 800773e:	4313      	orrs	r3, r2
 8007740:	6033      	str	r3, [r6, #0]
 8007742:	3048      	adds	r0, #72	; 0x48
 8007744:	f000 f82c 	bl	80077a0 <__gnu_Unwind_Save_VFP_D>
 8007748:	af20      	add	r7, sp, #128	; 0x80
 800774a:	0038      	movs	r0, r7
 800774c:	f000 f828 	bl	80077a0 <__gnu_Unwind_Save_VFP_D>
 8007750:	6bb0      	ldr	r0, [r6, #56]	; 0x38
 8007752:	2c00      	cmp	r4, #0
 8007754:	d000      	beq.n	8007758 <_Unwind_VRS_Pop+0x2a4>
 8007756:	e6e3      	b.n	8007520 <_Unwind_VRS_Pop+0x6c>
 8007758:	0038      	movs	r0, r7
 800775a:	f000 f81f 	bl	800779c <__gnu_Unwind_Restore_VFP_D>
 800775e:	2000      	movs	r0, #0
 8007760:	e733      	b.n	80075ca <_Unwind_VRS_Pop+0x116>
 8007762:	2a0f      	cmp	r2, #15
 8007764:	d9f0      	bls.n	8007748 <_Unwind_VRS_Pop+0x294>
 8007766:	e6d7      	b.n	8007518 <_Unwind_VRS_Pop+0x64>

08007768 <__restore_core_regs>:
 8007768:	0001      	movs	r1, r0
 800776a:	3134      	adds	r1, #52	; 0x34
 800776c:	c938      	ldmia	r1!, {r3, r4, r5}
 800776e:	3b04      	subs	r3, #4
 8007770:	469c      	mov	ip, r3
 8007772:	601d      	str	r5, [r3, #0]
 8007774:	46a6      	mov	lr, r4
 8007776:	0001      	movs	r1, r0
 8007778:	3120      	adds	r1, #32
 800777a:	c93c      	ldmia	r1!, {r2, r3, r4, r5}
 800777c:	4690      	mov	r8, r2
 800777e:	4699      	mov	r9, r3
 8007780:	46a2      	mov	sl, r4
 8007782:	46ab      	mov	fp, r5
 8007784:	0001      	movs	r1, r0
 8007786:	3108      	adds	r1, #8
 8007788:	c9fc      	ldmia	r1!, {r2, r3, r4, r5, r6, r7}
 800778a:	6841      	ldr	r1, [r0, #4]
 800778c:	6800      	ldr	r0, [r0, #0]
 800778e:	46e5      	mov	sp, ip
 8007790:	bd00      	pop	{pc}
 8007792:	46c0      	nop			; (mov r8, r8)

08007794 <__gnu_Unwind_Restore_VFP>:
 8007794:	4770      	bx	lr
 8007796:	46c0      	nop			; (mov r8, r8)

08007798 <__gnu_Unwind_Save_VFP>:
 8007798:	4770      	bx	lr
 800779a:	46c0      	nop			; (mov r8, r8)

0800779c <__gnu_Unwind_Restore_VFP_D>:
 800779c:	4770      	bx	lr
 800779e:	46c0      	nop			; (mov r8, r8)

080077a0 <__gnu_Unwind_Save_VFP_D>:
 80077a0:	4770      	bx	lr
 80077a2:	46c0      	nop			; (mov r8, r8)

080077a4 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
 80077a4:	4770      	bx	lr
 80077a6:	46c0      	nop			; (mov r8, r8)

080077a8 <__gnu_Unwind_Save_VFP_D_16_to_31>:
 80077a8:	4770      	bx	lr
 80077aa:	46c0      	nop			; (mov r8, r8)

080077ac <__gnu_Unwind_Restore_WMMXD>:
 80077ac:	4770      	bx	lr
 80077ae:	46c0      	nop			; (mov r8, r8)

080077b0 <__gnu_Unwind_Save_WMMXD>:
 80077b0:	4770      	bx	lr
 80077b2:	46c0      	nop			; (mov r8, r8)

080077b4 <__gnu_Unwind_Restore_WMMXC>:
 80077b4:	4770      	bx	lr
 80077b6:	46c0      	nop			; (mov r8, r8)

080077b8 <__gnu_Unwind_Save_WMMXC>:
 80077b8:	4770      	bx	lr
 80077ba:	46c0      	nop			; (mov r8, r8)

080077bc <_Unwind_RaiseException>:
 80077bc:	b401      	push	{r0}
 80077be:	a801      	add	r0, sp, #4
 80077c0:	b501      	push	{r0, lr}
 80077c2:	b085      	sub	sp, #20
 80077c4:	b4ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7}
 80077c6:	a808      	add	r0, sp, #32
 80077c8:	4641      	mov	r1, r8
 80077ca:	464a      	mov	r2, r9
 80077cc:	4653      	mov	r3, sl
 80077ce:	465c      	mov	r4, fp
 80077d0:	4665      	mov	r5, ip
 80077d2:	c03e      	stmia	r0!, {r1, r2, r3, r4, r5}
 80077d4:	a801      	add	r0, sp, #4
 80077d6:	c83e      	ldmia	r0!, {r1, r2, r3, r4, r5}
 80077d8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80077da:	9000      	str	r0, [sp, #0]
 80077dc:	2300      	movs	r3, #0
 80077de:	b40c      	push	{r2, r3}
 80077e0:	a901      	add	r1, sp, #4
 80077e2:	f7ff fbed 	bl	8006fc0 <__gnu_Unwind_RaiseException>
 80077e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80077e8:	b012      	add	sp, #72	; 0x48
 80077ea:	4718      	bx	r3

080077ec <_Unwind_Resume>:
 80077ec:	b401      	push	{r0}
 80077ee:	a801      	add	r0, sp, #4
 80077f0:	b501      	push	{r0, lr}
 80077f2:	b085      	sub	sp, #20
 80077f4:	b4ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7}
 80077f6:	a808      	add	r0, sp, #32
 80077f8:	4641      	mov	r1, r8
 80077fa:	464a      	mov	r2, r9
 80077fc:	4653      	mov	r3, sl
 80077fe:	465c      	mov	r4, fp
 8007800:	4665      	mov	r5, ip
 8007802:	c03e      	stmia	r0!, {r1, r2, r3, r4, r5}
 8007804:	a801      	add	r0, sp, #4
 8007806:	c83e      	ldmia	r0!, {r1, r2, r3, r4, r5}
 8007808:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800780a:	9000      	str	r0, [sp, #0]
 800780c:	2300      	movs	r3, #0
 800780e:	b40c      	push	{r2, r3}
 8007810:	a901      	add	r1, sp, #4
 8007812:	f7ff fc07 	bl	8007024 <__gnu_Unwind_Resume>
 8007816:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8007818:	b012      	add	sp, #72	; 0x48
 800781a:	4718      	bx	r3

0800781c <_Unwind_Resume_or_Rethrow>:
 800781c:	b401      	push	{r0}
 800781e:	a801      	add	r0, sp, #4
 8007820:	b501      	push	{r0, lr}
 8007822:	b085      	sub	sp, #20
 8007824:	b4ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7}
 8007826:	a808      	add	r0, sp, #32
 8007828:	4641      	mov	r1, r8
 800782a:	464a      	mov	r2, r9
 800782c:	4653      	mov	r3, sl
 800782e:	465c      	mov	r4, fp
 8007830:	4665      	mov	r5, ip
 8007832:	c03e      	stmia	r0!, {r1, r2, r3, r4, r5}
 8007834:	a801      	add	r0, sp, #4
 8007836:	c83e      	ldmia	r0!, {r1, r2, r3, r4, r5}
 8007838:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800783a:	9000      	str	r0, [sp, #0]
 800783c:	2300      	movs	r3, #0
 800783e:	b40c      	push	{r2, r3}
 8007840:	a901      	add	r1, sp, #4
 8007842:	f7ff fc13 	bl	800706c <__gnu_Unwind_Resume_or_Rethrow>
 8007846:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8007848:	b012      	add	sp, #72	; 0x48
 800784a:	4718      	bx	r3

0800784c <_Unwind_ForcedUnwind>:
 800784c:	b401      	push	{r0}
 800784e:	a801      	add	r0, sp, #4
 8007850:	b501      	push	{r0, lr}
 8007852:	b085      	sub	sp, #20
 8007854:	b4ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7}
 8007856:	a808      	add	r0, sp, #32
 8007858:	4641      	mov	r1, r8
 800785a:	464a      	mov	r2, r9
 800785c:	4653      	mov	r3, sl
 800785e:	465c      	mov	r4, fp
 8007860:	4665      	mov	r5, ip
 8007862:	c03e      	stmia	r0!, {r1, r2, r3, r4, r5}
 8007864:	a801      	add	r0, sp, #4
 8007866:	c83e      	ldmia	r0!, {r1, r2, r3, r4, r5}
 8007868:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800786a:	9000      	str	r0, [sp, #0]
 800786c:	2300      	movs	r3, #0
 800786e:	b40c      	push	{r2, r3}
 8007870:	ab01      	add	r3, sp, #4
 8007872:	f7ff fbcd 	bl	8007010 <__gnu_Unwind_ForcedUnwind>
 8007876:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8007878:	b012      	add	sp, #72	; 0x48
 800787a:	4718      	bx	r3

0800787c <_Unwind_Backtrace>:
 800787c:	b401      	push	{r0}
 800787e:	a801      	add	r0, sp, #4
 8007880:	b501      	push	{r0, lr}
 8007882:	b085      	sub	sp, #20
 8007884:	b4ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7}
 8007886:	a808      	add	r0, sp, #32
 8007888:	4641      	mov	r1, r8
 800788a:	464a      	mov	r2, r9
 800788c:	4653      	mov	r3, sl
 800788e:	465c      	mov	r4, fp
 8007890:	4665      	mov	r5, ip
 8007892:	c03e      	stmia	r0!, {r1, r2, r3, r4, r5}
 8007894:	a801      	add	r0, sp, #4
 8007896:	c83e      	ldmia	r0!, {r1, r2, r3, r4, r5}
 8007898:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800789a:	9000      	str	r0, [sp, #0]
 800789c:	2300      	movs	r3, #0
 800789e:	b40c      	push	{r2, r3}
 80078a0:	aa01      	add	r2, sp, #4
 80078a2:	f7ff fc47 	bl	8007134 <__gnu_Unwind_Backtrace>
 80078a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80078a8:	b012      	add	sp, #72	; 0x48
 80078aa:	4718      	bx	r3

080078ac <next_unwind_byte>:
 80078ac:	7a02      	ldrb	r2, [r0, #8]
 80078ae:	0003      	movs	r3, r0
 80078b0:	2a00      	cmp	r2, #0
 80078b2:	d10b      	bne.n	80078cc <next_unwind_byte+0x20>
 80078b4:	7a42      	ldrb	r2, [r0, #9]
 80078b6:	2a00      	cmp	r2, #0
 80078b8:	d00f      	beq.n	80078da <next_unwind_byte+0x2e>
 80078ba:	3a01      	subs	r2, #1
 80078bc:	7242      	strb	r2, [r0, #9]
 80078be:	6842      	ldr	r2, [r0, #4]
 80078c0:	1d11      	adds	r1, r2, #4
 80078c2:	6041      	str	r1, [r0, #4]
 80078c4:	2103      	movs	r1, #3
 80078c6:	6812      	ldr	r2, [r2, #0]
 80078c8:	7201      	strb	r1, [r0, #8]
 80078ca:	e002      	b.n	80078d2 <next_unwind_byte+0x26>
 80078cc:	3a01      	subs	r2, #1
 80078ce:	7202      	strb	r2, [r0, #8]
 80078d0:	6802      	ldr	r2, [r0, #0]
 80078d2:	0e10      	lsrs	r0, r2, #24
 80078d4:	0212      	lsls	r2, r2, #8
 80078d6:	601a      	str	r2, [r3, #0]
 80078d8:	4770      	bx	lr
 80078da:	20b0      	movs	r0, #176	; 0xb0
 80078dc:	e7fc      	b.n	80078d8 <next_unwind_byte+0x2c>
 80078de:	46c0      	nop			; (mov r8, r8)

080078e0 <_Unwind_GetGR.constprop.0>:
 80078e0:	b500      	push	{lr}
 80078e2:	b085      	sub	sp, #20
 80078e4:	ab03      	add	r3, sp, #12
 80078e6:	9300      	str	r3, [sp, #0]
 80078e8:	220c      	movs	r2, #12
 80078ea:	2300      	movs	r3, #0
 80078ec:	2100      	movs	r1, #0
 80078ee:	f7ff fbd5 	bl	800709c <_Unwind_VRS_Get>
 80078f2:	9803      	ldr	r0, [sp, #12]
 80078f4:	b005      	add	sp, #20
 80078f6:	bd00      	pop	{pc}

080078f8 <unwind_UCB_from_context>:
 80078f8:	b510      	push	{r4, lr}
 80078fa:	f7ff fff1 	bl	80078e0 <_Unwind_GetGR.constprop.0>
 80078fe:	bd10      	pop	{r4, pc}

08007900 <__gnu_unwind_execute>:
 8007900:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007902:	464e      	mov	r6, r9
 8007904:	4645      	mov	r5, r8
 8007906:	4657      	mov	r7, sl
 8007908:	46de      	mov	lr, fp
 800790a:	2300      	movs	r3, #0
 800790c:	b5e0      	push	{r5, r6, r7, lr}
 800790e:	b087      	sub	sp, #28
 8007910:	9303      	str	r3, [sp, #12]
 8007912:	330f      	adds	r3, #15
 8007914:	4698      	mov	r8, r3
 8007916:	3b08      	subs	r3, #8
 8007918:	4699      	mov	r9, r3
 800791a:	2380      	movs	r3, #128	; 0x80
 800791c:	031b      	lsls	r3, r3, #12
 800791e:	0005      	movs	r5, r0
 8007920:	000e      	movs	r6, r1
 8007922:	469a      	mov	sl, r3
 8007924:	0030      	movs	r0, r6
 8007926:	f7ff ffc1 	bl	80078ac <next_unwind_byte>
 800792a:	0007      	movs	r7, r0
 800792c:	28b0      	cmp	r0, #176	; 0xb0
 800792e:	d100      	bne.n	8007932 <__gnu_unwind_execute+0x32>
 8007930:	e0b8      	b.n	8007aa4 <__gnu_unwind_execute+0x1a4>
 8007932:	0603      	lsls	r3, r0, #24
 8007934:	d529      	bpl.n	800798a <__gnu_unwind_execute+0x8a>
 8007936:	0003      	movs	r3, r0
 8007938:	4642      	mov	r2, r8
 800793a:	4393      	bics	r3, r2
 800793c:	b2db      	uxtb	r3, r3
 800793e:	2b80      	cmp	r3, #128	; 0x80
 8007940:	d04b      	beq.n	80079da <__gnu_unwind_execute+0xda>
 8007942:	2b90      	cmp	r3, #144	; 0x90
 8007944:	d035      	beq.n	80079b2 <__gnu_unwind_execute+0xb2>
 8007946:	2ba0      	cmp	r3, #160	; 0xa0
 8007948:	d063      	beq.n	8007a12 <__gnu_unwind_execute+0x112>
 800794a:	2bb0      	cmp	r3, #176	; 0xb0
 800794c:	d100      	bne.n	8007950 <__gnu_unwind_execute+0x50>
 800794e:	e076      	b.n	8007a3e <__gnu_unwind_execute+0x13e>
 8007950:	2bc0      	cmp	r3, #192	; 0xc0
 8007952:	d100      	bne.n	8007956 <__gnu_unwind_execute+0x56>
 8007954:	e08c      	b.n	8007a70 <__gnu_unwind_execute+0x170>
 8007956:	0003      	movs	r3, r0
 8007958:	464a      	mov	r2, r9
 800795a:	4393      	bics	r3, r2
 800795c:	b2db      	uxtb	r3, r3
 800795e:	2bd0      	cmp	r3, #208	; 0xd0
 8007960:	d10a      	bne.n	8007978 <__gnu_unwind_execute+0x78>
 8007962:	4653      	mov	r3, sl
 8007964:	4002      	ands	r2, r0
 8007966:	3201      	adds	r2, #1
 8007968:	431a      	orrs	r2, r3
 800796a:	2305      	movs	r3, #5
 800796c:	2101      	movs	r1, #1
 800796e:	0028      	movs	r0, r5
 8007970:	f7ff fda0 	bl	80074b4 <_Unwind_VRS_Pop>
 8007974:	2800      	cmp	r0, #0
 8007976:	d0d5      	beq.n	8007924 <__gnu_unwind_execute+0x24>
 8007978:	2409      	movs	r4, #9
 800797a:	0020      	movs	r0, r4
 800797c:	b007      	add	sp, #28
 800797e:	bcf0      	pop	{r4, r5, r6, r7}
 8007980:	46bb      	mov	fp, r7
 8007982:	46b2      	mov	sl, r6
 8007984:	46a9      	mov	r9, r5
 8007986:	46a0      	mov	r8, r4
 8007988:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800798a:	23ff      	movs	r3, #255	; 0xff
 800798c:	0082      	lsls	r2, r0, #2
 800798e:	4013      	ands	r3, r2
 8007990:	3304      	adds	r3, #4
 8007992:	ac05      	add	r4, sp, #20
 8007994:	469b      	mov	fp, r3
 8007996:	220d      	movs	r2, #13
 8007998:	2300      	movs	r3, #0
 800799a:	2100      	movs	r1, #0
 800799c:	0028      	movs	r0, r5
 800799e:	9400      	str	r4, [sp, #0]
 80079a0:	f7ff fb7c 	bl	800709c <_Unwind_VRS_Get>
 80079a4:	9b05      	ldr	r3, [sp, #20]
 80079a6:	067f      	lsls	r7, r7, #25
 80079a8:	d530      	bpl.n	8007a0c <__gnu_unwind_execute+0x10c>
 80079aa:	465a      	mov	r2, fp
 80079ac:	1a9b      	subs	r3, r3, r2
 80079ae:	9305      	str	r3, [sp, #20]
 80079b0:	e00b      	b.n	80079ca <__gnu_unwind_execute+0xca>
 80079b2:	3b83      	subs	r3, #131	; 0x83
 80079b4:	4003      	ands	r3, r0
 80079b6:	2b0d      	cmp	r3, #13
 80079b8:	d0de      	beq.n	8007978 <__gnu_unwind_execute+0x78>
 80079ba:	ac05      	add	r4, sp, #20
 80079bc:	4002      	ands	r2, r0
 80079be:	2300      	movs	r3, #0
 80079c0:	2100      	movs	r1, #0
 80079c2:	0028      	movs	r0, r5
 80079c4:	9400      	str	r4, [sp, #0]
 80079c6:	f7ff fb69 	bl	800709c <_Unwind_VRS_Get>
 80079ca:	2300      	movs	r3, #0
 80079cc:	220d      	movs	r2, #13
 80079ce:	2100      	movs	r1, #0
 80079d0:	0028      	movs	r0, r5
 80079d2:	9400      	str	r4, [sp, #0]
 80079d4:	f7ff fb88 	bl	80070e8 <_Unwind_VRS_Set>
 80079d8:	e7a4      	b.n	8007924 <__gnu_unwind_execute+0x24>
 80079da:	0207      	lsls	r7, r0, #8
 80079dc:	0030      	movs	r0, r6
 80079de:	f7ff ff65 	bl	80078ac <next_unwind_byte>
 80079e2:	2480      	movs	r4, #128	; 0x80
 80079e4:	4338      	orrs	r0, r7
 80079e6:	0224      	lsls	r4, r4, #8
 80079e8:	42a0      	cmp	r0, r4
 80079ea:	d0c5      	beq.n	8007978 <__gnu_unwind_execute+0x78>
 80079ec:	0107      	lsls	r7, r0, #4
 80079ee:	0500      	lsls	r0, r0, #20
 80079f0:	0c02      	lsrs	r2, r0, #16
 80079f2:	2300      	movs	r3, #0
 80079f4:	2100      	movs	r1, #0
 80079f6:	0028      	movs	r0, r5
 80079f8:	f7ff fd5c 	bl	80074b4 <_Unwind_VRS_Pop>
 80079fc:	2800      	cmp	r0, #0
 80079fe:	d1bb      	bne.n	8007978 <__gnu_unwind_execute+0x78>
 8007a00:	4227      	tst	r7, r4
 8007a02:	d100      	bne.n	8007a06 <__gnu_unwind_execute+0x106>
 8007a04:	e78e      	b.n	8007924 <__gnu_unwind_execute+0x24>
 8007a06:	2301      	movs	r3, #1
 8007a08:	9303      	str	r3, [sp, #12]
 8007a0a:	e78b      	b.n	8007924 <__gnu_unwind_execute+0x24>
 8007a0c:	445b      	add	r3, fp
 8007a0e:	9305      	str	r3, [sp, #20]
 8007a10:	e7db      	b.n	80079ca <__gnu_unwind_execute+0xca>
 8007a12:	23ff      	movs	r3, #255	; 0xff
 8007a14:	464a      	mov	r2, r9
 8007a16:	011b      	lsls	r3, r3, #4
 8007a18:	0019      	movs	r1, r3
 8007a1a:	4382      	bics	r2, r0
 8007a1c:	4111      	asrs	r1, r2
 8007a1e:	000a      	movs	r2, r1
 8007a20:	401a      	ands	r2, r3
 8007a22:	073f      	lsls	r7, r7, #28
 8007a24:	d502      	bpl.n	8007a2c <__gnu_unwind_execute+0x12c>
 8007a26:	2380      	movs	r3, #128	; 0x80
 8007a28:	01db      	lsls	r3, r3, #7
 8007a2a:	431a      	orrs	r2, r3
 8007a2c:	2300      	movs	r3, #0
 8007a2e:	2100      	movs	r1, #0
 8007a30:	0028      	movs	r0, r5
 8007a32:	f7ff fd3f 	bl	80074b4 <_Unwind_VRS_Pop>
 8007a36:	2800      	cmp	r0, #0
 8007a38:	d100      	bne.n	8007a3c <__gnu_unwind_execute+0x13c>
 8007a3a:	e773      	b.n	8007924 <__gnu_unwind_execute+0x24>
 8007a3c:	e79c      	b.n	8007978 <__gnu_unwind_execute+0x78>
 8007a3e:	28b1      	cmp	r0, #177	; 0xb1
 8007a40:	d044      	beq.n	8007acc <__gnu_unwind_execute+0x1cc>
 8007a42:	28b2      	cmp	r0, #178	; 0xb2
 8007a44:	d100      	bne.n	8007a48 <__gnu_unwind_execute+0x148>
 8007a46:	e09e      	b.n	8007b86 <__gnu_unwind_execute+0x286>
 8007a48:	28b3      	cmp	r0, #179	; 0xb3
 8007a4a:	d054      	beq.n	8007af6 <__gnu_unwind_execute+0x1f6>
 8007a4c:	23fc      	movs	r3, #252	; 0xfc
 8007a4e:	4003      	ands	r3, r0
 8007a50:	2bb4      	cmp	r3, #180	; 0xb4
 8007a52:	d091      	beq.n	8007978 <__gnu_unwind_execute+0x78>
 8007a54:	464a      	mov	r2, r9
 8007a56:	4653      	mov	r3, sl
 8007a58:	4002      	ands	r2, r0
 8007a5a:	3201      	adds	r2, #1
 8007a5c:	431a      	orrs	r2, r3
 8007a5e:	2101      	movs	r1, #1
 8007a60:	2301      	movs	r3, #1
 8007a62:	0028      	movs	r0, r5
 8007a64:	f7ff fd26 	bl	80074b4 <_Unwind_VRS_Pop>
 8007a68:	2800      	cmp	r0, #0
 8007a6a:	d100      	bne.n	8007a6e <__gnu_unwind_execute+0x16e>
 8007a6c:	e75a      	b.n	8007924 <__gnu_unwind_execute+0x24>
 8007a6e:	e783      	b.n	8007978 <__gnu_unwind_execute+0x78>
 8007a70:	28c6      	cmp	r0, #198	; 0xc6
 8007a72:	d04b      	beq.n	8007b0c <__gnu_unwind_execute+0x20c>
 8007a74:	28c7      	cmp	r0, #199	; 0xc7
 8007a76:	d05d      	beq.n	8007b34 <__gnu_unwind_execute+0x234>
 8007a78:	0003      	movs	r3, r0
 8007a7a:	464a      	mov	r2, r9
 8007a7c:	4393      	bics	r3, r2
 8007a7e:	b2db      	uxtb	r3, r3
 8007a80:	2bc0      	cmp	r3, #192	; 0xc0
 8007a82:	d06c      	beq.n	8007b5e <__gnu_unwind_execute+0x25e>
 8007a84:	28c8      	cmp	r0, #200	; 0xc8
 8007a86:	d071      	beq.n	8007b6c <__gnu_unwind_execute+0x26c>
 8007a88:	28c9      	cmp	r0, #201	; 0xc9
 8007a8a:	d000      	beq.n	8007a8e <__gnu_unwind_execute+0x18e>
 8007a8c:	e774      	b.n	8007978 <__gnu_unwind_execute+0x78>
 8007a8e:	0030      	movs	r0, r6
 8007a90:	f7ff ff0c 	bl	80078ac <next_unwind_byte>
 8007a94:	22f0      	movs	r2, #240	; 0xf0
 8007a96:	0303      	lsls	r3, r0, #12
 8007a98:	0312      	lsls	r2, r2, #12
 8007a9a:	4013      	ands	r3, r2
 8007a9c:	4642      	mov	r2, r8
 8007a9e:	4002      	ands	r2, r0
 8007aa0:	3201      	adds	r2, #1
 8007aa2:	e761      	b.n	8007968 <__gnu_unwind_execute+0x68>
 8007aa4:	9b03      	ldr	r3, [sp, #12]
 8007aa6:	2400      	movs	r4, #0
 8007aa8:	2b00      	cmp	r3, #0
 8007aaa:	d000      	beq.n	8007aae <__gnu_unwind_execute+0x1ae>
 8007aac:	e765      	b.n	800797a <__gnu_unwind_execute+0x7a>
 8007aae:	ae05      	add	r6, sp, #20
 8007ab0:	220e      	movs	r2, #14
 8007ab2:	2100      	movs	r1, #0
 8007ab4:	0028      	movs	r0, r5
 8007ab6:	9600      	str	r6, [sp, #0]
 8007ab8:	f7ff faf0 	bl	800709c <_Unwind_VRS_Get>
 8007abc:	2300      	movs	r3, #0
 8007abe:	220f      	movs	r2, #15
 8007ac0:	2100      	movs	r1, #0
 8007ac2:	0028      	movs	r0, r5
 8007ac4:	9600      	str	r6, [sp, #0]
 8007ac6:	f7ff fb0f 	bl	80070e8 <_Unwind_VRS_Set>
 8007aca:	e756      	b.n	800797a <__gnu_unwind_execute+0x7a>
 8007acc:	0030      	movs	r0, r6
 8007ace:	f7ff feed 	bl	80078ac <next_unwind_byte>
 8007ad2:	1e02      	subs	r2, r0, #0
 8007ad4:	d100      	bne.n	8007ad8 <__gnu_unwind_execute+0x1d8>
 8007ad6:	e74f      	b.n	8007978 <__gnu_unwind_execute+0x78>
 8007ad8:	0003      	movs	r3, r0
 8007ada:	4641      	mov	r1, r8
 8007adc:	438b      	bics	r3, r1
 8007ade:	b2db      	uxtb	r3, r3
 8007ae0:	2b00      	cmp	r3, #0
 8007ae2:	d000      	beq.n	8007ae6 <__gnu_unwind_execute+0x1e6>
 8007ae4:	e748      	b.n	8007978 <__gnu_unwind_execute+0x78>
 8007ae6:	2100      	movs	r1, #0
 8007ae8:	0028      	movs	r0, r5
 8007aea:	f7ff fce3 	bl	80074b4 <_Unwind_VRS_Pop>
 8007aee:	2800      	cmp	r0, #0
 8007af0:	d100      	bne.n	8007af4 <__gnu_unwind_execute+0x1f4>
 8007af2:	e717      	b.n	8007924 <__gnu_unwind_execute+0x24>
 8007af4:	e740      	b.n	8007978 <__gnu_unwind_execute+0x78>
 8007af6:	0030      	movs	r0, r6
 8007af8:	f7ff fed8 	bl	80078ac <next_unwind_byte>
 8007afc:	22f0      	movs	r2, #240	; 0xf0
 8007afe:	0303      	lsls	r3, r0, #12
 8007b00:	0312      	lsls	r2, r2, #12
 8007b02:	4013      	ands	r3, r2
 8007b04:	4642      	mov	r2, r8
 8007b06:	4002      	ands	r2, r0
 8007b08:	3201      	adds	r2, #1
 8007b0a:	e7a7      	b.n	8007a5c <__gnu_unwind_execute+0x15c>
 8007b0c:	0030      	movs	r0, r6
 8007b0e:	f7ff fecd 	bl	80078ac <next_unwind_byte>
 8007b12:	22f0      	movs	r2, #240	; 0xf0
 8007b14:	0303      	lsls	r3, r0, #12
 8007b16:	0312      	lsls	r2, r2, #12
 8007b18:	4013      	ands	r3, r2
 8007b1a:	4642      	mov	r2, r8
 8007b1c:	4002      	ands	r2, r0
 8007b1e:	3201      	adds	r2, #1
 8007b20:	431a      	orrs	r2, r3
 8007b22:	2303      	movs	r3, #3
 8007b24:	2103      	movs	r1, #3
 8007b26:	0028      	movs	r0, r5
 8007b28:	f7ff fcc4 	bl	80074b4 <_Unwind_VRS_Pop>
 8007b2c:	2800      	cmp	r0, #0
 8007b2e:	d100      	bne.n	8007b32 <__gnu_unwind_execute+0x232>
 8007b30:	e6f8      	b.n	8007924 <__gnu_unwind_execute+0x24>
 8007b32:	e721      	b.n	8007978 <__gnu_unwind_execute+0x78>
 8007b34:	0030      	movs	r0, r6
 8007b36:	f7ff feb9 	bl	80078ac <next_unwind_byte>
 8007b3a:	1e02      	subs	r2, r0, #0
 8007b3c:	d100      	bne.n	8007b40 <__gnu_unwind_execute+0x240>
 8007b3e:	e71b      	b.n	8007978 <__gnu_unwind_execute+0x78>
 8007b40:	0003      	movs	r3, r0
 8007b42:	4641      	mov	r1, r8
 8007b44:	438b      	bics	r3, r1
 8007b46:	b2db      	uxtb	r3, r3
 8007b48:	2b00      	cmp	r3, #0
 8007b4a:	d000      	beq.n	8007b4e <__gnu_unwind_execute+0x24e>
 8007b4c:	e714      	b.n	8007978 <__gnu_unwind_execute+0x78>
 8007b4e:	2104      	movs	r1, #4
 8007b50:	0028      	movs	r0, r5
 8007b52:	f7ff fcaf 	bl	80074b4 <_Unwind_VRS_Pop>
 8007b56:	2800      	cmp	r0, #0
 8007b58:	d100      	bne.n	8007b5c <__gnu_unwind_execute+0x25c>
 8007b5a:	e6e3      	b.n	8007924 <__gnu_unwind_execute+0x24>
 8007b5c:	e70c      	b.n	8007978 <__gnu_unwind_execute+0x78>
 8007b5e:	4643      	mov	r3, r8
 8007b60:	22a0      	movs	r2, #160	; 0xa0
 8007b62:	401f      	ands	r7, r3
 8007b64:	3701      	adds	r7, #1
 8007b66:	0312      	lsls	r2, r2, #12
 8007b68:	433a      	orrs	r2, r7
 8007b6a:	e7da      	b.n	8007b22 <__gnu_unwind_execute+0x222>
 8007b6c:	0030      	movs	r0, r6
 8007b6e:	f7ff fe9d 	bl	80078ac <next_unwind_byte>
 8007b72:	4643      	mov	r3, r8
 8007b74:	0002      	movs	r2, r0
 8007b76:	439a      	bics	r2, r3
 8007b78:	b2d2      	uxtb	r2, r2
 8007b7a:	3210      	adds	r2, #16
 8007b7c:	4018      	ands	r0, r3
 8007b7e:	0312      	lsls	r2, r2, #12
 8007b80:	3001      	adds	r0, #1
 8007b82:	4302      	orrs	r2, r0
 8007b84:	e6f1      	b.n	800796a <__gnu_unwind_execute+0x6a>
 8007b86:	ac05      	add	r4, sp, #20
 8007b88:	2300      	movs	r3, #0
 8007b8a:	220d      	movs	r2, #13
 8007b8c:	2100      	movs	r1, #0
 8007b8e:	0028      	movs	r0, r5
 8007b90:	9400      	str	r4, [sp, #0]
 8007b92:	f7ff fa83 	bl	800709c <_Unwind_VRS_Get>
 8007b96:	0030      	movs	r0, r6
 8007b98:	f7ff fe88 	bl	80078ac <next_unwind_byte>
 8007b9c:	2302      	movs	r3, #2
 8007b9e:	9f05      	ldr	r7, [sp, #20]
 8007ba0:	469b      	mov	fp, r3
 8007ba2:	0603      	lsls	r3, r0, #24
 8007ba4:	d510      	bpl.n	8007bc8 <__gnu_unwind_execute+0x2c8>
 8007ba6:	0023      	movs	r3, r4
 8007ba8:	465c      	mov	r4, fp
 8007baa:	469b      	mov	fp, r3
 8007bac:	237f      	movs	r3, #127	; 0x7f
 8007bae:	4018      	ands	r0, r3
 8007bb0:	40a0      	lsls	r0, r4
 8007bb2:	183f      	adds	r7, r7, r0
 8007bb4:	0030      	movs	r0, r6
 8007bb6:	9705      	str	r7, [sp, #20]
 8007bb8:	3407      	adds	r4, #7
 8007bba:	f7ff fe77 	bl	80078ac <next_unwind_byte>
 8007bbe:	0603      	lsls	r3, r0, #24
 8007bc0:	d4f4      	bmi.n	8007bac <__gnu_unwind_execute+0x2ac>
 8007bc2:	465b      	mov	r3, fp
 8007bc4:	46a3      	mov	fp, r4
 8007bc6:	001c      	movs	r4, r3
 8007bc8:	237f      	movs	r3, #127	; 0x7f
 8007bca:	465a      	mov	r2, fp
 8007bcc:	4003      	ands	r3, r0
 8007bce:	4093      	lsls	r3, r2
 8007bd0:	2281      	movs	r2, #129	; 0x81
 8007bd2:	0092      	lsls	r2, r2, #2
 8007bd4:	4694      	mov	ip, r2
 8007bd6:	4467      	add	r7, ip
 8007bd8:	19db      	adds	r3, r3, r7
 8007bda:	3af8      	subs	r2, #248	; 0xf8
 8007bdc:	9305      	str	r3, [sp, #20]
 8007bde:	2100      	movs	r1, #0
 8007be0:	2300      	movs	r3, #0
 8007be2:	0028      	movs	r0, r5
 8007be4:	9400      	str	r4, [sp, #0]
 8007be6:	3aff      	subs	r2, #255	; 0xff
 8007be8:	f7ff fa7e 	bl	80070e8 <_Unwind_VRS_Set>
 8007bec:	e69a      	b.n	8007924 <__gnu_unwind_execute+0x24>
 8007bee:	46c0      	nop			; (mov r8, r8)

08007bf0 <__gnu_unwind_frame>:
 8007bf0:	0003      	movs	r3, r0
 8007bf2:	b500      	push	{lr}
 8007bf4:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8007bf6:	b085      	sub	sp, #20
 8007bf8:	6853      	ldr	r3, [r2, #4]
 8007bfa:	0008      	movs	r0, r1
 8007bfc:	3208      	adds	r2, #8
 8007bfe:	0219      	lsls	r1, r3, #8
 8007c00:	9101      	str	r1, [sp, #4]
 8007c02:	9202      	str	r2, [sp, #8]
 8007c04:	4669      	mov	r1, sp
 8007c06:	2203      	movs	r2, #3
 8007c08:	0e1b      	lsrs	r3, r3, #24
 8007c0a:	730a      	strb	r2, [r1, #12]
 8007c0c:	734b      	strb	r3, [r1, #13]
 8007c0e:	a901      	add	r1, sp, #4
 8007c10:	f7ff fe76 	bl	8007900 <__gnu_unwind_execute>
 8007c14:	b005      	add	sp, #20
 8007c16:	bd00      	pop	{pc}

08007c18 <_Unwind_GetRegionStart>:
 8007c18:	b510      	push	{r4, lr}
 8007c1a:	f7ff fe6d 	bl	80078f8 <unwind_UCB_from_context>
 8007c1e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8007c20:	bd10      	pop	{r4, pc}
 8007c22:	46c0      	nop			; (mov r8, r8)

08007c24 <_Unwind_GetLanguageSpecificData>:
 8007c24:	b510      	push	{r4, lr}
 8007c26:	f7ff fe67 	bl	80078f8 <unwind_UCB_from_context>
 8007c2a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8007c2c:	79c3      	ldrb	r3, [r0, #7]
 8007c2e:	3302      	adds	r3, #2
 8007c30:	009b      	lsls	r3, r3, #2
 8007c32:	18c0      	adds	r0, r0, r3
 8007c34:	bd10      	pop	{r4, pc}
 8007c36:	46c0      	nop			; (mov r8, r8)

08007c38 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>:
       *  initializer_list @a __l.
       *
       *  This will call the element type's copy constructor N times
       *  (where N is @a __l.size()) and do no memory reallocation.
       */
      vector(initializer_list<value_type> __l,
 8007c38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007c3a:	0004      	movs	r4, r0
	: _M_start(), _M_finish(), _M_end_of_storage()
 8007c3c:	2000      	movs	r0, #0

      // Called by constructors to check initial size.
      static size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
 8007c3e:	4b0d      	ldr	r3, [pc, #52]	; (8007c74 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0+0x3c>)
      vector(initializer_list<value_type> __l,
 8007c40:	000e      	movs	r6, r1
	: _M_start(), _M_finish(), _M_end_of_storage()
 8007c42:	6020      	str	r0, [r4, #0]
 8007c44:	6060      	str	r0, [r4, #4]
 8007c46:	60a0      	str	r0, [r4, #8]
      constexpr const_iterator
      begin() const noexcept { return _M_array; }

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
 8007c48:	0055      	lsls	r5, r2, #1
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
 8007c4a:	429d      	cmp	r5, r3
 8007c4c:	d902      	bls.n	8007c54 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0+0x1c>
	  __throw_length_error(
 8007c4e:	480a      	ldr	r0, [pc, #40]	; (8007c78 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0+0x40>)
 8007c50:	f002 fe96 	bl	800a980 <_ZSt20__throw_length_errorPKc>
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 8007c54:	2d00      	cmp	r5, #0
 8007c56:	d002      	beq.n	8007c5e <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0+0x26>
	  {
	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
	  }
#endif
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8007c58:	0028      	movs	r0, r5
 8007c5a:	f002 fe49 	bl	800a8f0 <_Znwj>
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 8007c5e:	1947      	adds	r7, r0, r5
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
 8007c60:	6020      	str	r0, [r4, #0]
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 8007c62:	60a7      	str	r7, [r4, #8]
					   is_copy_assignable<_Tp>>;
	  // trivial types can have deleted assignment
	  static_assert( __assignable::type::value, "type is not assignable" );
#endif
	  const ptrdiff_t _Num = __last - __first;
	  if (_Num)
 8007c64:	2d00      	cmp	r5, #0
 8007c66:	d003      	beq.n	8007c70 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0+0x38>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 8007c68:	002a      	movs	r2, r5
 8007c6a:	0031      	movs	r1, r6
 8007c6c:	f004 fd98 	bl	800c7a0 <memcpy>
	  this->_M_impl._M_finish =
 8007c70:	6067      	str	r7, [r4, #4]
      }
 8007c72:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8007c74:	7ffffffe 	.word	0x7ffffffe
 8007c78:	0800f7c8 	.word	0x0800f7c8

08007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 8007c7c:	b510      	push	{r4, lr}
 8007c7e:	0004      	movs	r4, r0
	_M_deallocate(_M_impl._M_start,
 8007c80:	6800      	ldr	r0, [r0, #0]
	if (__p)
 8007c82:	2800      	cmp	r0, #0
 8007c84:	d003      	beq.n	8007c8e <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev+0x12>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8007c86:	68a1      	ldr	r1, [r4, #8]
 8007c88:	1a09      	subs	r1, r1, r0
# endif
			      std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	::operator delete(__p
 8007c8a:	f002 fe2d 	bl	800a8e8 <_ZdlPvj>
      }
 8007c8e:	0020      	movs	r0, r4
 8007c90:	bd10      	pop	{r4, pc}
	...

08007c94 <_Z41__static_initialization_and_destruction_0ii.constprop.0>:

void OV2640::Capture(uint capture_delay){
    ArduChip_write(0x01, 0x00); // Capture Control Register - Set to capture n+1 frames

    SPI_camera::Capture(capture_delay);
} // OV2640::Capture
 8007c94:	b571      	push	{r0, r4, r5, r6, lr}
 8007c96:	4d70      	ldr	r5, [pc, #448]	; (8007e58 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1c4>)
 8007c98:	4c70      	ldr	r4, [pc, #448]	; (8007e5c <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1c8>)
 8007c9a:	b0ff      	sub	sp, #508	; 0x1fc
 8007c9c:	2801      	cmp	r0, #1
 8007c9e:	d000      	beq.n	8007ca2 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0xe>
 8007ca0:	e0ab      	b.n	8007dfa <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x166>
#include <vector>


using namespace std;

const vector<SPI_camera::Register_blob_8> OV2640_QVGA  =
 8007ca2:	22c2      	movs	r2, #194	; 0xc2
 8007ca4:	496e      	ldr	r1, [pc, #440]	; (8007e60 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1cc>)
 8007ca6:	0052      	lsls	r2, r2, #1
 8007ca8:	a81f      	add	r0, sp, #124	; 0x7c
 8007caa:	f004 fd79 	bl	800c7a0 <memcpy>
 8007cae:	0028      	movs	r0, r5
 8007cb0:	22c2      	movs	r2, #194	; 0xc2
 8007cb2:	a91f      	add	r1, sp, #124	; 0x7c
 8007cb4:	f7ff ffc0 	bl	8007c38 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>


	{0xff,0xff},
};

const vector<SPI_camera::Register_blob_8> OV2640_JPEG_INIT   =
 8007cb8:	22bf      	movs	r2, #191	; 0xbf
 8007cba:	496a      	ldr	r1, [pc, #424]	; (8007e64 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1d0>)
 8007cbc:	0052      	lsls	r2, r2, #1
 8007cbe:	a81f      	add	r0, sp, #124	; 0x7c
 8007cc0:	f004 fd6e 	bl	800c7a0 <memcpy>
 8007cc4:	0020      	movs	r0, r4
 8007cc6:	22bf      	movs	r2, #191	; 0xbf
 8007cc8:	a91f      	add	r1, sp, #124	; 0x7c
 8007cca:	f7ff ffb5 	bl	8007c38 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
  { 0x5b, 0x24 },
  { 0x5c, 0x00 },
  { 0xff, 0xff },
};

const vector<SPI_camera::Register_blob_8> OV2640_YUV422   =
 8007cce:	4c66      	ldr	r4, [pc, #408]	; (8007e68 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1d4>)
 8007cd0:	2214      	movs	r2, #20
 8007cd2:	0021      	movs	r1, r4
 8007cd4:	a81f      	add	r0, sp, #124	; 0x7c
 8007cd6:	f004 fd63 	bl	800c7a0 <memcpy>
 8007cda:	220a      	movs	r2, #10
 8007cdc:	4863      	ldr	r0, [pc, #396]	; (8007e6c <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1d8>)
 8007cde:	a91f      	add	r1, sp, #124	; 0x7c
 8007ce0:	f7ff ffaa 	bl	8007c38 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
  { 0xe1, 0x77 },
  { 0x00, 0x00 },
  { 0xff, 0xff },
};

const vector<SPI_camera::Register_blob_8> OV2640_JPEG   =
 8007ce4:	0021      	movs	r1, r4
 8007ce6:	2212      	movs	r2, #18
 8007ce8:	3114      	adds	r1, #20
 8007cea:	a81f      	add	r0, sp, #124	; 0x7c
 8007cec:	f004 fd58 	bl	800c7a0 <memcpy>
 8007cf0:	2209      	movs	r2, #9
 8007cf2:	485f      	ldr	r0, [pc, #380]	; (8007e70 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1dc>)
 8007cf4:	a91f      	add	r1, sp, #124	; 0x7c
 8007cf6:	f7ff ff9f 	bl	8007c38 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
  { 0x04, 0x08 },
  { 0xff, 0xff },
};

/* JPG 160x120 */
const vector<SPI_camera::Register_blob_8> OV2640_160x120_JPEG   =
 8007cfa:	0021      	movs	r1, r4
 8007cfc:	2528      	movs	r5, #40	; 0x28
 8007cfe:	2250      	movs	r2, #80	; 0x50
 8007d00:	3126      	adds	r1, #38	; 0x26
 8007d02:	a81f      	add	r0, sp, #124	; 0x7c
 8007d04:	f004 fd4c 	bl	800c7a0 <memcpy>
 8007d08:	002a      	movs	r2, r5
 8007d0a:	485a      	ldr	r0, [pc, #360]	; (8007e74 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1e0>)
 8007d0c:	a91f      	add	r1, sp, #124	; 0x7c
 8007d0e:	f7ff ff93 	bl	8007c38 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
  { 0xff, 0xff },
};

/* JPG, 0x176x144 */

const vector<SPI_camera::Register_blob_8> OV2640_176x144_JPEG   =
 8007d12:	0021      	movs	r1, r4
 8007d14:	2250      	movs	r2, #80	; 0x50
 8007d16:	3176      	adds	r1, #118	; 0x76
 8007d18:	a81f      	add	r0, sp, #124	; 0x7c
 8007d1a:	f004 fd41 	bl	800c7a0 <memcpy>
 8007d1e:	002a      	movs	r2, r5
 8007d20:	4855      	ldr	r0, [pc, #340]	; (8007e78 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1e4>)
 8007d22:	a91f      	add	r1, sp, #124	; 0x7c
 8007d24:	f7ff ff88 	bl	8007c38 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
  { 0xff, 0xff },
};

/* JPG 320x240 */

const vector<SPI_camera::Register_blob_8> OV2640_320x240_JPEG   =
 8007d28:	4954      	ldr	r1, [pc, #336]	; (8007e7c <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1e8>)
 8007d2a:	2250      	movs	r2, #80	; 0x50
 8007d2c:	3146      	adds	r1, #70	; 0x46
 8007d2e:	a81f      	add	r0, sp, #124	; 0x7c
 8007d30:	f004 fd36 	bl	800c7a0 <memcpy>
 8007d34:	002a      	movs	r2, r5
 8007d36:	4852      	ldr	r0, [pc, #328]	; (8007e80 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1ec>)
 8007d38:	a91f      	add	r1, sp, #124	; 0x7c
 8007d3a:	f7ff ff7d 	bl	8007c38 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
  { 0xff, 0xff },
};

/* JPG 352x288 */

const vector<SPI_camera::Register_blob_8> OV2640_352x288_JPEG   =
 8007d3e:	4c51      	ldr	r4, [pc, #324]	; (8007e84 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1f0>)
 8007d40:	2250      	movs	r2, #80	; 0x50
 8007d42:	0021      	movs	r1, r4
 8007d44:	a81f      	add	r0, sp, #124	; 0x7c
 8007d46:	3116      	adds	r1, #22
 8007d48:	f004 fd2a 	bl	800c7a0 <memcpy>
 8007d4c:	002a      	movs	r2, r5
 8007d4e:	484e      	ldr	r0, [pc, #312]	; (8007e88 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1f4>)
 8007d50:	a91f      	add	r1, sp, #124	; 0x7c
 8007d52:	f7ff ff71 	bl	8007c38 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
  { 0xe0, 0x00 },
  { 0xff, 0xff },
};

/* JPG 640x480 */
const vector<SPI_camera::Register_blob_8> OV2640_640x480_JPEG   =
 8007d56:	0021      	movs	r1, r4
 8007d58:	2629      	movs	r6, #41	; 0x29
 8007d5a:	2252      	movs	r2, #82	; 0x52
 8007d5c:	3166      	adds	r1, #102	; 0x66
 8007d5e:	a81f      	add	r0, sp, #124	; 0x7c
 8007d60:	f004 fd1e 	bl	800c7a0 <memcpy>
 8007d64:	0032      	movs	r2, r6
 8007d66:	4849      	ldr	r0, [pc, #292]	; (8007e8c <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1f8>)
 8007d68:	a91f      	add	r1, sp, #124	; 0x7c
 8007d6a:	f7ff ff65 	bl	8007c38 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>

  	{0xff, 0xff},
};

/* JPG 800x600 */
const vector<SPI_camera::Register_blob_8> OV2640_800x600_JPEG   =
 8007d6e:	4948      	ldr	r1, [pc, #288]	; (8007e90 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1fc>)
 8007d70:	2252      	movs	r2, #82	; 0x52
 8007d72:	3138      	adds	r1, #56	; 0x38
 8007d74:	a81f      	add	r0, sp, #124	; 0x7c
 8007d76:	f004 fd13 	bl	800c7a0 <memcpy>
 8007d7a:	0032      	movs	r2, r6
 8007d7c:	4845      	ldr	r0, [pc, #276]	; (8007e94 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x200>)
 8007d7e:	a91f      	add	r1, sp, #124	; 0x7c
 8007d80:	f7ff ff5a 	bl	8007c38 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>

  	{0xff, 0xff},
};

/* JPG 1024x768 */
const vector<SPI_camera::Register_blob_8> OV2640_1024x768_JPEG   =
 8007d84:	4c44      	ldr	r4, [pc, #272]	; (8007e98 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x204>)
 8007d86:	224e      	movs	r2, #78	; 0x4e
 8007d88:	0021      	movs	r1, r4
 8007d8a:	a81f      	add	r0, sp, #124	; 0x7c
 8007d8c:	310a      	adds	r1, #10
 8007d8e:	f004 fd07 	bl	800c7a0 <memcpy>
 8007d92:	2227      	movs	r2, #39	; 0x27
 8007d94:	4841      	ldr	r0, [pc, #260]	; (8007e9c <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x208>)
 8007d96:	a91f      	add	r1, sp, #124	; 0x7c
 8007d98:	f7ff ff4e 	bl	8007c38 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>

  {0xff, 0xff},
};

   /* JPG 1280x1024 */
const vector<SPI_camera::Register_blob_8> OV2640_1280x1024_JPEG   =
 8007d9c:	0021      	movs	r1, r4
 8007d9e:	2252      	movs	r2, #82	; 0x52
 8007da0:	3158      	adds	r1, #88	; 0x58
 8007da2:	a81f      	add	r0, sp, #124	; 0x7c
 8007da4:	f004 fcfc 	bl	800c7a0 <memcpy>
 8007da8:	0032      	movs	r2, r6
 8007daa:	483d      	ldr	r0, [pc, #244]	; (8007ea0 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x20c>)
 8007dac:	a91f      	add	r1, sp, #124	; 0x7c
 8007dae:	f7ff ff43 	bl	8007c38 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>

  	{0xff, 0xff},
};

   /* JPG 1600x1200 */
const vector<SPI_camera::Register_blob_8> OV2640_1600x1200_JPEG   =
 8007db2:	4c3c      	ldr	r4, [pc, #240]	; (8007ea4 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x210>)
 8007db4:	2252      	movs	r2, #82	; 0x52
 8007db6:	0021      	movs	r1, r4
 8007db8:	a81f      	add	r0, sp, #124	; 0x7c
 8007dba:	312a      	adds	r1, #42	; 0x2a
 8007dbc:	f004 fcf0 	bl	800c7a0 <memcpy>
 8007dc0:	0032      	movs	r2, r6
 8007dc2:	4839      	ldr	r0, [pc, #228]	; (8007ea8 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x214>)
 8007dc4:	a91f      	add	r1, sp, #124	; 0x7c
 8007dc6:	f7ff ff37 	bl	8007c38 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>

  	{0xff, 0xff},

};

const vector<SPI_camera::Register_blob_8> OV2640_SVGA  =
 8007dca:	22b2      	movs	r2, #178	; 0xb2
 8007dcc:	4937      	ldr	r1, [pc, #220]	; (8007eac <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x218>)
 8007dce:	0052      	lsls	r2, r2, #1
 8007dd0:	a81f      	add	r0, sp, #124	; 0x7c
 8007dd2:	f004 fce5 	bl	800c7a0 <memcpy>
 8007dd6:	22b2      	movs	r2, #178	; 0xb2
 8007dd8:	4835      	ldr	r0, [pc, #212]	; (8007eb0 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x21c>)
 8007dda:	a91f      	add	r1, sp, #124	; 0x7c
 8007ddc:	f7ff ff2c 	bl	8007c38 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
{0xdd, 0x7f},
{0x05, 0x00},
{0xff, 0xff},
};

const vector<SPI_camera::Register_blob_8> OV2640_640x480_JPEG2 =
 8007de0:	0021      	movs	r1, r4
 8007de2:	2250      	movs	r2, #80	; 0x50
 8007de4:	317c      	adds	r1, #124	; 0x7c
 8007de6:	a81f      	add	r0, sp, #124	; 0x7c
 8007de8:	f004 fcda 	bl	800c7a0 <memcpy>
 8007dec:	002a      	movs	r2, r5
 8007dee:	4831      	ldr	r0, [pc, #196]	; (8007eb4 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x220>)
 8007df0:	a91f      	add	r1, sp, #124	; 0x7c
 8007df2:	f7ff ff21 	bl	8007c38 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
 8007df6:	b07f      	add	sp, #508	; 0x1fc
 8007df8:	bd71      	pop	{r0, r4, r5, r6, pc}
      }
 8007dfa:	482e      	ldr	r0, [pc, #184]	; (8007eb4 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x220>)
 8007dfc:	f7ff ff3e 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 8007e00:	482b      	ldr	r0, [pc, #172]	; (8007eb0 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x21c>)
 8007e02:	f7ff ff3b 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 8007e06:	4828      	ldr	r0, [pc, #160]	; (8007ea8 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x214>)
 8007e08:	f7ff ff38 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 8007e0c:	4824      	ldr	r0, [pc, #144]	; (8007ea0 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x20c>)
 8007e0e:	f7ff ff35 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 8007e12:	4822      	ldr	r0, [pc, #136]	; (8007e9c <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x208>)
 8007e14:	f7ff ff32 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 8007e18:	481e      	ldr	r0, [pc, #120]	; (8007e94 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x200>)
 8007e1a:	f7ff ff2f 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 8007e1e:	481b      	ldr	r0, [pc, #108]	; (8007e8c <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1f8>)
 8007e20:	f7ff ff2c 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 8007e24:	4818      	ldr	r0, [pc, #96]	; (8007e88 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1f4>)
 8007e26:	f7ff ff29 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 8007e2a:	4815      	ldr	r0, [pc, #84]	; (8007e80 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1ec>)
 8007e2c:	f7ff ff26 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 8007e30:	4811      	ldr	r0, [pc, #68]	; (8007e78 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1e4>)
 8007e32:	f7ff ff23 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 8007e36:	480f      	ldr	r0, [pc, #60]	; (8007e74 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1e0>)
 8007e38:	f7ff ff20 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 8007e3c:	480c      	ldr	r0, [pc, #48]	; (8007e70 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1dc>)
 8007e3e:	f7ff ff1d 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 8007e42:	480a      	ldr	r0, [pc, #40]	; (8007e6c <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1d8>)
 8007e44:	f7ff ff1a 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 8007e48:	0020      	movs	r0, r4
 8007e4a:	f7ff ff17 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 8007e4e:	0028      	movs	r0, r5
 8007e50:	f7ff ff14 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 8007e54:	e7cf      	b.n	8007df6 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x162>
 8007e56:	46c0      	nop			; (mov r8, r8)
 8007e58:	20000098 	.word	0x20000098
 8007e5c:	200000bc 	.word	0x200000bc
 8007e60:	0800d40c 	.word	0x0800d40c
 8007e64:	0800d590 	.word	0x0800d590
 8007e68:	0800d0c0 	.word	0x0800d0c0
 8007e6c:	200000b0 	.word	0x200000b0
 8007e70:	2000008c 	.word	0x2000008c
 8007e74:	200000c8 	.word	0x200000c8
 8007e78:	200000d4 	.word	0x200000d4
 8007e7c:	0800d140 	.word	0x0800d140
 8007e80:	200000e0 	.word	0x200000e0
 8007e84:	0800d1c0 	.word	0x0800d1c0
 8007e88:	200000ec 	.word	0x200000ec
 8007e8c:	200000f8 	.word	0x200000f8
 8007e90:	0800d240 	.word	0x0800d240
 8007e94:	20000104 	.word	0x20000104
 8007e98:	0800d2c0 	.word	0x0800d2c0
 8007e9c:	20000110 	.word	0x20000110
 8007ea0:	20000128 	.word	0x20000128
 8007ea4:	0800d340 	.word	0x0800d340
 8007ea8:	20000134 	.word	0x20000134
 8007eac:	0800d70e 	.word	0x0800d70e
 8007eb0:	200000a4 	.word	0x200000a4
 8007eb4:	2000011c 	.word	0x2000011c

08007eb8 <_GLOBAL__sub_I__ZN6OV26404InitEv>:
 8007eb8:	b510      	push	{r4, lr}
 8007eba:	2001      	movs	r0, #1
 8007ebc:	f7ff feea 	bl	8007c94 <_Z41__static_initialization_and_destruction_0ii.constprop.0>
 8007ec0:	bd10      	pop	{r4, pc}

08007ec2 <_GLOBAL__sub_D__ZN6OV26404InitEv>:
 8007ec2:	b510      	push	{r4, lr}
 8007ec4:	2000      	movs	r0, #0
 8007ec6:	f7ff fee5 	bl	8007c94 <_Z41__static_initialization_and_destruction_0ii.constprop.0>
 8007eca:	bd10      	pop	{r4, pc}

08007ecc <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>:
      vector(initializer_list<value_type> __l,
 8007ecc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007ece:	0004      	movs	r4, r0
	: _M_start(), _M_finish(), _M_end_of_storage()
 8007ed0:	2000      	movs	r0, #0
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
 8007ed2:	4b0d      	ldr	r3, [pc, #52]	; (8007f08 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0+0x3c>)
      vector(initializer_list<value_type> __l,
 8007ed4:	000e      	movs	r6, r1
	: _M_start(), _M_finish(), _M_end_of_storage()
 8007ed6:	6020      	str	r0, [r4, #0]
 8007ed8:	6060      	str	r0, [r4, #4]
 8007eda:	60a0      	str	r0, [r4, #8]
 8007edc:	0055      	lsls	r5, r2, #1
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
 8007ede:	429d      	cmp	r5, r3
 8007ee0:	d902      	bls.n	8007ee8 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0+0x1c>
	  __throw_length_error(
 8007ee2:	480a      	ldr	r0, [pc, #40]	; (8007f0c <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0+0x40>)
 8007ee4:	f002 fd4c 	bl	800a980 <_ZSt20__throw_length_errorPKc>
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 8007ee8:	2d00      	cmp	r5, #0
 8007eea:	d002      	beq.n	8007ef2 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0+0x26>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8007eec:	0028      	movs	r0, r5
 8007eee:	f002 fcff 	bl	800a8f0 <_Znwj>
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 8007ef2:	1947      	adds	r7, r0, r5
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
 8007ef4:	6020      	str	r0, [r4, #0]
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 8007ef6:	60a7      	str	r7, [r4, #8]
	  if (_Num)
 8007ef8:	2d00      	cmp	r5, #0
 8007efa:	d003      	beq.n	8007f04 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0+0x38>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 8007efc:	002a      	movs	r2, r5
 8007efe:	0031      	movs	r1, r6
 8007f00:	f004 fc4e 	bl	800c7a0 <memcpy>
	  this->_M_impl._M_finish =
 8007f04:	6067      	str	r7, [r4, #4]
      }
 8007f06:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8007f08:	7ffffffe 	.word	0x7ffffffe
 8007f0c:	0800f7c8 	.word	0x0800f7c8

08007f10 <_Z41__static_initialization_and_destruction_0ii.constprop.0>:
	{0x5a,0xa0},		//036
	{0x5b,0x78},		//037
	{0x5c,0x00},		//038
	{0xd3,0x04},		//039
	{0xe0,0x00},		//040
};
 8007f10:	b571      	push	{r0, r4, r5, r6, lr}
 8007f12:	4d70      	ldr	r5, [pc, #448]	; (80080d4 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1c4>)
 8007f14:	4c70      	ldr	r4, [pc, #448]	; (80080d8 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1c8>)
 8007f16:	b0ff      	sub	sp, #508	; 0x1fc
 8007f18:	2801      	cmp	r0, #1
 8007f1a:	d000      	beq.n	8007f1e <_Z41__static_initialization_and_destruction_0ii.constprop.0+0xe>
 8007f1c:	e0ab      	b.n	8008076 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x166>
const vector<SPI_camera::Register_blob_8> OV2640_QVGA  =
 8007f1e:	22c2      	movs	r2, #194	; 0xc2
 8007f20:	496e      	ldr	r1, [pc, #440]	; (80080dc <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1cc>)
 8007f22:	0052      	lsls	r2, r2, #1
 8007f24:	a81f      	add	r0, sp, #124	; 0x7c
 8007f26:	f004 fc3b 	bl	800c7a0 <memcpy>
 8007f2a:	0028      	movs	r0, r5
 8007f2c:	22c2      	movs	r2, #194	; 0xc2
 8007f2e:	a91f      	add	r1, sp, #124	; 0x7c
 8007f30:	f7ff ffcc 	bl	8007ecc <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_JPEG_INIT   =
 8007f34:	22bf      	movs	r2, #191	; 0xbf
 8007f36:	496a      	ldr	r1, [pc, #424]	; (80080e0 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1d0>)
 8007f38:	0052      	lsls	r2, r2, #1
 8007f3a:	a81f      	add	r0, sp, #124	; 0x7c
 8007f3c:	f004 fc30 	bl	800c7a0 <memcpy>
 8007f40:	0020      	movs	r0, r4
 8007f42:	22bf      	movs	r2, #191	; 0xbf
 8007f44:	a91f      	add	r1, sp, #124	; 0x7c
 8007f46:	f7ff ffc1 	bl	8007ecc <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_YUV422   =
 8007f4a:	4c66      	ldr	r4, [pc, #408]	; (80080e4 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1d4>)
 8007f4c:	2214      	movs	r2, #20
 8007f4e:	0021      	movs	r1, r4
 8007f50:	a81f      	add	r0, sp, #124	; 0x7c
 8007f52:	f004 fc25 	bl	800c7a0 <memcpy>
 8007f56:	220a      	movs	r2, #10
 8007f58:	4863      	ldr	r0, [pc, #396]	; (80080e8 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1d8>)
 8007f5a:	a91f      	add	r1, sp, #124	; 0x7c
 8007f5c:	f7ff ffb6 	bl	8007ecc <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_JPEG   =
 8007f60:	0021      	movs	r1, r4
 8007f62:	2212      	movs	r2, #18
 8007f64:	3114      	adds	r1, #20
 8007f66:	a81f      	add	r0, sp, #124	; 0x7c
 8007f68:	f004 fc1a 	bl	800c7a0 <memcpy>
 8007f6c:	2209      	movs	r2, #9
 8007f6e:	485f      	ldr	r0, [pc, #380]	; (80080ec <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1dc>)
 8007f70:	a91f      	add	r1, sp, #124	; 0x7c
 8007f72:	f7ff ffab 	bl	8007ecc <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_160x120_JPEG   =
 8007f76:	0021      	movs	r1, r4
 8007f78:	2528      	movs	r5, #40	; 0x28
 8007f7a:	2250      	movs	r2, #80	; 0x50
 8007f7c:	3126      	adds	r1, #38	; 0x26
 8007f7e:	a81f      	add	r0, sp, #124	; 0x7c
 8007f80:	f004 fc0e 	bl	800c7a0 <memcpy>
 8007f84:	002a      	movs	r2, r5
 8007f86:	485a      	ldr	r0, [pc, #360]	; (80080f0 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1e0>)
 8007f88:	a91f      	add	r1, sp, #124	; 0x7c
 8007f8a:	f7ff ff9f 	bl	8007ecc <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_176x144_JPEG   =
 8007f8e:	0021      	movs	r1, r4
 8007f90:	2250      	movs	r2, #80	; 0x50
 8007f92:	3176      	adds	r1, #118	; 0x76
 8007f94:	a81f      	add	r0, sp, #124	; 0x7c
 8007f96:	f004 fc03 	bl	800c7a0 <memcpy>
 8007f9a:	002a      	movs	r2, r5
 8007f9c:	4855      	ldr	r0, [pc, #340]	; (80080f4 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1e4>)
 8007f9e:	a91f      	add	r1, sp, #124	; 0x7c
 8007fa0:	f7ff ff94 	bl	8007ecc <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_320x240_JPEG   =
 8007fa4:	4954      	ldr	r1, [pc, #336]	; (80080f8 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1e8>)
 8007fa6:	2250      	movs	r2, #80	; 0x50
 8007fa8:	3146      	adds	r1, #70	; 0x46
 8007faa:	a81f      	add	r0, sp, #124	; 0x7c
 8007fac:	f004 fbf8 	bl	800c7a0 <memcpy>
 8007fb0:	002a      	movs	r2, r5
 8007fb2:	4852      	ldr	r0, [pc, #328]	; (80080fc <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1ec>)
 8007fb4:	a91f      	add	r1, sp, #124	; 0x7c
 8007fb6:	f7ff ff89 	bl	8007ecc <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_352x288_JPEG   =
 8007fba:	4c51      	ldr	r4, [pc, #324]	; (8008100 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1f0>)
 8007fbc:	2250      	movs	r2, #80	; 0x50
 8007fbe:	0021      	movs	r1, r4
 8007fc0:	a81f      	add	r0, sp, #124	; 0x7c
 8007fc2:	3116      	adds	r1, #22
 8007fc4:	f004 fbec 	bl	800c7a0 <memcpy>
 8007fc8:	002a      	movs	r2, r5
 8007fca:	484e      	ldr	r0, [pc, #312]	; (8008104 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1f4>)
 8007fcc:	a91f      	add	r1, sp, #124	; 0x7c
 8007fce:	f7ff ff7d 	bl	8007ecc <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_640x480_JPEG   =
 8007fd2:	0021      	movs	r1, r4
 8007fd4:	2629      	movs	r6, #41	; 0x29
 8007fd6:	2252      	movs	r2, #82	; 0x52
 8007fd8:	3166      	adds	r1, #102	; 0x66
 8007fda:	a81f      	add	r0, sp, #124	; 0x7c
 8007fdc:	f004 fbe0 	bl	800c7a0 <memcpy>
 8007fe0:	0032      	movs	r2, r6
 8007fe2:	4849      	ldr	r0, [pc, #292]	; (8008108 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1f8>)
 8007fe4:	a91f      	add	r1, sp, #124	; 0x7c
 8007fe6:	f7ff ff71 	bl	8007ecc <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_800x600_JPEG   =
 8007fea:	4948      	ldr	r1, [pc, #288]	; (800810c <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1fc>)
 8007fec:	2252      	movs	r2, #82	; 0x52
 8007fee:	3138      	adds	r1, #56	; 0x38
 8007ff0:	a81f      	add	r0, sp, #124	; 0x7c
 8007ff2:	f004 fbd5 	bl	800c7a0 <memcpy>
 8007ff6:	0032      	movs	r2, r6
 8007ff8:	4845      	ldr	r0, [pc, #276]	; (8008110 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x200>)
 8007ffa:	a91f      	add	r1, sp, #124	; 0x7c
 8007ffc:	f7ff ff66 	bl	8007ecc <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_1024x768_JPEG   =
 8008000:	4c44      	ldr	r4, [pc, #272]	; (8008114 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x204>)
 8008002:	224e      	movs	r2, #78	; 0x4e
 8008004:	0021      	movs	r1, r4
 8008006:	a81f      	add	r0, sp, #124	; 0x7c
 8008008:	310a      	adds	r1, #10
 800800a:	f004 fbc9 	bl	800c7a0 <memcpy>
 800800e:	2227      	movs	r2, #39	; 0x27
 8008010:	4841      	ldr	r0, [pc, #260]	; (8008118 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x208>)
 8008012:	a91f      	add	r1, sp, #124	; 0x7c
 8008014:	f7ff ff5a 	bl	8007ecc <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_1280x1024_JPEG   =
 8008018:	0021      	movs	r1, r4
 800801a:	2252      	movs	r2, #82	; 0x52
 800801c:	3158      	adds	r1, #88	; 0x58
 800801e:	a81f      	add	r0, sp, #124	; 0x7c
 8008020:	f004 fbbe 	bl	800c7a0 <memcpy>
 8008024:	0032      	movs	r2, r6
 8008026:	483d      	ldr	r0, [pc, #244]	; (800811c <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x20c>)
 8008028:	a91f      	add	r1, sp, #124	; 0x7c
 800802a:	f7ff ff4f 	bl	8007ecc <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_1600x1200_JPEG   =
 800802e:	4c3c      	ldr	r4, [pc, #240]	; (8008120 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x210>)
 8008030:	2252      	movs	r2, #82	; 0x52
 8008032:	0021      	movs	r1, r4
 8008034:	a81f      	add	r0, sp, #124	; 0x7c
 8008036:	312a      	adds	r1, #42	; 0x2a
 8008038:	f004 fbb2 	bl	800c7a0 <memcpy>
 800803c:	0032      	movs	r2, r6
 800803e:	4839      	ldr	r0, [pc, #228]	; (8008124 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x214>)
 8008040:	a91f      	add	r1, sp, #124	; 0x7c
 8008042:	f7ff ff43 	bl	8007ecc <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_SVGA  =
 8008046:	22b2      	movs	r2, #178	; 0xb2
 8008048:	4937      	ldr	r1, [pc, #220]	; (8008128 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x218>)
 800804a:	0052      	lsls	r2, r2, #1
 800804c:	a81f      	add	r0, sp, #124	; 0x7c
 800804e:	f004 fba7 	bl	800c7a0 <memcpy>
 8008052:	22b2      	movs	r2, #178	; 0xb2
 8008054:	4835      	ldr	r0, [pc, #212]	; (800812c <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x21c>)
 8008056:	a91f      	add	r1, sp, #124	; 0x7c
 8008058:	f7ff ff38 	bl	8007ecc <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_640x480_JPEG2 =
 800805c:	0021      	movs	r1, r4
 800805e:	2250      	movs	r2, #80	; 0x50
 8008060:	317c      	adds	r1, #124	; 0x7c
 8008062:	a81f      	add	r0, sp, #124	; 0x7c
 8008064:	f004 fb9c 	bl	800c7a0 <memcpy>
 8008068:	002a      	movs	r2, r5
 800806a:	4831      	ldr	r0, [pc, #196]	; (8008130 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x220>)
 800806c:	a91f      	add	r1, sp, #124	; 0x7c
 800806e:	f7ff ff2d 	bl	8007ecc <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
};
 8008072:	b07f      	add	sp, #508	; 0x1fc
 8008074:	bd71      	pop	{r0, r4, r5, r6, pc}
      }
 8008076:	482e      	ldr	r0, [pc, #184]	; (8008130 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x220>)
 8008078:	f7ff fe00 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 800807c:	482b      	ldr	r0, [pc, #172]	; (800812c <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x21c>)
 800807e:	f7ff fdfd 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 8008082:	4828      	ldr	r0, [pc, #160]	; (8008124 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x214>)
 8008084:	f7ff fdfa 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 8008088:	4824      	ldr	r0, [pc, #144]	; (800811c <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x20c>)
 800808a:	f7ff fdf7 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 800808e:	4822      	ldr	r0, [pc, #136]	; (8008118 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x208>)
 8008090:	f7ff fdf4 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 8008094:	481e      	ldr	r0, [pc, #120]	; (8008110 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x200>)
 8008096:	f7ff fdf1 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 800809a:	481b      	ldr	r0, [pc, #108]	; (8008108 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1f8>)
 800809c:	f7ff fdee 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 80080a0:	4818      	ldr	r0, [pc, #96]	; (8008104 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1f4>)
 80080a2:	f7ff fdeb 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 80080a6:	4815      	ldr	r0, [pc, #84]	; (80080fc <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1ec>)
 80080a8:	f7ff fde8 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 80080ac:	4811      	ldr	r0, [pc, #68]	; (80080f4 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1e4>)
 80080ae:	f7ff fde5 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 80080b2:	480f      	ldr	r0, [pc, #60]	; (80080f0 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1e0>)
 80080b4:	f7ff fde2 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 80080b8:	480c      	ldr	r0, [pc, #48]	; (80080ec <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1dc>)
 80080ba:	f7ff fddf 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 80080be:	480a      	ldr	r0, [pc, #40]	; (80080e8 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1d8>)
 80080c0:	f7ff fddc 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 80080c4:	0020      	movs	r0, r4
 80080c6:	f7ff fdd9 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 80080ca:	0028      	movs	r0, r5
 80080cc:	f7ff fdd6 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 80080d0:	e7cf      	b.n	8008072 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x162>
 80080d2:	46c0      	nop			; (mov r8, r8)
 80080d4:	2000014c 	.word	0x2000014c
 80080d8:	20000170 	.word	0x20000170
 80080dc:	0800dbbe 	.word	0x0800dbbe
 80080e0:	0800dd42 	.word	0x0800dd42
 80080e4:	0800d872 	.word	0x0800d872
 80080e8:	20000164 	.word	0x20000164
 80080ec:	20000140 	.word	0x20000140
 80080f0:	2000017c 	.word	0x2000017c
 80080f4:	20000188 	.word	0x20000188
 80080f8:	0800d8f2 	.word	0x0800d8f2
 80080fc:	20000194 	.word	0x20000194
 8008100:	0800d972 	.word	0x0800d972
 8008104:	200001a0 	.word	0x200001a0
 8008108:	200001ac 	.word	0x200001ac
 800810c:	0800d9f2 	.word	0x0800d9f2
 8008110:	200001b8 	.word	0x200001b8
 8008114:	0800da72 	.word	0x0800da72
 8008118:	200001c4 	.word	0x200001c4
 800811c:	200001dc 	.word	0x200001dc
 8008120:	0800daf2 	.word	0x0800daf2
 8008124:	200001e8 	.word	0x200001e8
 8008128:	0800dec0 	.word	0x0800dec0
 800812c:	20000158 	.word	0x20000158
 8008130:	200001d0 	.word	0x200001d0

08008134 <_GLOBAL__sub_I_OV2640_regs.cpp>:
 8008134:	b510      	push	{r4, lr}
 8008136:	2001      	movs	r0, #1
 8008138:	f7ff feea 	bl	8007f10 <_Z41__static_initialization_and_destruction_0ii.constprop.0>
 800813c:	bd10      	pop	{r4, pc}

0800813e <_GLOBAL__sub_D_OV2640_regs.cpp>:
 800813e:	b510      	push	{r4, lr}
 8008140:	2000      	movs	r0, #0
 8008142:	f7ff fee5 	bl	8007f10 <_Z41__static_initialization_and_destruction_0ii.constprop.0>
 8008146:	bd10      	pop	{r4, pc}

08008148 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>:
      vector(initializer_list<value_type> __l,
 8008148:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800814a:	0004      	movs	r4, r0
	: _M_start(), _M_finish(), _M_end_of_storage()
 800814c:	2000      	movs	r0, #0
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
 800814e:	4b0d      	ldr	r3, [pc, #52]	; (8008184 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0+0x3c>)
      vector(initializer_list<value_type> __l,
 8008150:	000e      	movs	r6, r1
	: _M_start(), _M_finish(), _M_end_of_storage()
 8008152:	6020      	str	r0, [r4, #0]
 8008154:	6060      	str	r0, [r4, #4]
 8008156:	60a0      	str	r0, [r4, #8]
 8008158:	0055      	lsls	r5, r2, #1
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
 800815a:	429d      	cmp	r5, r3
 800815c:	d902      	bls.n	8008164 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0+0x1c>
	  __throw_length_error(
 800815e:	480a      	ldr	r0, [pc, #40]	; (8008188 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0+0x40>)
 8008160:	f002 fc0e 	bl	800a980 <_ZSt20__throw_length_errorPKc>
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 8008164:	2d00      	cmp	r5, #0
 8008166:	d002      	beq.n	800816e <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0+0x26>
 8008168:	0028      	movs	r0, r5
 800816a:	f002 fbc1 	bl	800a8f0 <_Znwj>
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 800816e:	1947      	adds	r7, r0, r5
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
 8008170:	6020      	str	r0, [r4, #0]
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 8008172:	60a7      	str	r7, [r4, #8]
	  if (_Num)
 8008174:	2d00      	cmp	r5, #0
 8008176:	d003      	beq.n	8008180 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0+0x38>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 8008178:	002a      	movs	r2, r5
 800817a:	0031      	movs	r1, r6
 800817c:	f004 fb10 	bl	800c7a0 <memcpy>
	  this->_M_impl._M_finish =
 8008180:	6067      	str	r7, [r4, #4]
      }
 8008182:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8008184:	7ffffffe 	.word	0x7ffffffe
 8008188:	0800f7c8 	.word	0x0800f7c8

0800818c <_Z18SystemClock_Configv>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800818c:	b500      	push	{lr}
 800818e:	b093      	sub	sp, #76	; 0x4c
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8008190:	2234      	movs	r2, #52	; 0x34
 8008192:	2100      	movs	r1, #0
 8008194:	a805      	add	r0, sp, #20
 8008196:	f004 fa08 	bl	800c5aa <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800819a:	2100      	movs	r1, #0
 800819c:	2210      	movs	r2, #16
 800819e:	a801      	add	r0, sp, #4
 80081a0:	f004 fa03 	bl	800c5aa <memset>

  /** Configure the main internal regulator output voltage
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 80081a4:	2080      	movs	r0, #128	; 0x80
 80081a6:	0080      	lsls	r0, r0, #2
 80081a8:	f000 ffda 	bl	8009160 <HAL_PWREx_ControlVoltageScaling>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80081ac:	2302      	movs	r3, #2
 80081ae:	9305      	str	r3, [sp, #20]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80081b0:	33fe      	adds	r3, #254	; 0xfe
  RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80081b2:	2240      	movs	r2, #64	; 0x40
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80081b4:	9308      	str	r3, [sp, #32]
  RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 80081b6:	2300      	movs	r3, #0
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80081b8:	a805      	add	r0, sp, #20
  RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 80081ba:	9309      	str	r3, [sp, #36]	; 0x24
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80081bc:	920a      	str	r2, [sp, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80081be:	930c      	str	r3, [sp, #48]	; 0x30
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80081c0:	f000 fffa 	bl	80091b8 <HAL_RCC_OscConfig>
 80081c4:	1e01      	subs	r1, r0, #0
 80081c6:	d001      	beq.n	80081cc <_Z18SystemClock_Configv+0x40>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80081c8:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80081ca:	e7fe      	b.n	80081ca <_Z18SystemClock_Configv+0x3e>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80081cc:	2307      	movs	r3, #7
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80081ce:	9002      	str	r0, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80081d0:	9003      	str	r0, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80081d2:	9004      	str	r0, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80081d4:	a801      	add	r0, sp, #4
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80081d6:	9301      	str	r3, [sp, #4]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80081d8:	f001 fa4c 	bl	8009674 <HAL_RCC_ClockConfig>
 80081dc:	2800      	cmp	r0, #0
 80081de:	d001      	beq.n	80081e4 <_Z18SystemClock_Configv+0x58>
 80081e0:	b672      	cpsid	i
  while (1)
 80081e2:	e7fe      	b.n	80081e2 <_Z18SystemClock_Configv+0x56>
}
 80081e4:	b013      	add	sp, #76	; 0x4c
 80081e6:	bd00      	pop	{pc}

080081e8 <main>:
{
 80081e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80081ea:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 80081ec:	f000 fcfa 	bl	8008be4 <HAL_Init>
  SystemClock_Config();
 80081f0:	f7ff ffcc 	bl	800818c <_Z18SystemClock_Configv>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80081f4:	2214      	movs	r2, #20
 80081f6:	2100      	movs	r1, #0
 80081f8:	a80f      	add	r0, sp, #60	; 0x3c
 80081fa:	f004 f9d6 	bl	800c5aa <memset>
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80081fe:	2204      	movs	r2, #4
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8008200:	2501      	movs	r5, #1
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 8008202:	2680      	movs	r6, #128	; 0x80
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8008204:	4cb1      	ldr	r4, [pc, #708]	; (80084cc <main+0x2e4>)
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 8008206:	00f6      	lsls	r6, r6, #3
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8008208:	6b63      	ldr	r3, [r4, #52]	; 0x34
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 800820a:	0031      	movs	r1, r6
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800820c:	4313      	orrs	r3, r2
 800820e:	6363      	str	r3, [r4, #52]	; 0x34
 8008210:	6b63      	ldr	r3, [r4, #52]	; 0x34
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 8008212:	48af      	ldr	r0, [pc, #700]	; (80084d0 <main+0x2e8>)
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8008214:	4013      	ands	r3, r2
 8008216:	9302      	str	r3, [sp, #8]
 8008218:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800821a:	6b63      	ldr	r3, [r4, #52]	; 0x34
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800821c:	3a02      	subs	r2, #2
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800821e:	432b      	orrs	r3, r5
 8008220:	6363      	str	r3, [r4, #52]	; 0x34
 8008222:	6b63      	ldr	r3, [r4, #52]	; 0x34
  huart2.Init.Mode = UART_MODE_TX_RX;
 8008224:	270c      	movs	r7, #12
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8008226:	402b      	ands	r3, r5
 8008228:	9303      	str	r3, [sp, #12]
 800822a:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800822c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800822e:	4313      	orrs	r3, r2
 8008230:	6363      	str	r3, [r4, #52]	; 0x34
 8008232:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8008234:	4013      	ands	r3, r2
 8008236:	9304      	str	r3, [sp, #16]
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 8008238:	2200      	movs	r2, #0
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800823a:	9b04      	ldr	r3, [sp, #16]
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 800823c:	f000 fee2 	bl	8009004 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = GPIO_PIN_10;
 8008240:	960f      	str	r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8008242:	2600      	movs	r6, #0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8008244:	48a2      	ldr	r0, [pc, #648]	; (80084d0 <main+0x2e8>)
 8008246:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8008248:	9510      	str	r5, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800824a:	9611      	str	r6, [sp, #68]	; 0x44
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800824c:	9612      	str	r6, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800824e:	f000 fe27 	bl	8008ea0 <HAL_GPIO_Init>
  __HAL_RCC_DMA1_CLK_ENABLE();
 8008252:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 8008254:	0032      	movs	r2, r6
  __HAL_RCC_DMA1_CLK_ENABLE();
 8008256:	432b      	orrs	r3, r5
 8008258:	63a3      	str	r3, [r4, #56]	; 0x38
 800825a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 800825c:	0031      	movs	r1, r6
  __HAL_RCC_DMA1_CLK_ENABLE();
 800825e:	402b      	ands	r3, r5
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 8008260:	2009      	movs	r0, #9
  __HAL_RCC_DMA1_CLK_ENABLE();
 8008262:	9301      	str	r3, [sp, #4]
 8008264:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 8008266:	f000 fd01 	bl	8008c6c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 800826a:	2009      	movs	r0, #9
 800826c:	f000 fd28 	bl	8008cc0 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DMA1_Channel2_3_IRQn, 0, 0);
 8008270:	0031      	movs	r1, r6
 8008272:	0032      	movs	r2, r6
 8008274:	200a      	movs	r0, #10
 8008276:	f000 fcf9 	bl	8008c6c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel2_3_IRQn);
 800827a:	200a      	movs	r0, #10
 800827c:	f000 fd20 	bl	8008cc0 <HAL_NVIC_EnableIRQ>
  huart2.Instance = USART2;
 8008280:	4c94      	ldr	r4, [pc, #592]	; (80084d4 <main+0x2ec>)
 8008282:	4b95      	ldr	r3, [pc, #596]	; (80084d8 <main+0x2f0>)
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8008284:	0020      	movs	r0, r4
  huart2.Instance = USART2;
 8008286:	6023      	str	r3, [r4, #0]
  huart2.Init.BaudRate = 9600;
 8008288:	2396      	movs	r3, #150	; 0x96
 800828a:	019b      	lsls	r3, r3, #6
 800828c:	6063      	str	r3, [r4, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800828e:	60a6      	str	r6, [r4, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8008290:	60e6      	str	r6, [r4, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8008292:	6126      	str	r6, [r4, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8008294:	6167      	str	r7, [r4, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8008296:	61a6      	str	r6, [r4, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8008298:	61e6      	str	r6, [r4, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 800829a:	6226      	str	r6, [r4, #32]
  huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 800829c:	6266      	str	r6, [r4, #36]	; 0x24
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 800829e:	62a6      	str	r6, [r4, #40]	; 0x28
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80082a0:	f002 fa66 	bl	800a770 <HAL_UART_Init>
 80082a4:	0001      	movs	r1, r0
 80082a6:	42b0      	cmp	r0, r6
 80082a8:	d001      	beq.n	80082ae <main+0xc6>
 80082aa:	b672      	cpsid	i
  while (1)
 80082ac:	e7fe      	b.n	80082ac <main+0xc4>
  if (HAL_UARTEx_SetTxFifoThreshold(&huart2, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 80082ae:	0020      	movs	r0, r4
 80082b0:	f002 fad8 	bl	800a864 <HAL_UARTEx_SetTxFifoThreshold>
 80082b4:	1e01      	subs	r1, r0, #0
 80082b6:	d001      	beq.n	80082bc <main+0xd4>
 80082b8:	b672      	cpsid	i
  while (1)
 80082ba:	e7fe      	b.n	80082ba <main+0xd2>
  if (HAL_UARTEx_SetRxFifoThreshold(&huart2, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 80082bc:	0020      	movs	r0, r4
 80082be:	f002 faf1 	bl	800a8a4 <HAL_UARTEx_SetRxFifoThreshold>
 80082c2:	2800      	cmp	r0, #0
 80082c4:	d001      	beq.n	80082ca <main+0xe2>
 80082c6:	b672      	cpsid	i
  while (1)
 80082c8:	e7fe      	b.n	80082c8 <main+0xe0>
  if (HAL_UARTEx_DisableFifoMode(&huart2) != HAL_OK)
 80082ca:	0020      	movs	r0, r4
 80082cc:	f002 faac 	bl	800a828 <HAL_UARTEx_DisableFifoMode>
 80082d0:	1e06      	subs	r6, r0, #0
 80082d2:	d001      	beq.n	80082d8 <main+0xf0>
 80082d4:	b672      	cpsid	i
  while (1)
 80082d6:	e7fe      	b.n	80082d6 <main+0xee>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80082d8:	0001      	movs	r1, r0
 80082da:	003a      	movs	r2, r7
 80082dc:	a805      	add	r0, sp, #20
 80082de:	f004 f964 	bl	800c5aa <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 80082e2:	221c      	movs	r2, #28
 80082e4:	0031      	movs	r1, r6
 80082e6:	a808      	add	r0, sp, #32
 80082e8:	f004 f95f 	bl	800c5aa <memset>
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 80082ec:	2234      	movs	r2, #52	; 0x34
 80082ee:	0031      	movs	r1, r6
 80082f0:	a80f      	add	r0, sp, #60	; 0x3c
 80082f2:	f004 f95a 	bl	800c5aa <memset>
  htim1.Instance = TIM1;
 80082f6:	4c79      	ldr	r4, [pc, #484]	; (80084dc <main+0x2f4>)
 80082f8:	4b79      	ldr	r3, [pc, #484]	; (80084e0 <main+0x2f8>)
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 80082fa:	0020      	movs	r0, r4
  htim1.Instance = TIM1;
 80082fc:	6023      	str	r3, [r4, #0]
  htim1.Init.Prescaler = 320-1;
 80082fe:	2340      	movs	r3, #64	; 0x40
 8008300:	33ff      	adds	r3, #255	; 0xff
 8008302:	6063      	str	r3, [r4, #4]
  htim1.Init.Period = 1000-1;
 8008304:	4b77      	ldr	r3, [pc, #476]	; (80084e4 <main+0x2fc>)
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8008306:	60a6      	str	r6, [r4, #8]
  htim1.Init.Period = 1000-1;
 8008308:	60e3      	str	r3, [r4, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800830a:	6126      	str	r6, [r4, #16]
  htim1.Init.RepetitionCounter = 0;
 800830c:	6166      	str	r6, [r4, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800830e:	61a6      	str	r6, [r4, #24]
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8008310:	f001 fd4c 	bl	8009dac <HAL_TIM_PWM_Init>
 8008314:	2800      	cmp	r0, #0
 8008316:	d001      	beq.n	800831c <main+0x134>
 8008318:	b672      	cpsid	i
  while (1)
 800831a:	e7fe      	b.n	800831a <main+0x132>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800831c:	9005      	str	r0, [sp, #20]
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 800831e:	9006      	str	r0, [sp, #24]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8008320:	9007      	str	r0, [sp, #28]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8008322:	a905      	add	r1, sp, #20
 8008324:	0020      	movs	r0, r4
 8008326:	f001 ff83 	bl	800a230 <HAL_TIMEx_MasterConfigSynchronization>
 800832a:	1e02      	subs	r2, r0, #0
 800832c:	d001      	beq.n	8008332 <main+0x14a>
 800832e:	b672      	cpsid	i
  while (1)
 8008330:	e7fe      	b.n	8008330 <main+0x148>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8008332:	2360      	movs	r3, #96	; 0x60
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8008334:	900a      	str	r0, [sp, #40]	; 0x28
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8008336:	9308      	str	r3, [sp, #32]
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8008338:	900b      	str	r0, [sp, #44]	; 0x2c
  sConfigOC.Pulse = 25;
 800833a:	3b47      	subs	r3, #71	; 0x47
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800833c:	900c      	str	r0, [sp, #48]	; 0x30
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 800833e:	900d      	str	r0, [sp, #52]	; 0x34
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8008340:	900e      	str	r0, [sp, #56]	; 0x38
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8008342:	a908      	add	r1, sp, #32
 8008344:	0020      	movs	r0, r4
  sConfigOC.Pulse = 25;
 8008346:	9309      	str	r3, [sp, #36]	; 0x24
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8008348:	f001 fd9a 	bl	8009e80 <HAL_TIM_PWM_ConfigChannel>
 800834c:	2800      	cmp	r0, #0
 800834e:	d001      	beq.n	8008354 <main+0x16c>
 8008350:	b672      	cpsid	i
  while (1)
 8008352:	e7fe      	b.n	8008352 <main+0x16a>
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8008354:	2380      	movs	r3, #128	; 0x80
 8008356:	019b      	lsls	r3, r3, #6
 8008358:	9314      	str	r3, [sp, #80]	; 0x50
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 800835a:	2380      	movs	r3, #128	; 0x80
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 800835c:	900f      	str	r0, [sp, #60]	; 0x3c
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 800835e:	9010      	str	r0, [sp, #64]	; 0x40
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8008360:	9011      	str	r0, [sp, #68]	; 0x44
  sBreakDeadTimeConfig.DeadTime = 0;
 8008362:	9012      	str	r0, [sp, #72]	; 0x48
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8008364:	9013      	str	r0, [sp, #76]	; 0x4c
  sBreakDeadTimeConfig.BreakFilter = 0;
 8008366:	9015      	str	r0, [sp, #84]	; 0x54
  sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 8008368:	9016      	str	r0, [sp, #88]	; 0x58
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 800836a:	9017      	str	r0, [sp, #92]	; 0x5c
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 800836c:	049b      	lsls	r3, r3, #18
  sBreakDeadTimeConfig.Break2Filter = 0;
 800836e:	9019      	str	r0, [sp, #100]	; 0x64
  sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 8008370:	901a      	str	r0, [sp, #104]	; 0x68
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8008372:	901b      	str	r0, [sp, #108]	; 0x6c
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8008374:	a90f      	add	r1, sp, #60	; 0x3c
 8008376:	0020      	movs	r0, r4
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 8008378:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 800837a:	f001 ff8f 	bl	800a29c <HAL_TIMEx_ConfigBreakDeadTime>
 800837e:	1e07      	subs	r7, r0, #0
 8008380:	d001      	beq.n	8008386 <main+0x19e>
 8008382:	b672      	cpsid	i
  while (1)
 8008384:	e7fe      	b.n	8008384 <main+0x19c>
  HAL_TIM_MspPostInit(&htim1);
 8008386:	0020      	movs	r0, r4
 8008388:	f000 fad2 	bl	8008930 <HAL_TIM_MspPostInit>
  hi2c1.Instance = I2C1;
 800838c:	4e56      	ldr	r6, [pc, #344]	; (80084e8 <main+0x300>)
 800838e:	4b57      	ldr	r3, [pc, #348]	; (80084ec <main+0x304>)
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8008390:	0030      	movs	r0, r6
  hi2c1.Instance = I2C1;
 8008392:	6033      	str	r3, [r6, #0]
  hi2c1.Init.Timing = 0x00303D5B;
 8008394:	4b56      	ldr	r3, [pc, #344]	; (80084f0 <main+0x308>)
  hi2c1.Init.OwnAddress1 = 0;
 8008396:	60b7      	str	r7, [r6, #8]
  hi2c1.Init.Timing = 0x00303D5B;
 8008398:	6073      	str	r3, [r6, #4]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800839a:	60f5      	str	r5, [r6, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800839c:	6137      	str	r7, [r6, #16]
  hi2c1.Init.OwnAddress2 = 0;
 800839e:	6177      	str	r7, [r6, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 80083a0:	61b7      	str	r7, [r6, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80083a2:	61f7      	str	r7, [r6, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80083a4:	6237      	str	r7, [r6, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80083a6:	f000 fe33 	bl	8009010 <HAL_I2C_Init>
 80083aa:	1e01      	subs	r1, r0, #0
 80083ac:	d001      	beq.n	80083b2 <main+0x1ca>
 80083ae:	b672      	cpsid	i
  while (1)
 80083b0:	e7fe      	b.n	80083b0 <main+0x1c8>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 80083b2:	0030      	movs	r0, r6
 80083b4:	f000 fe8a 	bl	80090cc <HAL_I2CEx_ConfigAnalogFilter>
 80083b8:	2800      	cmp	r0, #0
 80083ba:	d001      	beq.n	80083c0 <main+0x1d8>
 80083bc:	b672      	cpsid	i
  while (1)
 80083be:	e7fe      	b.n	80083be <main+0x1d6>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 80083c0:	2100      	movs	r1, #0
 80083c2:	0030      	movs	r0, r6
 80083c4:	f000 fea8 	bl	8009118 <HAL_I2CEx_ConfigDigitalFilter>
 80083c8:	1e03      	subs	r3, r0, #0
 80083ca:	d001      	beq.n	80083d0 <main+0x1e8>
 80083cc:	b672      	cpsid	i
  while (1)
 80083ce:	e7fe      	b.n	80083ce <main+0x1e6>
  hspi1.Instance = SPI1;
 80083d0:	4848      	ldr	r0, [pc, #288]	; (80084f4 <main+0x30c>)
 80083d2:	4a49      	ldr	r2, [pc, #292]	; (80084f8 <main+0x310>)
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 80083d4:	6083      	str	r3, [r0, #8]
  hspi1.Instance = SPI1;
 80083d6:	6002      	str	r2, [r0, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 80083d8:	2282      	movs	r2, #130	; 0x82
 80083da:	0052      	lsls	r2, r2, #1
 80083dc:	6042      	str	r2, [r0, #4]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 80083de:	22e0      	movs	r2, #224	; 0xe0
 80083e0:	00d2      	lsls	r2, r2, #3
 80083e2:	60c2      	str	r2, [r0, #12]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 80083e4:	2280      	movs	r2, #128	; 0x80
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 80083e6:	6103      	str	r3, [r0, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 80083e8:	6143      	str	r3, [r0, #20]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80083ea:	61c3      	str	r3, [r0, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80083ec:	6203      	str	r3, [r0, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 80083ee:	6243      	str	r3, [r0, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80083f0:	6283      	str	r3, [r0, #40]	; 0x28
  hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 80083f2:	6303      	str	r3, [r0, #48]	; 0x30
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 80083f4:	2308      	movs	r3, #8
  hspi1.Init.NSS = SPI_NSS_SOFT;
 80083f6:	0092      	lsls	r2, r2, #2
 80083f8:	6182      	str	r2, [r0, #24]
  hspi1.Init.CRCPolynomial = 7;
 80083fa:	3afa      	subs	r2, #250	; 0xfa
 80083fc:	3aff      	subs	r2, #255	; 0xff
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 80083fe:	6343      	str	r3, [r0, #52]	; 0x34
  hspi1.Init.CRCPolynomial = 7;
 8008400:	62c2      	str	r2, [r0, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8008402:	f001 faad 	bl	8009960 <HAL_SPI_Init>
 8008406:	1e03      	subs	r3, r0, #0
 8008408:	d001      	beq.n	800840e <main+0x226>
 800840a:	b672      	cpsid	i
  while (1)
 800840c:	e7fe      	b.n	800840c <main+0x224>
  huart3.Instance = USART3;
 800840e:	483b      	ldr	r0, [pc, #236]	; (80084fc <main+0x314>)
 8008410:	4a3b      	ldr	r2, [pc, #236]	; (8008500 <main+0x318>)
  huart3.Init.Mode = UART_MODE_TX_RX;
 8008412:	250c      	movs	r5, #12
  huart3.Instance = USART3;
 8008414:	6002      	str	r2, [r0, #0]
  huart3.Init.BaudRate = 115200;
 8008416:	22e1      	movs	r2, #225	; 0xe1
 8008418:	0252      	lsls	r2, r2, #9
 800841a:	6042      	str	r2, [r0, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 800841c:	6083      	str	r3, [r0, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 800841e:	60c3      	str	r3, [r0, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 8008420:	6103      	str	r3, [r0, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8008422:	6145      	str	r5, [r0, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8008424:	6183      	str	r3, [r0, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8008426:	61c3      	str	r3, [r0, #28]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8008428:	6203      	str	r3, [r0, #32]
  huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 800842a:	6243      	str	r3, [r0, #36]	; 0x24
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 800842c:	6283      	str	r3, [r0, #40]	; 0x28
  if (HAL_UART_Init(&huart3) != HAL_OK)
 800842e:	f002 f99f 	bl	800a770 <HAL_UART_Init>
 8008432:	1e06      	subs	r6, r0, #0
 8008434:	d001      	beq.n	800843a <main+0x252>
 8008436:	b672      	cpsid	i
  while (1)
 8008438:	e7fe      	b.n	8008438 <main+0x250>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800843a:	0001      	movs	r1, r0
 800843c:	2210      	movs	r2, #16
 800843e:	a80f      	add	r0, sp, #60	; 0x3c
 8008440:	f004 f8b3 	bl	800c5aa <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8008444:	002a      	movs	r2, r5
 8008446:	0031      	movs	r1, r6
 8008448:	a808      	add	r0, sp, #32
 800844a:	f004 f8ae 	bl	800c5aa <memset>
  htim3.Instance = TIM3;
 800844e:	4d2d      	ldr	r5, [pc, #180]	; (8008504 <main+0x31c>)
 8008450:	4b2d      	ldr	r3, [pc, #180]	; (8008508 <main+0x320>)
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8008452:	0028      	movs	r0, r5
  htim3.Instance = TIM3;
 8008454:	602b      	str	r3, [r5, #0]
  htim3.Init.Prescaler = 16-1;
 8008456:	230f      	movs	r3, #15
 8008458:	606b      	str	r3, [r5, #4]
  htim3.Init.Period = 0xffff-1;
 800845a:	4b2c      	ldr	r3, [pc, #176]	; (800850c <main+0x324>)
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800845c:	60ae      	str	r6, [r5, #8]
  htim3.Init.Period = 0xffff-1;
 800845e:	60eb      	str	r3, [r5, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8008460:	612e      	str	r6, [r5, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8008462:	61ae      	str	r6, [r5, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8008464:	f001 fc78 	bl	8009d58 <HAL_TIM_Base_Init>
 8008468:	2800      	cmp	r0, #0
 800846a:	d001      	beq.n	8008470 <main+0x288>
 800846c:	b672      	cpsid	i
  while (1)
 800846e:	e7fe      	b.n	800846e <main+0x286>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8008470:	2380      	movs	r3, #128	; 0x80
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8008472:	0028      	movs	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8008474:	015b      	lsls	r3, r3, #5
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8008476:	a90f      	add	r1, sp, #60	; 0x3c
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8008478:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 800847a:	f001 fd95 	bl	8009fa8 <HAL_TIM_ConfigClockSource>
 800847e:	2800      	cmp	r0, #0
 8008480:	d001      	beq.n	8008486 <main+0x29e>
 8008482:	b672      	cpsid	i
  while (1)
 8008484:	e7fe      	b.n	8008484 <main+0x29c>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8008486:	9008      	str	r0, [sp, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8008488:	900a      	str	r0, [sp, #40]	; 0x28
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800848a:	a908      	add	r1, sp, #32
 800848c:	0028      	movs	r0, r5
 800848e:	f001 fecf 	bl	800a230 <HAL_TIMEx_MasterConfigSynchronization>
 8008492:	1e01      	subs	r1, r0, #0
 8008494:	d001      	beq.n	800849a <main+0x2b2>
 8008496:	b672      	cpsid	i
  while (1)
 8008498:	e7fe      	b.n	8008498 <main+0x2b0>
  HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_1);
 800849a:	0020      	movs	r0, r4
 800849c:	f001 fec4 	bl	800a228 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_2);
 80084a0:	2104      	movs	r1, #4
 80084a2:	0020      	movs	r0, r4
 80084a4:	f001 fec0 	bl	800a228 <HAL_TIM_PWM_Start>
  HAL_Delay(10);
 80084a8:	200a      	movs	r0, #10
 80084aa:	f000 fbc1 	bl	8008c30 <HAL_Delay>
	  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_6, GPIO_PIN_SET);
 80084ae:	2201      	movs	r2, #1
 80084b0:	2140      	movs	r1, #64	; 0x40
 80084b2:	4817      	ldr	r0, [pc, #92]	; (8008510 <main+0x328>)
 80084b4:	f000 fda6 	bl	8009004 <HAL_GPIO_WritePin>
	  HAL_Delay(3000);
 80084b8:	4816      	ldr	r0, [pc, #88]	; (8008514 <main+0x32c>)
 80084ba:	f000 fbb9 	bl	8008c30 <HAL_Delay>
	  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_6, GPIO_PIN_RESET);
 80084be:	2200      	movs	r2, #0
 80084c0:	2140      	movs	r1, #64	; 0x40
 80084c2:	4813      	ldr	r0, [pc, #76]	; (8008510 <main+0x328>)
 80084c4:	f000 fd9e 	bl	8009004 <HAL_GPIO_WritePin>
  while (1)
 80084c8:	e7f1      	b.n	80084ae <main+0x2c6>
 80084ca:	46c0      	nop			; (mov r8, r8)
 80084cc:	40021000 	.word	0x40021000
 80084d0:	50000400 	.word	0x50000400
 80084d4:	200004b0 	.word	0x200004b0
 80084d8:	40004400 	.word	0x40004400
 80084dc:	20000418 	.word	0x20000418
 80084e0:	40012c00 	.word	0x40012c00
 80084e4:	000003e7 	.word	0x000003e7
 80084e8:	20000360 	.word	0x20000360
 80084ec:	40005400 	.word	0x40005400
 80084f0:	00303d5b 	.word	0x00303d5b
 80084f4:	200003b4 	.word	0x200003b4
 80084f8:	40013000 	.word	0x40013000
 80084fc:	20000544 	.word	0x20000544
 8008500:	40004800 	.word	0x40004800
 8008504:	20000464 	.word	0x20000464
 8008508:	40000400 	.word	0x40000400
 800850c:	0000fffe 	.word	0x0000fffe
 8008510:	50000800 	.word	0x50000800
 8008514:	00000bb8 	.word	0x00000bb8

08008518 <Error_Handler>:
 8008518:	b672      	cpsid	i
  while (1)
 800851a:	e7fe      	b.n	800851a <Error_Handler+0x2>

0800851c <_Z41__static_initialization_and_destruction_0ii.constprop.0>:
  {
  }
  /* USER CODE END Error_Handler_Debug */
}
 800851c:	b571      	push	{r0, r4, r5, r6, lr}
 800851e:	4d70      	ldr	r5, [pc, #448]	; (80086e0 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1c4>)
 8008520:	4c70      	ldr	r4, [pc, #448]	; (80086e4 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1c8>)
 8008522:	b0ff      	sub	sp, #508	; 0x1fc
 8008524:	2801      	cmp	r0, #1
 8008526:	d000      	beq.n	800852a <_Z41__static_initialization_and_destruction_0ii.constprop.0+0xe>
 8008528:	e0ab      	b.n	8008682 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x166>
const vector<SPI_camera::Register_blob_8> OV2640_QVGA  =
 800852a:	22c2      	movs	r2, #194	; 0xc2
 800852c:	496e      	ldr	r1, [pc, #440]	; (80086e8 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1cc>)
 800852e:	0052      	lsls	r2, r2, #1
 8008530:	a81f      	add	r0, sp, #124	; 0x7c
 8008532:	f004 f935 	bl	800c7a0 <memcpy>
 8008536:	0028      	movs	r0, r5
 8008538:	22c2      	movs	r2, #194	; 0xc2
 800853a:	a91f      	add	r1, sp, #124	; 0x7c
 800853c:	f7ff fe04 	bl	8008148 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_JPEG_INIT   =
 8008540:	22bf      	movs	r2, #191	; 0xbf
 8008542:	496a      	ldr	r1, [pc, #424]	; (80086ec <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1d0>)
 8008544:	0052      	lsls	r2, r2, #1
 8008546:	a81f      	add	r0, sp, #124	; 0x7c
 8008548:	f004 f92a 	bl	800c7a0 <memcpy>
 800854c:	0020      	movs	r0, r4
 800854e:	22bf      	movs	r2, #191	; 0xbf
 8008550:	a91f      	add	r1, sp, #124	; 0x7c
 8008552:	f7ff fdf9 	bl	8008148 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_YUV422   =
 8008556:	4c66      	ldr	r4, [pc, #408]	; (80086f0 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1d4>)
 8008558:	2214      	movs	r2, #20
 800855a:	0021      	movs	r1, r4
 800855c:	a81f      	add	r0, sp, #124	; 0x7c
 800855e:	f004 f91f 	bl	800c7a0 <memcpy>
 8008562:	220a      	movs	r2, #10
 8008564:	4863      	ldr	r0, [pc, #396]	; (80086f4 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1d8>)
 8008566:	a91f      	add	r1, sp, #124	; 0x7c
 8008568:	f7ff fdee 	bl	8008148 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_JPEG   =
 800856c:	0021      	movs	r1, r4
 800856e:	2212      	movs	r2, #18
 8008570:	3114      	adds	r1, #20
 8008572:	a81f      	add	r0, sp, #124	; 0x7c
 8008574:	f004 f914 	bl	800c7a0 <memcpy>
 8008578:	2209      	movs	r2, #9
 800857a:	485f      	ldr	r0, [pc, #380]	; (80086f8 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1dc>)
 800857c:	a91f      	add	r1, sp, #124	; 0x7c
 800857e:	f7ff fde3 	bl	8008148 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_160x120_JPEG   =
 8008582:	0021      	movs	r1, r4
 8008584:	2528      	movs	r5, #40	; 0x28
 8008586:	2250      	movs	r2, #80	; 0x50
 8008588:	3126      	adds	r1, #38	; 0x26
 800858a:	a81f      	add	r0, sp, #124	; 0x7c
 800858c:	f004 f908 	bl	800c7a0 <memcpy>
 8008590:	002a      	movs	r2, r5
 8008592:	485a      	ldr	r0, [pc, #360]	; (80086fc <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1e0>)
 8008594:	a91f      	add	r1, sp, #124	; 0x7c
 8008596:	f7ff fdd7 	bl	8008148 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_176x144_JPEG   =
 800859a:	0021      	movs	r1, r4
 800859c:	2250      	movs	r2, #80	; 0x50
 800859e:	3176      	adds	r1, #118	; 0x76
 80085a0:	a81f      	add	r0, sp, #124	; 0x7c
 80085a2:	f004 f8fd 	bl	800c7a0 <memcpy>
 80085a6:	002a      	movs	r2, r5
 80085a8:	4855      	ldr	r0, [pc, #340]	; (8008700 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1e4>)
 80085aa:	a91f      	add	r1, sp, #124	; 0x7c
 80085ac:	f7ff fdcc 	bl	8008148 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_320x240_JPEG   =
 80085b0:	4954      	ldr	r1, [pc, #336]	; (8008704 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1e8>)
 80085b2:	2250      	movs	r2, #80	; 0x50
 80085b4:	3146      	adds	r1, #70	; 0x46
 80085b6:	a81f      	add	r0, sp, #124	; 0x7c
 80085b8:	f004 f8f2 	bl	800c7a0 <memcpy>
 80085bc:	002a      	movs	r2, r5
 80085be:	4852      	ldr	r0, [pc, #328]	; (8008708 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1ec>)
 80085c0:	a91f      	add	r1, sp, #124	; 0x7c
 80085c2:	f7ff fdc1 	bl	8008148 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_352x288_JPEG   =
 80085c6:	4c51      	ldr	r4, [pc, #324]	; (800870c <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1f0>)
 80085c8:	2250      	movs	r2, #80	; 0x50
 80085ca:	0021      	movs	r1, r4
 80085cc:	a81f      	add	r0, sp, #124	; 0x7c
 80085ce:	3116      	adds	r1, #22
 80085d0:	f004 f8e6 	bl	800c7a0 <memcpy>
 80085d4:	002a      	movs	r2, r5
 80085d6:	484e      	ldr	r0, [pc, #312]	; (8008710 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1f4>)
 80085d8:	a91f      	add	r1, sp, #124	; 0x7c
 80085da:	f7ff fdb5 	bl	8008148 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_640x480_JPEG   =
 80085de:	0021      	movs	r1, r4
 80085e0:	2629      	movs	r6, #41	; 0x29
 80085e2:	2252      	movs	r2, #82	; 0x52
 80085e4:	3166      	adds	r1, #102	; 0x66
 80085e6:	a81f      	add	r0, sp, #124	; 0x7c
 80085e8:	f004 f8da 	bl	800c7a0 <memcpy>
 80085ec:	0032      	movs	r2, r6
 80085ee:	4849      	ldr	r0, [pc, #292]	; (8008714 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1f8>)
 80085f0:	a91f      	add	r1, sp, #124	; 0x7c
 80085f2:	f7ff fda9 	bl	8008148 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_800x600_JPEG   =
 80085f6:	4948      	ldr	r1, [pc, #288]	; (8008718 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1fc>)
 80085f8:	2252      	movs	r2, #82	; 0x52
 80085fa:	3138      	adds	r1, #56	; 0x38
 80085fc:	a81f      	add	r0, sp, #124	; 0x7c
 80085fe:	f004 f8cf 	bl	800c7a0 <memcpy>
 8008602:	0032      	movs	r2, r6
 8008604:	4845      	ldr	r0, [pc, #276]	; (800871c <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x200>)
 8008606:	a91f      	add	r1, sp, #124	; 0x7c
 8008608:	f7ff fd9e 	bl	8008148 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_1024x768_JPEG   =
 800860c:	4c44      	ldr	r4, [pc, #272]	; (8008720 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x204>)
 800860e:	224e      	movs	r2, #78	; 0x4e
 8008610:	0021      	movs	r1, r4
 8008612:	a81f      	add	r0, sp, #124	; 0x7c
 8008614:	310a      	adds	r1, #10
 8008616:	f004 f8c3 	bl	800c7a0 <memcpy>
 800861a:	2227      	movs	r2, #39	; 0x27
 800861c:	4841      	ldr	r0, [pc, #260]	; (8008724 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x208>)
 800861e:	a91f      	add	r1, sp, #124	; 0x7c
 8008620:	f7ff fd92 	bl	8008148 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_1280x1024_JPEG   =
 8008624:	0021      	movs	r1, r4
 8008626:	2252      	movs	r2, #82	; 0x52
 8008628:	3158      	adds	r1, #88	; 0x58
 800862a:	a81f      	add	r0, sp, #124	; 0x7c
 800862c:	f004 f8b8 	bl	800c7a0 <memcpy>
 8008630:	0032      	movs	r2, r6
 8008632:	483d      	ldr	r0, [pc, #244]	; (8008728 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x20c>)
 8008634:	a91f      	add	r1, sp, #124	; 0x7c
 8008636:	f7ff fd87 	bl	8008148 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_1600x1200_JPEG   =
 800863a:	4c3c      	ldr	r4, [pc, #240]	; (800872c <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x210>)
 800863c:	2252      	movs	r2, #82	; 0x52
 800863e:	0021      	movs	r1, r4
 8008640:	a81f      	add	r0, sp, #124	; 0x7c
 8008642:	312a      	adds	r1, #42	; 0x2a
 8008644:	f004 f8ac 	bl	800c7a0 <memcpy>
 8008648:	0032      	movs	r2, r6
 800864a:	4839      	ldr	r0, [pc, #228]	; (8008730 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x214>)
 800864c:	a91f      	add	r1, sp, #124	; 0x7c
 800864e:	f7ff fd7b 	bl	8008148 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_SVGA  =
 8008652:	22b2      	movs	r2, #178	; 0xb2
 8008654:	4937      	ldr	r1, [pc, #220]	; (8008734 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x218>)
 8008656:	0052      	lsls	r2, r2, #1
 8008658:	a81f      	add	r0, sp, #124	; 0x7c
 800865a:	f004 f8a1 	bl	800c7a0 <memcpy>
 800865e:	22b2      	movs	r2, #178	; 0xb2
 8008660:	4835      	ldr	r0, [pc, #212]	; (8008738 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x21c>)
 8008662:	a91f      	add	r1, sp, #124	; 0x7c
 8008664:	f7ff fd70 	bl	8008148 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
const vector<SPI_camera::Register_blob_8> OV2640_640x480_JPEG2 =
 8008668:	0021      	movs	r1, r4
 800866a:	2250      	movs	r2, #80	; 0x50
 800866c:	317c      	adds	r1, #124	; 0x7c
 800866e:	a81f      	add	r0, sp, #124	; 0x7c
 8008670:	f004 f896 	bl	800c7a0 <memcpy>
 8008674:	002a      	movs	r2, r5
 8008676:	4831      	ldr	r0, [pc, #196]	; (800873c <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x220>)
 8008678:	a91f      	add	r1, sp, #124	; 0x7c
 800867a:	f7ff fd65 	bl	8008148 <_ZNSt6vectorIN10SPI_camera15Register_blob_8ESaIS1_EEC2ESt16initializer_listIS1_ERKS2_.constprop.0.isra.0>
 800867e:	b07f      	add	sp, #508	; 0x1fc
 8008680:	bd71      	pop	{r0, r4, r5, r6, pc}
      }
 8008682:	482e      	ldr	r0, [pc, #184]	; (800873c <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x220>)
 8008684:	f7ff fafa 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 8008688:	482b      	ldr	r0, [pc, #172]	; (8008738 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x21c>)
 800868a:	f7ff faf7 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 800868e:	4828      	ldr	r0, [pc, #160]	; (8008730 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x214>)
 8008690:	f7ff faf4 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 8008694:	4824      	ldr	r0, [pc, #144]	; (8008728 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x20c>)
 8008696:	f7ff faf1 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 800869a:	4822      	ldr	r0, [pc, #136]	; (8008724 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x208>)
 800869c:	f7ff faee 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 80086a0:	481e      	ldr	r0, [pc, #120]	; (800871c <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x200>)
 80086a2:	f7ff faeb 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 80086a6:	481b      	ldr	r0, [pc, #108]	; (8008714 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1f8>)
 80086a8:	f7ff fae8 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 80086ac:	4818      	ldr	r0, [pc, #96]	; (8008710 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1f4>)
 80086ae:	f7ff fae5 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 80086b2:	4815      	ldr	r0, [pc, #84]	; (8008708 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1ec>)
 80086b4:	f7ff fae2 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 80086b8:	4811      	ldr	r0, [pc, #68]	; (8008700 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1e4>)
 80086ba:	f7ff fadf 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 80086be:	480f      	ldr	r0, [pc, #60]	; (80086fc <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1e0>)
 80086c0:	f7ff fadc 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 80086c4:	480c      	ldr	r0, [pc, #48]	; (80086f8 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1dc>)
 80086c6:	f7ff fad9 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 80086ca:	480a      	ldr	r0, [pc, #40]	; (80086f4 <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x1d8>)
 80086cc:	f7ff fad6 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 80086d0:	0020      	movs	r0, r4
 80086d2:	f7ff fad3 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 80086d6:	0028      	movs	r0, r5
 80086d8:	f7ff fad0 	bl	8007c7c <_ZNSt12_Vector_baseIN10SPI_camera15Register_blob_8ESaIS1_EED1Ev>
 80086dc:	e7cf      	b.n	800867e <_Z41__static_initialization_and_destruction_0ii.constprop.0+0x162>
 80086de:	46c0      	nop			; (mov r8, r8)
 80086e0:	20000200 	.word	0x20000200
 80086e4:	20000224 	.word	0x20000224
 80086e8:	0800e370 	.word	0x0800e370
 80086ec:	0800e4f4 	.word	0x0800e4f4
 80086f0:	0800e024 	.word	0x0800e024
 80086f4:	20000218 	.word	0x20000218
 80086f8:	200001f4 	.word	0x200001f4
 80086fc:	20000230 	.word	0x20000230
 8008700:	2000023c 	.word	0x2000023c
 8008704:	0800e0a4 	.word	0x0800e0a4
 8008708:	20000248 	.word	0x20000248
 800870c:	0800e124 	.word	0x0800e124
 8008710:	20000254 	.word	0x20000254
 8008714:	20000260 	.word	0x20000260
 8008718:	0800e1a4 	.word	0x0800e1a4
 800871c:	2000026c 	.word	0x2000026c
 8008720:	0800e224 	.word	0x0800e224
 8008724:	20000278 	.word	0x20000278
 8008728:	20000290 	.word	0x20000290
 800872c:	0800e2a4 	.word	0x0800e2a4
 8008730:	2000029c 	.word	0x2000029c
 8008734:	0800e672 	.word	0x0800e672
 8008738:	2000020c 	.word	0x2000020c
 800873c:	20000284 	.word	0x20000284

08008740 <_GLOBAL__sub_I_hi2c1>:
 8008740:	b510      	push	{r4, lr}
 8008742:	2001      	movs	r0, #1
 8008744:	f7ff feea 	bl	800851c <_Z41__static_initialization_and_destruction_0ii.constprop.0>
 8008748:	bd10      	pop	{r4, pc}

0800874a <_GLOBAL__sub_D_hi2c1>:
 800874a:	b510      	push	{r4, lr}
 800874c:	2000      	movs	r0, #0
 800874e:	f7ff fee5 	bl	800851c <_Z41__static_initialization_and_destruction_0ii.constprop.0>
 8008752:	bd10      	pop	{r4, pc}

08008754 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8008754:	b507      	push	{r0, r1, r2, lr}
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8008756:	2101      	movs	r1, #1
 8008758:	4b0a      	ldr	r3, [pc, #40]	; (8008784 <HAL_MspInit+0x30>)

  /* System interrupt init*/

  /** Disable the internal Pull-Up in Dead Battery pins of UCPD peripheral
  */
  HAL_SYSCFG_StrobeDBattpinsConfig(SYSCFG_CFGR1_UCPD1_STROBE | SYSCFG_CFGR1_UCPD2_STROBE);
 800875a:	20c0      	movs	r0, #192	; 0xc0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800875c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  HAL_SYSCFG_StrobeDBattpinsConfig(SYSCFG_CFGR1_UCPD1_STROBE | SYSCFG_CFGR1_UCPD2_STROBE);
 800875e:	00c0      	lsls	r0, r0, #3
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8008760:	430a      	orrs	r2, r1
 8008762:	641a      	str	r2, [r3, #64]	; 0x40
 8008764:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008766:	400a      	ands	r2, r1
  __HAL_RCC_PWR_CLK_ENABLE();
 8008768:	2180      	movs	r1, #128	; 0x80
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800876a:	9200      	str	r2, [sp, #0]
 800876c:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800876e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8008770:	0549      	lsls	r1, r1, #21
 8008772:	430a      	orrs	r2, r1
 8008774:	63da      	str	r2, [r3, #60]	; 0x3c
 8008776:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008778:	400b      	ands	r3, r1
 800877a:	9301      	str	r3, [sp, #4]
 800877c:	9b01      	ldr	r3, [sp, #4]
  HAL_SYSCFG_StrobeDBattpinsConfig(SYSCFG_CFGR1_UCPD1_STROBE | SYSCFG_CFGR1_UCPD2_STROBE);
 800877e:	f000 fa69 	bl	8008c54 <HAL_SYSCFG_StrobeDBattpinsConfig>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8008782:	bd07      	pop	{r0, r1, r2, pc}
 8008784:	40021000 	.word	0x40021000

08008788 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8008788:	b510      	push	{r4, lr}
 800878a:	0004      	movs	r4, r0
 800878c:	b08e      	sub	sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800878e:	2214      	movs	r2, #20
 8008790:	2100      	movs	r1, #0
 8008792:	a802      	add	r0, sp, #8
 8008794:	f003 ff09 	bl	800c5aa <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8008798:	221c      	movs	r2, #28
 800879a:	2100      	movs	r1, #0
 800879c:	a807      	add	r0, sp, #28
 800879e:	f003 ff04 	bl	800c5aa <memset>
  if(hi2c->Instance==I2C1)
 80087a2:	4b18      	ldr	r3, [pc, #96]	; (8008804 <HAL_I2C_MspInit+0x7c>)
 80087a4:	6822      	ldr	r2, [r4, #0]
 80087a6:	429a      	cmp	r2, r3
 80087a8:	d129      	bne.n	80087fe <HAL_I2C_MspInit+0x76>

  /* USER CODE END I2C1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 80087aa:	2320      	movs	r3, #32
    PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80087ac:	a807      	add	r0, sp, #28
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 80087ae:	9307      	str	r3, [sp, #28]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80087b0:	f001 f822 	bl	80097f8 <HAL_RCCEx_PeriphCLKConfig>
 80087b4:	2800      	cmp	r0, #0
 80087b6:	d001      	beq.n	80087bc <HAL_I2C_MspInit+0x34>
    {
      Error_Handler();
 80087b8:	f7ff feae 	bl	8008518 <Error_Handler>
    }

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80087bc:	2201      	movs	r2, #1
 80087be:	4c12      	ldr	r4, [pc, #72]	; (8008808 <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF6_I2C1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80087c0:	20a0      	movs	r0, #160	; 0xa0
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80087c2:	6b63      	ldr	r3, [r4, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80087c4:	a902      	add	r1, sp, #8
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80087c6:	4313      	orrs	r3, r2
 80087c8:	6363      	str	r3, [r4, #52]	; 0x34
 80087ca:	6b63      	ldr	r3, [r4, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80087cc:	05c0      	lsls	r0, r0, #23
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80087ce:	4013      	ands	r3, r2
 80087d0:	9300      	str	r3, [sp, #0]
 80087d2:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 80087d4:	23c0      	movs	r3, #192	; 0xc0
 80087d6:	00db      	lsls	r3, r3, #3
 80087d8:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80087da:	2312      	movs	r3, #18
 80087dc:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80087de:	2300      	movs	r3, #0
 80087e0:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80087e2:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF6_I2C1;
 80087e4:	3306      	adds	r3, #6
 80087e6:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80087e8:	f000 fb5a 	bl	8008ea0 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 80087ec:	2280      	movs	r2, #128	; 0x80
 80087ee:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80087f0:	0392      	lsls	r2, r2, #14
 80087f2:	4313      	orrs	r3, r2
 80087f4:	63e3      	str	r3, [r4, #60]	; 0x3c
 80087f6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80087f8:	4013      	ands	r3, r2
 80087fa:	9301      	str	r3, [sp, #4]
 80087fc:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 80087fe:	b00e      	add	sp, #56	; 0x38
 8008800:	bd10      	pop	{r4, pc}
 8008802:	46c0      	nop			; (mov r8, r8)
 8008804:	40005400 	.word	0x40005400
 8008808:	40021000 	.word	0x40021000

0800880c <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 800880c:	b530      	push	{r4, r5, lr}
 800880e:	0005      	movs	r5, r0
 8008810:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8008812:	2214      	movs	r2, #20
 8008814:	2100      	movs	r1, #0
 8008816:	a803      	add	r0, sp, #12
 8008818:	f003 fec7 	bl	800c5aa <memset>
  if(hspi->Instance==SPI1)
 800881c:	4b29      	ldr	r3, [pc, #164]	; (80088c4 <HAL_SPI_MspInit+0xb8>)
 800881e:	682a      	ldr	r2, [r5, #0]
 8008820:	429a      	cmp	r2, r3
 8008822:	d14d      	bne.n	80088c0 <HAL_SPI_MspInit+0xb4>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8008824:	2180      	movs	r1, #128	; 0x80
 8008826:	4b28      	ldr	r3, [pc, #160]	; (80088c8 <HAL_SPI_MspInit+0xbc>)
 8008828:	0149      	lsls	r1, r1, #5
 800882a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_6|GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800882c:	20a0      	movs	r0, #160	; 0xa0
    __HAL_RCC_SPI1_CLK_ENABLE();
 800882e:	430a      	orrs	r2, r1
 8008830:	641a      	str	r2, [r3, #64]	; 0x40
 8008832:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8008834:	05c0      	lsls	r0, r0, #23
    __HAL_RCC_SPI1_CLK_ENABLE();
 8008836:	400a      	ands	r2, r1
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8008838:	2101      	movs	r1, #1
    __HAL_RCC_SPI1_CLK_ENABLE();
 800883a:	9201      	str	r2, [sp, #4]
 800883c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800883e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008840:	430a      	orrs	r2, r1
 8008842:	635a      	str	r2, [r3, #52]	; 0x34
 8008844:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008846:	400b      	ands	r3, r1
 8008848:	9302      	str	r3, [sp, #8]
 800884a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_6|GPIO_PIN_7;
 800884c:	23c2      	movs	r3, #194	; 0xc2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800884e:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_6|GPIO_PIN_7;
 8008850:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8008852:	3bc0      	subs	r3, #192	; 0xc0
 8008854:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8008856:	f000 fb23 	bl	8008ea0 <HAL_GPIO_Init>

    /* SPI1 DMA Init */
    /* SPI1_RX Init */
    hdma_spi1_rx.Instance = DMA1_Channel1;
 800885a:	4c1c      	ldr	r4, [pc, #112]	; (80088cc <HAL_SPI_MspInit+0xc0>)
 800885c:	4b1c      	ldr	r3, [pc, #112]	; (80088d0 <HAL_SPI_MspInit+0xc4>)
    hdma_spi1_rx.Init.Request = DMA_REQUEST_SPI1_RX;
    hdma_spi1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
    hdma_spi1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
    hdma_spi1_rx.Init.MemInc = DMA_MINC_ENABLE;
 800885e:	2280      	movs	r2, #128	; 0x80
    hdma_spi1_rx.Instance = DMA1_Channel1;
 8008860:	6023      	str	r3, [r4, #0]
    hdma_spi1_rx.Init.Request = DMA_REQUEST_SPI1_RX;
 8008862:	2310      	movs	r3, #16
 8008864:	6063      	str	r3, [r4, #4]
    hdma_spi1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8008866:	2300      	movs	r3, #0
 8008868:	60a3      	str	r3, [r4, #8]
    hdma_spi1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 800886a:	60e3      	str	r3, [r4, #12]
    hdma_spi1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 800886c:	6163      	str	r3, [r4, #20]
    hdma_spi1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 800886e:	61a3      	str	r3, [r4, #24]
    hdma_spi1_rx.Init.Mode = DMA_NORMAL;
 8008870:	61e3      	str	r3, [r4, #28]
    hdma_spi1_rx.Init.Priority = DMA_PRIORITY_HIGH;
 8008872:	2380      	movs	r3, #128	; 0x80
    if (HAL_DMA_Init(&hdma_spi1_rx) != HAL_OK)
 8008874:	0020      	movs	r0, r4
    hdma_spi1_rx.Init.Priority = DMA_PRIORITY_HIGH;
 8008876:	019b      	lsls	r3, r3, #6
    hdma_spi1_rx.Init.MemInc = DMA_MINC_ENABLE;
 8008878:	6122      	str	r2, [r4, #16]
    hdma_spi1_rx.Init.Priority = DMA_PRIORITY_HIGH;
 800887a:	6223      	str	r3, [r4, #32]
    if (HAL_DMA_Init(&hdma_spi1_rx) != HAL_OK)
 800887c:	f000 fa60 	bl	8008d40 <HAL_DMA_Init>
 8008880:	2800      	cmp	r0, #0
 8008882:	d001      	beq.n	8008888 <HAL_SPI_MspInit+0x7c>
    {
      Error_Handler();
 8008884:	f7ff fe48 	bl	8008518 <Error_Handler>
    }

    __HAL_LINKDMA(hspi,hdmarx,hdma_spi1_rx);

    /* SPI1_TX Init */
    hdma_spi1_tx.Instance = DMA1_Channel2;
 8008888:	4b12      	ldr	r3, [pc, #72]	; (80088d4 <HAL_SPI_MspInit+0xc8>)
    __HAL_LINKDMA(hspi,hdmarx,hdma_spi1_rx);
 800888a:	65ac      	str	r4, [r5, #88]	; 0x58
 800888c:	62a5      	str	r5, [r4, #40]	; 0x28
    hdma_spi1_tx.Instance = DMA1_Channel2;
 800888e:	4c12      	ldr	r4, [pc, #72]	; (80088d8 <HAL_SPI_MspInit+0xcc>)
    hdma_spi1_tx.Init.Request = DMA_REQUEST_SPI1_TX;
    hdma_spi1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
    hdma_spi1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
    hdma_spi1_tx.Init.MemInc = DMA_MINC_ENABLE;
 8008890:	2280      	movs	r2, #128	; 0x80
    hdma_spi1_tx.Instance = DMA1_Channel2;
 8008892:	6023      	str	r3, [r4, #0]
    hdma_spi1_tx.Init.Request = DMA_REQUEST_SPI1_TX;
 8008894:	2311      	movs	r3, #17
 8008896:	6063      	str	r3, [r4, #4]
    hdma_spi1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8008898:	3b01      	subs	r3, #1
 800889a:	60a3      	str	r3, [r4, #8]
    hdma_spi1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 800889c:	2300      	movs	r3, #0
 800889e:	60e3      	str	r3, [r4, #12]
    hdma_spi1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80088a0:	6163      	str	r3, [r4, #20]
    hdma_spi1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80088a2:	61a3      	str	r3, [r4, #24]
    hdma_spi1_tx.Init.Mode = DMA_NORMAL;
 80088a4:	61e3      	str	r3, [r4, #28]
    hdma_spi1_tx.Init.Priority = DMA_PRIORITY_HIGH;
 80088a6:	2380      	movs	r3, #128	; 0x80
    if (HAL_DMA_Init(&hdma_spi1_tx) != HAL_OK)
 80088a8:	0020      	movs	r0, r4
    hdma_spi1_tx.Init.Priority = DMA_PRIORITY_HIGH;
 80088aa:	019b      	lsls	r3, r3, #6
    hdma_spi1_tx.Init.MemInc = DMA_MINC_ENABLE;
 80088ac:	6122      	str	r2, [r4, #16]
    hdma_spi1_tx.Init.Priority = DMA_PRIORITY_HIGH;
 80088ae:	6223      	str	r3, [r4, #32]
    if (HAL_DMA_Init(&hdma_spi1_tx) != HAL_OK)
 80088b0:	f000 fa46 	bl	8008d40 <HAL_DMA_Init>
 80088b4:	2800      	cmp	r0, #0
 80088b6:	d001      	beq.n	80088bc <HAL_SPI_MspInit+0xb0>
    {
      Error_Handler();
 80088b8:	f7ff fe2e 	bl	8008518 <Error_Handler>
    }

    __HAL_LINKDMA(hspi,hdmatx,hdma_spi1_tx);
 80088bc:	656c      	str	r4, [r5, #84]	; 0x54
 80088be:	62a5      	str	r5, [r4, #40]	; 0x28
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }

}
 80088c0:	b009      	add	sp, #36	; 0x24
 80088c2:	bd30      	pop	{r4, r5, pc}
 80088c4:	40013000 	.word	0x40013000
 80088c8:	40021000 	.word	0x40021000
 80088cc:	200002a8 	.word	0x200002a8
 80088d0:	40020008 	.word	0x40020008
 80088d4:	4002001c 	.word	0x4002001c
 80088d8:	20000304 	.word	0x20000304

080088dc <HAL_TIM_PWM_MspInit>:
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
  if(htim_pwm->Instance==TIM1)
 80088dc:	4b08      	ldr	r3, [pc, #32]	; (8008900 <HAL_TIM_PWM_MspInit+0x24>)
 80088de:	6802      	ldr	r2, [r0, #0]
{
 80088e0:	b082      	sub	sp, #8
  if(htim_pwm->Instance==TIM1)
 80088e2:	429a      	cmp	r2, r3
 80088e4:	d109      	bne.n	80088fa <HAL_TIM_PWM_MspInit+0x1e>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 80088e6:	2180      	movs	r1, #128	; 0x80
 80088e8:	4b06      	ldr	r3, [pc, #24]	; (8008904 <HAL_TIM_PWM_MspInit+0x28>)
 80088ea:	0109      	lsls	r1, r1, #4
 80088ec:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80088ee:	430a      	orrs	r2, r1
 80088f0:	641a      	str	r2, [r3, #64]	; 0x40
 80088f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80088f4:	400b      	ands	r3, r1
 80088f6:	9301      	str	r3, [sp, #4]
 80088f8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }

}
 80088fa:	b002      	add	sp, #8
 80088fc:	4770      	bx	lr
 80088fe:	46c0      	nop			; (mov r8, r8)
 8008900:	40012c00 	.word	0x40012c00
 8008904:	40021000 	.word	0x40021000

08008908 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM3)
 8008908:	4b07      	ldr	r3, [pc, #28]	; (8008928 <HAL_TIM_Base_MspInit+0x20>)
 800890a:	6802      	ldr	r2, [r0, #0]
{
 800890c:	b082      	sub	sp, #8
  if(htim_base->Instance==TIM3)
 800890e:	429a      	cmp	r2, r3
 8008910:	d108      	bne.n	8008924 <HAL_TIM_Base_MspInit+0x1c>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 8008912:	2102      	movs	r1, #2
 8008914:	4b05      	ldr	r3, [pc, #20]	; (800892c <HAL_TIM_Base_MspInit+0x24>)
 8008916:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8008918:	430a      	orrs	r2, r1
 800891a:	63da      	str	r2, [r3, #60]	; 0x3c
 800891c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800891e:	400b      	ands	r3, r1
 8008920:	9301      	str	r3, [sp, #4]
 8008922:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8008924:	b002      	add	sp, #8
 8008926:	4770      	bx	lr
 8008928:	40000400 	.word	0x40000400
 800892c:	40021000 	.word	0x40021000

08008930 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8008930:	b510      	push	{r4, lr}
 8008932:	0004      	movs	r4, r0
 8008934:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8008936:	2214      	movs	r2, #20
 8008938:	2100      	movs	r1, #0
 800893a:	a801      	add	r0, sp, #4
 800893c:	f003 fe35 	bl	800c5aa <memset>
  if(htim->Instance==TIM1)
 8008940:	4b0c      	ldr	r3, [pc, #48]	; (8008974 <HAL_TIM_MspPostInit+0x44>)
 8008942:	6822      	ldr	r2, [r4, #0]
 8008944:	429a      	cmp	r2, r3
 8008946:	d113      	bne.n	8008970 <HAL_TIM_MspPostInit+0x40>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8008948:	2101      	movs	r1, #1
 800894a:	4b0b      	ldr	r3, [pc, #44]	; (8008978 <HAL_TIM_MspPostInit+0x48>)
    GPIO_InitStruct.Pin = GPIO_PIN_8;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800894c:	20a0      	movs	r0, #160	; 0xa0
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800894e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8008950:	05c0      	lsls	r0, r0, #23
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8008952:	430a      	orrs	r2, r1
 8008954:	635a      	str	r2, [r3, #52]	; 0x34
 8008956:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008958:	400b      	ands	r3, r1
 800895a:	9300      	str	r3, [sp, #0]
 800895c:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800895e:	2380      	movs	r3, #128	; 0x80
 8008960:	005b      	lsls	r3, r3, #1
 8008962:	9301      	str	r3, [sp, #4]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8008964:	a901      	add	r1, sp, #4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8008966:	3bfe      	subs	r3, #254	; 0xfe
 8008968:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM1;
 800896a:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800896c:	f000 fa98 	bl	8008ea0 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM1_MspPostInit 1 */

  /* USER CODE END TIM1_MspPostInit 1 */
  }

}
 8008970:	b006      	add	sp, #24
 8008972:	bd10      	pop	{r4, pc}
 8008974:	40012c00 	.word	0x40012c00
 8008978:	40021000 	.word	0x40021000

0800897c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 800897c:	b530      	push	{r4, r5, lr}
 800897e:	0004      	movs	r4, r0
 8008980:	b093      	sub	sp, #76	; 0x4c
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8008982:	2214      	movs	r2, #20
 8008984:	2100      	movs	r1, #0
 8008986:	a806      	add	r0, sp, #24
 8008988:	f003 fe0f 	bl	800c5aa <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 800898c:	221c      	movs	r2, #28
 800898e:	2100      	movs	r1, #0
 8008990:	a80b      	add	r0, sp, #44	; 0x2c
 8008992:	f003 fe0a 	bl	800c5aa <memset>
  if(huart->Instance==USART2)
 8008996:	6823      	ldr	r3, [r4, #0]
 8008998:	4a2d      	ldr	r2, [pc, #180]	; (8008a50 <HAL_UART_MspInit+0xd4>)
 800899a:	4293      	cmp	r3, r2
 800899c:	d129      	bne.n	80089f2 <HAL_UART_MspInit+0x76>

  /* USER CODE END USART2_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 800899e:	2302      	movs	r3, #2
    PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80089a0:	a80b      	add	r0, sp, #44	; 0x2c
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 80089a2:	930b      	str	r3, [sp, #44]	; 0x2c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80089a4:	f000 ff28 	bl	80097f8 <HAL_RCCEx_PeriphCLKConfig>
 80089a8:	2800      	cmp	r0, #0
 80089aa:	d001      	beq.n	80089b0 <HAL_UART_MspInit+0x34>
    {
      Error_Handler();
 80089ac:	f7ff fdb4 	bl	8008518 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 80089b0:	2180      	movs	r1, #128	; 0x80
 80089b2:	4b28      	ldr	r3, [pc, #160]	; (8008a54 <HAL_UART_MspInit+0xd8>)
 80089b4:	0289      	lsls	r1, r1, #10
 80089b6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80089b8:	430a      	orrs	r2, r1
 80089ba:	63da      	str	r2, [r3, #60]	; 0x3c
 80089bc:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80089be:	400a      	ands	r2, r1
 80089c0:	9201      	str	r2, [sp, #4]
 80089c2:	9a01      	ldr	r2, [sp, #4]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80089c4:	2201      	movs	r2, #1
 80089c6:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80089c8:	4311      	orrs	r1, r2
 80089ca:	6359      	str	r1, [r3, #52]	; 0x34
 80089cc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 80089ce:	920a      	str	r2, [sp, #40]	; 0x28
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80089d0:	4013      	ands	r3, r2
 80089d2:	9302      	str	r3, [sp, #8]
 80089d4:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 80089d6:	230c      	movs	r3, #12
 80089d8:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80089da:	3b0a      	subs	r3, #10
 80089dc:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80089de:	2300      	movs	r3, #0
 80089e0:	9308      	str	r3, [sp, #32]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80089e2:	9309      	str	r3, [sp, #36]	; 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF4_USART3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80089e4:	20a0      	movs	r0, #160	; 0xa0
 80089e6:	a906      	add	r1, sp, #24
 80089e8:	05c0      	lsls	r0, r0, #23
 80089ea:	f000 fa59 	bl	8008ea0 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
 80089ee:	b013      	add	sp, #76	; 0x4c
 80089f0:	bd30      	pop	{r4, r5, pc}
  else if(huart->Instance==USART3)
 80089f2:	4a19      	ldr	r2, [pc, #100]	; (8008a58 <HAL_UART_MspInit+0xdc>)
 80089f4:	4293      	cmp	r3, r2
 80089f6:	d1fa      	bne.n	80089ee <HAL_UART_MspInit+0x72>
    __HAL_RCC_USART3_CLK_ENABLE();
 80089f8:	2180      	movs	r1, #128	; 0x80
 80089fa:	4b16      	ldr	r3, [pc, #88]	; (8008a54 <HAL_UART_MspInit+0xd8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80089fc:	2404      	movs	r4, #4
    __HAL_RCC_USART3_CLK_ENABLE();
 80089fe:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8008a00:	02c9      	lsls	r1, r1, #11
 8008a02:	430a      	orrs	r2, r1
 8008a04:	63da      	str	r2, [r3, #60]	; 0x3c
 8008a06:	6bda      	ldr	r2, [r3, #60]	; 0x3c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8008a08:	2502      	movs	r5, #2
    __HAL_RCC_USART3_CLK_ENABLE();
 8008a0a:	400a      	ands	r2, r1
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8008a0c:	2101      	movs	r1, #1
    __HAL_RCC_USART3_CLK_ENABLE();
 8008a0e:	9203      	str	r2, [sp, #12]
 8008a10:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8008a12:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8008a14:	4811      	ldr	r0, [pc, #68]	; (8008a5c <HAL_UART_MspInit+0xe0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8008a16:	4322      	orrs	r2, r4
 8008a18:	635a      	str	r2, [r3, #52]	; 0x34
 8008a1a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008a1c:	4022      	ands	r2, r4
 8008a1e:	9204      	str	r2, [sp, #16]
 8008a20:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8008a22:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008a24:	430a      	orrs	r2, r1
 8008a26:	635a      	str	r2, [r3, #52]	; 0x34
 8008a28:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8008a2a:	9507      	str	r5, [sp, #28]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8008a2c:	400b      	ands	r3, r1
 8008a2e:	9305      	str	r3, [sp, #20]
 8008a30:	9b05      	ldr	r3, [sp, #20]
    GPIO_InitStruct.Pin = GPIO_PIN_11;
 8008a32:	2380      	movs	r3, #128	; 0x80
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8008a34:	a906      	add	r1, sp, #24
    GPIO_InitStruct.Pin = GPIO_PIN_11;
 8008a36:	011b      	lsls	r3, r3, #4
 8008a38:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8008a3a:	f000 fa31 	bl	8008ea0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 8008a3e:	2320      	movs	r3, #32
 8008a40:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8008a42:	2300      	movs	r3, #0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8008a44:	9507      	str	r5, [sp, #28]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8008a46:	9308      	str	r3, [sp, #32]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8008a48:	9309      	str	r3, [sp, #36]	; 0x24
    GPIO_InitStruct.Alternate = GPIO_AF4_USART3;
 8008a4a:	940a      	str	r4, [sp, #40]	; 0x28
 8008a4c:	e7ca      	b.n	80089e4 <HAL_UART_MspInit+0x68>
 8008a4e:	46c0      	nop			; (mov r8, r8)
 8008a50:	40004400 	.word	0x40004400
 8008a54:	40021000 	.word	0x40021000
 8008a58:	40004800 	.word	0x40004800
 8008a5c:	50000800 	.word	0x50000800

08008a60 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8008a60:	e7fe      	b.n	8008a60 <NMI_Handler>

08008a62 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8008a62:	e7fe      	b.n	8008a62 <HardFault_Handler>

08008a64 <SVC_Handler>:

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8008a64:	4770      	bx	lr

08008a66 <PendSV_Handler>:
 8008a66:	4770      	bx	lr

08008a68 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8008a68:	b510      	push	{r4, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8008a6a:	f000 f8cf 	bl	8008c0c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8008a6e:	bd10      	pop	{r4, pc}

08008a70 <DMA1_Channel1_IRQHandler>:

/**
  * @brief This function handles DMA1 channel 1 interrupt.
  */
void DMA1_Channel1_IRQHandler(void)
{
 8008a70:	b510      	push	{r4, lr}
  /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */

  /* USER CODE END DMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi1_rx);
 8008a72:	4802      	ldr	r0, [pc, #8]	; (8008a7c <DMA1_Channel1_IRQHandler+0xc>)
 8008a74:	f000 f9c0 	bl	8008df8 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */

  /* USER CODE END DMA1_Channel1_IRQn 1 */
}
 8008a78:	bd10      	pop	{r4, pc}
 8008a7a:	46c0      	nop			; (mov r8, r8)
 8008a7c:	200002a8 	.word	0x200002a8

08008a80 <DMA1_Channel2_3_IRQHandler>:

/**
  * @brief This function handles DMA1 channel 2 and channel 3 interrupts.
  */
void DMA1_Channel2_3_IRQHandler(void)
{
 8008a80:	b510      	push	{r4, lr}
  /* USER CODE BEGIN DMA1_Channel2_3_IRQn 0 */

  /* USER CODE END DMA1_Channel2_3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi1_tx);
 8008a82:	4802      	ldr	r0, [pc, #8]	; (8008a8c <DMA1_Channel2_3_IRQHandler+0xc>)
 8008a84:	f000 f9b8 	bl	8008df8 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel2_3_IRQn 1 */

  /* USER CODE END DMA1_Channel2_3_IRQn 1 */
}
 8008a88:	bd10      	pop	{r4, pc}
 8008a8a:	46c0      	nop			; (mov r8, r8)
 8008a8c:	20000304 	.word	0x20000304

08008a90 <_getpid>:
}

int _getpid(void)
{
  return 1;
}
 8008a90:	2001      	movs	r0, #1
 8008a92:	4770      	bx	lr

08008a94 <_kill>:

int _kill(int pid, int sig)
{
 8008a94:	b510      	push	{r4, lr}
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8008a96:	f003 fe4b 	bl	800c730 <__errno>
 8008a9a:	2316      	movs	r3, #22
 8008a9c:	6003      	str	r3, [r0, #0]
  return -1;
 8008a9e:	2001      	movs	r0, #1
}
 8008aa0:	4240      	negs	r0, r0
 8008aa2:	bd10      	pop	{r4, pc}

08008aa4 <_exit>:

void _exit (int status)
{
 8008aa4:	b510      	push	{r4, lr}
  errno = EINVAL;
 8008aa6:	f003 fe43 	bl	800c730 <__errno>
 8008aaa:	2316      	movs	r3, #22
 8008aac:	6003      	str	r3, [r0, #0]
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
 8008aae:	e7fe      	b.n	8008aae <_exit+0xa>

08008ab0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8008ab0:	b570      	push	{r4, r5, r6, lr}
 8008ab2:	000e      	movs	r6, r1
 8008ab4:	0014      	movs	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8008ab6:	2500      	movs	r5, #0
 8008ab8:	42a5      	cmp	r5, r4
 8008aba:	db01      	blt.n	8008ac0 <_read+0x10>
  {
    *ptr++ = __io_getchar();
  }

  return len;
}
 8008abc:	0020      	movs	r0, r4
 8008abe:	bd70      	pop	{r4, r5, r6, pc}
    *ptr++ = __io_getchar();
 8008ac0:	e000      	b.n	8008ac4 <_read+0x14>
 8008ac2:	bf00      	nop
 8008ac4:	5570      	strb	r0, [r6, r5]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8008ac6:	3501      	adds	r5, #1
 8008ac8:	e7f6      	b.n	8008ab8 <_read+0x8>

08008aca <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8008aca:	b570      	push	{r4, r5, r6, lr}
 8008acc:	000e      	movs	r6, r1
 8008ace:	0014      	movs	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8008ad0:	2500      	movs	r5, #0
 8008ad2:	42a5      	cmp	r5, r4
 8008ad4:	db01      	blt.n	8008ada <_write+0x10>
  {
    __io_putchar(*ptr++);
  }
  return len;
}
 8008ad6:	0020      	movs	r0, r4
 8008ad8:	bd70      	pop	{r4, r5, r6, pc}
    __io_putchar(*ptr++);
 8008ada:	5d70      	ldrb	r0, [r6, r5]
 8008adc:	e000      	b.n	8008ae0 <_write+0x16>
 8008ade:	bf00      	nop
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8008ae0:	3501      	adds	r5, #1
 8008ae2:	e7f6      	b.n	8008ad2 <_write+0x8>

08008ae4 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
 8008ae4:	2001      	movs	r0, #1
}
 8008ae6:	4240      	negs	r0, r0
 8008ae8:	4770      	bx	lr

08008aea <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 8008aea:	2380      	movs	r3, #128	; 0x80
 8008aec:	019b      	lsls	r3, r3, #6
  return 0;
}
 8008aee:	2000      	movs	r0, #0
  st->st_mode = S_IFCHR;
 8008af0:	604b      	str	r3, [r1, #4]
}
 8008af2:	4770      	bx	lr

08008af4 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8008af4:	2001      	movs	r0, #1
 8008af6:	4770      	bx	lr

08008af8 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8008af8:	2000      	movs	r0, #0
 8008afa:	4770      	bx	lr

08008afc <_sbrk>:
void *_sbrk(ptrdiff_t incr)
{
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8008afc:	490b      	ldr	r1, [pc, #44]	; (8008b2c <_sbrk+0x30>)
 8008afe:	4a0c      	ldr	r2, [pc, #48]	; (8008b30 <_sbrk+0x34>)
{
 8008b00:	0003      	movs	r3, r0
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8008b02:	1a52      	subs	r2, r2, r1
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8008b04:	490b      	ldr	r1, [pc, #44]	; (8008b34 <_sbrk+0x38>)
{
 8008b06:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 8008b08:	6808      	ldr	r0, [r1, #0]
 8008b0a:	2800      	cmp	r0, #0
 8008b0c:	d101      	bne.n	8008b12 <_sbrk+0x16>
  {
    __sbrk_heap_end = &_end;
 8008b0e:	480a      	ldr	r0, [pc, #40]	; (8008b38 <_sbrk+0x3c>)
 8008b10:	6008      	str	r0, [r1, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8008b12:	6808      	ldr	r0, [r1, #0]
 8008b14:	18c3      	adds	r3, r0, r3
 8008b16:	4293      	cmp	r3, r2
 8008b18:	d906      	bls.n	8008b28 <_sbrk+0x2c>
  {
    errno = ENOMEM;
 8008b1a:	f003 fe09 	bl	800c730 <__errno>
 8008b1e:	230c      	movs	r3, #12
 8008b20:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8008b22:	2001      	movs	r0, #1
 8008b24:	4240      	negs	r0, r0

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 8008b26:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 8008b28:	600b      	str	r3, [r1, #0]
  return (void *)prev_heap_end;
 8008b2a:	e7fc      	b.n	8008b26 <_sbrk+0x2a>
 8008b2c:	00000400 	.word	0x00000400
 8008b30:	20009000 	.word	0x20009000
 8008b34:	200005d8 	.word	0x200005d8
 8008b38:	20000760 	.word	0x20000760

08008b3c <SystemInit>:
{
  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8008b3c:	4770      	bx	lr
	...

08008b40 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8008b40:	480d      	ldr	r0, [pc, #52]	; (8008b78 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8008b42:	4685      	mov	sp, r0

/* Call the clock system initialization function.*/
  bl  SystemInit
 8008b44:	f7ff fffa 	bl	8008b3c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8008b48:	480c      	ldr	r0, [pc, #48]	; (8008b7c <LoopForever+0x6>)
  ldr r1, =_edata
 8008b4a:	490d      	ldr	r1, [pc, #52]	; (8008b80 <LoopForever+0xa>)
  ldr r2, =_sidata
 8008b4c:	4a0d      	ldr	r2, [pc, #52]	; (8008b84 <LoopForever+0xe>)
  movs r3, #0
 8008b4e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8008b50:	e002      	b.n	8008b58 <LoopCopyDataInit>

08008b52 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8008b52:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8008b54:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8008b56:	3304      	adds	r3, #4

08008b58 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8008b58:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8008b5a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8008b5c:	d3f9      	bcc.n	8008b52 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8008b5e:	4a0a      	ldr	r2, [pc, #40]	; (8008b88 <LoopForever+0x12>)
  ldr r4, =_ebss
 8008b60:	4c0a      	ldr	r4, [pc, #40]	; (8008b8c <LoopForever+0x16>)
  movs r3, #0
 8008b62:	2300      	movs	r3, #0
  b LoopFillZerobss
 8008b64:	e001      	b.n	8008b6a <LoopFillZerobss>

08008b66 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8008b66:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8008b68:	3204      	adds	r2, #4

08008b6a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8008b6a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8008b6c:	d3fb      	bcc.n	8008b66 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8008b6e:	f003 fde5 	bl	800c73c <__libc_init_array>
/* Call the application s entry point.*/
  bl main
 8008b72:	f7ff fb39 	bl	80081e8 <main>

08008b76 <LoopForever>:

LoopForever:
  b LoopForever
 8008b76:	e7fe      	b.n	8008b76 <LoopForever>
  ldr   r0, =_estack
 8008b78:	20009000 	.word	0x20009000
  ldr r0, =_sdata
 8008b7c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8008b80:	20000070 	.word	0x20000070
  ldr r2, =_sidata
 8008b84:	080107fc 	.word	0x080107fc
  ldr r2, =_sbss
 8008b88:	20000070 	.word	0x20000070
  ldr r4, =_ebss
 8008b8c:	20000760 	.word	0x20000760

08008b90 <ADC1_IRQHandler>:
 * @retval None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8008b90:	e7fe      	b.n	8008b90 <ADC1_IRQHandler>
	...

08008b94 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8008b94:	b570      	push	{r4, r5, r6, lr}
  HAL_StatusTypeDef  status = HAL_OK;

  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that doesn't take the value zero)*/ 
  if ((uint32_t)uwTickFreq != 0U)
 8008b96:	4b10      	ldr	r3, [pc, #64]	; (8008bd8 <HAL_InitTick+0x44>)
{
 8008b98:	0005      	movs	r5, r0
  if ((uint32_t)uwTickFreq != 0U)
 8008b9a:	7819      	ldrb	r1, [r3, #0]
 8008b9c:	2900      	cmp	r1, #0
 8008b9e:	d101      	bne.n	8008ba4 <HAL_InitTick+0x10>
      status = HAL_ERROR;
    }
  }
  else
  {
    status = HAL_ERROR;
 8008ba0:	2001      	movs	r0, #1
  }

  /* Return function status */
  return status;
}
 8008ba2:	bd70      	pop	{r4, r5, r6, pc}
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000U /(uint32_t)uwTickFreq)) == 0U)
 8008ba4:	20fa      	movs	r0, #250	; 0xfa
 8008ba6:	0080      	lsls	r0, r0, #2
 8008ba8:	f7fd ff34 	bl	8006a14 <__udivsi3>
 8008bac:	4c0b      	ldr	r4, [pc, #44]	; (8008bdc <HAL_InitTick+0x48>)
 8008bae:	0001      	movs	r1, r0
 8008bb0:	6820      	ldr	r0, [r4, #0]
 8008bb2:	f7fd ff2f 	bl	8006a14 <__udivsi3>
 8008bb6:	f000 f88f 	bl	8008cd8 <HAL_SYSTICK_Config>
 8008bba:	1e04      	subs	r4, r0, #0
 8008bbc:	d1f0      	bne.n	8008ba0 <HAL_InitTick+0xc>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8008bbe:	2d03      	cmp	r5, #3
 8008bc0:	d8ee      	bhi.n	8008ba0 <HAL_InitTick+0xc>
        HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8008bc2:	0002      	movs	r2, r0
 8008bc4:	2001      	movs	r0, #1
 8008bc6:	0029      	movs	r1, r5
 8008bc8:	4240      	negs	r0, r0
 8008bca:	f000 f84f 	bl	8008c6c <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8008bce:	4b04      	ldr	r3, [pc, #16]	; (8008be0 <HAL_InitTick+0x4c>)
 8008bd0:	0020      	movs	r0, r4
 8008bd2:	601d      	str	r5, [r3, #0]
  return status;
 8008bd4:	e7e5      	b.n	8008ba2 <HAL_InitTick+0xe>
 8008bd6:	46c0      	nop			; (mov r8, r8)
 8008bd8:	20000004 	.word	0x20000004
 8008bdc:	20000000 	.word	0x20000000
 8008be0:	20000008 	.word	0x20000008

08008be4 <HAL_Init>:
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8008be4:	2380      	movs	r3, #128	; 0x80
 8008be6:	4a08      	ldr	r2, [pc, #32]	; (8008c08 <HAL_Init+0x24>)
 8008be8:	005b      	lsls	r3, r3, #1
 8008bea:	6811      	ldr	r1, [r2, #0]
{
 8008bec:	b510      	push	{r4, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8008bee:	430b      	orrs	r3, r1
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8008bf0:	2003      	movs	r0, #3
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8008bf2:	6013      	str	r3, [r2, #0]
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8008bf4:	f7ff ffce 	bl	8008b94 <HAL_InitTick>
 8008bf8:	1e04      	subs	r4, r0, #0
 8008bfa:	d103      	bne.n	8008c04 <HAL_Init+0x20>
  HAL_MspInit();
 8008bfc:	f7ff fdaa 	bl	8008754 <HAL_MspInit>
}
 8008c00:	0020      	movs	r0, r4
 8008c02:	bd10      	pop	{r4, pc}
    status = HAL_ERROR;
 8008c04:	2401      	movs	r4, #1
 8008c06:	e7fb      	b.n	8008c00 <HAL_Init+0x1c>
 8008c08:	40022000 	.word	0x40022000

08008c0c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 8008c0c:	4a03      	ldr	r2, [pc, #12]	; (8008c1c <HAL_IncTick+0x10>)
 8008c0e:	4b04      	ldr	r3, [pc, #16]	; (8008c20 <HAL_IncTick+0x14>)
 8008c10:	6811      	ldr	r1, [r2, #0]
 8008c12:	781b      	ldrb	r3, [r3, #0]
 8008c14:	185b      	adds	r3, r3, r1
 8008c16:	6013      	str	r3, [r2, #0]
}
 8008c18:	4770      	bx	lr
 8008c1a:	46c0      	nop			; (mov r8, r8)
 8008c1c:	200005dc 	.word	0x200005dc
 8008c20:	20000004 	.word	0x20000004

08008c24 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8008c24:	4b01      	ldr	r3, [pc, #4]	; (8008c2c <HAL_GetTick+0x8>)
 8008c26:	6818      	ldr	r0, [r3, #0]
}
 8008c28:	4770      	bx	lr
 8008c2a:	46c0      	nop			; (mov r8, r8)
 8008c2c:	200005dc 	.word	0x200005dc

08008c30 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8008c30:	b570      	push	{r4, r5, r6, lr}
 8008c32:	0004      	movs	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8008c34:	f7ff fff6 	bl	8008c24 <HAL_GetTick>
 8008c38:	0005      	movs	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8008c3a:	1c63      	adds	r3, r4, #1
 8008c3c:	d002      	beq.n	8008c44 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8008c3e:	4b04      	ldr	r3, [pc, #16]	; (8008c50 <HAL_Delay+0x20>)
 8008c40:	781b      	ldrb	r3, [r3, #0]
 8008c42:	18e4      	adds	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8008c44:	f7ff ffee 	bl	8008c24 <HAL_GetTick>
 8008c48:	1b40      	subs	r0, r0, r5
 8008c4a:	42a0      	cmp	r0, r4
 8008c4c:	d3fa      	bcc.n	8008c44 <HAL_Delay+0x14>
  {
  }
}
 8008c4e:	bd70      	pop	{r4, r5, r6, pc}
 8008c50:	20000004 	.word	0x20000004

08008c54 <HAL_SYSCFG_StrobeDBattpinsConfig>:
void HAL_SYSCFG_StrobeDBattpinsConfig(uint32_t ConfigDeadBattery)
{
  assert_param(IS_SYSCFG_DBATT_CONFIG(ConfigDeadBattery));

  /* Change strobe configuration of GPIO depending on UCPDx dead battery settings */
  MODIFY_REG(SYSCFG->CFGR1, (SYSCFG_CFGR1_UCPD1_STROBE | SYSCFG_CFGR1_UCPD2_STROBE), ConfigDeadBattery);
 8008c54:	4a03      	ldr	r2, [pc, #12]	; (8008c64 <HAL_SYSCFG_StrobeDBattpinsConfig+0x10>)
 8008c56:	4904      	ldr	r1, [pc, #16]	; (8008c68 <HAL_SYSCFG_StrobeDBattpinsConfig+0x14>)
 8008c58:	6813      	ldr	r3, [r2, #0]
 8008c5a:	400b      	ands	r3, r1
 8008c5c:	4303      	orrs	r3, r0
 8008c5e:	6013      	str	r3, [r2, #0]
}
 8008c60:	4770      	bx	lr
 8008c62:	46c0      	nop			; (mov r8, r8)
 8008c64:	40010000 	.word	0x40010000
 8008c68:	fffff9ff 	.word	0xfffff9ff

08008c6c <HAL_NVIC_SetPriority>:
  *         with stm32g0xx devices, this parameter is a dummy value and it is ignored, because
  *         no subpriority supported in Cortex M0+ based products.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8008c6c:	b530      	push	{r4, r5, lr}
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8008c6e:	25ff      	movs	r5, #255	; 0xff
 8008c70:	2403      	movs	r4, #3
 8008c72:	002a      	movs	r2, r5
 8008c74:	4004      	ands	r4, r0
 8008c76:	00e4      	lsls	r4, r4, #3
 8008c78:	40a2      	lsls	r2, r4
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8008c7a:	0189      	lsls	r1, r1, #6
 8008c7c:	4029      	ands	r1, r5
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8008c7e:	43d2      	mvns	r2, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8008c80:	40a1      	lsls	r1, r4
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8008c82:	b2c3      	uxtb	r3, r0
  if ((int32_t)(IRQn) >= 0)
 8008c84:	2800      	cmp	r0, #0
 8008c86:	db0a      	blt.n	8008c9e <HAL_NVIC_SetPriority+0x32>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8008c88:	24c0      	movs	r4, #192	; 0xc0
 8008c8a:	4b0b      	ldr	r3, [pc, #44]	; (8008cb8 <HAL_NVIC_SetPriority+0x4c>)
 8008c8c:	0880      	lsrs	r0, r0, #2
 8008c8e:	0080      	lsls	r0, r0, #2
 8008c90:	18c0      	adds	r0, r0, r3
 8008c92:	00a4      	lsls	r4, r4, #2
 8008c94:	5903      	ldr	r3, [r0, r4]
 8008c96:	4013      	ands	r3, r2
 8008c98:	430b      	orrs	r3, r1
 8008c9a:	5103      	str	r3, [r0, r4]
  UNUSED(SubPriority);

  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn, PreemptPriority);
}
 8008c9c:	bd30      	pop	{r4, r5, pc}
  }
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8008c9e:	200f      	movs	r0, #15
 8008ca0:	4003      	ands	r3, r0
 8008ca2:	3b08      	subs	r3, #8
 8008ca4:	4805      	ldr	r0, [pc, #20]	; (8008cbc <HAL_NVIC_SetPriority+0x50>)
 8008ca6:	089b      	lsrs	r3, r3, #2
 8008ca8:	009b      	lsls	r3, r3, #2
 8008caa:	181b      	adds	r3, r3, r0
 8008cac:	69d8      	ldr	r0, [r3, #28]
 8008cae:	4002      	ands	r2, r0
 8008cb0:	430a      	orrs	r2, r1
 8008cb2:	61da      	str	r2, [r3, #28]
 8008cb4:	e7f2      	b.n	8008c9c <HAL_NVIC_SetPriority+0x30>
 8008cb6:	46c0      	nop			; (mov r8, r8)
 8008cb8:	e000e100 	.word	0xe000e100
 8008cbc:	e000ed00 	.word	0xe000ed00

08008cc0 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8008cc0:	2800      	cmp	r0, #0
 8008cc2:	db05      	blt.n	8008cd0 <HAL_NVIC_EnableIRQ+0x10>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8008cc4:	231f      	movs	r3, #31
 8008cc6:	4018      	ands	r0, r3
 8008cc8:	3b1e      	subs	r3, #30
 8008cca:	4083      	lsls	r3, r0
 8008ccc:	4a01      	ldr	r2, [pc, #4]	; (8008cd4 <HAL_NVIC_EnableIRQ+0x14>)
 8008cce:	6013      	str	r3, [r2, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8008cd0:	4770      	bx	lr
 8008cd2:	46c0      	nop			; (mov r8, r8)
 8008cd4:	e000e100 	.word	0xe000e100

08008cd8 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8008cd8:	2280      	movs	r2, #128	; 0x80
 8008cda:	1e43      	subs	r3, r0, #1
 8008cdc:	0452      	lsls	r2, r2, #17
  {
    return (1UL);                                                   /* Reload value impossible */
 8008cde:	2001      	movs	r0, #1
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8008ce0:	4293      	cmp	r3, r2
 8008ce2:	d20d      	bcs.n	8008d00 <HAL_SYSTICK_Config+0x28>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8008ce4:	21c0      	movs	r1, #192	; 0xc0
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8008ce6:	4a07      	ldr	r2, [pc, #28]	; (8008d04 <HAL_SYSTICK_Config+0x2c>)
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8008ce8:	4807      	ldr	r0, [pc, #28]	; (8008d08 <HAL_SYSTICK_Config+0x30>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8008cea:	6053      	str	r3, [r2, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8008cec:	6a03      	ldr	r3, [r0, #32]
 8008cee:	0609      	lsls	r1, r1, #24
 8008cf0:	021b      	lsls	r3, r3, #8
 8008cf2:	0a1b      	lsrs	r3, r3, #8
 8008cf4:	430b      	orrs	r3, r1
 8008cf6:	6203      	str	r3, [r0, #32]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8008cf8:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8008cfa:	2307      	movs	r3, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8008cfc:	6090      	str	r0, [r2, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8008cfe:	6013      	str	r3, [r2, #0]
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
  return SysTick_Config(TicksNumb);
}
 8008d00:	4770      	bx	lr
 8008d02:	46c0      	nop			; (mov r8, r8)
 8008d04:	e000e010 	.word	0xe000e010
 8008d08:	e000ed00 	.word	0xe000ed00

08008d0c <DMA_CalcDMAMUXChannelBaseAndMask>:
  * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
  *             the configuration information for the specified DMA Channel.
  * @retval None
  */
static void DMA_CalcDMAMUXChannelBaseAndMask(DMA_HandleTypeDef *hdma)
{
 8008d0c:	b510      	push	{r4, lr}
 8008d0e:	0004      	movs	r4, r0
    /* Prepare channel_number used for DMAmuxChannelStatusMask computation */
    channel_number = (((((uint32_t)hdma->Instance & 0xFFU) - 8U) / 20U) + 7U);
  }
#else
  /* Associate a DMA Channel to a DMAMUX channel */
  hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)(uint32_t)((uint32_t)DMAMUX1_Channel0 + ((hdma->ChannelIndex >> 2U) * ((uint32_t)DMAMUX1_Channel1 - (uint32_t)DMAMUX1_Channel0)));
 8008d10:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008d12:	4a09      	ldr	r2, [pc, #36]	; (8008d38 <DMA_CalcDMAMUXChannelBaseAndMask+0x2c>)
 8008d14:	089b      	lsrs	r3, r3, #2
 8008d16:	189b      	adds	r3, r3, r2
 8008d18:	009b      	lsls	r3, r3, #2
 8008d1a:	6443      	str	r3, [r0, #68]	; 0x44

  /* Prepare channel_number used for DMAmuxChannelStatusMask computation */
  channel_number = (((uint32_t)hdma->Instance & 0xFFU) - 8U) / 20U;
 8008d1c:	6800      	ldr	r0, [r0, #0]
 8008d1e:	2114      	movs	r1, #20
 8008d20:	b2c0      	uxtb	r0, r0
 8008d22:	3808      	subs	r0, #8
 8008d24:	f7fd fe76 	bl	8006a14 <__udivsi3>
#endif /* DMA2 */

  /* Initialize the field DMAmuxChannelStatus to DMAMUX1_ChannelStatus base */
  hdma->DMAmuxChannelStatus = DMAMUX1_ChannelStatus;
 8008d28:	4b04      	ldr	r3, [pc, #16]	; (8008d3c <DMA_CalcDMAMUXChannelBaseAndMask+0x30>)
 8008d2a:	64a3      	str	r3, [r4, #72]	; 0x48

  /* Initialize the field DMAmuxChannelStatusMask with the corresponding index of the DMAMUX channel selected for the current ChannelIndex */
  hdma->DMAmuxChannelStatusMask = 1UL << (channel_number & 0x1FU);
 8008d2c:	231f      	movs	r3, #31
 8008d2e:	4018      	ands	r0, r3
 8008d30:	3b1e      	subs	r3, #30
 8008d32:	4083      	lsls	r3, r0
 8008d34:	64e3      	str	r3, [r4, #76]	; 0x4c
}
 8008d36:	bd10      	pop	{r4, pc}
 8008d38:	10008200 	.word	0x10008200
 8008d3c:	40020880 	.word	0x40020880

08008d40 <HAL_DMA_Init>:
{
 8008d40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008d42:	0004      	movs	r4, r0
    return HAL_ERROR;
 8008d44:	2001      	movs	r0, #1
  if (hdma == NULL)
 8008d46:	2c00      	cmp	r4, #0
 8008d48:	d048      	beq.n	8008ddc <HAL_DMA_Init+0x9c>
  hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2U;
 8008d4a:	6825      	ldr	r5, [r4, #0]
 8008d4c:	4b26      	ldr	r3, [pc, #152]	; (8008de8 <HAL_DMA_Init+0xa8>)
 8008d4e:	2114      	movs	r1, #20
 8008d50:	18e8      	adds	r0, r5, r3
 8008d52:	f7fd fe5f 	bl	8006a14 <__udivsi3>
  hdma->State = HAL_DMA_STATE_BUSY;
 8008d56:	2302      	movs	r3, #2
  hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2U;
 8008d58:	0080      	lsls	r0, r0, #2
  hdma->State = HAL_DMA_STATE_BUSY;
 8008d5a:	1da6      	adds	r6, r4, #6
  hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2U;
 8008d5c:	6420      	str	r0, [r4, #64]	; 0x40
  hdma->State = HAL_DMA_STATE_BUSY;
 8008d5e:	77f3      	strb	r3, [r6, #31]
  CLEAR_BIT(hdma->Instance->CCR, (DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
 8008d60:	682b      	ldr	r3, [r5, #0]
 8008d62:	4a22      	ldr	r2, [pc, #136]	; (8008dec <HAL_DMA_Init+0xac>)
  SET_BIT(hdma->Instance->CCR, (hdma->Init.Direction           |                               \
 8008d64:	68a7      	ldr	r7, [r4, #8]
  CLEAR_BIT(hdma->Instance->CCR, (DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
 8008d66:	4013      	ands	r3, r2
 8008d68:	602b      	str	r3, [r5, #0]
  SET_BIT(hdma->Instance->CCR, (hdma->Init.Direction           |                               \
 8008d6a:	68e3      	ldr	r3, [r4, #12]
 8008d6c:	6921      	ldr	r1, [r4, #16]
 8008d6e:	433b      	orrs	r3, r7
 8008d70:	430b      	orrs	r3, r1
 8008d72:	6961      	ldr	r1, [r4, #20]
 8008d74:	682a      	ldr	r2, [r5, #0]
 8008d76:	430b      	orrs	r3, r1
 8008d78:	69a1      	ldr	r1, [r4, #24]
  DMA_CalcDMAMUXChannelBaseAndMask(hdma);
 8008d7a:	0020      	movs	r0, r4
  SET_BIT(hdma->Instance->CCR, (hdma->Init.Direction           |                               \
 8008d7c:	430b      	orrs	r3, r1
 8008d7e:	69e1      	ldr	r1, [r4, #28]
 8008d80:	430b      	orrs	r3, r1
 8008d82:	6a21      	ldr	r1, [r4, #32]
 8008d84:	430b      	orrs	r3, r1
 8008d86:	4313      	orrs	r3, r2
 8008d88:	602b      	str	r3, [r5, #0]
  DMA_CalcDMAMUXChannelBaseAndMask(hdma);
 8008d8a:	f7ff ffbf 	bl	8008d0c <DMA_CalcDMAMUXChannelBaseAndMask>
  if (hdma->Init.Direction == DMA_MEMORY_TO_MEMORY)
 8008d8e:	2380      	movs	r3, #128	; 0x80
 8008d90:	01db      	lsls	r3, r3, #7
 8008d92:	429f      	cmp	r7, r3
 8008d94:	d101      	bne.n	8008d9a <HAL_DMA_Init+0x5a>
    hdma->Init.Request = DMA_REQUEST_MEM2MEM;
 8008d96:	2300      	movs	r3, #0
 8008d98:	6063      	str	r3, [r4, #4]
  hdma->DMAmuxChannel->CCR = (hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID);
 8008d9a:	233f      	movs	r3, #63	; 0x3f
 8008d9c:	6862      	ldr	r2, [r4, #4]
 8008d9e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8008da0:	4013      	ands	r3, r2
 8008da2:	600b      	str	r3, [r1, #0]
  hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 8008da4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8008da6:	6ca1      	ldr	r1, [r4, #72]	; 0x48
  if (((hdma->Init.Request >  0UL) && (hdma->Init.Request <= DMA_REQUEST_GENERATOR3)))
 8008da8:	3a01      	subs	r2, #1
  hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 8008daa:	6048      	str	r0, [r1, #4]
  if (((hdma->Init.Request >  0UL) && (hdma->Init.Request <= DMA_REQUEST_GENERATOR3)))
 8008dac:	2a03      	cmp	r2, #3
 8008dae:	d816      	bhi.n	8008dde <HAL_DMA_Init+0x9e>
static void DMA_CalcDMAMUXRequestGenBaseAndMask(DMA_HandleTypeDef *hdma)
{
  uint32_t request =  hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID;

  /* DMA Channels are connected to DMAMUX1 request generator blocks*/
  hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_RequestGenerator0) + ((request - 1U) * 4U)));
 8008db0:	4a0f      	ldr	r2, [pc, #60]	; (8008df0 <HAL_DMA_Init+0xb0>)

  hdma->DMAmuxRequestGenStatus = DMAMUX1_RequestGenStatus;
 8008db2:	4810      	ldr	r0, [pc, #64]	; (8008df4 <HAL_DMA_Init+0xb4>)
  hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_RequestGenerator0) + ((request - 1U) * 4U)));
 8008db4:	1899      	adds	r1, r3, r2

  /* here "Request" is either DMA_REQUEST_GENERATOR0 to DMA_REQUEST_GENERATOR3, i.e. <= 4*/
  hdma->DMAmuxRequestGenStatusMask = 1UL << ((request - 1U) & 0x3U);
 8008db6:	2203      	movs	r2, #3
 8008db8:	3b01      	subs	r3, #1
 8008dba:	4013      	ands	r3, r2
 8008dbc:	3a02      	subs	r2, #2
 8008dbe:	409a      	lsls	r2, r3
 8008dc0:	65a2      	str	r2, [r4, #88]	; 0x58
 8008dc2:	0013      	movs	r3, r2
    hdma->DMAmuxRequestGen->RGCR = 0U;
 8008dc4:	2200      	movs	r2, #0
  hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_RequestGenerator0) + ((request - 1U) * 4U)));
 8008dc6:	0089      	lsls	r1, r1, #2
 8008dc8:	6521      	str	r1, [r4, #80]	; 0x50
  hdma->DMAmuxRequestGenStatus = DMAMUX1_RequestGenStatus;
 8008dca:	6560      	str	r0, [r4, #84]	; 0x54
    hdma->DMAmuxRequestGen->RGCR = 0U;
 8008dcc:	600a      	str	r2, [r1, #0]
    hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 8008dce:	6043      	str	r3, [r0, #4]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8008dd0:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8008dd2:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8008dd4:	63e0      	str	r0, [r4, #60]	; 0x3c
  __HAL_UNLOCK(hdma);
 8008dd6:	3405      	adds	r4, #5
  hdma->State = HAL_DMA_STATE_READY;
 8008dd8:	77f3      	strb	r3, [r6, #31]
  __HAL_UNLOCK(hdma);
 8008dda:	77e0      	strb	r0, [r4, #31]
}
 8008ddc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    hdma->DMAmuxRequestGen = 0U;
 8008dde:	2300      	movs	r3, #0
 8008de0:	6523      	str	r3, [r4, #80]	; 0x50
    hdma->DMAmuxRequestGenStatus = 0U;
 8008de2:	6563      	str	r3, [r4, #84]	; 0x54
    hdma->DMAmuxRequestGenStatusMask = 0U;
 8008de4:	65a3      	str	r3, [r4, #88]	; 0x58
 8008de6:	e7f3      	b.n	8008dd0 <HAL_DMA_Init+0x90>
 8008de8:	bffdfff8 	.word	0xbffdfff8
 8008dec:	ffff800f 	.word	0xffff800f
 8008df0:	1000823f 	.word	0x1000823f
 8008df4:	40020940 	.word	0x40020940

08008df8 <HAL_DMA_IRQHandler>:
{
 8008df8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((flag_it & (DMA_FLAG_HT1 << (hdma->ChannelIndex & 0x1CU))) != 0U) && ((source_it & DMA_IT_HT) != 0U))
 8008dfa:	241c      	movs	r4, #28
 8008dfc:	2704      	movs	r7, #4
 8008dfe:	6c01      	ldr	r1, [r0, #64]	; 0x40
  uint32_t flag_it = DMA1->ISR;
 8008e00:	4a26      	ldr	r2, [pc, #152]	; (8008e9c <HAL_DMA_IRQHandler+0xa4>)
  if (((flag_it & (DMA_FLAG_HT1 << (hdma->ChannelIndex & 0x1CU))) != 0U) && ((source_it & DMA_IT_HT) != 0U))
 8008e02:	4021      	ands	r1, r4
 8008e04:	003c      	movs	r4, r7
 8008e06:	408c      	lsls	r4, r1
  uint32_t flag_it = DMA1->ISR;
 8008e08:	6816      	ldr	r6, [r2, #0]
  uint32_t source_it = hdma->Instance->CCR;
 8008e0a:	6803      	ldr	r3, [r0, #0]
 8008e0c:	681d      	ldr	r5, [r3, #0]
  if (((flag_it & (DMA_FLAG_HT1 << (hdma->ChannelIndex & 0x1CU))) != 0U) && ((source_it & DMA_IT_HT) != 0U))
 8008e0e:	4226      	tst	r6, r4
 8008e10:	d00f      	beq.n	8008e32 <HAL_DMA_IRQHandler+0x3a>
 8008e12:	423d      	tst	r5, r7
 8008e14:	d00d      	beq.n	8008e32 <HAL_DMA_IRQHandler+0x3a>
      if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 8008e16:	6819      	ldr	r1, [r3, #0]
 8008e18:	0689      	lsls	r1, r1, #26
 8008e1a:	d402      	bmi.n	8008e22 <HAL_DMA_IRQHandler+0x2a>
        __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
 8008e1c:	6819      	ldr	r1, [r3, #0]
 8008e1e:	43b9      	bics	r1, r7
 8008e20:	6019      	str	r1, [r3, #0]
      __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_HT1 << (hdma->ChannelIndex & 0x1CU)));
 8008e22:	6853      	ldr	r3, [r2, #4]
 8008e24:	431c      	orrs	r4, r3
      if (hdma->XferHalfCpltCallback != NULL)
 8008e26:	6b03      	ldr	r3, [r0, #48]	; 0x30
      __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_HT1 << (hdma->ChannelIndex & 0x1CU)));
 8008e28:	6054      	str	r4, [r2, #4]
      if (hdma->XferHalfCpltCallback != NULL)
 8008e2a:	2b00      	cmp	r3, #0
 8008e2c:	d01b      	beq.n	8008e66 <HAL_DMA_IRQHandler+0x6e>
      hdma->XferErrorCallback(hdma);
 8008e2e:	4798      	blx	r3
  return;
 8008e30:	e019      	b.n	8008e66 <HAL_DMA_IRQHandler+0x6e>
  else if ((0U != (flag_it & (DMA_FLAG_TC1 << (hdma->ChannelIndex & 0x1CU)))) && (0U != (source_it & DMA_IT_TC)))
 8008e32:	2702      	movs	r7, #2
 8008e34:	003c      	movs	r4, r7
 8008e36:	408c      	lsls	r4, r1
 8008e38:	4226      	tst	r6, r4
 8008e3a:	d015      	beq.n	8008e68 <HAL_DMA_IRQHandler+0x70>
 8008e3c:	423d      	tst	r5, r7
 8008e3e:	d013      	beq.n	8008e68 <HAL_DMA_IRQHandler+0x70>
      if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 8008e40:	6819      	ldr	r1, [r3, #0]
 8008e42:	0689      	lsls	r1, r1, #26
 8008e44:	d406      	bmi.n	8008e54 <HAL_DMA_IRQHandler+0x5c>
        __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TE | DMA_IT_TC);
 8008e46:	250a      	movs	r5, #10
 8008e48:	6819      	ldr	r1, [r3, #0]
 8008e4a:	43a9      	bics	r1, r5
 8008e4c:	6019      	str	r1, [r3, #0]
        hdma->State = HAL_DMA_STATE_READY;
 8008e4e:	2101      	movs	r1, #1
 8008e50:	1d83      	adds	r3, r0, #6
 8008e52:	77d9      	strb	r1, [r3, #31]
      __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC1 << (hdma->ChannelIndex & 0x1CU)));
 8008e54:	6853      	ldr	r3, [r2, #4]
 8008e56:	431c      	orrs	r4, r3
 8008e58:	6054      	str	r4, [r2, #4]
      __HAL_UNLOCK(hdma);
 8008e5a:	2200      	movs	r2, #0
 8008e5c:	1d43      	adds	r3, r0, #5
 8008e5e:	77da      	strb	r2, [r3, #31]
      if (hdma->XferCpltCallback != NULL)
 8008e60:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    if (hdma->XferErrorCallback != NULL)
 8008e62:	4293      	cmp	r3, r2
 8008e64:	d1e3      	bne.n	8008e2e <HAL_DMA_IRQHandler+0x36>
}
 8008e66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  else if (((flag_it & (DMA_FLAG_TE1 << (hdma->ChannelIndex & 0x1CU))) != 0U) && ((source_it & DMA_IT_TE) != 0U))
 8008e68:	2408      	movs	r4, #8
 8008e6a:	0027      	movs	r7, r4
 8008e6c:	408f      	lsls	r7, r1
 8008e6e:	423e      	tst	r6, r7
 8008e70:	d0f9      	beq.n	8008e66 <HAL_DMA_IRQHandler+0x6e>
 8008e72:	4225      	tst	r5, r4
 8008e74:	d0f7      	beq.n	8008e66 <HAL_DMA_IRQHandler+0x6e>
    __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 8008e76:	250e      	movs	r5, #14
 8008e78:	681c      	ldr	r4, [r3, #0]
 8008e7a:	43ac      	bics	r4, r5
 8008e7c:	601c      	str	r4, [r3, #0]
    __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_GI1 << (hdma->ChannelIndex & 0x1CU)));
 8008e7e:	2301      	movs	r3, #1
 8008e80:	001d      	movs	r5, r3
 8008e82:	408d      	lsls	r5, r1
 8008e84:	0029      	movs	r1, r5
 8008e86:	6854      	ldr	r4, [r2, #4]
 8008e88:	4321      	orrs	r1, r4
 8008e8a:	6051      	str	r1, [r2, #4]
    hdma->State = HAL_DMA_STATE_READY;
 8008e8c:	1d82      	adds	r2, r0, #6
    hdma->ErrorCode = HAL_DMA_ERROR_TE;
 8008e8e:	63c3      	str	r3, [r0, #60]	; 0x3c
    hdma->State = HAL_DMA_STATE_READY;
 8008e90:	77d3      	strb	r3, [r2, #31]
    __HAL_UNLOCK(hdma);
 8008e92:	2200      	movs	r2, #0
 8008e94:	1d43      	adds	r3, r0, #5
 8008e96:	77da      	strb	r2, [r3, #31]
    if (hdma->XferErrorCallback != NULL)
 8008e98:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8008e9a:	e7e2      	b.n	8008e62 <HAL_DMA_IRQHandler+0x6a>
 8008e9c:	40020000 	.word	0x40020000

08008ea0 <HAL_GPIO_Init>:
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
  uint32_t position = 0x00u;
 8008ea0:	2300      	movs	r3, #0
{
 8008ea2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008ea4:	b085      	sub	sp, #20
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8008ea6:	680a      	ldr	r2, [r1, #0]
 8008ea8:	0014      	movs	r4, r2
 8008eaa:	40dc      	lsrs	r4, r3
 8008eac:	d101      	bne.n	8008eb2 <HAL_GPIO_Init+0x12>
      }
    }

    position++;
  }
}
 8008eae:	b005      	add	sp, #20
 8008eb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8008eb2:	2501      	movs	r5, #1
 8008eb4:	0014      	movs	r4, r2
 8008eb6:	409d      	lsls	r5, r3
 8008eb8:	402c      	ands	r4, r5
 8008eba:	9400      	str	r4, [sp, #0]
    if (iocurrent != 0x00u)
 8008ebc:	422a      	tst	r2, r5
 8008ebe:	d100      	bne.n	8008ec2 <HAL_GPIO_Init+0x22>
 8008ec0:	e091      	b.n	8008fe6 <HAL_GPIO_Init+0x146>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8008ec2:	684a      	ldr	r2, [r1, #4]
 8008ec4:	005f      	lsls	r7, r3, #1
 8008ec6:	4694      	mov	ip, r2
 8008ec8:	2203      	movs	r2, #3
 8008eca:	4664      	mov	r4, ip
 8008ecc:	4022      	ands	r2, r4
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 8008ece:	2403      	movs	r4, #3
 8008ed0:	40bc      	lsls	r4, r7
 8008ed2:	43e4      	mvns	r4, r4
 8008ed4:	9401      	str	r4, [sp, #4]
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8008ed6:	1e54      	subs	r4, r2, #1
 8008ed8:	2c01      	cmp	r4, #1
 8008eda:	d82e      	bhi.n	8008f3a <HAL_GPIO_Init+0x9a>
        temp = GPIOx->OSPEEDR;
 8008edc:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 8008ede:	9c01      	ldr	r4, [sp, #4]
 8008ee0:	4026      	ands	r6, r4
        temp |= (GPIO_Init->Speed << (position * 2u));
 8008ee2:	68cc      	ldr	r4, [r1, #12]
 8008ee4:	40bc      	lsls	r4, r7
 8008ee6:	4334      	orrs	r4, r6
        GPIOx->OSPEEDR = temp;
 8008ee8:	6084      	str	r4, [r0, #8]
        temp = GPIOx->OTYPER;
 8008eea:	6844      	ldr	r4, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8008eec:	2601      	movs	r6, #1
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 8008eee:	43ac      	bics	r4, r5
 8008ef0:	0025      	movs	r5, r4
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8008ef2:	4664      	mov	r4, ip
 8008ef4:	0924      	lsrs	r4, r4, #4
 8008ef6:	4034      	ands	r4, r6
 8008ef8:	409c      	lsls	r4, r3
 8008efa:	432c      	orrs	r4, r5
        GPIOx->OTYPER = temp;
 8008efc:	6044      	str	r4, [r0, #4]
        temp = GPIOx->PUPDR;
 8008efe:	68c5      	ldr	r5, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2u));
 8008f00:	9c01      	ldr	r4, [sp, #4]
 8008f02:	4025      	ands	r5, r4
        temp |= ((GPIO_Init->Pull) << (position * 2u));
 8008f04:	688c      	ldr	r4, [r1, #8]
 8008f06:	40bc      	lsls	r4, r7
 8008f08:	432c      	orrs	r4, r5
        GPIOx->PUPDR = temp;
 8008f0a:	60c4      	str	r4, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8008f0c:	2a02      	cmp	r2, #2
 8008f0e:	d116      	bne.n	8008f3e <HAL_GPIO_Init+0x9e>
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8008f10:	2507      	movs	r5, #7
 8008f12:	260f      	movs	r6, #15
 8008f14:	401d      	ands	r5, r3
 8008f16:	00ad      	lsls	r5, r5, #2
 8008f18:	40ae      	lsls	r6, r5
        temp = GPIOx->AFR[position >> 3u];
 8008f1a:	08dc      	lsrs	r4, r3, #3
 8008f1c:	00a4      	lsls	r4, r4, #2
 8008f1e:	1904      	adds	r4, r0, r4
 8008f20:	9402      	str	r4, [sp, #8]
 8008f22:	6a24      	ldr	r4, [r4, #32]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8008f24:	9603      	str	r6, [sp, #12]
 8008f26:	0026      	movs	r6, r4
 8008f28:	9c03      	ldr	r4, [sp, #12]
 8008f2a:	43a6      	bics	r6, r4
 8008f2c:	0034      	movs	r4, r6
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8008f2e:	690e      	ldr	r6, [r1, #16]
 8008f30:	40ae      	lsls	r6, r5
 8008f32:	4326      	orrs	r6, r4
        GPIOx->AFR[position >> 3u] = temp;
 8008f34:	9c02      	ldr	r4, [sp, #8]
 8008f36:	6226      	str	r6, [r4, #32]
 8008f38:	e001      	b.n	8008f3e <HAL_GPIO_Init+0x9e>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8008f3a:	2a03      	cmp	r2, #3
 8008f3c:	d1df      	bne.n	8008efe <HAL_GPIO_Init+0x5e>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8008f3e:	40ba      	lsls	r2, r7
      temp = GPIOx->MODER;
 8008f40:	6804      	ldr	r4, [r0, #0]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
 8008f42:	9d01      	ldr	r5, [sp, #4]
 8008f44:	4025      	ands	r5, r4
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8008f46:	432a      	orrs	r2, r5
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8008f48:	24c0      	movs	r4, #192	; 0xc0
      GPIOx->MODER = temp;
 8008f4a:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8008f4c:	4662      	mov	r2, ip
 8008f4e:	02a4      	lsls	r4, r4, #10
 8008f50:	4222      	tst	r2, r4
 8008f52:	d048      	beq.n	8008fe6 <HAL_GPIO_Init+0x146>
        temp = EXTI->EXTICR[position >> 2u];
 8008f54:	4a25      	ldr	r2, [pc, #148]	; (8008fec <HAL_GPIO_Init+0x14c>)
        temp &= ~(0x0FuL << (8u * (position & 0x03u)));
 8008f56:	2503      	movs	r5, #3
        temp = EXTI->EXTICR[position >> 2u];
 8008f58:	089c      	lsrs	r4, r3, #2
 8008f5a:	00a4      	lsls	r4, r4, #2
 8008f5c:	18a4      	adds	r4, r4, r2
        temp &= ~(0x0FuL << (8u * (position & 0x03u)));
 8008f5e:	220f      	movs	r2, #15
 8008f60:	401d      	ands	r5, r3
 8008f62:	00ed      	lsls	r5, r5, #3
 8008f64:	40aa      	lsls	r2, r5
        temp |= (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u)));
 8008f66:	27a0      	movs	r7, #160	; 0xa0
        temp = EXTI->EXTICR[position >> 2u];
 8008f68:	6e26      	ldr	r6, [r4, #96]	; 0x60
        temp |= (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u)));
 8008f6a:	05ff      	lsls	r7, r7, #23
        temp &= ~(0x0FuL << (8u * (position & 0x03u)));
 8008f6c:	4396      	bics	r6, r2
        temp |= (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u)));
 8008f6e:	2200      	movs	r2, #0
 8008f70:	42b8      	cmp	r0, r7
 8008f72:	d00c      	beq.n	8008f8e <HAL_GPIO_Init+0xee>
 8008f74:	4f1e      	ldr	r7, [pc, #120]	; (8008ff0 <HAL_GPIO_Init+0x150>)
 8008f76:	3201      	adds	r2, #1
 8008f78:	42b8      	cmp	r0, r7
 8008f7a:	d008      	beq.n	8008f8e <HAL_GPIO_Init+0xee>
 8008f7c:	4f1d      	ldr	r7, [pc, #116]	; (8008ff4 <HAL_GPIO_Init+0x154>)
 8008f7e:	3201      	adds	r2, #1
 8008f80:	42b8      	cmp	r0, r7
 8008f82:	d004      	beq.n	8008f8e <HAL_GPIO_Init+0xee>
 8008f84:	4f1c      	ldr	r7, [pc, #112]	; (8008ff8 <HAL_GPIO_Init+0x158>)
 8008f86:	3201      	adds	r2, #1
 8008f88:	42b8      	cmp	r0, r7
 8008f8a:	d000      	beq.n	8008f8e <HAL_GPIO_Init+0xee>
 8008f8c:	3202      	adds	r2, #2
 8008f8e:	40aa      	lsls	r2, r5
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8008f90:	4667      	mov	r7, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u)));
 8008f92:	4332      	orrs	r2, r6
        EXTI->EXTICR[position >> 2u] = temp;
 8008f94:	6622      	str	r2, [r4, #96]	; 0x60
        temp = EXTI->RTSR1;
 8008f96:	4c15      	ldr	r4, [pc, #84]	; (8008fec <HAL_GPIO_Init+0x14c>)
        temp &= ~(iocurrent);
 8008f98:	9a00      	ldr	r2, [sp, #0]
        temp = EXTI->RTSR1;
 8008f9a:	6826      	ldr	r6, [r4, #0]
          temp |= iocurrent;
 8008f9c:	9d00      	ldr	r5, [sp, #0]
        temp &= ~(iocurrent);
 8008f9e:	43d2      	mvns	r2, r2
          temp |= iocurrent;
 8008fa0:	4335      	orrs	r5, r6
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8008fa2:	02ff      	lsls	r7, r7, #11
 8008fa4:	d401      	bmi.n	8008faa <HAL_GPIO_Init+0x10a>
        temp &= ~(iocurrent);
 8008fa6:	0035      	movs	r5, r6
 8008fa8:	4015      	ands	r5, r2
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8008faa:	4667      	mov	r7, ip
        EXTI->RTSR1 = temp;
 8008fac:	6025      	str	r5, [r4, #0]
        temp = EXTI->FTSR1;
 8008fae:	6866      	ldr	r6, [r4, #4]
          temp |= iocurrent;
 8008fb0:	9d00      	ldr	r5, [sp, #0]
 8008fb2:	4335      	orrs	r5, r6
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8008fb4:	02bf      	lsls	r7, r7, #10
 8008fb6:	d401      	bmi.n	8008fbc <HAL_GPIO_Init+0x11c>
        temp &= ~(iocurrent);
 8008fb8:	0035      	movs	r5, r6
 8008fba:	4015      	ands	r5, r2
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8008fbc:	4667      	mov	r7, ip
        EXTI->FTSR1 = temp;
 8008fbe:	6065      	str	r5, [r4, #4]
        temp = EXTI->EMR1;
 8008fc0:	4c0e      	ldr	r4, [pc, #56]	; (8008ffc <HAL_GPIO_Init+0x15c>)
          temp |= iocurrent;
 8008fc2:	9d00      	ldr	r5, [sp, #0]
        temp = EXTI->EMR1;
 8008fc4:	6fe6      	ldr	r6, [r4, #124]	; 0x7c
          temp |= iocurrent;
 8008fc6:	4335      	orrs	r5, r6
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8008fc8:	03bf      	lsls	r7, r7, #14
 8008fca:	d401      	bmi.n	8008fd0 <HAL_GPIO_Init+0x130>
        temp &= ~(iocurrent);
 8008fcc:	0035      	movs	r5, r6
 8008fce:	4015      	ands	r5, r2
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8008fd0:	4667      	mov	r7, ip
        EXTI->EMR1 = temp;
 8008fd2:	67e5      	str	r5, [r4, #124]	; 0x7c
        temp = EXTI->IMR1;
 8008fd4:	4c0a      	ldr	r4, [pc, #40]	; (8009000 <HAL_GPIO_Init+0x160>)
          temp |= iocurrent;
 8008fd6:	9e00      	ldr	r6, [sp, #0]
        temp = EXTI->IMR1;
 8008fd8:	6fe5      	ldr	r5, [r4, #124]	; 0x7c
          temp |= iocurrent;
 8008fda:	432e      	orrs	r6, r5
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8008fdc:	03ff      	lsls	r7, r7, #15
 8008fde:	d401      	bmi.n	8008fe4 <HAL_GPIO_Init+0x144>
        temp &= ~(iocurrent);
 8008fe0:	4015      	ands	r5, r2
 8008fe2:	002e      	movs	r6, r5
        EXTI->IMR1 = temp;
 8008fe4:	67e6      	str	r6, [r4, #124]	; 0x7c
    position++;
 8008fe6:	3301      	adds	r3, #1
 8008fe8:	e75d      	b.n	8008ea6 <HAL_GPIO_Init+0x6>
 8008fea:	46c0      	nop			; (mov r8, r8)
 8008fec:	40021800 	.word	0x40021800
 8008ff0:	50000400 	.word	0x50000400
 8008ff4:	50000800 	.word	0x50000800
 8008ff8:	50000c00 	.word	0x50000c00
 8008ffc:	40021808 	.word	0x40021808
 8009000:	40021804 	.word	0x40021804

08009004 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8009004:	2a00      	cmp	r2, #0
 8009006:	d001      	beq.n	800900c <HAL_GPIO_WritePin+0x8>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8009008:	6181      	str	r1, [r0, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 800900a:	4770      	bx	lr
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 800900c:	6281      	str	r1, [r0, #40]	; 0x28
}
 800900e:	e7fc      	b.n	800900a <HAL_GPIO_WritePin+0x6>

08009010 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8009010:	b570      	push	{r4, r5, r6, lr}
 8009012:	0004      	movs	r4, r0
  /* Check the I2C handle allocation */
  if (hi2c == NULL)
  {
    return HAL_ERROR;
 8009014:	2001      	movs	r0, #1
  if (hi2c == NULL)
 8009016:	2c00      	cmp	r4, #0
 8009018:	d04e      	beq.n	80090b8 <HAL_I2C_Init+0xa8>
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 800901a:	0025      	movs	r5, r4
 800901c:	3541      	adds	r5, #65	; 0x41
 800901e:	782b      	ldrb	r3, [r5, #0]
 8009020:	b2da      	uxtb	r2, r3
 8009022:	2b00      	cmp	r3, #0
 8009024:	d105      	bne.n	8009032 <HAL_I2C_Init+0x22>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 8009026:	0023      	movs	r3, r4
 8009028:	3340      	adds	r3, #64	; 0x40

    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    HAL_I2C_MspInit(hi2c);
 800902a:	0020      	movs	r0, r4
    hi2c->Lock = HAL_UNLOCKED;
 800902c:	701a      	strb	r2, [r3, #0]
    HAL_I2C_MspInit(hi2c);
 800902e:	f7ff fbab 	bl	8008788 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 8009032:	2324      	movs	r3, #36	; 0x24

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8009034:	2101      	movs	r1, #1
  hi2c->State = HAL_I2C_STATE_BUSY;
 8009036:	702b      	strb	r3, [r5, #0]
  __HAL_I2C_DISABLE(hi2c);
 8009038:	6823      	ldr	r3, [r4, #0]
  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Disable Own Address1 before set the Own Address1 configuration */
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;

  /* Configure I2Cx: Own Address1 and ack own address1 mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800903a:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
 800903c:	681a      	ldr	r2, [r3, #0]
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 800903e:	68a6      	ldr	r6, [r4, #8]
  __HAL_I2C_DISABLE(hi2c);
 8009040:	438a      	bics	r2, r1
 8009042:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8009044:	491d      	ldr	r1, [pc, #116]	; (80090bc <HAL_I2C_Init+0xac>)
 8009046:	6862      	ldr	r2, [r4, #4]
 8009048:	400a      	ands	r2, r1
 800904a:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 800904c:	689a      	ldr	r2, [r3, #8]
 800904e:	491c      	ldr	r1, [pc, #112]	; (80090c0 <HAL_I2C_Init+0xb0>)
 8009050:	400a      	ands	r2, r1
 8009052:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8009054:	2801      	cmp	r0, #1
 8009056:	d107      	bne.n	8009068 <HAL_I2C_Init+0x58>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8009058:	2280      	movs	r2, #128	; 0x80
 800905a:	0212      	lsls	r2, r2, #8
 800905c:	4332      	orrs	r2, r6
 800905e:	609a      	str	r2, [r3, #8]
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
  }
  else
  {
    /* Clear the I2C ADD10 bit */
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8009060:	685a      	ldr	r2, [r3, #4]
 8009062:	4818      	ldr	r0, [pc, #96]	; (80090c4 <HAL_I2C_Init+0xb4>)
 8009064:	4002      	ands	r2, r0
 8009066:	e009      	b.n	800907c <HAL_I2C_Init+0x6c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8009068:	2284      	movs	r2, #132	; 0x84
 800906a:	0212      	lsls	r2, r2, #8
 800906c:	4332      	orrs	r2, r6
 800906e:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8009070:	2802      	cmp	r0, #2
 8009072:	d1f5      	bne.n	8009060 <HAL_I2C_Init+0x50>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8009074:	2280      	movs	r2, #128	; 0x80
 8009076:	6858      	ldr	r0, [r3, #4]
 8009078:	0112      	lsls	r2, r2, #4
 800907a:	4302      	orrs	r2, r0
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 800907c:	605a      	str	r2, [r3, #4]
  }
  /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 800907e:	6858      	ldr	r0, [r3, #4]
 8009080:	4a11      	ldr	r2, [pc, #68]	; (80090c8 <HAL_I2C_Init+0xb8>)
 8009082:	4302      	orrs	r2, r0
 8009084:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Disable Own Address2 before set the Own Address2 configuration */
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8009086:	68da      	ldr	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009088:	2000      	movs	r0, #0
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 800908a:	400a      	ands	r2, r1
 800908c:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 800908e:	6961      	ldr	r1, [r4, #20]
 8009090:	6922      	ldr	r2, [r4, #16]
 8009092:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 8009094:	69a1      	ldr	r1, [r4, #24]
 8009096:	0209      	lsls	r1, r1, #8
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8009098:	430a      	orrs	r2, r1
 800909a:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 800909c:	6a21      	ldr	r1, [r4, #32]
 800909e:	69e2      	ldr	r2, [r4, #28]
 80090a0:	430a      	orrs	r2, r1
 80090a2:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 80090a4:	2201      	movs	r2, #1
 80090a6:	6819      	ldr	r1, [r3, #0]
 80090a8:	430a      	orrs	r2, r1
 80090aa:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 80090ac:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80090ae:	6460      	str	r0, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 80090b0:	702b      	strb	r3, [r5, #0]
  hi2c->PreviousState = I2C_STATE_NONE;
 80090b2:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80090b4:	3442      	adds	r4, #66	; 0x42
 80090b6:	7020      	strb	r0, [r4, #0]

  return HAL_OK;
}
 80090b8:	bd70      	pop	{r4, r5, r6, pc}
 80090ba:	46c0      	nop			; (mov r8, r8)
 80090bc:	f0ffffff 	.word	0xf0ffffff
 80090c0:	ffff7fff 	.word	0xffff7fff
 80090c4:	fffff7ff 	.word	0xfffff7ff
 80090c8:	02008000 	.word	0x02008000

080090cc <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80090cc:	b5f0      	push	{r4, r5, r6, r7, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80090ce:	0004      	movs	r4, r0
 80090d0:	3441      	adds	r4, #65	; 0x41
 80090d2:	7822      	ldrb	r2, [r4, #0]
{
 80090d4:	0003      	movs	r3, r0
 80090d6:	000f      	movs	r7, r1

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 80090d8:	2002      	movs	r0, #2
  if (hi2c->State == HAL_I2C_STATE_READY)
 80090da:	b2d6      	uxtb	r6, r2
 80090dc:	2a20      	cmp	r2, #32
 80090de:	d118      	bne.n	8009112 <HAL_I2CEx_ConfigAnalogFilter+0x46>
    __HAL_LOCK(hi2c);
 80090e0:	001d      	movs	r5, r3
 80090e2:	3540      	adds	r5, #64	; 0x40
 80090e4:	782a      	ldrb	r2, [r5, #0]
 80090e6:	2a01      	cmp	r2, #1
 80090e8:	d013      	beq.n	8009112 <HAL_I2CEx_ConfigAnalogFilter+0x46>
    hi2c->State = HAL_I2C_STATE_BUSY;
 80090ea:	2224      	movs	r2, #36	; 0x24
 80090ec:	7022      	strb	r2, [r4, #0]
    __HAL_I2C_DISABLE(hi2c);
 80090ee:	681b      	ldr	r3, [r3, #0]
 80090f0:	3a23      	subs	r2, #35	; 0x23
 80090f2:	6819      	ldr	r1, [r3, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 80090f4:	4807      	ldr	r0, [pc, #28]	; (8009114 <HAL_I2CEx_ConfigAnalogFilter+0x48>)
    __HAL_I2C_DISABLE(hi2c);
 80090f6:	4391      	bics	r1, r2
 80090f8:	6019      	str	r1, [r3, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 80090fa:	6819      	ldr	r1, [r3, #0]
 80090fc:	4001      	ands	r1, r0
    __HAL_UNLOCK(hi2c);
 80090fe:	2000      	movs	r0, #0
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8009100:	6019      	str	r1, [r3, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
 8009102:	6819      	ldr	r1, [r3, #0]
 8009104:	4339      	orrs	r1, r7
 8009106:	6019      	str	r1, [r3, #0]
    __HAL_I2C_ENABLE(hi2c);
 8009108:	6819      	ldr	r1, [r3, #0]
 800910a:	430a      	orrs	r2, r1
 800910c:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800910e:	7026      	strb	r6, [r4, #0]
    __HAL_UNLOCK(hi2c);
 8009110:	7028      	strb	r0, [r5, #0]
  }
}
 8009112:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009114:	ffffefff 	.word	0xffffefff

08009118 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8009118:	0002      	movs	r2, r0
{
 800911a:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 800911c:	3241      	adds	r2, #65	; 0x41
 800911e:	7814      	ldrb	r4, [r2, #0]
{
 8009120:	0003      	movs	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009122:	b2e5      	uxtb	r5, r4

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 8009124:	2002      	movs	r0, #2
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009126:	2c20      	cmp	r4, #32
 8009128:	d117      	bne.n	800915a <HAL_I2CEx_ConfigDigitalFilter+0x42>
    __HAL_LOCK(hi2c);
 800912a:	001c      	movs	r4, r3
 800912c:	3440      	adds	r4, #64	; 0x40
 800912e:	7826      	ldrb	r6, [r4, #0]
 8009130:	2e01      	cmp	r6, #1
 8009132:	d012      	beq.n	800915a <HAL_I2CEx_ConfigDigitalFilter+0x42>
    hi2c->State = HAL_I2C_STATE_BUSY;
 8009134:	3022      	adds	r0, #34	; 0x22
 8009136:	7010      	strb	r0, [r2, #0]
    __HAL_I2C_DISABLE(hi2c);
 8009138:	681b      	ldr	r3, [r3, #0]
 800913a:	3823      	subs	r0, #35	; 0x23
 800913c:	681e      	ldr	r6, [r3, #0]
    tmpreg &= ~(I2C_CR1_DNF);
 800913e:	4f07      	ldr	r7, [pc, #28]	; (800915c <HAL_I2CEx_ConfigDigitalFilter+0x44>)
    __HAL_I2C_DISABLE(hi2c);
 8009140:	4386      	bics	r6, r0
 8009142:	601e      	str	r6, [r3, #0]
    tmpreg = hi2c->Instance->CR1;
 8009144:	681e      	ldr	r6, [r3, #0]
    tmpreg |= DigitalFilter << 8U;
 8009146:	0209      	lsls	r1, r1, #8
    tmpreg &= ~(I2C_CR1_DNF);
 8009148:	403e      	ands	r6, r7
    tmpreg |= DigitalFilter << 8U;
 800914a:	4331      	orrs	r1, r6
    hi2c->Instance->CR1 = tmpreg;
 800914c:	6019      	str	r1, [r3, #0]
    __HAL_I2C_ENABLE(hi2c);
 800914e:	6819      	ldr	r1, [r3, #0]
 8009150:	4308      	orrs	r0, r1
 8009152:	6018      	str	r0, [r3, #0]
    __HAL_UNLOCK(hi2c);
 8009154:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8009156:	7015      	strb	r5, [r2, #0]
    __HAL_UNLOCK(hi2c);
 8009158:	7020      	strb	r0, [r4, #0]
  }
}
 800915a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800915c:	fffff0ff 	.word	0xfffff0ff

08009160 <HAL_PWREx_ControlVoltageScaling>:
  *        cleared before returning the status. If the flag is not cleared within
  *        6 microseconds, HAL_TIMEOUT status is reported.
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
{
 8009160:	b510      	push	{r4, lr}
  uint32_t wait_loop_index;

  assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));

  /* Modify voltage scaling range */
  MODIFY_REG(PWR->CR1, PWR_CR1_VOS, VoltageScaling);
 8009162:	4c11      	ldr	r4, [pc, #68]	; (80091a8 <HAL_PWREx_ControlVoltageScaling+0x48>)
 8009164:	4911      	ldr	r1, [pc, #68]	; (80091ac <HAL_PWREx_ControlVoltageScaling+0x4c>)
 8009166:	6823      	ldr	r3, [r4, #0]
{
 8009168:	0002      	movs	r2, r0
  MODIFY_REG(PWR->CR1, PWR_CR1_VOS, VoltageScaling);
 800916a:	400b      	ands	r3, r1
 800916c:	4303      	orrs	r3, r0
 800916e:	6023      	str	r3, [r4, #0]

  /* In case of Range 1 selected, we need to ensure that main regulator reaches new value */
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 8009170:	2380      	movs	r3, #128	; 0x80
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8009172:	2000      	movs	r0, #0
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 8009174:	009b      	lsls	r3, r3, #2
 8009176:	429a      	cmp	r2, r3
 8009178:	d10e      	bne.n	8009198 <HAL_PWREx_ControlVoltageScaling+0x38>
    wait_loop_index = ((PWR_VOSF_SETTING_DELAY_6_US * SystemCoreClock) / 1000000U) + 1U;
 800917a:	4b0d      	ldr	r3, [pc, #52]	; (80091b0 <HAL_PWREx_ControlVoltageScaling+0x50>)
 800917c:	490d      	ldr	r1, [pc, #52]	; (80091b4 <HAL_PWREx_ControlVoltageScaling+0x54>)
 800917e:	6818      	ldr	r0, [r3, #0]
 8009180:	2306      	movs	r3, #6
 8009182:	4358      	muls	r0, r3
 8009184:	f7fd fc46 	bl	8006a14 <__udivsi3>
    while (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 8009188:	2280      	movs	r2, #128	; 0x80
    wait_loop_index = ((PWR_VOSF_SETTING_DELAY_6_US * SystemCoreClock) / 1000000U) + 1U;
 800918a:	1c43      	adds	r3, r0, #1
    while (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 800918c:	00d2      	lsls	r2, r2, #3
 800918e:	6961      	ldr	r1, [r4, #20]
 8009190:	0008      	movs	r0, r1
 8009192:	4010      	ands	r0, r2
 8009194:	4211      	tst	r1, r2
 8009196:	d100      	bne.n	800919a <HAL_PWREx_ControlVoltageScaling+0x3a>
}
 8009198:	bd10      	pop	{r4, pc}
      if (wait_loop_index != 0U)
 800919a:	2b00      	cmp	r3, #0
 800919c:	d001      	beq.n	80091a2 <HAL_PWREx_ControlVoltageScaling+0x42>
        wait_loop_index--;
 800919e:	3b01      	subs	r3, #1
 80091a0:	e7f5      	b.n	800918e <HAL_PWREx_ControlVoltageScaling+0x2e>
        return HAL_TIMEOUT;
 80091a2:	2003      	movs	r0, #3
 80091a4:	e7f8      	b.n	8009198 <HAL_PWREx_ControlVoltageScaling+0x38>
 80091a6:	46c0      	nop			; (mov r8, r8)
 80091a8:	40007000 	.word	0x40007000
 80091ac:	fffff9ff 	.word	0xfffff9ff
 80091b0:	20000000 	.word	0x20000000
 80091b4:	000f4240 	.word	0x000f4240

080091b8 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to LSE Off
  *         first and then to LSE On or LSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80091b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80091ba:	0004      	movs	r4, r0
 80091bc:	b085      	sub	sp, #20
  uint32_t tickstart;
  uint32_t temp_sysclksrc;
  uint32_t temp_pllckcfg;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 80091be:	2800      	cmp	r0, #0
 80091c0:	d023      	beq.n	800920a <HAL_RCC_OscConfig+0x52>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80091c2:	6803      	ldr	r3, [r0, #0]
 80091c4:	07db      	lsls	r3, r3, #31
 80091c6:	d410      	bmi.n	80091ea <HAL_RCC_OscConfig+0x32>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80091c8:	6823      	ldr	r3, [r4, #0]
 80091ca:	079b      	lsls	r3, r3, #30
 80091cc:	d45e      	bmi.n	800928c <HAL_RCC_OscConfig+0xd4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80091ce:	6823      	ldr	r3, [r4, #0]
 80091d0:	071b      	lsls	r3, r3, #28
 80091d2:	d500      	bpl.n	80091d6 <HAL_RCC_OscConfig+0x1e>
 80091d4:	e0c2      	b.n	800935c <HAL_RCC_OscConfig+0x1a4>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80091d6:	6823      	ldr	r3, [r4, #0]
 80091d8:	075b      	lsls	r3, r3, #29
 80091da:	d500      	bpl.n	80091de <HAL_RCC_OscConfig+0x26>
 80091dc:	e0f3      	b.n	80093c6 <HAL_RCC_OscConfig+0x20e>
#endif /* RCC_HSI48_SUPPORT */
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));

  if (RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 80091de:	69e3      	ldr	r3, [r4, #28]
 80091e0:	2b00      	cmp	r3, #0
 80091e2:	d000      	beq.n	80091e6 <HAL_RCC_OscConfig+0x2e>
 80091e4:	e17a      	b.n	80094dc <HAL_RCC_OscConfig+0x324>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 80091e6:	2000      	movs	r0, #0
 80091e8:	e029      	b.n	800923e <HAL_RCC_OscConfig+0x86>
    temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 80091ea:	2238      	movs	r2, #56	; 0x38
 80091ec:	4daf      	ldr	r5, [pc, #700]	; (80094ac <HAL_RCC_OscConfig+0x2f4>)
 80091ee:	68ab      	ldr	r3, [r5, #8]
 80091f0:	4013      	ands	r3, r2
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 80091f2:	68ea      	ldr	r2, [r5, #12]
    if (((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckcfg == RCC_PLLSOURCE_HSE))
 80091f4:	2b10      	cmp	r3, #16
 80091f6:	d10a      	bne.n	800920e <HAL_RCC_OscConfig+0x56>
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 80091f8:	43d3      	mvns	r3, r2
    if (((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckcfg == RCC_PLLSOURCE_HSE))
 80091fa:	079b      	lsls	r3, r3, #30
 80091fc:	d109      	bne.n	8009212 <HAL_RCC_OscConfig+0x5a>
      if ((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80091fe:	682b      	ldr	r3, [r5, #0]
 8009200:	039b      	lsls	r3, r3, #14
 8009202:	d5e1      	bpl.n	80091c8 <HAL_RCC_OscConfig+0x10>
 8009204:	6863      	ldr	r3, [r4, #4]
 8009206:	2b00      	cmp	r3, #0
 8009208:	d1de      	bne.n	80091c8 <HAL_RCC_OscConfig+0x10>
          return HAL_ERROR;
 800920a:	2001      	movs	r0, #1
 800920c:	e017      	b.n	800923e <HAL_RCC_OscConfig+0x86>
        || (temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSE))
 800920e:	2b08      	cmp	r3, #8
 8009210:	d0f5      	beq.n	80091fe <HAL_RCC_OscConfig+0x46>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8009212:	2280      	movs	r2, #128	; 0x80
 8009214:	6863      	ldr	r3, [r4, #4]
 8009216:	0252      	lsls	r2, r2, #9
 8009218:	4293      	cmp	r3, r2
 800921a:	d112      	bne.n	8009242 <HAL_RCC_OscConfig+0x8a>
 800921c:	682a      	ldr	r2, [r5, #0]
 800921e:	4313      	orrs	r3, r2
 8009220:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8009222:	f7ff fcff 	bl	8008c24 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8009226:	2780      	movs	r7, #128	; 0x80
        tickstart = HAL_GetTick();
 8009228:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 800922a:	02bf      	lsls	r7, r7, #10
 800922c:	682b      	ldr	r3, [r5, #0]
 800922e:	423b      	tst	r3, r7
 8009230:	d1ca      	bne.n	80091c8 <HAL_RCC_OscConfig+0x10>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8009232:	f7ff fcf7 	bl	8008c24 <HAL_GetTick>
 8009236:	1b80      	subs	r0, r0, r6
 8009238:	2864      	cmp	r0, #100	; 0x64
 800923a:	d9f7      	bls.n	800922c <HAL_RCC_OscConfig+0x74>
            return HAL_TIMEOUT;
 800923c:	2003      	movs	r0, #3
}
 800923e:	b005      	add	sp, #20
 8009240:	bdf0      	pop	{r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8009242:	21a0      	movs	r1, #160	; 0xa0
 8009244:	02c9      	lsls	r1, r1, #11
 8009246:	428b      	cmp	r3, r1
 8009248:	d108      	bne.n	800925c <HAL_RCC_OscConfig+0xa4>
 800924a:	2380      	movs	r3, #128	; 0x80
 800924c:	6829      	ldr	r1, [r5, #0]
 800924e:	02db      	lsls	r3, r3, #11
 8009250:	430b      	orrs	r3, r1
 8009252:	602b      	str	r3, [r5, #0]
 8009254:	682b      	ldr	r3, [r5, #0]
 8009256:	431a      	orrs	r2, r3
 8009258:	602a      	str	r2, [r5, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 800925a:	e7e2      	b.n	8009222 <HAL_RCC_OscConfig+0x6a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800925c:	682a      	ldr	r2, [r5, #0]
 800925e:	4994      	ldr	r1, [pc, #592]	; (80094b0 <HAL_RCC_OscConfig+0x2f8>)
 8009260:	400a      	ands	r2, r1
 8009262:	602a      	str	r2, [r5, #0]
 8009264:	682a      	ldr	r2, [r5, #0]
 8009266:	4993      	ldr	r1, [pc, #588]	; (80094b4 <HAL_RCC_OscConfig+0x2fc>)
 8009268:	400a      	ands	r2, r1
 800926a:	602a      	str	r2, [r5, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 800926c:	2b00      	cmp	r3, #0
 800926e:	d1d8      	bne.n	8009222 <HAL_RCC_OscConfig+0x6a>
        tickstart = HAL_GetTick();
 8009270:	f7ff fcd8 	bl	8008c24 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8009274:	2780      	movs	r7, #128	; 0x80
        tickstart = HAL_GetTick();
 8009276:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8009278:	02bf      	lsls	r7, r7, #10
 800927a:	682b      	ldr	r3, [r5, #0]
 800927c:	423b      	tst	r3, r7
 800927e:	d0a3      	beq.n	80091c8 <HAL_RCC_OscConfig+0x10>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8009280:	f7ff fcd0 	bl	8008c24 <HAL_GetTick>
 8009284:	1b80      	subs	r0, r0, r6
 8009286:	2864      	cmp	r0, #100	; 0x64
 8009288:	d9f7      	bls.n	800927a <HAL_RCC_OscConfig+0xc2>
 800928a:	e7d7      	b.n	800923c <HAL_RCC_OscConfig+0x84>
    temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 800928c:	2238      	movs	r2, #56	; 0x38
 800928e:	4d87      	ldr	r5, [pc, #540]	; (80094ac <HAL_RCC_OscConfig+0x2f4>)
 8009290:	68ab      	ldr	r3, [r5, #8]
 8009292:	4013      	ands	r3, r2
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 8009294:	68ea      	ldr	r2, [r5, #12]
    if (((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckcfg == RCC_PLLSOURCE_HSI))
 8009296:	2b10      	cmp	r3, #16
 8009298:	d127      	bne.n	80092ea <HAL_RCC_OscConfig+0x132>
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 800929a:	2103      	movs	r1, #3
 800929c:	400a      	ands	r2, r1
    if (((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckcfg == RCC_PLLSOURCE_HSI))
 800929e:	2a02      	cmp	r2, #2
 80092a0:	d125      	bne.n	80092ee <HAL_RCC_OscConfig+0x136>
      if ((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 80092a2:	682a      	ldr	r2, [r5, #0]
 80092a4:	0552      	lsls	r2, r2, #21
 80092a6:	d502      	bpl.n	80092ae <HAL_RCC_OscConfig+0xf6>
 80092a8:	68e2      	ldr	r2, [r4, #12]
 80092aa:	2a00      	cmp	r2, #0
 80092ac:	d0ad      	beq.n	800920a <HAL_RCC_OscConfig+0x52>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80092ae:	6869      	ldr	r1, [r5, #4]
 80092b0:	6962      	ldr	r2, [r4, #20]
 80092b2:	4881      	ldr	r0, [pc, #516]	; (80094b8 <HAL_RCC_OscConfig+0x300>)
 80092b4:	0212      	lsls	r2, r2, #8
 80092b6:	4001      	ands	r1, r0
 80092b8:	430a      	orrs	r2, r1
 80092ba:	606a      	str	r2, [r5, #4]
        if (temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSI)
 80092bc:	2b00      	cmp	r3, #0
 80092be:	d10c      	bne.n	80092da <HAL_RCC_OscConfig+0x122>
          __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 80092c0:	682b      	ldr	r3, [r5, #0]
 80092c2:	4a7e      	ldr	r2, [pc, #504]	; (80094bc <HAL_RCC_OscConfig+0x304>)
          SystemCoreClock = (HSI_VALUE / (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos)));
 80092c4:	497e      	ldr	r1, [pc, #504]	; (80094c0 <HAL_RCC_OscConfig+0x308>)
          __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 80092c6:	4013      	ands	r3, r2
 80092c8:	6922      	ldr	r2, [r4, #16]
 80092ca:	4313      	orrs	r3, r2
 80092cc:	602b      	str	r3, [r5, #0]
          SystemCoreClock = (HSI_VALUE / (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos)));
 80092ce:	682b      	ldr	r3, [r5, #0]
 80092d0:	4a7c      	ldr	r2, [pc, #496]	; (80094c4 <HAL_RCC_OscConfig+0x30c>)
 80092d2:	049b      	lsls	r3, r3, #18
 80092d4:	0f5b      	lsrs	r3, r3, #29
 80092d6:	40da      	lsrs	r2, r3
 80092d8:	600a      	str	r2, [r1, #0]
        if (HAL_InitTick(uwTickPrio) != HAL_OK)
 80092da:	4b7b      	ldr	r3, [pc, #492]	; (80094c8 <HAL_RCC_OscConfig+0x310>)
 80092dc:	6818      	ldr	r0, [r3, #0]
 80092de:	f7ff fc59 	bl	8008b94 <HAL_InitTick>
 80092e2:	2800      	cmp	r0, #0
 80092e4:	d100      	bne.n	80092e8 <HAL_RCC_OscConfig+0x130>
 80092e6:	e772      	b.n	80091ce <HAL_RCC_OscConfig+0x16>
 80092e8:	e78f      	b.n	800920a <HAL_RCC_OscConfig+0x52>
        || (temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSI))
 80092ea:	2b00      	cmp	r3, #0
 80092ec:	d0d9      	beq.n	80092a2 <HAL_RCC_OscConfig+0xea>
      if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 80092ee:	68e3      	ldr	r3, [r4, #12]
 80092f0:	2b00      	cmp	r3, #0
 80092f2:	d020      	beq.n	8009336 <HAL_RCC_OscConfig+0x17e>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 80092f4:	682b      	ldr	r3, [r5, #0]
 80092f6:	4a71      	ldr	r2, [pc, #452]	; (80094bc <HAL_RCC_OscConfig+0x304>)
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 80092f8:	2780      	movs	r7, #128	; 0x80
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 80092fa:	4013      	ands	r3, r2
 80092fc:	6922      	ldr	r2, [r4, #16]
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 80092fe:	00ff      	lsls	r7, r7, #3
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 8009300:	4313      	orrs	r3, r2
 8009302:	602b      	str	r3, [r5, #0]
        __HAL_RCC_HSI_ENABLE();
 8009304:	2380      	movs	r3, #128	; 0x80
 8009306:	682a      	ldr	r2, [r5, #0]
 8009308:	005b      	lsls	r3, r3, #1
 800930a:	4313      	orrs	r3, r2
 800930c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800930e:	f7ff fc89 	bl	8008c24 <HAL_GetTick>
 8009312:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8009314:	682b      	ldr	r3, [r5, #0]
 8009316:	423b      	tst	r3, r7
 8009318:	d007      	beq.n	800932a <HAL_RCC_OscConfig+0x172>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800931a:	686a      	ldr	r2, [r5, #4]
 800931c:	6963      	ldr	r3, [r4, #20]
 800931e:	4966      	ldr	r1, [pc, #408]	; (80094b8 <HAL_RCC_OscConfig+0x300>)
 8009320:	021b      	lsls	r3, r3, #8
 8009322:	400a      	ands	r2, r1
 8009324:	4313      	orrs	r3, r2
 8009326:	606b      	str	r3, [r5, #4]
 8009328:	e751      	b.n	80091ce <HAL_RCC_OscConfig+0x16>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800932a:	f7ff fc7b 	bl	8008c24 <HAL_GetTick>
 800932e:	1b80      	subs	r0, r0, r6
 8009330:	2802      	cmp	r0, #2
 8009332:	d9ef      	bls.n	8009314 <HAL_RCC_OscConfig+0x15c>
 8009334:	e782      	b.n	800923c <HAL_RCC_OscConfig+0x84>
        __HAL_RCC_HSI_DISABLE();
 8009336:	682b      	ldr	r3, [r5, #0]
 8009338:	4a64      	ldr	r2, [pc, #400]	; (80094cc <HAL_RCC_OscConfig+0x314>)
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 800933a:	2780      	movs	r7, #128	; 0x80
        __HAL_RCC_HSI_DISABLE();
 800933c:	4013      	ands	r3, r2
 800933e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8009340:	f7ff fc70 	bl	8008c24 <HAL_GetTick>
 8009344:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8009346:	00ff      	lsls	r7, r7, #3
 8009348:	682b      	ldr	r3, [r5, #0]
 800934a:	423b      	tst	r3, r7
 800934c:	d100      	bne.n	8009350 <HAL_RCC_OscConfig+0x198>
 800934e:	e73e      	b.n	80091ce <HAL_RCC_OscConfig+0x16>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8009350:	f7ff fc68 	bl	8008c24 <HAL_GetTick>
 8009354:	1b80      	subs	r0, r0, r6
 8009356:	2802      	cmp	r0, #2
 8009358:	d9f6      	bls.n	8009348 <HAL_RCC_OscConfig+0x190>
 800935a:	e76f      	b.n	800923c <HAL_RCC_OscConfig+0x84>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSI)
 800935c:	2238      	movs	r2, #56	; 0x38
 800935e:	4d53      	ldr	r5, [pc, #332]	; (80094ac <HAL_RCC_OscConfig+0x2f4>)
 8009360:	68ab      	ldr	r3, [r5, #8]
 8009362:	4013      	ands	r3, r2
 8009364:	2b18      	cmp	r3, #24
 8009366:	d108      	bne.n	800937a <HAL_RCC_OscConfig+0x1c2>
      if ((((RCC->CSR) & RCC_CSR_LSIRDY) != 0U) && (RCC_OscInitStruct->LSIState == RCC_LSI_OFF))
 8009368:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 800936a:	079b      	lsls	r3, r3, #30
 800936c:	d400      	bmi.n	8009370 <HAL_RCC_OscConfig+0x1b8>
 800936e:	e732      	b.n	80091d6 <HAL_RCC_OscConfig+0x1e>
 8009370:	69a3      	ldr	r3, [r4, #24]
 8009372:	2b00      	cmp	r3, #0
 8009374:	d000      	beq.n	8009378 <HAL_RCC_OscConfig+0x1c0>
 8009376:	e72e      	b.n	80091d6 <HAL_RCC_OscConfig+0x1e>
 8009378:	e747      	b.n	800920a <HAL_RCC_OscConfig+0x52>
      if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 800937a:	69a2      	ldr	r2, [r4, #24]
 800937c:	2301      	movs	r3, #1
 800937e:	2a00      	cmp	r2, #0
 8009380:	d010      	beq.n	80093a4 <HAL_RCC_OscConfig+0x1ec>
        __HAL_RCC_LSI_ENABLE();
 8009382:	6e2a      	ldr	r2, [r5, #96]	; 0x60
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 8009384:	2702      	movs	r7, #2
        __HAL_RCC_LSI_ENABLE();
 8009386:	4313      	orrs	r3, r2
 8009388:	662b      	str	r3, [r5, #96]	; 0x60
        tickstart = HAL_GetTick();
 800938a:	f7ff fc4b 	bl	8008c24 <HAL_GetTick>
 800938e:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 8009390:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8009392:	423b      	tst	r3, r7
 8009394:	d000      	beq.n	8009398 <HAL_RCC_OscConfig+0x1e0>
 8009396:	e71e      	b.n	80091d6 <HAL_RCC_OscConfig+0x1e>
          if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8009398:	f7ff fc44 	bl	8008c24 <HAL_GetTick>
 800939c:	1b80      	subs	r0, r0, r6
 800939e:	2802      	cmp	r0, #2
 80093a0:	d9f6      	bls.n	8009390 <HAL_RCC_OscConfig+0x1d8>
 80093a2:	e74b      	b.n	800923c <HAL_RCC_OscConfig+0x84>
        __HAL_RCC_LSI_DISABLE();
 80093a4:	6e2a      	ldr	r2, [r5, #96]	; 0x60
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 80093a6:	2702      	movs	r7, #2
        __HAL_RCC_LSI_DISABLE();
 80093a8:	439a      	bics	r2, r3
 80093aa:	662a      	str	r2, [r5, #96]	; 0x60
        tickstart = HAL_GetTick();
 80093ac:	f7ff fc3a 	bl	8008c24 <HAL_GetTick>
 80093b0:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 80093b2:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 80093b4:	423b      	tst	r3, r7
 80093b6:	d100      	bne.n	80093ba <HAL_RCC_OscConfig+0x202>
 80093b8:	e70d      	b.n	80091d6 <HAL_RCC_OscConfig+0x1e>
          if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80093ba:	f7ff fc33 	bl	8008c24 <HAL_GetTick>
 80093be:	1b80      	subs	r0, r0, r6
 80093c0:	2802      	cmp	r0, #2
 80093c2:	d9f6      	bls.n	80093b2 <HAL_RCC_OscConfig+0x1fa>
 80093c4:	e73a      	b.n	800923c <HAL_RCC_OscConfig+0x84>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSE)
 80093c6:	2238      	movs	r2, #56	; 0x38
 80093c8:	4d38      	ldr	r5, [pc, #224]	; (80094ac <HAL_RCC_OscConfig+0x2f4>)
 80093ca:	68ab      	ldr	r3, [r5, #8]
 80093cc:	4013      	ands	r3, r2
 80093ce:	2b20      	cmp	r3, #32
 80093d0:	d108      	bne.n	80093e4 <HAL_RCC_OscConfig+0x22c>
      if ((((RCC->BDCR) & RCC_BDCR_LSERDY) != 0U) && (RCC_OscInitStruct->LSEState == RCC_LSE_OFF))
 80093d2:	6deb      	ldr	r3, [r5, #92]	; 0x5c
 80093d4:	079b      	lsls	r3, r3, #30
 80093d6:	d400      	bmi.n	80093da <HAL_RCC_OscConfig+0x222>
 80093d8:	e701      	b.n	80091de <HAL_RCC_OscConfig+0x26>
 80093da:	68a3      	ldr	r3, [r4, #8]
 80093dc:	2b00      	cmp	r3, #0
 80093de:	d000      	beq.n	80093e2 <HAL_RCC_OscConfig+0x22a>
 80093e0:	e6fd      	b.n	80091de <HAL_RCC_OscConfig+0x26>
 80093e2:	e712      	b.n	800920a <HAL_RCC_OscConfig+0x52>
      if (__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 80093e4:	2280      	movs	r2, #128	; 0x80
    FlagStatus       pwrclkchanged = RESET;
 80093e6:	2100      	movs	r1, #0
      if (__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 80093e8:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 80093ea:	0552      	lsls	r2, r2, #21
    FlagStatus       pwrclkchanged = RESET;
 80093ec:	9100      	str	r1, [sp, #0]
      if (__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 80093ee:	4213      	tst	r3, r2
 80093f0:	d108      	bne.n	8009404 <HAL_RCC_OscConfig+0x24c>
        __HAL_RCC_PWR_CLK_ENABLE();
 80093f2:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 80093f4:	4313      	orrs	r3, r2
 80093f6:	63eb      	str	r3, [r5, #60]	; 0x3c
 80093f8:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 80093fa:	4013      	ands	r3, r2
 80093fc:	9303      	str	r3, [sp, #12]
 80093fe:	9b03      	ldr	r3, [sp, #12]
        pwrclkchanged = SET;
 8009400:	2301      	movs	r3, #1
 8009402:	9300      	str	r3, [sp, #0]
      if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8009404:	2780      	movs	r7, #128	; 0x80
 8009406:	4e32      	ldr	r6, [pc, #200]	; (80094d0 <HAL_RCC_OscConfig+0x318>)
 8009408:	007f      	lsls	r7, r7, #1
 800940a:	6833      	ldr	r3, [r6, #0]
 800940c:	423b      	tst	r3, r7
 800940e:	d015      	beq.n	800943c <HAL_RCC_OscConfig+0x284>
      __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8009410:	68a3      	ldr	r3, [r4, #8]
 8009412:	2b01      	cmp	r3, #1
 8009414:	d122      	bne.n	800945c <HAL_RCC_OscConfig+0x2a4>
 8009416:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8009418:	4313      	orrs	r3, r2
 800941a:	65eb      	str	r3, [r5, #92]	; 0x5c
        tickstart = HAL_GetTick();
 800941c:	f7ff fc02 	bl	8008c24 <HAL_GetTick>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8009420:	2702      	movs	r7, #2
        tickstart = HAL_GetTick();
 8009422:	0006      	movs	r6, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8009424:	6deb      	ldr	r3, [r5, #92]	; 0x5c
 8009426:	423b      	tst	r3, r7
 8009428:	d038      	beq.n	800949c <HAL_RCC_OscConfig+0x2e4>
      if (pwrclkchanged == SET)
 800942a:	9b00      	ldr	r3, [sp, #0]
 800942c:	2b01      	cmp	r3, #1
 800942e:	d000      	beq.n	8009432 <HAL_RCC_OscConfig+0x27a>
 8009430:	e6d5      	b.n	80091de <HAL_RCC_OscConfig+0x26>
        __HAL_RCC_PWR_CLK_DISABLE();
 8009432:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 8009434:	4a27      	ldr	r2, [pc, #156]	; (80094d4 <HAL_RCC_OscConfig+0x31c>)
 8009436:	4013      	ands	r3, r2
 8009438:	63eb      	str	r3, [r5, #60]	; 0x3c
 800943a:	e6d0      	b.n	80091de <HAL_RCC_OscConfig+0x26>
        SET_BIT(PWR->CR1, PWR_CR1_DBP);
 800943c:	6833      	ldr	r3, [r6, #0]
 800943e:	433b      	orrs	r3, r7
 8009440:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 8009442:	f7ff fbef 	bl	8008c24 <HAL_GetTick>
 8009446:	9001      	str	r0, [sp, #4]
        while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8009448:	6833      	ldr	r3, [r6, #0]
 800944a:	423b      	tst	r3, r7
 800944c:	d1e0      	bne.n	8009410 <HAL_RCC_OscConfig+0x258>
          if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800944e:	f7ff fbe9 	bl	8008c24 <HAL_GetTick>
 8009452:	9b01      	ldr	r3, [sp, #4]
 8009454:	1ac0      	subs	r0, r0, r3
 8009456:	2802      	cmp	r0, #2
 8009458:	d9f6      	bls.n	8009448 <HAL_RCC_OscConfig+0x290>
 800945a:	e6ef      	b.n	800923c <HAL_RCC_OscConfig+0x84>
      __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800945c:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 800945e:	2b05      	cmp	r3, #5
 8009460:	d105      	bne.n	800946e <HAL_RCC_OscConfig+0x2b6>
 8009462:	3b01      	subs	r3, #1
 8009464:	4313      	orrs	r3, r2
 8009466:	65eb      	str	r3, [r5, #92]	; 0x5c
 8009468:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 800946a:	2301      	movs	r3, #1
 800946c:	e7d4      	b.n	8009418 <HAL_RCC_OscConfig+0x260>
 800946e:	2101      	movs	r1, #1
 8009470:	438a      	bics	r2, r1
 8009472:	65ea      	str	r2, [r5, #92]	; 0x5c
 8009474:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8009476:	3103      	adds	r1, #3
 8009478:	438a      	bics	r2, r1
 800947a:	65ea      	str	r2, [r5, #92]	; 0x5c
      if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 800947c:	2b00      	cmp	r3, #0
 800947e:	d1cd      	bne.n	800941c <HAL_RCC_OscConfig+0x264>
        tickstart = HAL_GetTick();
 8009480:	f7ff fbd0 	bl	8008c24 <HAL_GetTick>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8009484:	2702      	movs	r7, #2
        tickstart = HAL_GetTick();
 8009486:	0006      	movs	r6, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8009488:	6deb      	ldr	r3, [r5, #92]	; 0x5c
 800948a:	423b      	tst	r3, r7
 800948c:	d0cd      	beq.n	800942a <HAL_RCC_OscConfig+0x272>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800948e:	f7ff fbc9 	bl	8008c24 <HAL_GetTick>
 8009492:	4b11      	ldr	r3, [pc, #68]	; (80094d8 <HAL_RCC_OscConfig+0x320>)
 8009494:	1b80      	subs	r0, r0, r6
 8009496:	4298      	cmp	r0, r3
 8009498:	d9f6      	bls.n	8009488 <HAL_RCC_OscConfig+0x2d0>
 800949a:	e6cf      	b.n	800923c <HAL_RCC_OscConfig+0x84>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800949c:	f7ff fbc2 	bl	8008c24 <HAL_GetTick>
 80094a0:	4b0d      	ldr	r3, [pc, #52]	; (80094d8 <HAL_RCC_OscConfig+0x320>)
 80094a2:	1b80      	subs	r0, r0, r6
 80094a4:	4298      	cmp	r0, r3
 80094a6:	d9bd      	bls.n	8009424 <HAL_RCC_OscConfig+0x26c>
 80094a8:	e6c8      	b.n	800923c <HAL_RCC_OscConfig+0x84>
 80094aa:	46c0      	nop			; (mov r8, r8)
 80094ac:	40021000 	.word	0x40021000
 80094b0:	fffeffff 	.word	0xfffeffff
 80094b4:	fffbffff 	.word	0xfffbffff
 80094b8:	ffff80ff 	.word	0xffff80ff
 80094bc:	ffffc7ff 	.word	0xffffc7ff
 80094c0:	20000000 	.word	0x20000000
 80094c4:	00f42400 	.word	0x00f42400
 80094c8:	20000008 	.word	0x20000008
 80094cc:	fffffeff 	.word	0xfffffeff
 80094d0:	40007000 	.word	0x40007000
 80094d4:	efffffff 	.word	0xefffffff
 80094d8:	00001388 	.word	0x00001388
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80094dc:	2138      	movs	r1, #56	; 0x38
 80094de:	4d3f      	ldr	r5, [pc, #252]	; (80095dc <HAL_RCC_OscConfig+0x424>)
 80094e0:	68aa      	ldr	r2, [r5, #8]
 80094e2:	400a      	ands	r2, r1
 80094e4:	2a10      	cmp	r2, #16
 80094e6:	d053      	beq.n	8009590 <HAL_RCC_OscConfig+0x3d8>
      if (RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 80094e8:	4a3d      	ldr	r2, [pc, #244]	; (80095e0 <HAL_RCC_OscConfig+0x428>)
 80094ea:	2b02      	cmp	r3, #2
 80094ec:	d138      	bne.n	8009560 <HAL_RCC_OscConfig+0x3a8>
        __HAL_RCC_PLL_DISABLE();
 80094ee:	682b      	ldr	r3, [r5, #0]
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 80094f0:	2780      	movs	r7, #128	; 0x80
        __HAL_RCC_PLL_DISABLE();
 80094f2:	4013      	ands	r3, r2
 80094f4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80094f6:	f7ff fb95 	bl	8008c24 <HAL_GetTick>
 80094fa:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 80094fc:	04bf      	lsls	r7, r7, #18
 80094fe:	682b      	ldr	r3, [r5, #0]
 8009500:	423b      	tst	r3, r7
 8009502:	d127      	bne.n	8009554 <HAL_RCC_OscConfig+0x39c>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8009504:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8009506:	6a23      	ldr	r3, [r4, #32]
 8009508:	68ea      	ldr	r2, [r5, #12]
 800950a:	430b      	orrs	r3, r1
 800950c:	4935      	ldr	r1, [pc, #212]	; (80095e4 <HAL_RCC_OscConfig+0x42c>)
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 800950e:	2680      	movs	r6, #128	; 0x80
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8009510:	400a      	ands	r2, r1
 8009512:	4313      	orrs	r3, r2
 8009514:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8009516:	04b6      	lsls	r6, r6, #18
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8009518:	4313      	orrs	r3, r2
 800951a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800951c:	4313      	orrs	r3, r2
 800951e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8009520:	0212      	lsls	r2, r2, #8
 8009522:	4313      	orrs	r3, r2
 8009524:	60eb      	str	r3, [r5, #12]
        __HAL_RCC_PLL_ENABLE();
 8009526:	2380      	movs	r3, #128	; 0x80
 8009528:	682a      	ldr	r2, [r5, #0]
 800952a:	045b      	lsls	r3, r3, #17
 800952c:	4313      	orrs	r3, r2
 800952e:	602b      	str	r3, [r5, #0]
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLRCLK);
 8009530:	2380      	movs	r3, #128	; 0x80
 8009532:	68ea      	ldr	r2, [r5, #12]
 8009534:	055b      	lsls	r3, r3, #21
 8009536:	4313      	orrs	r3, r2
 8009538:	60eb      	str	r3, [r5, #12]
        tickstart = HAL_GetTick();
 800953a:	f7ff fb73 	bl	8008c24 <HAL_GetTick>
 800953e:	0004      	movs	r4, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8009540:	682b      	ldr	r3, [r5, #0]
 8009542:	4233      	tst	r3, r6
 8009544:	d000      	beq.n	8009548 <HAL_RCC_OscConfig+0x390>
 8009546:	e64e      	b.n	80091e6 <HAL_RCC_OscConfig+0x2e>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8009548:	f7ff fb6c 	bl	8008c24 <HAL_GetTick>
 800954c:	1b00      	subs	r0, r0, r4
 800954e:	2802      	cmp	r0, #2
 8009550:	d9f6      	bls.n	8009540 <HAL_RCC_OscConfig+0x388>
 8009552:	e673      	b.n	800923c <HAL_RCC_OscConfig+0x84>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8009554:	f7ff fb66 	bl	8008c24 <HAL_GetTick>
 8009558:	1b80      	subs	r0, r0, r6
 800955a:	2802      	cmp	r0, #2
 800955c:	d9cf      	bls.n	80094fe <HAL_RCC_OscConfig+0x346>
 800955e:	e66d      	b.n	800923c <HAL_RCC_OscConfig+0x84>
        __HAL_RCC_PLL_DISABLE();
 8009560:	682b      	ldr	r3, [r5, #0]
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8009562:	2680      	movs	r6, #128	; 0x80
        __HAL_RCC_PLL_DISABLE();
 8009564:	4013      	ands	r3, r2
 8009566:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8009568:	f7ff fb5c 	bl	8008c24 <HAL_GetTick>
 800956c:	0004      	movs	r4, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 800956e:	04b6      	lsls	r6, r6, #18
 8009570:	682b      	ldr	r3, [r5, #0]
 8009572:	0018      	movs	r0, r3
 8009574:	4030      	ands	r0, r6
 8009576:	4233      	tst	r3, r6
 8009578:	d104      	bne.n	8009584 <HAL_RCC_OscConfig+0x3cc>
        RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLPEN | RCC_PLLCFGR_PLLREN);
 800957a:	68eb      	ldr	r3, [r5, #12]
 800957c:	4a1a      	ldr	r2, [pc, #104]	; (80095e8 <HAL_RCC_OscConfig+0x430>)
 800957e:	4013      	ands	r3, r2
 8009580:	60eb      	str	r3, [r5, #12]
 8009582:	e65c      	b.n	800923e <HAL_RCC_OscConfig+0x86>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8009584:	f7ff fb4e 	bl	8008c24 <HAL_GetTick>
 8009588:	1b00      	subs	r0, r0, r4
 800958a:	2802      	cmp	r0, #2
 800958c:	d9f0      	bls.n	8009570 <HAL_RCC_OscConfig+0x3b8>
 800958e:	e655      	b.n	800923c <HAL_RCC_OscConfig+0x84>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8009590:	2b01      	cmp	r3, #1
 8009592:	d100      	bne.n	8009596 <HAL_RCC_OscConfig+0x3de>
 8009594:	e639      	b.n	800920a <HAL_RCC_OscConfig+0x52>
        if ((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8009596:	2203      	movs	r2, #3
        temp_pllckcfg = RCC->PLLCFGR;
 8009598:	68eb      	ldr	r3, [r5, #12]
        if ((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800959a:	6a21      	ldr	r1, [r4, #32]
 800959c:	401a      	ands	r2, r3
 800959e:	428a      	cmp	r2, r1
 80095a0:	d000      	beq.n	80095a4 <HAL_RCC_OscConfig+0x3ec>
 80095a2:	e632      	b.n	800920a <HAL_RCC_OscConfig+0x52>
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80095a4:	2270      	movs	r2, #112	; 0x70
        if ((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80095a6:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80095a8:	401a      	ands	r2, r3
        if ((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80095aa:	428a      	cmp	r2, r1
 80095ac:	d000      	beq.n	80095b0 <HAL_RCC_OscConfig+0x3f8>
 80095ae:	e62c      	b.n	800920a <HAL_RCC_OscConfig+0x52>
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80095b0:	21fe      	movs	r1, #254	; 0xfe
 80095b2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80095b4:	01c9      	lsls	r1, r1, #7
 80095b6:	4019      	ands	r1, r3
 80095b8:	0212      	lsls	r2, r2, #8
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80095ba:	4291      	cmp	r1, r2
 80095bc:	d000      	beq.n	80095c0 <HAL_RCC_OscConfig+0x408>
 80095be:	e624      	b.n	800920a <HAL_RCC_OscConfig+0x52>
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 80095c0:	22f8      	movs	r2, #248	; 0xf8
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80095c2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 80095c4:	0392      	lsls	r2, r2, #14
 80095c6:	401a      	ands	r2, r3
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80095c8:	428a      	cmp	r2, r1
 80095ca:	d000      	beq.n	80095ce <HAL_RCC_OscConfig+0x416>
 80095cc:	e61d      	b.n	800920a <HAL_RCC_OscConfig+0x52>
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 80095ce:	6b22      	ldr	r2, [r4, #48]	; 0x30
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLR) != RCC_OscInitStruct->PLL.PLLR))
 80095d0:	0f5b      	lsrs	r3, r3, #29
 80095d2:	075b      	lsls	r3, r3, #29
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 80095d4:	4293      	cmp	r3, r2
 80095d6:	d100      	bne.n	80095da <HAL_RCC_OscConfig+0x422>
 80095d8:	e605      	b.n	80091e6 <HAL_RCC_OscConfig+0x2e>
 80095da:	e616      	b.n	800920a <HAL_RCC_OscConfig+0x52>
 80095dc:	40021000 	.word	0x40021000
 80095e0:	feffffff 	.word	0xfeffffff
 80095e4:	1fc1808c 	.word	0x1fc1808c
 80095e8:	effefffc 	.word	0xeffefffc

080095ec <HAL_RCC_GetSysClockFreq>:
uint32_t HAL_RCC_GetSysClockFreq(void)
{
  uint32_t pllvco, pllsource, pllr, pllm, hsidiv;
  uint32_t sysclockfreq;

  if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 80095ec:	2338      	movs	r3, #56	; 0x38
{
 80095ee:	b570      	push	{r4, r5, r6, lr}
  if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 80095f0:	4c1d      	ldr	r4, [pc, #116]	; (8009668 <HAL_RCC_GetSysClockFreq+0x7c>)
 80095f2:	68a2      	ldr	r2, [r4, #8]
 80095f4:	421a      	tst	r2, r3
 80095f6:	d105      	bne.n	8009604 <HAL_RCC_GetSysClockFreq+0x18>
  {
    /* HSISYS can be derived for HSI16 */
    hsidiv = (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos));
 80095f8:	6823      	ldr	r3, [r4, #0]

    /* HSI used as system clock source */
    sysclockfreq = (HSI_VALUE / hsidiv);
 80095fa:	481c      	ldr	r0, [pc, #112]	; (800966c <HAL_RCC_GetSysClockFreq+0x80>)
    hsidiv = (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos));
 80095fc:	049b      	lsls	r3, r3, #18
 80095fe:	0f5b      	lsrs	r3, r3, #29
    sysclockfreq = (HSI_VALUE / hsidiv);
 8009600:	40d8      	lsrs	r0, r3
  {
    sysclockfreq = 0U;
  }

  return sysclockfreq;
}
 8009602:	bd70      	pop	{r4, r5, r6, pc}
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8009604:	68a2      	ldr	r2, [r4, #8]
 8009606:	401a      	ands	r2, r3
 8009608:	2a08      	cmp	r2, #8
 800960a:	d027      	beq.n	800965c <HAL_RCC_GetSysClockFreq+0x70>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800960c:	68a2      	ldr	r2, [r4, #8]
 800960e:	401a      	ands	r2, r3
 8009610:	2a10      	cmp	r2, #16
 8009612:	d117      	bne.n	8009644 <HAL_RCC_GetSysClockFreq+0x58>
    pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 8009614:	68e3      	ldr	r3, [r4, #12]
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 8009616:	68e1      	ldr	r1, [r4, #12]
    pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 8009618:	43db      	mvns	r3, r3
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 800961a:	68e5      	ldr	r5, [r4, #12]
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 800961c:	0649      	lsls	r1, r1, #25
 800961e:	0f49      	lsrs	r1, r1, #29
 8009620:	326f      	adds	r2, #111	; 0x6f
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 8009622:	0a2d      	lsrs	r5, r5, #8
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 8009624:	3101      	adds	r1, #1
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 8009626:	4015      	ands	r5, r2
    switch (pllsource)
 8009628:	079b      	lsls	r3, r3, #30
 800962a:	d109      	bne.n	8009640 <HAL_RCC_GetSysClockFreq+0x54>
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 800962c:	4810      	ldr	r0, [pc, #64]	; (8009670 <HAL_RCC_GetSysClockFreq+0x84>)
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 800962e:	f7fd f9f1 	bl	8006a14 <__udivsi3>
    pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U);
 8009632:	68e1      	ldr	r1, [r4, #12]
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 8009634:	4368      	muls	r0, r5
    pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U);
 8009636:	0f49      	lsrs	r1, r1, #29
 8009638:	3101      	adds	r1, #1
    sysclockfreq = pllvco / pllr;
 800963a:	f7fd f9eb 	bl	8006a14 <__udivsi3>
 800963e:	e7e0      	b.n	8009602 <HAL_RCC_GetSysClockFreq+0x16>
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 8009640:	480a      	ldr	r0, [pc, #40]	; (800966c <HAL_RCC_GetSysClockFreq+0x80>)
 8009642:	e7f4      	b.n	800962e <HAL_RCC_GetSysClockFreq+0x42>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSE)
 8009644:	68a2      	ldr	r2, [r4, #8]
 8009646:	401a      	ands	r2, r3
 8009648:	2a20      	cmp	r2, #32
 800964a:	d009      	beq.n	8009660 <HAL_RCC_GetSysClockFreq+0x74>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSI)
 800964c:	68a2      	ldr	r2, [r4, #8]
    sysclockfreq = 0U;
 800964e:	2000      	movs	r0, #0
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSI)
 8009650:	4013      	ands	r3, r2
 8009652:	2b18      	cmp	r3, #24
 8009654:	d1d5      	bne.n	8009602 <HAL_RCC_GetSysClockFreq+0x16>
    sysclockfreq = LSI_VALUE;
 8009656:	20fa      	movs	r0, #250	; 0xfa
 8009658:	01c0      	lsls	r0, r0, #7
  return sysclockfreq;
 800965a:	e7d2      	b.n	8009602 <HAL_RCC_GetSysClockFreq+0x16>
    sysclockfreq = HSE_VALUE;
 800965c:	4804      	ldr	r0, [pc, #16]	; (8009670 <HAL_RCC_GetSysClockFreq+0x84>)
 800965e:	e7d0      	b.n	8009602 <HAL_RCC_GetSysClockFreq+0x16>
    sysclockfreq = LSE_VALUE;
 8009660:	2080      	movs	r0, #128	; 0x80
 8009662:	0200      	lsls	r0, r0, #8
 8009664:	e7cd      	b.n	8009602 <HAL_RCC_GetSysClockFreq+0x16>
 8009666:	46c0      	nop			; (mov r8, r8)
 8009668:	40021000 	.word	0x40021000
 800966c:	00f42400 	.word	0x00f42400
 8009670:	007a1200 	.word	0x007a1200

08009674 <HAL_RCC_ClockConfig>:
{
 8009674:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009676:	0004      	movs	r4, r0
 8009678:	000d      	movs	r5, r1
  if (RCC_ClkInitStruct == NULL)
 800967a:	2800      	cmp	r0, #0
 800967c:	d101      	bne.n	8009682 <HAL_RCC_ClockConfig+0xe>
    return HAL_ERROR;
 800967e:	2001      	movs	r0, #1
}
 8009680:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8009682:	2707      	movs	r7, #7
 8009684:	4e4a      	ldr	r6, [pc, #296]	; (80097b0 <HAL_RCC_ClockConfig+0x13c>)
 8009686:	6833      	ldr	r3, [r6, #0]
 8009688:	403b      	ands	r3, r7
 800968a:	428b      	cmp	r3, r1
 800968c:	d32a      	bcc.n	80096e4 <HAL_RCC_ClockConfig+0x70>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800968e:	6822      	ldr	r2, [r4, #0]
 8009690:	0793      	lsls	r3, r2, #30
 8009692:	d43b      	bmi.n	800970c <HAL_RCC_ClockConfig+0x98>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8009694:	07d2      	lsls	r2, r2, #31
 8009696:	d448      	bmi.n	800972a <HAL_RCC_ClockConfig+0xb6>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8009698:	2707      	movs	r7, #7
 800969a:	6833      	ldr	r3, [r6, #0]
 800969c:	403b      	ands	r3, r7
 800969e:	42ab      	cmp	r3, r5
 80096a0:	d90a      	bls.n	80096b8 <HAL_RCC_ClockConfig+0x44>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80096a2:	6833      	ldr	r3, [r6, #0]
 80096a4:	43bb      	bics	r3, r7
 80096a6:	432b      	orrs	r3, r5
 80096a8:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 80096aa:	f7ff fabb 	bl	8008c24 <HAL_GetTick>
 80096ae:	9001      	str	r0, [sp, #4]
    while ((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 80096b0:	6833      	ldr	r3, [r6, #0]
 80096b2:	403b      	ands	r3, r7
 80096b4:	42ab      	cmp	r3, r5
 80096b6:	d16b      	bne.n	8009790 <HAL_RCC_ClockConfig+0x11c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80096b8:	6823      	ldr	r3, [r4, #0]
 80096ba:	4d3e      	ldr	r5, [pc, #248]	; (80097b4 <HAL_RCC_ClockConfig+0x140>)
 80096bc:	075b      	lsls	r3, r3, #29
 80096be:	d46f      	bmi.n	80097a0 <HAL_RCC_ClockConfig+0x12c>
  SystemCoreClock = (HAL_RCC_GetSysClockFreq() >> ((AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos]) & 0x1FU));
 80096c0:	f7ff ff94 	bl	80095ec <HAL_RCC_GetSysClockFreq>
 80096c4:	68ab      	ldr	r3, [r5, #8]
 80096c6:	493c      	ldr	r1, [pc, #240]	; (80097b8 <HAL_RCC_ClockConfig+0x144>)
 80096c8:	051b      	lsls	r3, r3, #20
 80096ca:	0f1b      	lsrs	r3, r3, #28
 80096cc:	009b      	lsls	r3, r3, #2
 80096ce:	585b      	ldr	r3, [r3, r1]
 80096d0:	211f      	movs	r1, #31
 80096d2:	400b      	ands	r3, r1
 80096d4:	40d8      	lsrs	r0, r3
 80096d6:	4a39      	ldr	r2, [pc, #228]	; (80097bc <HAL_RCC_ClockConfig+0x148>)
  return HAL_InitTick(uwTickPrio);
 80096d8:	4b39      	ldr	r3, [pc, #228]	; (80097c0 <HAL_RCC_ClockConfig+0x14c>)
  SystemCoreClock = (HAL_RCC_GetSysClockFreq() >> ((AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos]) & 0x1FU));
 80096da:	6010      	str	r0, [r2, #0]
  return HAL_InitTick(uwTickPrio);
 80096dc:	6818      	ldr	r0, [r3, #0]
 80096de:	f7ff fa59 	bl	8008b94 <HAL_InitTick>
 80096e2:	e7cd      	b.n	8009680 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80096e4:	6833      	ldr	r3, [r6, #0]
 80096e6:	43bb      	bics	r3, r7
 80096e8:	430b      	orrs	r3, r1
 80096ea:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 80096ec:	f7ff fa9a 	bl	8008c24 <HAL_GetTick>
 80096f0:	9001      	str	r0, [sp, #4]
    while ((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 80096f2:	6833      	ldr	r3, [r6, #0]
 80096f4:	403b      	ands	r3, r7
 80096f6:	42ab      	cmp	r3, r5
 80096f8:	d0c9      	beq.n	800968e <HAL_RCC_ClockConfig+0x1a>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80096fa:	f7ff fa93 	bl	8008c24 <HAL_GetTick>
 80096fe:	9b01      	ldr	r3, [sp, #4]
 8009700:	1ac0      	subs	r0, r0, r3
 8009702:	4b30      	ldr	r3, [pc, #192]	; (80097c4 <HAL_RCC_ClockConfig+0x150>)
 8009704:	4298      	cmp	r0, r3
 8009706:	d9f4      	bls.n	80096f2 <HAL_RCC_ClockConfig+0x7e>
        return HAL_TIMEOUT;
 8009708:	2003      	movs	r0, #3
 800970a:	e7b9      	b.n	8009680 <HAL_RCC_ClockConfig+0xc>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800970c:	4929      	ldr	r1, [pc, #164]	; (80097b4 <HAL_RCC_ClockConfig+0x140>)
 800970e:	0753      	lsls	r3, r2, #29
 8009710:	d504      	bpl.n	800971c <HAL_RCC_ClockConfig+0xa8>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 8009712:	23e0      	movs	r3, #224	; 0xe0
 8009714:	6888      	ldr	r0, [r1, #8]
 8009716:	01db      	lsls	r3, r3, #7
 8009718:	4303      	orrs	r3, r0
 800971a:	608b      	str	r3, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800971c:	688b      	ldr	r3, [r1, #8]
 800971e:	482a      	ldr	r0, [pc, #168]	; (80097c8 <HAL_RCC_ClockConfig+0x154>)
 8009720:	4003      	ands	r3, r0
 8009722:	68a0      	ldr	r0, [r4, #8]
 8009724:	4303      	orrs	r3, r0
 8009726:	608b      	str	r3, [r1, #8]
 8009728:	e7b4      	b.n	8009694 <HAL_RCC_ClockConfig+0x20>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800972a:	6862      	ldr	r2, [r4, #4]
 800972c:	4f21      	ldr	r7, [pc, #132]	; (80097b4 <HAL_RCC_ClockConfig+0x140>)
 800972e:	2a01      	cmp	r2, #1
 8009730:	d119      	bne.n	8009766 <HAL_RCC_ClockConfig+0xf2>
      if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8009732:	683b      	ldr	r3, [r7, #0]
 8009734:	039b      	lsls	r3, r3, #14
 8009736:	d5a2      	bpl.n	800967e <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8009738:	2107      	movs	r1, #7
 800973a:	68bb      	ldr	r3, [r7, #8]
 800973c:	438b      	bics	r3, r1
 800973e:	4313      	orrs	r3, r2
 8009740:	60bb      	str	r3, [r7, #8]
    tickstart = HAL_GetTick();
 8009742:	f7ff fa6f 	bl	8008c24 <HAL_GetTick>
 8009746:	9001      	str	r0, [sp, #4]
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8009748:	2338      	movs	r3, #56	; 0x38
 800974a:	68ba      	ldr	r2, [r7, #8]
 800974c:	401a      	ands	r2, r3
 800974e:	6863      	ldr	r3, [r4, #4]
 8009750:	00db      	lsls	r3, r3, #3
 8009752:	429a      	cmp	r2, r3
 8009754:	d0a0      	beq.n	8009698 <HAL_RCC_ClockConfig+0x24>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8009756:	f7ff fa65 	bl	8008c24 <HAL_GetTick>
 800975a:	9b01      	ldr	r3, [sp, #4]
 800975c:	1ac0      	subs	r0, r0, r3
 800975e:	4b19      	ldr	r3, [pc, #100]	; (80097c4 <HAL_RCC_ClockConfig+0x150>)
 8009760:	4298      	cmp	r0, r3
 8009762:	d9f1      	bls.n	8009748 <HAL_RCC_ClockConfig+0xd4>
 8009764:	e7d0      	b.n	8009708 <HAL_RCC_ClockConfig+0x94>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8009766:	2a02      	cmp	r2, #2
 8009768:	d103      	bne.n	8009772 <HAL_RCC_ClockConfig+0xfe>
      if (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 800976a:	683b      	ldr	r3, [r7, #0]
 800976c:	019b      	lsls	r3, r3, #6
 800976e:	d4e3      	bmi.n	8009738 <HAL_RCC_ClockConfig+0xc4>
 8009770:	e785      	b.n	800967e <HAL_RCC_ClockConfig+0xa>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 8009772:	2a00      	cmp	r2, #0
 8009774:	d103      	bne.n	800977e <HAL_RCC_ClockConfig+0x10a>
      if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8009776:	683b      	ldr	r3, [r7, #0]
 8009778:	055b      	lsls	r3, r3, #21
 800977a:	d4dd      	bmi.n	8009738 <HAL_RCC_ClockConfig+0xc4>
 800977c:	e77f      	b.n	800967e <HAL_RCC_ClockConfig+0xa>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_LSI)
 800977e:	2302      	movs	r3, #2
 8009780:	2a03      	cmp	r2, #3
 8009782:	d103      	bne.n	800978c <HAL_RCC_ClockConfig+0x118>
      if (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 8009784:	6e39      	ldr	r1, [r7, #96]	; 0x60
      if (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8009786:	4219      	tst	r1, r3
 8009788:	d1d6      	bne.n	8009738 <HAL_RCC_ClockConfig+0xc4>
 800978a:	e778      	b.n	800967e <HAL_RCC_ClockConfig+0xa>
 800978c:	6df9      	ldr	r1, [r7, #92]	; 0x5c
 800978e:	e7fa      	b.n	8009786 <HAL_RCC_ClockConfig+0x112>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8009790:	f7ff fa48 	bl	8008c24 <HAL_GetTick>
 8009794:	9b01      	ldr	r3, [sp, #4]
 8009796:	1ac0      	subs	r0, r0, r3
 8009798:	4b0a      	ldr	r3, [pc, #40]	; (80097c4 <HAL_RCC_ClockConfig+0x150>)
 800979a:	4298      	cmp	r0, r3
 800979c:	d988      	bls.n	80096b0 <HAL_RCC_ClockConfig+0x3c>
 800979e:	e7b3      	b.n	8009708 <HAL_RCC_ClockConfig+0x94>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 80097a0:	68ab      	ldr	r3, [r5, #8]
 80097a2:	4a0a      	ldr	r2, [pc, #40]	; (80097cc <HAL_RCC_ClockConfig+0x158>)
 80097a4:	4013      	ands	r3, r2
 80097a6:	68e2      	ldr	r2, [r4, #12]
 80097a8:	4313      	orrs	r3, r2
 80097aa:	60ab      	str	r3, [r5, #8]
 80097ac:	e788      	b.n	80096c0 <HAL_RCC_ClockConfig+0x4c>
 80097ae:	46c0      	nop			; (mov r8, r8)
 80097b0:	40022000 	.word	0x40022000
 80097b4:	40021000 	.word	0x40021000
 80097b8:	0800f7fc 	.word	0x0800f7fc
 80097bc:	20000000 	.word	0x20000000
 80097c0:	20000008 	.word	0x20000008
 80097c4:	00001388 	.word	0x00001388
 80097c8:	fffff0ff 	.word	0xfffff0ff
 80097cc:	ffff8fff 	.word	0xffff8fff

080097d0 <HAL_RCC_GetPCLK1Freq>:
  *         @arg @ref LL_RCC_APB1_DIV_8
  *         @arg @ref LL_RCC_APB1_DIV_16
  */
__STATIC_INLINE uint32_t LL_RCC_GetAPB1Prescaler(void)
{
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE));
 80097d0:	4b06      	ldr	r3, [pc, #24]	; (80097ec <HAL_RCC_GetPCLK1Freq+0x1c>)
  * @retval PCLK1 frequency in Hz
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return ((uint32_t)(__LL_RCC_CALC_PCLK1_FREQ(HAL_RCC_GetHCLKFreq(), LL_RCC_GetAPB1Prescaler())));
 80097d2:	4907      	ldr	r1, [pc, #28]	; (80097f0 <HAL_RCC_GetPCLK1Freq+0x20>)
 80097d4:	689b      	ldr	r3, [r3, #8]
  return SystemCoreClock;
 80097d6:	4a07      	ldr	r2, [pc, #28]	; (80097f4 <HAL_RCC_GetPCLK1Freq+0x24>)
  return ((uint32_t)(__LL_RCC_CALC_PCLK1_FREQ(HAL_RCC_GetHCLKFreq(), LL_RCC_GetAPB1Prescaler())));
 80097d8:	045b      	lsls	r3, r3, #17
 80097da:	0f5b      	lsrs	r3, r3, #29
 80097dc:	009b      	lsls	r3, r3, #2
 80097de:	585b      	ldr	r3, [r3, r1]
 80097e0:	211f      	movs	r1, #31
 80097e2:	6810      	ldr	r0, [r2, #0]
 80097e4:	400b      	ands	r3, r1
 80097e6:	40d8      	lsrs	r0, r3
}
 80097e8:	4770      	bx	lr
 80097ea:	46c0      	nop			; (mov r8, r8)
 80097ec:	40021000 	.word	0x40021000
 80097f0:	0800f83c 	.word	0x0800f83c
 80097f4:	20000000 	.word	0x20000000

080097f8 <HAL_RCCEx_PeriphCLKConfig>:
  *         the RTC clock source: in this case the access to Backup domain is enabled.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80097f8:	b5f0      	push	{r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*-------------------------- RTC clock source configuration ----------------------*/
  if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 80097fa:	6803      	ldr	r3, [r0, #0]
{
 80097fc:	0005      	movs	r5, r0
 80097fe:	b085      	sub	sp, #20
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 8009800:	2000      	movs	r0, #0
  if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8009802:	039b      	lsls	r3, r3, #14
 8009804:	d53b      	bpl.n	800987e <HAL_RCCEx_PeriphCLKConfig+0x86>

    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8009806:	2280      	movs	r2, #128	; 0x80
 8009808:	4c4d      	ldr	r4, [pc, #308]	; (8009940 <HAL_RCCEx_PeriphCLKConfig+0x148>)
 800980a:	0552      	lsls	r2, r2, #21
 800980c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    FlagStatus       pwrclkchanged = RESET;
 800980e:	9000      	str	r0, [sp, #0]
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8009810:	4213      	tst	r3, r2
 8009812:	d108      	bne.n	8009826 <HAL_RCCEx_PeriphCLKConfig+0x2e>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8009814:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009816:	4313      	orrs	r3, r2
 8009818:	63e3      	str	r3, [r4, #60]	; 0x3c
 800981a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800981c:	4013      	ands	r3, r2
 800981e:	9303      	str	r3, [sp, #12]
 8009820:	9b03      	ldr	r3, [sp, #12]
      pwrclkchanged = SET;
 8009822:	2301      	movs	r3, #1
 8009824:	9300      	str	r3, [sp, #0]
    }

    /* Enable write access to Backup domain */
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8009826:	2780      	movs	r7, #128	; 0x80
 8009828:	4e46      	ldr	r6, [pc, #280]	; (8009944 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 800982a:	007f      	lsls	r7, r7, #1
 800982c:	6833      	ldr	r3, [r6, #0]
 800982e:	433b      	orrs	r3, r7
 8009830:	6033      	str	r3, [r6, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 8009832:	f7ff f9f7 	bl	8008c24 <HAL_GetTick>
 8009836:	9001      	str	r0, [sp, #4]

    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8009838:	6833      	ldr	r3, [r6, #0]
 800983a:	423b      	tst	r3, r7
 800983c:	d011      	beq.n	8009862 <HAL_RCCEx_PeriphCLKConfig+0x6a>
    }

    if (ret == HAL_OK)
    {
      /* Reset the Backup domain only if the RTC Clock source selection is modified from default */
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 800983e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8009840:	23c0      	movs	r3, #192	; 0xc0
 8009842:	0010      	movs	r0, r2
 8009844:	009b      	lsls	r3, r3, #2

      /* Reset the Backup domain only if the RTC Clock source selection is modified */
      if ((tmpregister != RCC_RTCCLKSOURCE_NONE) && (tmpregister != PeriphClkInit->RTCClockSelection))
 8009846:	69a9      	ldr	r1, [r5, #24]
 8009848:	4e3f      	ldr	r6, [pc, #252]	; (8009948 <HAL_RCCEx_PeriphCLKConfig+0x150>)
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 800984a:	4018      	ands	r0, r3
      if ((tmpregister != RCC_RTCCLKSOURCE_NONE) && (tmpregister != PeriphClkInit->RTCClockSelection))
 800984c:	421a      	tst	r2, r3
 800984e:	d001      	beq.n	8009854 <HAL_RCCEx_PeriphCLKConfig+0x5c>
 8009850:	4288      	cmp	r0, r1
 8009852:	d156      	bne.n	8009902 <HAL_RCCEx_PeriphCLKConfig+0x10a>
      }

      if (ret == HAL_OK)
      {
        /* Apply new RTC clock source selection */
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8009854:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 8009856:	69aa      	ldr	r2, [r5, #24]
 8009858:	4033      	ands	r3, r6
 800985a:	4313      	orrs	r3, r2
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 800985c:	2000      	movs	r0, #0
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800985e:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009860:	e006      	b.n	8009870 <HAL_RCCEx_PeriphCLKConfig+0x78>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8009862:	f7ff f9df 	bl	8008c24 <HAL_GetTick>
 8009866:	9b01      	ldr	r3, [sp, #4]
 8009868:	1ac0      	subs	r0, r0, r3
 800986a:	2802      	cmp	r0, #2
 800986c:	d9e4      	bls.n	8009838 <HAL_RCCEx_PeriphCLKConfig+0x40>
      }
    }
    else
    {
      /* set overall return value */
      status = ret;
 800986e:	2003      	movs	r0, #3
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 8009870:	9b00      	ldr	r3, [sp, #0]
 8009872:	2b01      	cmp	r3, #1
 8009874:	d103      	bne.n	800987e <HAL_RCCEx_PeriphCLKConfig+0x86>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8009876:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009878:	4a34      	ldr	r2, [pc, #208]	; (800994c <HAL_RCCEx_PeriphCLKConfig+0x154>)
 800987a:	4013      	ands	r3, r2
 800987c:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
  }

  /*-------------------------- USART1 clock source configuration -------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 800987e:	682a      	ldr	r2, [r5, #0]
 8009880:	07d3      	lsls	r3, r2, #31
 8009882:	d506      	bpl.n	8009892 <HAL_RCCEx_PeriphCLKConfig+0x9a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8009884:	2403      	movs	r4, #3
 8009886:	492e      	ldr	r1, [pc, #184]	; (8009940 <HAL_RCCEx_PeriphCLKConfig+0x148>)
 8009888:	6d4b      	ldr	r3, [r1, #84]	; 0x54
 800988a:	43a3      	bics	r3, r4
 800988c:	686c      	ldr	r4, [r5, #4]
 800988e:	4323      	orrs	r3, r4
 8009890:	654b      	str	r3, [r1, #84]	; 0x54
  }

#if defined(RCC_CCIPR_USART2SEL)
  /*-------------------------- USART2 clock source configuration -------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8009892:	0793      	lsls	r3, r2, #30
 8009894:	d506      	bpl.n	80098a4 <HAL_RCCEx_PeriphCLKConfig+0xac>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8009896:	240c      	movs	r4, #12
 8009898:	4929      	ldr	r1, [pc, #164]	; (8009940 <HAL_RCCEx_PeriphCLKConfig+0x148>)
 800989a:	6d4b      	ldr	r3, [r1, #84]	; 0x54
 800989c:	43a3      	bics	r3, r4
 800989e:	68ac      	ldr	r4, [r5, #8]
 80098a0:	4323      	orrs	r3, r4
 80098a2:	654b      	str	r3, [r1, #84]	; 0x54
    __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
  }
#endif /* RCC_CCIPR_LPTIM2SEL */

  /*-------------------------- I2C1 clock source configuration ---------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 80098a4:	0693      	lsls	r3, r2, #26
 80098a6:	d506      	bpl.n	80098b6 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 80098a8:	4925      	ldr	r1, [pc, #148]	; (8009940 <HAL_RCCEx_PeriphCLKConfig+0x148>)
 80098aa:	4c29      	ldr	r4, [pc, #164]	; (8009950 <HAL_RCCEx_PeriphCLKConfig+0x158>)
 80098ac:	6d4b      	ldr	r3, [r1, #84]	; 0x54
 80098ae:	4023      	ands	r3, r4
 80098b0:	68ec      	ldr	r4, [r5, #12]
 80098b2:	4323      	orrs	r3, r4
 80098b4:	654b      	str	r3, [r1, #84]	; 0x54
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLQCLK);
    }
  }
#endif /* RNG */
  /*-------------------------- ADC clock source configuration ----------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 80098b6:	0453      	lsls	r3, r2, #17
 80098b8:	d50f      	bpl.n	80098da <HAL_RCCEx_PeriphCLKConfig+0xe2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_ADCCLKSOURCE(PeriphClkInit->AdcClockSelection));

    /* Configure the ADC interface clock source */
    __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 80098ba:	4921      	ldr	r1, [pc, #132]	; (8009940 <HAL_RCCEx_PeriphCLKConfig+0x148>)
 80098bc:	696c      	ldr	r4, [r5, #20]
 80098be:	6d4b      	ldr	r3, [r1, #84]	; 0x54
 80098c0:	009b      	lsls	r3, r3, #2
 80098c2:	089b      	lsrs	r3, r3, #2
 80098c4:	4323      	orrs	r3, r4
 80098c6:	654b      	str	r3, [r1, #84]	; 0x54

    if (PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLADC)
 80098c8:	2380      	movs	r3, #128	; 0x80
 80098ca:	05db      	lsls	r3, r3, #23
 80098cc:	429c      	cmp	r4, r3
 80098ce:	d104      	bne.n	80098da <HAL_RCCEx_PeriphCLKConfig+0xe2>
    {
      /* Enable PLLPCLK output */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLPCLK);
 80098d0:	2380      	movs	r3, #128	; 0x80
 80098d2:	68cc      	ldr	r4, [r1, #12]
 80098d4:	025b      	lsls	r3, r3, #9
 80098d6:	4323      	orrs	r3, r4
 80098d8:	60cb      	str	r3, [r1, #12]
    }
  }
#endif /* RCC_CCIPR_TIM15SEL */

  /*-------------------------- I2S1 clock source configuration ---------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S1) == RCC_PERIPHCLK_I2S1)
 80098da:	0512      	lsls	r2, r2, #20
 80098dc:	d50f      	bpl.n	80098fe <HAL_RCCEx_PeriphCLKConfig+0x106>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2S1CLKSOURCE(PeriphClkInit->I2s1ClockSelection));

    /* Configure the I2S1 clock source */
    __HAL_RCC_I2S1_CONFIG(PeriphClkInit->I2s1ClockSelection);
 80098de:	4a18      	ldr	r2, [pc, #96]	; (8009940 <HAL_RCCEx_PeriphCLKConfig+0x148>)
 80098e0:	4c1c      	ldr	r4, [pc, #112]	; (8009954 <HAL_RCCEx_PeriphCLKConfig+0x15c>)
 80098e2:	6d53      	ldr	r3, [r2, #84]	; 0x54
 80098e4:	6929      	ldr	r1, [r5, #16]
 80098e6:	4023      	ands	r3, r4
 80098e8:	430b      	orrs	r3, r1
 80098ea:	6553      	str	r3, [r2, #84]	; 0x54

    if (PeriphClkInit->I2s1ClockSelection == RCC_I2S1CLKSOURCE_PLL)
 80098ec:	2380      	movs	r3, #128	; 0x80
 80098ee:	01db      	lsls	r3, r3, #7
 80098f0:	4299      	cmp	r1, r3
 80098f2:	d104      	bne.n	80098fe <HAL_RCCEx_PeriphCLKConfig+0x106>
    {
      /* Enable PLLPCLK output */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLPCLK);
 80098f4:	2380      	movs	r3, #128	; 0x80
 80098f6:	68d1      	ldr	r1, [r2, #12]
 80098f8:	025b      	lsls	r3, r3, #9
 80098fa:	430b      	orrs	r3, r1
 80098fc:	60d3      	str	r3, [r2, #12]
    }
  }
#endif /* FDCAN1 || FDCAN2 */

  return status;
}
 80098fe:	b005      	add	sp, #20
 8009900:	bdf0      	pop	{r4, r5, r6, r7, pc}
        __HAL_RCC_BACKUPRESET_FORCE();
 8009902:	2280      	movs	r2, #128	; 0x80
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8009904:	6de3      	ldr	r3, [r4, #92]	; 0x5c
        __HAL_RCC_BACKUPRESET_FORCE();
 8009906:	6de0      	ldr	r0, [r4, #92]	; 0x5c
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8009908:	0019      	movs	r1, r3
        __HAL_RCC_BACKUPRESET_FORCE();
 800990a:	0252      	lsls	r2, r2, #9
 800990c:	4302      	orrs	r2, r0
 800990e:	65e2      	str	r2, [r4, #92]	; 0x5c
        __HAL_RCC_BACKUPRESET_RELEASE();
 8009910:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8009912:	4811      	ldr	r0, [pc, #68]	; (8009958 <HAL_RCCEx_PeriphCLKConfig+0x160>)
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8009914:	4031      	ands	r1, r6
        __HAL_RCC_BACKUPRESET_RELEASE();
 8009916:	4002      	ands	r2, r0
 8009918:	65e2      	str	r2, [r4, #92]	; 0x5c
        RCC->BDCR = tmpregister;
 800991a:	65e1      	str	r1, [r4, #92]	; 0x5c
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 800991c:	07db      	lsls	r3, r3, #31
 800991e:	d599      	bpl.n	8009854 <HAL_RCCEx_PeriphCLKConfig+0x5c>
        tickstart = HAL_GetTick();
 8009920:	f7ff f980 	bl	8008c24 <HAL_GetTick>
 8009924:	0007      	movs	r7, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8009926:	2202      	movs	r2, #2
 8009928:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 800992a:	4213      	tst	r3, r2
 800992c:	d000      	beq.n	8009930 <HAL_RCCEx_PeriphCLKConfig+0x138>
 800992e:	e791      	b.n	8009854 <HAL_RCCEx_PeriphCLKConfig+0x5c>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8009930:	f7ff f978 	bl	8008c24 <HAL_GetTick>
 8009934:	4b09      	ldr	r3, [pc, #36]	; (800995c <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8009936:	1bc0      	subs	r0, r0, r7
 8009938:	4298      	cmp	r0, r3
 800993a:	d9f4      	bls.n	8009926 <HAL_RCCEx_PeriphCLKConfig+0x12e>
 800993c:	e797      	b.n	800986e <HAL_RCCEx_PeriphCLKConfig+0x76>
 800993e:	46c0      	nop			; (mov r8, r8)
 8009940:	40021000 	.word	0x40021000
 8009944:	40007000 	.word	0x40007000
 8009948:	fffffcff 	.word	0xfffffcff
 800994c:	efffffff 	.word	0xefffffff
 8009950:	ffffcfff 	.word	0xffffcfff
 8009954:	ffff3fff 	.word	0xffff3fff
 8009958:	fffeffff 	.word	0xfffeffff
 800995c:	00001388 	.word	0x00001388

08009960 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8009960:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009962:	0004      	movs	r4, r0
  uint32_t frxth;

  /* Check the SPI handle allocation */
  if (hspi == NULL)
  {
    return HAL_ERROR;
 8009964:	2001      	movs	r0, #1
  if (hspi == NULL)
 8009966:	2c00      	cmp	r4, #0
 8009968:	d066      	beq.n	8009a38 <HAL_SPI_Init+0xd8>
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800996a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800996c:	2b00      	cmp	r3, #0
 800996e:	d164      	bne.n	8009a3a <HAL_SPI_Init+0xda>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8009970:	2282      	movs	r2, #130	; 0x82
 8009972:	6861      	ldr	r1, [r4, #4]
 8009974:	0052      	lsls	r2, r2, #1
 8009976:	4291      	cmp	r1, r2
 8009978:	d000      	beq.n	800997c <HAL_SPI_Init+0x1c>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800997a:	61e3      	str	r3, [r4, #28]
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
    assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800997c:	2300      	movs	r3, #0
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 800997e:	0025      	movs	r5, r4
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8009980:	62a3      	str	r3, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8009982:	355d      	adds	r5, #93	; 0x5d
 8009984:	782b      	ldrb	r3, [r5, #0]
 8009986:	b2da      	uxtb	r2, r3
 8009988:	2b00      	cmp	r3, #0
 800998a:	d105      	bne.n	8009998 <HAL_SPI_Init+0x38>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 800998c:	0023      	movs	r3, r4
 800998e:	335c      	adds	r3, #92	; 0x5c

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8009990:	0020      	movs	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 8009992:	701a      	strb	r2, [r3, #0]
    HAL_SPI_MspInit(hspi);
 8009994:	f7fe ff3a 	bl	800880c <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8009998:	2302      	movs	r3, #2

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 800999a:	2140      	movs	r1, #64	; 0x40
  hspi->State = HAL_SPI_STATE_BUSY;
 800999c:	702b      	strb	r3, [r5, #0]
  __HAL_SPI_DISABLE(hspi);
 800999e:	6822      	ldr	r2, [r4, #0]

  /* Align by default the rs fifo threshold on the data size */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 80099a0:	68e6      	ldr	r6, [r4, #12]
  __HAL_SPI_DISABLE(hspi);
 80099a2:	6813      	ldr	r3, [r2, #0]
 80099a4:	438b      	bics	r3, r1
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 80099a6:	21e0      	movs	r1, #224	; 0xe0
  __HAL_SPI_DISABLE(hspi);
 80099a8:	6013      	str	r3, [r2, #0]
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 80099aa:	00c9      	lsls	r1, r1, #3
 80099ac:	2300      	movs	r3, #0
 80099ae:	428e      	cmp	r6, r1
 80099b0:	d847      	bhi.n	8009a42 <HAL_SPI_Init+0xe2>
  {
    frxth = SPI_RXFIFO_THRESHOLD_HF;
  }
  else
  {
    frxth = SPI_RXFIFO_THRESHOLD_QF;
 80099b2:	2080      	movs	r0, #128	; 0x80
 80099b4:	0140      	lsls	r0, r0, #5
  }

  /* CRC calculation is valid only for 16Bit and 8 Bit */
  if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 80099b6:	428e      	cmp	r6, r1
 80099b8:	d000      	beq.n	80099bc <HAL_SPI_Init+0x5c>
  {
    /* CRC must be disabled */
    hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80099ba:	62a3      	str	r3, [r4, #40]	; 0x28
  }

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80099bc:	2182      	movs	r1, #130	; 0x82
 80099be:	2784      	movs	r7, #132	; 0x84
 80099c0:	6863      	ldr	r3, [r4, #4]
 80099c2:	0049      	lsls	r1, r1, #1
 80099c4:	400b      	ands	r3, r1
 80099c6:	68a1      	ldr	r1, [r4, #8]
 80099c8:	023f      	lsls	r7, r7, #8
 80099ca:	4039      	ands	r1, r7
 80099cc:	2702      	movs	r7, #2
 80099ce:	430b      	orrs	r3, r1
 80099d0:	6921      	ldr	r1, [r4, #16]
 80099d2:	69a5      	ldr	r5, [r4, #24]
 80099d4:	4039      	ands	r1, r7
 80099d6:	430b      	orrs	r3, r1
 80099d8:	2101      	movs	r1, #1
 80099da:	6967      	ldr	r7, [r4, #20]
 80099dc:	400f      	ands	r7, r1
 80099de:	433b      	orrs	r3, r7
 80099e0:	2780      	movs	r7, #128	; 0x80
 80099e2:	00bf      	lsls	r7, r7, #2
 80099e4:	402f      	ands	r7, r5
 80099e6:	433b      	orrs	r3, r7
 80099e8:	69e7      	ldr	r7, [r4, #28]
 80099ea:	3137      	adds	r1, #55	; 0x37
 80099ec:	400f      	ands	r7, r1
 80099ee:	433b      	orrs	r3, r7
 80099f0:	6a27      	ldr	r7, [r4, #32]
 80099f2:	3148      	adds	r1, #72	; 0x48
 80099f4:	400f      	ands	r7, r1
 80099f6:	2180      	movs	r1, #128	; 0x80
 80099f8:	433b      	orrs	r3, r7
 80099fa:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 80099fc:	0189      	lsls	r1, r1, #6
 80099fe:	400f      	ands	r7, r1
 8009a00:	433b      	orrs	r3, r7
    }
  }
#endif /* USE_SPI_CRC */

  /* Configure : NSS management, TI Mode, NSS Pulse, Data size and Rx Fifo threshold */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) |
 8009a02:	2710      	movs	r7, #16
 8009a04:	2108      	movs	r1, #8
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8009a06:	6013      	str	r3, [r2, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) |
 8009a08:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009a0a:	0c2d      	lsrs	r5, r5, #16
 8009a0c:	403b      	ands	r3, r7
 8009a0e:	6b67      	ldr	r7, [r4, #52]	; 0x34
 8009a10:	400f      	ands	r7, r1
 8009a12:	433b      	orrs	r3, r7
 8009a14:	27f0      	movs	r7, #240	; 0xf0
 8009a16:	013f      	lsls	r7, r7, #4
 8009a18:	403e      	ands	r6, r7
 8009a1a:	4333      	orrs	r3, r6
 8009a1c:	2604      	movs	r6, #4
 8009a1e:	4035      	ands	r5, r6
 8009a20:	432b      	orrs	r3, r5
 8009a22:	4303      	orrs	r3, r0
 8009a24:	6053      	str	r3, [r2, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8009a26:	69d3      	ldr	r3, [r2, #28]
 8009a28:	4808      	ldr	r0, [pc, #32]	; (8009a4c <HAL_SPI_Init+0xec>)
 8009a2a:	4003      	ands	r3, r0
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8009a2c:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8009a2e:	61d3      	str	r3, [r2, #28]
  hspi->State     = HAL_SPI_STATE_READY;
 8009a30:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8009a32:	6620      	str	r0, [r4, #96]	; 0x60
  hspi->State     = HAL_SPI_STATE_READY;
 8009a34:	345d      	adds	r4, #93	; 0x5d
 8009a36:	7023      	strb	r3, [r4, #0]

  return HAL_OK;
}
 8009a38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8009a3a:	2300      	movs	r3, #0
 8009a3c:	6123      	str	r3, [r4, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8009a3e:	6163      	str	r3, [r4, #20]
 8009a40:	e79c      	b.n	800997c <HAL_SPI_Init+0x1c>
  if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 8009a42:	21f0      	movs	r1, #240	; 0xf0
    frxth = SPI_RXFIFO_THRESHOLD_HF;
 8009a44:	0018      	movs	r0, r3
  if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 8009a46:	0109      	lsls	r1, r1, #4
 8009a48:	e7b5      	b.n	80099b6 <HAL_SPI_Init+0x56>
 8009a4a:	46c0      	nop			; (mov r8, r8)
 8009a4c:	fffff7ff 	.word	0xfffff7ff

08009a50 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8009a50:	b570      	push	{r4, r5, r6, lr}

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8009a52:	2401      	movs	r4, #1
  tmpccer = TIMx->CCER;
 8009a54:	6a03      	ldr	r3, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8009a56:	6a02      	ldr	r2, [r0, #32]
 8009a58:	43a2      	bics	r2, r4
 8009a5a:	6202      	str	r2, [r0, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8009a5c:	6844      	ldr	r4, [r0, #4]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8009a5e:	4a19      	ldr	r2, [pc, #100]	; (8009ac4 <TIM_OC1_SetConfig+0x74>)
  tmpccmrx = TIMx->CCMR1;
 8009a60:	6985      	ldr	r5, [r0, #24]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8009a62:	4015      	ands	r5, r2
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8009a64:	680a      	ldr	r2, [r1, #0]
 8009a66:	4315      	orrs	r5, r2

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 8009a68:	2202      	movs	r2, #2
 8009a6a:	4393      	bics	r3, r2
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8009a6c:	688a      	ldr	r2, [r1, #8]
 8009a6e:	4313      	orrs	r3, r2

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8009a70:	4a15      	ldr	r2, [pc, #84]	; (8009ac8 <TIM_OC1_SetConfig+0x78>)
 8009a72:	4290      	cmp	r0, r2
 8009a74:	d008      	beq.n	8009a88 <TIM_OC1_SetConfig+0x38>
 8009a76:	4e15      	ldr	r6, [pc, #84]	; (8009acc <TIM_OC1_SetConfig+0x7c>)
 8009a78:	42b0      	cmp	r0, r6
 8009a7a:	d005      	beq.n	8009a88 <TIM_OC1_SetConfig+0x38>
 8009a7c:	4e14      	ldr	r6, [pc, #80]	; (8009ad0 <TIM_OC1_SetConfig+0x80>)
 8009a7e:	42b0      	cmp	r0, r6
 8009a80:	d002      	beq.n	8009a88 <TIM_OC1_SetConfig+0x38>
 8009a82:	4e14      	ldr	r6, [pc, #80]	; (8009ad4 <TIM_OC1_SetConfig+0x84>)
 8009a84:	42b0      	cmp	r0, r6
 8009a86:	d116      	bne.n	8009ab6 <TIM_OC1_SetConfig+0x66>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 8009a88:	2608      	movs	r6, #8
 8009a8a:	43b3      	bics	r3, r6
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8009a8c:	68ce      	ldr	r6, [r1, #12]
 8009a8e:	4333      	orrs	r3, r6
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 8009a90:	2604      	movs	r6, #4
 8009a92:	43b3      	bics	r3, r6
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009a94:	4290      	cmp	r0, r2
 8009a96:	d008      	beq.n	8009aaa <TIM_OC1_SetConfig+0x5a>
 8009a98:	4a0c      	ldr	r2, [pc, #48]	; (8009acc <TIM_OC1_SetConfig+0x7c>)
 8009a9a:	4290      	cmp	r0, r2
 8009a9c:	d005      	beq.n	8009aaa <TIM_OC1_SetConfig+0x5a>
 8009a9e:	4a0c      	ldr	r2, [pc, #48]	; (8009ad0 <TIM_OC1_SetConfig+0x80>)
 8009aa0:	4290      	cmp	r0, r2
 8009aa2:	d002      	beq.n	8009aaa <TIM_OC1_SetConfig+0x5a>
 8009aa4:	4a0b      	ldr	r2, [pc, #44]	; (8009ad4 <TIM_OC1_SetConfig+0x84>)
 8009aa6:	4290      	cmp	r0, r2
 8009aa8:	d105      	bne.n	8009ab6 <TIM_OC1_SetConfig+0x66>
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8009aaa:	4a0b      	ldr	r2, [pc, #44]	; (8009ad8 <TIM_OC1_SetConfig+0x88>)
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8009aac:	698e      	ldr	r6, [r1, #24]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8009aae:	4022      	ands	r2, r4
    tmpcr2 |= OC_Config->OCNIdleState;
 8009ab0:	694c      	ldr	r4, [r1, #20]
 8009ab2:	4334      	orrs	r4, r6
 8009ab4:	4314      	orrs	r4, r2

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8009ab6:	684a      	ldr	r2, [r1, #4]
  TIMx->CR2 = tmpcr2;
 8009ab8:	6044      	str	r4, [r0, #4]
  TIMx->CCMR1 = tmpccmrx;
 8009aba:	6185      	str	r5, [r0, #24]
  TIMx->CCR1 = OC_Config->Pulse;
 8009abc:	6342      	str	r2, [r0, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8009abe:	6203      	str	r3, [r0, #32]
}
 8009ac0:	bd70      	pop	{r4, r5, r6, pc}
 8009ac2:	46c0      	nop			; (mov r8, r8)
 8009ac4:	fffeff8c 	.word	0xfffeff8c
 8009ac8:	40012c00 	.word	0x40012c00
 8009acc:	40014000 	.word	0x40014000
 8009ad0:	40014400 	.word	0x40014400
 8009ad4:	40014800 	.word	0x40014800
 8009ad8:	fffffcff 	.word	0xfffffcff

08009adc <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8009adc:	b570      	push	{r4, r5, r6, lr}

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8009ade:	4a18      	ldr	r2, [pc, #96]	; (8009b40 <TIM_OC3_SetConfig+0x64>)
  tmpccer = TIMx->CCER;
 8009ae0:	6a05      	ldr	r5, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8009ae2:	6a03      	ldr	r3, [r0, #32]
 8009ae4:	4013      	ands	r3, r2
 8009ae6:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8009ae8:	6842      	ldr	r2, [r0, #4]
  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8009aea:	4b16      	ldr	r3, [pc, #88]	; (8009b44 <TIM_OC3_SetConfig+0x68>)
  tmpccmrx = TIMx->CCMR2;
 8009aec:	69c4      	ldr	r4, [r0, #28]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8009aee:	401c      	ands	r4, r3
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8009af0:	680b      	ldr	r3, [r1, #0]
 8009af2:	431c      	orrs	r4, r3

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 8009af4:	4b14      	ldr	r3, [pc, #80]	; (8009b48 <TIM_OC3_SetConfig+0x6c>)
 8009af6:	401d      	ands	r5, r3
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8009af8:	688b      	ldr	r3, [r1, #8]
 8009afa:	021b      	lsls	r3, r3, #8
 8009afc:	432b      	orrs	r3, r5

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8009afe:	4d13      	ldr	r5, [pc, #76]	; (8009b4c <TIM_OC3_SetConfig+0x70>)
 8009b00:	42a8      	cmp	r0, r5
 8009b02:	d10e      	bne.n	8009b22 <TIM_OC3_SetConfig+0x46>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 8009b04:	4d12      	ldr	r5, [pc, #72]	; (8009b50 <TIM_OC3_SetConfig+0x74>)
 8009b06:	401d      	ands	r5, r3
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8009b08:	68cb      	ldr	r3, [r1, #12]
 8009b0a:	021b      	lsls	r3, r3, #8
 8009b0c:	432b      	orrs	r3, r5
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 8009b0e:	4d11      	ldr	r5, [pc, #68]	; (8009b54 <TIM_OC3_SetConfig+0x78>)
 8009b10:	402b      	ands	r3, r5
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8009b12:	4d11      	ldr	r5, [pc, #68]	; (8009b58 <TIM_OC3_SetConfig+0x7c>)
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8009b14:	694e      	ldr	r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8009b16:	4015      	ands	r5, r2
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8009b18:	698a      	ldr	r2, [r1, #24]
 8009b1a:	4332      	orrs	r2, r6
 8009b1c:	0112      	lsls	r2, r2, #4
 8009b1e:	432a      	orrs	r2, r5
 8009b20:	e008      	b.n	8009b34 <TIM_OC3_SetConfig+0x58>
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009b22:	4d0e      	ldr	r5, [pc, #56]	; (8009b5c <TIM_OC3_SetConfig+0x80>)
 8009b24:	42a8      	cmp	r0, r5
 8009b26:	d0f4      	beq.n	8009b12 <TIM_OC3_SetConfig+0x36>
 8009b28:	4d0d      	ldr	r5, [pc, #52]	; (8009b60 <TIM_OC3_SetConfig+0x84>)
 8009b2a:	42a8      	cmp	r0, r5
 8009b2c:	d0f1      	beq.n	8009b12 <TIM_OC3_SetConfig+0x36>
 8009b2e:	4d0d      	ldr	r5, [pc, #52]	; (8009b64 <TIM_OC3_SetConfig+0x88>)
 8009b30:	42a8      	cmp	r0, r5
 8009b32:	d0ee      	beq.n	8009b12 <TIM_OC3_SetConfig+0x36>
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8009b34:	6042      	str	r2, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8009b36:	684a      	ldr	r2, [r1, #4]
  TIMx->CCMR2 = tmpccmrx;
 8009b38:	61c4      	str	r4, [r0, #28]
  TIMx->CCR3 = OC_Config->Pulse;
 8009b3a:	63c2      	str	r2, [r0, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8009b3c:	6203      	str	r3, [r0, #32]
}
 8009b3e:	bd70      	pop	{r4, r5, r6, pc}
 8009b40:	fffffeff 	.word	0xfffffeff
 8009b44:	fffeff8c 	.word	0xfffeff8c
 8009b48:	fffffdff 	.word	0xfffffdff
 8009b4c:	40012c00 	.word	0x40012c00
 8009b50:	fffff7ff 	.word	0xfffff7ff
 8009b54:	fffffbff 	.word	0xfffffbff
 8009b58:	ffffcfff 	.word	0xffffcfff
 8009b5c:	40014000 	.word	0x40014000
 8009b60:	40014400 	.word	0x40014400
 8009b64:	40014800 	.word	0x40014800

08009b68 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8009b68:	b530      	push	{r4, r5, lr}

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8009b6a:	4a14      	ldr	r2, [pc, #80]	; (8009bbc <TIM_OC4_SetConfig+0x54>)
  tmpccer = TIMx->CCER;
 8009b6c:	6a04      	ldr	r4, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8009b6e:	6a03      	ldr	r3, [r0, #32]
  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8009b70:	4d13      	ldr	r5, [pc, #76]	; (8009bc0 <TIM_OC4_SetConfig+0x58>)
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8009b72:	4013      	ands	r3, r2
 8009b74:	6203      	str	r3, [r0, #32]
  tmpcr2 =  TIMx->CR2;
 8009b76:	6843      	ldr	r3, [r0, #4]
  tmpccmrx = TIMx->CCMR2;
 8009b78:	69c2      	ldr	r2, [r0, #28]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8009b7a:	402a      	ands	r2, r5

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8009b7c:	680d      	ldr	r5, [r1, #0]
 8009b7e:	022d      	lsls	r5, r5, #8
 8009b80:	4315      	orrs	r5, r2

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 8009b82:	4a10      	ldr	r2, [pc, #64]	; (8009bc4 <TIM_OC4_SetConfig+0x5c>)
 8009b84:	4014      	ands	r4, r2
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8009b86:	688a      	ldr	r2, [r1, #8]
 8009b88:	0312      	lsls	r2, r2, #12
 8009b8a:	4322      	orrs	r2, r4

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009b8c:	4c0e      	ldr	r4, [pc, #56]	; (8009bc8 <TIM_OC4_SetConfig+0x60>)
 8009b8e:	42a0      	cmp	r0, r4
 8009b90:	d008      	beq.n	8009ba4 <TIM_OC4_SetConfig+0x3c>
 8009b92:	4c0e      	ldr	r4, [pc, #56]	; (8009bcc <TIM_OC4_SetConfig+0x64>)
 8009b94:	42a0      	cmp	r0, r4
 8009b96:	d005      	beq.n	8009ba4 <TIM_OC4_SetConfig+0x3c>
 8009b98:	4c0d      	ldr	r4, [pc, #52]	; (8009bd0 <TIM_OC4_SetConfig+0x68>)
 8009b9a:	42a0      	cmp	r0, r4
 8009b9c:	d002      	beq.n	8009ba4 <TIM_OC4_SetConfig+0x3c>
 8009b9e:	4c0d      	ldr	r4, [pc, #52]	; (8009bd4 <TIM_OC4_SetConfig+0x6c>)
 8009ba0:	42a0      	cmp	r0, r4
 8009ba2:	d104      	bne.n	8009bae <TIM_OC4_SetConfig+0x46>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 8009ba4:	4c0c      	ldr	r4, [pc, #48]	; (8009bd8 <TIM_OC4_SetConfig+0x70>)
 8009ba6:	401c      	ands	r4, r3

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8009ba8:	694b      	ldr	r3, [r1, #20]
 8009baa:	019b      	lsls	r3, r3, #6
 8009bac:	4323      	orrs	r3, r4
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8009bae:	6043      	str	r3, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8009bb0:	684b      	ldr	r3, [r1, #4]
  TIMx->CCMR2 = tmpccmrx;
 8009bb2:	61c5      	str	r5, [r0, #28]
  TIMx->CCR4 = OC_Config->Pulse;
 8009bb4:	6403      	str	r3, [r0, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8009bb6:	6202      	str	r2, [r0, #32]
}
 8009bb8:	bd30      	pop	{r4, r5, pc}
 8009bba:	46c0      	nop			; (mov r8, r8)
 8009bbc:	ffffefff 	.word	0xffffefff
 8009bc0:	feff8cff 	.word	0xfeff8cff
 8009bc4:	ffffdfff 	.word	0xffffdfff
 8009bc8:	40012c00 	.word	0x40012c00
 8009bcc:	40014000 	.word	0x40014000
 8009bd0:	40014400 	.word	0x40014400
 8009bd4:	40014800 	.word	0x40014800
 8009bd8:	ffffbfff 	.word	0xffffbfff

08009bdc <TIM_OC5_SetConfig>:
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC5_SetConfig(TIM_TypeDef *TIMx,
                              const TIM_OC_InitTypeDef *OC_Config)
{
 8009bdc:	b570      	push	{r4, r5, r6, lr}
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8009bde:	6a06      	ldr	r6, [r0, #32]

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC5E;
 8009be0:	4c12      	ldr	r4, [pc, #72]	; (8009c2c <TIM_OC5_SetConfig+0x50>)
 8009be2:	6a03      	ldr	r3, [r0, #32]
  tmpcr2 =  TIMx->CR2;
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
 8009be4:	4a12      	ldr	r2, [pc, #72]	; (8009c30 <TIM_OC5_SetConfig+0x54>)
  TIMx->CCER &= ~TIM_CCER_CC5E;
 8009be6:	4023      	ands	r3, r4
 8009be8:	6203      	str	r3, [r0, #32]
  tmpcr2 =  TIMx->CR2;
 8009bea:	6843      	ldr	r3, [r0, #4]
  tmpccmrx = TIMx->CCMR3;
 8009bec:	6d45      	ldr	r5, [r0, #84]	; 0x54
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
 8009bee:	4015      	ands	r5, r2
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8009bf0:	680a      	ldr	r2, [r1, #0]
 8009bf2:	4315      	orrs	r5, r2

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC5P;
 8009bf4:	4a0f      	ldr	r2, [pc, #60]	; (8009c34 <TIM_OC5_SetConfig+0x58>)
 8009bf6:	4016      	ands	r6, r2
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 16U);
 8009bf8:	688a      	ldr	r2, [r1, #8]
 8009bfa:	0412      	lsls	r2, r2, #16
 8009bfc:	4332      	orrs	r2, r6

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009bfe:	4e0e      	ldr	r6, [pc, #56]	; (8009c38 <TIM_OC5_SetConfig+0x5c>)
 8009c00:	42b0      	cmp	r0, r6
 8009c02:	d008      	beq.n	8009c16 <TIM_OC5_SetConfig+0x3a>
 8009c04:	4e0d      	ldr	r6, [pc, #52]	; (8009c3c <TIM_OC5_SetConfig+0x60>)
 8009c06:	42b0      	cmp	r0, r6
 8009c08:	d005      	beq.n	8009c16 <TIM_OC5_SetConfig+0x3a>
 8009c0a:	4e0d      	ldr	r6, [pc, #52]	; (8009c40 <TIM_OC5_SetConfig+0x64>)
 8009c0c:	42b0      	cmp	r0, r6
 8009c0e:	d002      	beq.n	8009c16 <TIM_OC5_SetConfig+0x3a>
 8009c10:	4e0c      	ldr	r6, [pc, #48]	; (8009c44 <TIM_OC5_SetConfig+0x68>)
 8009c12:	42b0      	cmp	r0, r6
 8009c14:	d103      	bne.n	8009c1e <TIM_OC5_SetConfig+0x42>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS5;
 8009c16:	401c      	ands	r4, r3
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 8U);
 8009c18:	694b      	ldr	r3, [r1, #20]
 8009c1a:	021b      	lsls	r3, r3, #8
 8009c1c:	4323      	orrs	r3, r4
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8009c1e:	6043      	str	r3, [r0, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;

  /* Set the Capture Compare Register value */
  TIMx->CCR5 = OC_Config->Pulse;
 8009c20:	684b      	ldr	r3, [r1, #4]
  TIMx->CCMR3 = tmpccmrx;
 8009c22:	6545      	str	r5, [r0, #84]	; 0x54
  TIMx->CCR5 = OC_Config->Pulse;
 8009c24:	6583      	str	r3, [r0, #88]	; 0x58

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8009c26:	6202      	str	r2, [r0, #32]
}
 8009c28:	bd70      	pop	{r4, r5, r6, pc}
 8009c2a:	46c0      	nop			; (mov r8, r8)
 8009c2c:	fffeffff 	.word	0xfffeffff
 8009c30:	fffeff8f 	.word	0xfffeff8f
 8009c34:	fffdffff 	.word	0xfffdffff
 8009c38:	40012c00 	.word	0x40012c00
 8009c3c:	40014000 	.word	0x40014000
 8009c40:	40014400 	.word	0x40014400
 8009c44:	40014800 	.word	0x40014800

08009c48 <TIM_OC6_SetConfig>:
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC6_SetConfig(TIM_TypeDef *TIMx,
                              const TIM_OC_InitTypeDef *OC_Config)
{
 8009c48:	b530      	push	{r4, r5, lr}

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC6E;
 8009c4a:	4a14      	ldr	r2, [pc, #80]	; (8009c9c <TIM_OC6_SetConfig+0x54>)
  tmpccer = TIMx->CCER;
 8009c4c:	6a04      	ldr	r4, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC6E;
 8009c4e:	6a03      	ldr	r3, [r0, #32]
  tmpcr2 =  TIMx->CR2;
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
 8009c50:	4d13      	ldr	r5, [pc, #76]	; (8009ca0 <TIM_OC6_SetConfig+0x58>)
  TIMx->CCER &= ~TIM_CCER_CC6E;
 8009c52:	4013      	ands	r3, r2
 8009c54:	6203      	str	r3, [r0, #32]
  tmpcr2 =  TIMx->CR2;
 8009c56:	6843      	ldr	r3, [r0, #4]
  tmpccmrx = TIMx->CCMR3;
 8009c58:	6d42      	ldr	r2, [r0, #84]	; 0x54
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
 8009c5a:	402a      	ands	r2, r5
  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8009c5c:	680d      	ldr	r5, [r1, #0]
 8009c5e:	022d      	lsls	r5, r5, #8
 8009c60:	4315      	orrs	r5, r2

  /* Reset the Output Polarity level */
  tmpccer &= (uint32_t)~TIM_CCER_CC6P;
 8009c62:	4a10      	ldr	r2, [pc, #64]	; (8009ca4 <TIM_OC6_SetConfig+0x5c>)
 8009c64:	4014      	ands	r4, r2
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 20U);
 8009c66:	688a      	ldr	r2, [r1, #8]
 8009c68:	0512      	lsls	r2, r2, #20
 8009c6a:	4322      	orrs	r2, r4

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009c6c:	4c0e      	ldr	r4, [pc, #56]	; (8009ca8 <TIM_OC6_SetConfig+0x60>)
 8009c6e:	42a0      	cmp	r0, r4
 8009c70:	d008      	beq.n	8009c84 <TIM_OC6_SetConfig+0x3c>
 8009c72:	4c0e      	ldr	r4, [pc, #56]	; (8009cac <TIM_OC6_SetConfig+0x64>)
 8009c74:	42a0      	cmp	r0, r4
 8009c76:	d005      	beq.n	8009c84 <TIM_OC6_SetConfig+0x3c>
 8009c78:	4c0d      	ldr	r4, [pc, #52]	; (8009cb0 <TIM_OC6_SetConfig+0x68>)
 8009c7a:	42a0      	cmp	r0, r4
 8009c7c:	d002      	beq.n	8009c84 <TIM_OC6_SetConfig+0x3c>
 8009c7e:	4c0d      	ldr	r4, [pc, #52]	; (8009cb4 <TIM_OC6_SetConfig+0x6c>)
 8009c80:	42a0      	cmp	r0, r4
 8009c82:	d104      	bne.n	8009c8e <TIM_OC6_SetConfig+0x46>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS6;
 8009c84:	4c0c      	ldr	r4, [pc, #48]	; (8009cb8 <TIM_OC6_SetConfig+0x70>)
 8009c86:	401c      	ands	r4, r3
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 10U);
 8009c88:	694b      	ldr	r3, [r1, #20]
 8009c8a:	029b      	lsls	r3, r3, #10
 8009c8c:	4323      	orrs	r3, r4
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8009c8e:	6043      	str	r3, [r0, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;

  /* Set the Capture Compare Register value */
  TIMx->CCR6 = OC_Config->Pulse;
 8009c90:	684b      	ldr	r3, [r1, #4]
  TIMx->CCMR3 = tmpccmrx;
 8009c92:	6545      	str	r5, [r0, #84]	; 0x54
  TIMx->CCR6 = OC_Config->Pulse;
 8009c94:	65c3      	str	r3, [r0, #92]	; 0x5c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8009c96:	6202      	str	r2, [r0, #32]
}
 8009c98:	bd30      	pop	{r4, r5, pc}
 8009c9a:	46c0      	nop			; (mov r8, r8)
 8009c9c:	ffefffff 	.word	0xffefffff
 8009ca0:	feff8fff 	.word	0xfeff8fff
 8009ca4:	ffdfffff 	.word	0xffdfffff
 8009ca8:	40012c00 	.word	0x40012c00
 8009cac:	40014000 	.word	0x40014000
 8009cb0:	40014400 	.word	0x40014400
 8009cb4:	40014800 	.word	0x40014800
 8009cb8:	fffbffff 	.word	0xfffbffff

08009cbc <TIM_Base_SetConfig>:
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8009cbc:	4a1f      	ldr	r2, [pc, #124]	; (8009d3c <TIM_Base_SetConfig+0x80>)
{
 8009cbe:	b510      	push	{r4, lr}
  tmpcr1 = TIMx->CR1;
 8009cc0:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8009cc2:	4290      	cmp	r0, r2
 8009cc4:	d002      	beq.n	8009ccc <TIM_Base_SetConfig+0x10>
 8009cc6:	4c1e      	ldr	r4, [pc, #120]	; (8009d40 <TIM_Base_SetConfig+0x84>)
 8009cc8:	42a0      	cmp	r0, r4
 8009cca:	d108      	bne.n	8009cde <TIM_Base_SetConfig+0x22>
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8009ccc:	2470      	movs	r4, #112	; 0x70
 8009cce:	43a3      	bics	r3, r4
    tmpcr1 |= Structure->CounterMode;
 8009cd0:	684c      	ldr	r4, [r1, #4]
 8009cd2:	4323      	orrs	r3, r4
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8009cd4:	4290      	cmp	r0, r2
 8009cd6:	d00e      	beq.n	8009cf6 <TIM_Base_SetConfig+0x3a>
 8009cd8:	4c19      	ldr	r4, [pc, #100]	; (8009d40 <TIM_Base_SetConfig+0x84>)
 8009cda:	42a0      	cmp	r0, r4
 8009cdc:	d00b      	beq.n	8009cf6 <TIM_Base_SetConfig+0x3a>
 8009cde:	4c19      	ldr	r4, [pc, #100]	; (8009d44 <TIM_Base_SetConfig+0x88>)
 8009ce0:	42a0      	cmp	r0, r4
 8009ce2:	d008      	beq.n	8009cf6 <TIM_Base_SetConfig+0x3a>
 8009ce4:	4c18      	ldr	r4, [pc, #96]	; (8009d48 <TIM_Base_SetConfig+0x8c>)
 8009ce6:	42a0      	cmp	r0, r4
 8009ce8:	d005      	beq.n	8009cf6 <TIM_Base_SetConfig+0x3a>
 8009cea:	4c18      	ldr	r4, [pc, #96]	; (8009d4c <TIM_Base_SetConfig+0x90>)
 8009cec:	42a0      	cmp	r0, r4
 8009cee:	d002      	beq.n	8009cf6 <TIM_Base_SetConfig+0x3a>
 8009cf0:	4c17      	ldr	r4, [pc, #92]	; (8009d50 <TIM_Base_SetConfig+0x94>)
 8009cf2:	42a0      	cmp	r0, r4
 8009cf4:	d103      	bne.n	8009cfe <TIM_Base_SetConfig+0x42>
    tmpcr1 &= ~TIM_CR1_CKD;
 8009cf6:	4c17      	ldr	r4, [pc, #92]	; (8009d54 <TIM_Base_SetConfig+0x98>)
 8009cf8:	401c      	ands	r4, r3
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8009cfa:	68cb      	ldr	r3, [r1, #12]
 8009cfc:	4323      	orrs	r3, r4
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8009cfe:	2480      	movs	r4, #128	; 0x80
 8009d00:	43a3      	bics	r3, r4
 8009d02:	694c      	ldr	r4, [r1, #20]
 8009d04:	4323      	orrs	r3, r4
  TIMx->CR1 = tmpcr1;
 8009d06:	6003      	str	r3, [r0, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 8009d08:	688b      	ldr	r3, [r1, #8]
 8009d0a:	62c3      	str	r3, [r0, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 8009d0c:	680b      	ldr	r3, [r1, #0]
 8009d0e:	6283      	str	r3, [r0, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8009d10:	4290      	cmp	r0, r2
 8009d12:	d008      	beq.n	8009d26 <TIM_Base_SetConfig+0x6a>
 8009d14:	4b0c      	ldr	r3, [pc, #48]	; (8009d48 <TIM_Base_SetConfig+0x8c>)
 8009d16:	4298      	cmp	r0, r3
 8009d18:	d005      	beq.n	8009d26 <TIM_Base_SetConfig+0x6a>
 8009d1a:	4b0c      	ldr	r3, [pc, #48]	; (8009d4c <TIM_Base_SetConfig+0x90>)
 8009d1c:	4298      	cmp	r0, r3
 8009d1e:	d002      	beq.n	8009d26 <TIM_Base_SetConfig+0x6a>
 8009d20:	4b0b      	ldr	r3, [pc, #44]	; (8009d50 <TIM_Base_SetConfig+0x94>)
 8009d22:	4298      	cmp	r0, r3
 8009d24:	d101      	bne.n	8009d2a <TIM_Base_SetConfig+0x6e>
    TIMx->RCR = Structure->RepetitionCounter;
 8009d26:	690b      	ldr	r3, [r1, #16]
 8009d28:	6303      	str	r3, [r0, #48]	; 0x30
  TIMx->EGR = TIM_EGR_UG;
 8009d2a:	2201      	movs	r2, #1
 8009d2c:	6142      	str	r2, [r0, #20]
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 8009d2e:	6903      	ldr	r3, [r0, #16]
 8009d30:	4213      	tst	r3, r2
 8009d32:	d002      	beq.n	8009d3a <TIM_Base_SetConfig+0x7e>
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8009d34:	6903      	ldr	r3, [r0, #16]
 8009d36:	4393      	bics	r3, r2
 8009d38:	6103      	str	r3, [r0, #16]
}
 8009d3a:	bd10      	pop	{r4, pc}
 8009d3c:	40012c00 	.word	0x40012c00
 8009d40:	40000400 	.word	0x40000400
 8009d44:	40002000 	.word	0x40002000
 8009d48:	40014000 	.word	0x40014000
 8009d4c:	40014400 	.word	0x40014400
 8009d50:	40014800 	.word	0x40014800
 8009d54:	fffffcff 	.word	0xfffffcff

08009d58 <HAL_TIM_Base_Init>:
{
 8009d58:	b570      	push	{r4, r5, r6, lr}
 8009d5a:	0004      	movs	r4, r0
    return HAL_ERROR;
 8009d5c:	2001      	movs	r0, #1
  if (htim == NULL)
 8009d5e:	2c00      	cmp	r4, #0
 8009d60:	d023      	beq.n	8009daa <HAL_TIM_Base_Init+0x52>
  if (htim->State == HAL_TIM_STATE_RESET)
 8009d62:	0025      	movs	r5, r4
 8009d64:	353d      	adds	r5, #61	; 0x3d
 8009d66:	782b      	ldrb	r3, [r5, #0]
 8009d68:	b2da      	uxtb	r2, r3
 8009d6a:	2b00      	cmp	r3, #0
 8009d6c:	d105      	bne.n	8009d7a <HAL_TIM_Base_Init+0x22>
    htim->Lock = HAL_UNLOCKED;
 8009d6e:	0023      	movs	r3, r4
 8009d70:	333c      	adds	r3, #60	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8009d72:	0020      	movs	r0, r4
    htim->Lock = HAL_UNLOCKED;
 8009d74:	701a      	strb	r2, [r3, #0]
    HAL_TIM_Base_MspInit(htim);
 8009d76:	f7fe fdc7 	bl	8008908 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8009d7a:	2302      	movs	r3, #2
 8009d7c:	702b      	strb	r3, [r5, #0]
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8009d7e:	6820      	ldr	r0, [r4, #0]
 8009d80:	1d21      	adds	r1, r4, #4
 8009d82:	f7ff ff9b 	bl	8009cbc <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8009d86:	0022      	movs	r2, r4
 8009d88:	2301      	movs	r3, #1
  return HAL_OK;
 8009d8a:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8009d8c:	3248      	adds	r2, #72	; 0x48
 8009d8e:	7013      	strb	r3, [r2, #0]
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8009d90:	3447      	adds	r4, #71	; 0x47
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8009d92:	3a0a      	subs	r2, #10
 8009d94:	7013      	strb	r3, [r2, #0]
 8009d96:	7053      	strb	r3, [r2, #1]
 8009d98:	7093      	strb	r3, [r2, #2]
 8009d9a:	70d3      	strb	r3, [r2, #3]
 8009d9c:	7113      	strb	r3, [r2, #4]
 8009d9e:	7153      	strb	r3, [r2, #5]
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8009da0:	7193      	strb	r3, [r2, #6]
 8009da2:	71d3      	strb	r3, [r2, #7]
 8009da4:	7213      	strb	r3, [r2, #8]
 8009da6:	7023      	strb	r3, [r4, #0]
  htim->State = HAL_TIM_STATE_READY;
 8009da8:	702b      	strb	r3, [r5, #0]
}
 8009daa:	bd70      	pop	{r4, r5, r6, pc}

08009dac <HAL_TIM_PWM_Init>:
{
 8009dac:	b570      	push	{r4, r5, r6, lr}
 8009dae:	0004      	movs	r4, r0
    return HAL_ERROR;
 8009db0:	2001      	movs	r0, #1
  if (htim == NULL)
 8009db2:	2c00      	cmp	r4, #0
 8009db4:	d023      	beq.n	8009dfe <HAL_TIM_PWM_Init+0x52>
  if (htim->State == HAL_TIM_STATE_RESET)
 8009db6:	0025      	movs	r5, r4
 8009db8:	353d      	adds	r5, #61	; 0x3d
 8009dba:	782b      	ldrb	r3, [r5, #0]
 8009dbc:	b2da      	uxtb	r2, r3
 8009dbe:	2b00      	cmp	r3, #0
 8009dc0:	d105      	bne.n	8009dce <HAL_TIM_PWM_Init+0x22>
    htim->Lock = HAL_UNLOCKED;
 8009dc2:	0023      	movs	r3, r4
 8009dc4:	333c      	adds	r3, #60	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 8009dc6:	0020      	movs	r0, r4
    htim->Lock = HAL_UNLOCKED;
 8009dc8:	701a      	strb	r2, [r3, #0]
    HAL_TIM_PWM_MspInit(htim);
 8009dca:	f7fe fd87 	bl	80088dc <HAL_TIM_PWM_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8009dce:	2302      	movs	r3, #2
 8009dd0:	702b      	strb	r3, [r5, #0]
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8009dd2:	6820      	ldr	r0, [r4, #0]
 8009dd4:	1d21      	adds	r1, r4, #4
 8009dd6:	f7ff ff71 	bl	8009cbc <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8009dda:	0022      	movs	r2, r4
 8009ddc:	2301      	movs	r3, #1
  return HAL_OK;
 8009dde:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8009de0:	3248      	adds	r2, #72	; 0x48
 8009de2:	7013      	strb	r3, [r2, #0]
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8009de4:	3447      	adds	r4, #71	; 0x47
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8009de6:	3a0a      	subs	r2, #10
 8009de8:	7013      	strb	r3, [r2, #0]
 8009dea:	7053      	strb	r3, [r2, #1]
 8009dec:	7093      	strb	r3, [r2, #2]
 8009dee:	70d3      	strb	r3, [r2, #3]
 8009df0:	7113      	strb	r3, [r2, #4]
 8009df2:	7153      	strb	r3, [r2, #5]
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8009df4:	7193      	strb	r3, [r2, #6]
 8009df6:	71d3      	strb	r3, [r2, #7]
 8009df8:	7213      	strb	r3, [r2, #8]
 8009dfa:	7023      	strb	r3, [r4, #0]
  htim->State = HAL_TIM_STATE_READY;
 8009dfc:	702b      	strb	r3, [r5, #0]
}
 8009dfe:	bd70      	pop	{r4, r5, r6, pc}

08009e00 <TIM_OC2_SetConfig>:
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8009e00:	2210      	movs	r2, #16
{
 8009e02:	b570      	push	{r4, r5, r6, lr}
  tmpccer = TIMx->CCER;
 8009e04:	6a05      	ldr	r5, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8009e06:	6a03      	ldr	r3, [r0, #32]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8009e08:	4c17      	ldr	r4, [pc, #92]	; (8009e68 <TIM_OC2_SetConfig+0x68>)
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8009e0a:	4393      	bics	r3, r2
 8009e0c:	6203      	str	r3, [r0, #32]
  tmpcr2 =  TIMx->CR2;
 8009e0e:	6843      	ldr	r3, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 8009e10:	6982      	ldr	r2, [r0, #24]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8009e12:	4022      	ands	r2, r4
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8009e14:	680c      	ldr	r4, [r1, #0]
 8009e16:	0224      	lsls	r4, r4, #8
 8009e18:	4314      	orrs	r4, r2
  tmpccer &= ~TIM_CCER_CC2P;
 8009e1a:	2220      	movs	r2, #32
 8009e1c:	4395      	bics	r5, r2
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8009e1e:	688a      	ldr	r2, [r1, #8]
 8009e20:	0112      	lsls	r2, r2, #4
 8009e22:	432a      	orrs	r2, r5
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8009e24:	4d11      	ldr	r5, [pc, #68]	; (8009e6c <TIM_OC2_SetConfig+0x6c>)
 8009e26:	42a8      	cmp	r0, r5
 8009e28:	d10f      	bne.n	8009e4a <TIM_OC2_SetConfig+0x4a>
    tmpccer &= ~TIM_CCER_CC2NP;
 8009e2a:	2580      	movs	r5, #128	; 0x80
 8009e2c:	43aa      	bics	r2, r5
 8009e2e:	0016      	movs	r6, r2
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8009e30:	68ca      	ldr	r2, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NE;
 8009e32:	3d40      	subs	r5, #64	; 0x40
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8009e34:	0112      	lsls	r2, r2, #4
 8009e36:	4332      	orrs	r2, r6
    tmpccer &= ~TIM_CCER_CC2NE;
 8009e38:	43aa      	bics	r2, r5
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8009e3a:	4d0d      	ldr	r5, [pc, #52]	; (8009e70 <TIM_OC2_SetConfig+0x70>)
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 8009e3c:	694e      	ldr	r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8009e3e:	401d      	ands	r5, r3
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8009e40:	698b      	ldr	r3, [r1, #24]
 8009e42:	4333      	orrs	r3, r6
 8009e44:	009b      	lsls	r3, r3, #2
 8009e46:	432b      	orrs	r3, r5
 8009e48:	e008      	b.n	8009e5c <TIM_OC2_SetConfig+0x5c>
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009e4a:	4d0a      	ldr	r5, [pc, #40]	; (8009e74 <TIM_OC2_SetConfig+0x74>)
 8009e4c:	42a8      	cmp	r0, r5
 8009e4e:	d0f4      	beq.n	8009e3a <TIM_OC2_SetConfig+0x3a>
 8009e50:	4d09      	ldr	r5, [pc, #36]	; (8009e78 <TIM_OC2_SetConfig+0x78>)
 8009e52:	42a8      	cmp	r0, r5
 8009e54:	d0f1      	beq.n	8009e3a <TIM_OC2_SetConfig+0x3a>
 8009e56:	4d09      	ldr	r5, [pc, #36]	; (8009e7c <TIM_OC2_SetConfig+0x7c>)
 8009e58:	42a8      	cmp	r0, r5
 8009e5a:	d0ee      	beq.n	8009e3a <TIM_OC2_SetConfig+0x3a>
  TIMx->CR2 = tmpcr2;
 8009e5c:	6043      	str	r3, [r0, #4]
  TIMx->CCR2 = OC_Config->Pulse;
 8009e5e:	684b      	ldr	r3, [r1, #4]
  TIMx->CCMR1 = tmpccmrx;
 8009e60:	6184      	str	r4, [r0, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 8009e62:	6383      	str	r3, [r0, #56]	; 0x38
  TIMx->CCER = tmpccer;
 8009e64:	6202      	str	r2, [r0, #32]
}
 8009e66:	bd70      	pop	{r4, r5, r6, pc}
 8009e68:	feff8cff 	.word	0xfeff8cff
 8009e6c:	40012c00 	.word	0x40012c00
 8009e70:	fffff3ff 	.word	0xfffff3ff
 8009e74:	40014000 	.word	0x40014000
 8009e78:	40014400 	.word	0x40014400
 8009e7c:	40014800 	.word	0x40014800

08009e80 <HAL_TIM_PWM_ConfigChannel>:
{
 8009e80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(htim);
 8009e82:	0006      	movs	r6, r0
 8009e84:	363c      	adds	r6, #60	; 0x3c
{
 8009e86:	0015      	movs	r5, r2
  __HAL_LOCK(htim);
 8009e88:	7832      	ldrb	r2, [r6, #0]
{
 8009e8a:	0003      	movs	r3, r0
 8009e8c:	000c      	movs	r4, r1
  __HAL_LOCK(htim);
 8009e8e:	2002      	movs	r0, #2
 8009e90:	2a01      	cmp	r2, #1
 8009e92:	d00c      	beq.n	8009eae <HAL_TIM_PWM_ConfigChannel+0x2e>
 8009e94:	3801      	subs	r0, #1
 8009e96:	7030      	strb	r0, [r6, #0]
  switch (Channel)
 8009e98:	2d0c      	cmp	r5, #12
 8009e9a:	d053      	beq.n	8009f44 <HAL_TIM_PWM_ConfigChannel+0xc4>
 8009e9c:	d808      	bhi.n	8009eb0 <HAL_TIM_PWM_ConfigChannel+0x30>
 8009e9e:	2d04      	cmp	r5, #4
 8009ea0:	d02d      	beq.n	8009efe <HAL_TIM_PWM_ConfigChannel+0x7e>
 8009ea2:	2d08      	cmp	r5, #8
 8009ea4:	d03e      	beq.n	8009f24 <HAL_TIM_PWM_ConfigChannel+0xa4>
 8009ea6:	2d00      	cmp	r5, #0
 8009ea8:	d017      	beq.n	8009eda <HAL_TIM_PWM_ConfigChannel+0x5a>
  __HAL_UNLOCK(htim);
 8009eaa:	2300      	movs	r3, #0
 8009eac:	7033      	strb	r3, [r6, #0]
}
 8009eae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  switch (Channel)
 8009eb0:	2d10      	cmp	r5, #16
 8009eb2:	d05a      	beq.n	8009f6a <HAL_TIM_PWM_ConfigChannel+0xea>
 8009eb4:	2d14      	cmp	r5, #20
 8009eb6:	d1f8      	bne.n	8009eaa <HAL_TIM_PWM_ConfigChannel+0x2a>
      TIM_OC6_SetConfig(htim->Instance, sConfig);
 8009eb8:	681d      	ldr	r5, [r3, #0]
 8009eba:	0028      	movs	r0, r5
 8009ebc:	f7ff fec4 	bl	8009c48 <TIM_OC6_SetConfig>
      htim->Instance->CCMR3 |= TIM_CCMR3_OC6PE;
 8009ec0:	2380      	movs	r3, #128	; 0x80
 8009ec2:	6d6a      	ldr	r2, [r5, #84]	; 0x54
 8009ec4:	011b      	lsls	r3, r3, #4
 8009ec6:	4313      	orrs	r3, r2
 8009ec8:	656b      	str	r3, [r5, #84]	; 0x54
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC6FE;
 8009eca:	6d6b      	ldr	r3, [r5, #84]	; 0x54
 8009ecc:	4a2f      	ldr	r2, [pc, #188]	; (8009f8c <HAL_TIM_PWM_ConfigChannel+0x10c>)
 8009ece:	4013      	ands	r3, r2
 8009ed0:	656b      	str	r3, [r5, #84]	; 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
 8009ed2:	6923      	ldr	r3, [r4, #16]
 8009ed4:	6d6a      	ldr	r2, [r5, #84]	; 0x54
 8009ed6:	021b      	lsls	r3, r3, #8
 8009ed8:	e055      	b.n	8009f86 <HAL_TIM_PWM_ConfigChannel+0x106>
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8009eda:	681f      	ldr	r7, [r3, #0]
 8009edc:	0038      	movs	r0, r7
 8009ede:	f7ff fdb7 	bl	8009a50 <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8009ee2:	2308      	movs	r3, #8
 8009ee4:	69ba      	ldr	r2, [r7, #24]
 8009ee6:	4313      	orrs	r3, r2
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 8009ee8:	2204      	movs	r2, #4
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8009eea:	61bb      	str	r3, [r7, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 8009eec:	69bb      	ldr	r3, [r7, #24]
 8009eee:	4393      	bics	r3, r2
 8009ef0:	61bb      	str	r3, [r7, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8009ef2:	69bb      	ldr	r3, [r7, #24]
 8009ef4:	6922      	ldr	r2, [r4, #16]
 8009ef6:	4313      	orrs	r3, r2
 8009ef8:	61bb      	str	r3, [r7, #24]
  HAL_StatusTypeDef status = HAL_OK;
 8009efa:	2000      	movs	r0, #0
      break;
 8009efc:	e7d5      	b.n	8009eaa <HAL_TIM_PWM_ConfigChannel+0x2a>
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8009efe:	681d      	ldr	r5, [r3, #0]
 8009f00:	0028      	movs	r0, r5
 8009f02:	f7ff ff7d 	bl	8009e00 <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8009f06:	2380      	movs	r3, #128	; 0x80
 8009f08:	69aa      	ldr	r2, [r5, #24]
 8009f0a:	011b      	lsls	r3, r3, #4
 8009f0c:	4313      	orrs	r3, r2
 8009f0e:	61ab      	str	r3, [r5, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8009f10:	69ab      	ldr	r3, [r5, #24]
 8009f12:	4a1e      	ldr	r2, [pc, #120]	; (8009f8c <HAL_TIM_PWM_ConfigChannel+0x10c>)
 8009f14:	4013      	ands	r3, r2
 8009f16:	61ab      	str	r3, [r5, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8009f18:	6923      	ldr	r3, [r4, #16]
 8009f1a:	69aa      	ldr	r2, [r5, #24]
 8009f1c:	021b      	lsls	r3, r3, #8
 8009f1e:	4313      	orrs	r3, r2
 8009f20:	61ab      	str	r3, [r5, #24]
      break;
 8009f22:	e7ea      	b.n	8009efa <HAL_TIM_PWM_ConfigChannel+0x7a>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 8009f24:	681f      	ldr	r7, [r3, #0]
 8009f26:	0038      	movs	r0, r7
 8009f28:	f7ff fdd8 	bl	8009adc <TIM_OC3_SetConfig>
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 8009f2c:	2204      	movs	r2, #4
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8009f2e:	69fb      	ldr	r3, [r7, #28]
 8009f30:	431d      	orrs	r5, r3
 8009f32:	61fd      	str	r5, [r7, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 8009f34:	69fb      	ldr	r3, [r7, #28]
 8009f36:	4393      	bics	r3, r2
 8009f38:	61fb      	str	r3, [r7, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8009f3a:	69fb      	ldr	r3, [r7, #28]
 8009f3c:	6922      	ldr	r2, [r4, #16]
 8009f3e:	4313      	orrs	r3, r2
 8009f40:	61fb      	str	r3, [r7, #28]
      break;
 8009f42:	e7da      	b.n	8009efa <HAL_TIM_PWM_ConfigChannel+0x7a>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 8009f44:	681d      	ldr	r5, [r3, #0]
 8009f46:	0028      	movs	r0, r5
 8009f48:	f7ff fe0e 	bl	8009b68 <TIM_OC4_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8009f4c:	2380      	movs	r3, #128	; 0x80
 8009f4e:	69ea      	ldr	r2, [r5, #28]
 8009f50:	011b      	lsls	r3, r3, #4
 8009f52:	4313      	orrs	r3, r2
 8009f54:	61eb      	str	r3, [r5, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8009f56:	69eb      	ldr	r3, [r5, #28]
 8009f58:	4a0c      	ldr	r2, [pc, #48]	; (8009f8c <HAL_TIM_PWM_ConfigChannel+0x10c>)
 8009f5a:	4013      	ands	r3, r2
 8009f5c:	61eb      	str	r3, [r5, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8009f5e:	6923      	ldr	r3, [r4, #16]
 8009f60:	69ea      	ldr	r2, [r5, #28]
 8009f62:	021b      	lsls	r3, r3, #8
 8009f64:	4313      	orrs	r3, r2
 8009f66:	61eb      	str	r3, [r5, #28]
      break;
 8009f68:	e7c7      	b.n	8009efa <HAL_TIM_PWM_ConfigChannel+0x7a>
      TIM_OC5_SetConfig(htim->Instance, sConfig);
 8009f6a:	681d      	ldr	r5, [r3, #0]
 8009f6c:	0028      	movs	r0, r5
 8009f6e:	f7ff fe35 	bl	8009bdc <TIM_OC5_SetConfig>
      htim->Instance->CCMR3 |= TIM_CCMR3_OC5PE;
 8009f72:	2308      	movs	r3, #8
 8009f74:	6d6a      	ldr	r2, [r5, #84]	; 0x54
 8009f76:	4313      	orrs	r3, r2
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC5FE;
 8009f78:	2204      	movs	r2, #4
      htim->Instance->CCMR3 |= TIM_CCMR3_OC5PE;
 8009f7a:	656b      	str	r3, [r5, #84]	; 0x54
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC5FE;
 8009f7c:	6d6b      	ldr	r3, [r5, #84]	; 0x54
 8009f7e:	4393      	bics	r3, r2
 8009f80:	656b      	str	r3, [r5, #84]	; 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode;
 8009f82:	6d6b      	ldr	r3, [r5, #84]	; 0x54
 8009f84:	6922      	ldr	r2, [r4, #16]
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
 8009f86:	4313      	orrs	r3, r2
 8009f88:	656b      	str	r3, [r5, #84]	; 0x54
 8009f8a:	e7b6      	b.n	8009efa <HAL_TIM_PWM_ConfigChannel+0x7a>
 8009f8c:	fffffbff 	.word	0xfffffbff

08009f90 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8009f90:	b530      	push	{r4, r5, lr}
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8009f92:	6884      	ldr	r4, [r0, #8]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8009f94:	4d03      	ldr	r5, [pc, #12]	; (8009fa4 <TIM_ETR_SetConfig+0x14>)

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8009f96:	430a      	orrs	r2, r1
 8009f98:	021b      	lsls	r3, r3, #8
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8009f9a:	402c      	ands	r4, r5
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8009f9c:	4313      	orrs	r3, r2
 8009f9e:	4323      	orrs	r3, r4

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8009fa0:	6083      	str	r3, [r0, #8]
}
 8009fa2:	bd30      	pop	{r4, r5, pc}
 8009fa4:	ffff00ff 	.word	0xffff00ff

08009fa8 <HAL_TIM_ConfigClockSource>:
{
 8009fa8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(htim);
 8009faa:	0005      	movs	r5, r0
 8009fac:	2402      	movs	r4, #2
 8009fae:	353c      	adds	r5, #60	; 0x3c
 8009fb0:	782a      	ldrb	r2, [r5, #0]
{
 8009fb2:	0003      	movs	r3, r0
  __HAL_LOCK(htim);
 8009fb4:	0020      	movs	r0, r4
 8009fb6:	2a01      	cmp	r2, #1
 8009fb8:	d01c      	beq.n	8009ff4 <HAL_TIM_ConfigClockSource+0x4c>
  htim->State = HAL_TIM_STATE_BUSY;
 8009fba:	001e      	movs	r6, r3
  __HAL_LOCK(htim);
 8009fbc:	2201      	movs	r2, #1
  htim->State = HAL_TIM_STATE_BUSY;
 8009fbe:	363d      	adds	r6, #61	; 0x3d
  __HAL_LOCK(htim);
 8009fc0:	702a      	strb	r2, [r5, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8009fc2:	7034      	strb	r4, [r6, #0]
  tmpsmcr = htim->Instance->SMCR;
 8009fc4:	681c      	ldr	r4, [r3, #0]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8009fc6:	4843      	ldr	r0, [pc, #268]	; (800a0d4 <HAL_TIM_ConfigClockSource+0x12c>)
  tmpsmcr = htim->Instance->SMCR;
 8009fc8:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8009fca:	4003      	ands	r3, r0
  htim->Instance->SMCR = tmpsmcr;
 8009fcc:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 8009fce:	680b      	ldr	r3, [r1, #0]
 8009fd0:	2b60      	cmp	r3, #96	; 0x60
 8009fd2:	d052      	beq.n	800a07a <HAL_TIM_ConfigClockSource+0xd2>
 8009fd4:	d82f      	bhi.n	800a036 <HAL_TIM_ConfigClockSource+0x8e>
 8009fd6:	2b40      	cmp	r3, #64	; 0x40
 8009fd8:	d066      	beq.n	800a0a8 <HAL_TIM_ConfigClockSource+0x100>
 8009fda:	d814      	bhi.n	800a006 <HAL_TIM_ConfigClockSource+0x5e>
 8009fdc:	2b20      	cmp	r3, #32
 8009fde:	d00c      	beq.n	8009ffa <HAL_TIM_ConfigClockSource+0x52>
 8009fe0:	d809      	bhi.n	8009ff6 <HAL_TIM_ConfigClockSource+0x4e>
 8009fe2:	2110      	movs	r1, #16
 8009fe4:	0018      	movs	r0, r3
 8009fe6:	4388      	bics	r0, r1
 8009fe8:	d007      	beq.n	8009ffa <HAL_TIM_ConfigClockSource+0x52>
 8009fea:	0010      	movs	r0, r2
  htim->State = HAL_TIM_STATE_READY;
 8009fec:	2301      	movs	r3, #1
 8009fee:	7033      	strb	r3, [r6, #0]
  __HAL_UNLOCK(htim);
 8009ff0:	2300      	movs	r3, #0
 8009ff2:	702b      	strb	r3, [r5, #0]
}
 8009ff4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  switch (sClockSourceConfig->ClockSource)
 8009ff6:	2b30      	cmp	r3, #48	; 0x30
 8009ff8:	d1f7      	bne.n	8009fea <HAL_TIM_ConfigClockSource+0x42>
  tmpsmcr = TIMx->SMCR;
 8009ffa:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8009ffc:	4936      	ldr	r1, [pc, #216]	; (800a0d8 <HAL_TIM_ConfigClockSource+0x130>)
 8009ffe:	400a      	ands	r2, r1
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800a000:	4313      	orrs	r3, r2
 800a002:	2207      	movs	r2, #7
 800a004:	e02b      	b.n	800a05e <HAL_TIM_ConfigClockSource+0xb6>
  switch (sClockSourceConfig->ClockSource)
 800a006:	2b50      	cmp	r3, #80	; 0x50
 800a008:	d1ef      	bne.n	8009fea <HAL_TIM_ConfigClockSource+0x42>
                               sClockSourceConfig->ClockPolarity,
 800a00a:	6848      	ldr	r0, [r1, #4]
                               sClockSourceConfig->ClockFilter);
 800a00c:	68cb      	ldr	r3, [r1, #12]
  tmpccer = TIMx->CCER;
 800a00e:	6a21      	ldr	r1, [r4, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800a010:	6a27      	ldr	r7, [r4, #32]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800a012:	011b      	lsls	r3, r3, #4
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800a014:	4397      	bics	r7, r2
 800a016:	6227      	str	r7, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800a018:	27f0      	movs	r7, #240	; 0xf0
  tmpccmr1 = TIMx->CCMR1;
 800a01a:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800a01c:	43ba      	bics	r2, r7
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800a01e:	4313      	orrs	r3, r2
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800a020:	220a      	movs	r2, #10
 800a022:	4391      	bics	r1, r2
 800a024:	000a      	movs	r2, r1
  tmpccer |= TIM_ICPolarity;
 800a026:	4302      	orrs	r2, r0
  TIMx->CCMR1 = tmpccmr1;
 800a028:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800a02a:	6222      	str	r2, [r4, #32]
  tmpsmcr &= ~TIM_SMCR_TS;
 800a02c:	4b2a      	ldr	r3, [pc, #168]	; (800a0d8 <HAL_TIM_ConfigClockSource+0x130>)
  tmpsmcr = TIMx->SMCR;
 800a02e:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800a030:	401a      	ands	r2, r3
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800a032:	2357      	movs	r3, #87	; 0x57
 800a034:	e013      	b.n	800a05e <HAL_TIM_ConfigClockSource+0xb6>
  switch (sClockSourceConfig->ClockSource)
 800a036:	2780      	movs	r7, #128	; 0x80
  HAL_StatusTypeDef status = HAL_OK;
 800a038:	2000      	movs	r0, #0
  switch (sClockSourceConfig->ClockSource)
 800a03a:	017f      	lsls	r7, r7, #5
 800a03c:	42bb      	cmp	r3, r7
 800a03e:	d0d5      	beq.n	8009fec <HAL_TIM_ConfigClockSource+0x44>
 800a040:	2080      	movs	r0, #128	; 0x80
 800a042:	0180      	lsls	r0, r0, #6
 800a044:	4283      	cmp	r3, r0
 800a046:	d00e      	beq.n	800a066 <HAL_TIM_ConfigClockSource+0xbe>
 800a048:	0010      	movs	r0, r2
 800a04a:	2b70      	cmp	r3, #112	; 0x70
 800a04c:	d1ce      	bne.n	8009fec <HAL_TIM_ConfigClockSource+0x44>
      TIM_ETR_SetConfig(htim->Instance,
 800a04e:	68cb      	ldr	r3, [r1, #12]
 800a050:	684a      	ldr	r2, [r1, #4]
 800a052:	0020      	movs	r0, r4
 800a054:	6889      	ldr	r1, [r1, #8]
 800a056:	f7ff ff9b 	bl	8009f90 <TIM_ETR_SetConfig>
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800a05a:	2377      	movs	r3, #119	; 0x77
      tmpsmcr = htim->Instance->SMCR;
 800a05c:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800a05e:	4313      	orrs	r3, r2
  HAL_StatusTypeDef status = HAL_OK;
 800a060:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800a062:	60a3      	str	r3, [r4, #8]
}
 800a064:	e7c2      	b.n	8009fec <HAL_TIM_ConfigClockSource+0x44>
      TIM_ETR_SetConfig(htim->Instance,
 800a066:	68cb      	ldr	r3, [r1, #12]
 800a068:	684a      	ldr	r2, [r1, #4]
 800a06a:	0020      	movs	r0, r4
 800a06c:	6889      	ldr	r1, [r1, #8]
 800a06e:	f7ff ff8f 	bl	8009f90 <TIM_ETR_SetConfig>
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800a072:	2380      	movs	r3, #128	; 0x80
 800a074:	68a2      	ldr	r2, [r4, #8]
 800a076:	01db      	lsls	r3, r3, #7
 800a078:	e7f1      	b.n	800a05e <HAL_TIM_ConfigClockSource+0xb6>
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800a07a:	2710      	movs	r7, #16
                               sClockSourceConfig->ClockPolarity,
 800a07c:	684b      	ldr	r3, [r1, #4]
                               sClockSourceConfig->ClockFilter);
 800a07e:	68ca      	ldr	r2, [r1, #12]
  tmpccer = TIMx->CCER;
 800a080:	6a21      	ldr	r1, [r4, #32]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800a082:	6a20      	ldr	r0, [r4, #32]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800a084:	0312      	lsls	r2, r2, #12
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800a086:	43b8      	bics	r0, r7
 800a088:	6220      	str	r0, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800a08a:	69a0      	ldr	r0, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800a08c:	4f13      	ldr	r7, [pc, #76]	; (800a0dc <HAL_TIM_ConfigClockSource+0x134>)
  tmpccer |= (TIM_ICPolarity << 4U);
 800a08e:	011b      	lsls	r3, r3, #4
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800a090:	4038      	ands	r0, r7
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800a092:	4302      	orrs	r2, r0
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800a094:	20a0      	movs	r0, #160	; 0xa0
 800a096:	4381      	bics	r1, r0
  tmpccer |= (TIM_ICPolarity << 4U);
 800a098:	430b      	orrs	r3, r1
  TIMx->CCMR1 = tmpccmr1 ;
 800a09a:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800a09c:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800a09e:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800a0a0:	4b0d      	ldr	r3, [pc, #52]	; (800a0d8 <HAL_TIM_ConfigClockSource+0x130>)
 800a0a2:	401a      	ands	r2, r3
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800a0a4:	2367      	movs	r3, #103	; 0x67
 800a0a6:	e7da      	b.n	800a05e <HAL_TIM_ConfigClockSource+0xb6>
                               sClockSourceConfig->ClockPolarity,
 800a0a8:	6848      	ldr	r0, [r1, #4]
                               sClockSourceConfig->ClockFilter);
 800a0aa:	68cb      	ldr	r3, [r1, #12]
  tmpccer = TIMx->CCER;
 800a0ac:	6a21      	ldr	r1, [r4, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800a0ae:	6a27      	ldr	r7, [r4, #32]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800a0b0:	011b      	lsls	r3, r3, #4
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800a0b2:	4397      	bics	r7, r2
 800a0b4:	6227      	str	r7, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800a0b6:	27f0      	movs	r7, #240	; 0xf0
  tmpccmr1 = TIMx->CCMR1;
 800a0b8:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800a0ba:	43ba      	bics	r2, r7
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800a0bc:	4313      	orrs	r3, r2
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800a0be:	220a      	movs	r2, #10
 800a0c0:	4391      	bics	r1, r2
 800a0c2:	000a      	movs	r2, r1
  tmpccer |= TIM_ICPolarity;
 800a0c4:	4302      	orrs	r2, r0
  TIMx->CCMR1 = tmpccmr1;
 800a0c6:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800a0c8:	6222      	str	r2, [r4, #32]
  tmpsmcr &= ~TIM_SMCR_TS;
 800a0ca:	4b03      	ldr	r3, [pc, #12]	; (800a0d8 <HAL_TIM_ConfigClockSource+0x130>)
  tmpsmcr = TIMx->SMCR;
 800a0cc:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800a0ce:	401a      	ands	r2, r3
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800a0d0:	2347      	movs	r3, #71	; 0x47
 800a0d2:	e7c4      	b.n	800a05e <HAL_TIM_ConfigClockSource+0xb6>
 800a0d4:	ffce0088 	.word	0xffce0088
 800a0d8:	ffcfff8f 	.word	0xffcfff8f
 800a0dc:	ffff0fff 	.word	0xffff0fff

0800a0e0 <TIM_CCxChannelCmd>:

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 800a0e0:	231f      	movs	r3, #31
{
 800a0e2:	b510      	push	{r4, lr}
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 800a0e4:	2401      	movs	r4, #1
 800a0e6:	4019      	ands	r1, r3
 800a0e8:	408c      	lsls	r4, r1

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 800a0ea:	408a      	lsls	r2, r1
  TIMx->CCER &= ~tmp;
 800a0ec:	6a03      	ldr	r3, [r0, #32]
 800a0ee:	43a3      	bics	r3, r4
 800a0f0:	6203      	str	r3, [r0, #32]
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 800a0f2:	6a03      	ldr	r3, [r0, #32]
 800a0f4:	431a      	orrs	r2, r3
 800a0f6:	6202      	str	r2, [r0, #32]
}
 800a0f8:	bd10      	pop	{r4, pc}
	...

0800a0fc <HAL_TIM_OC_Start>:
{
 800a0fc:	0002      	movs	r2, r0
 800a0fe:	b510      	push	{r4, lr}
 800a100:	2908      	cmp	r1, #8
 800a102:	d02a      	beq.n	800a15a <HAL_TIM_OC_Start+0x5e>
 800a104:	d814      	bhi.n	800a130 <HAL_TIM_OC_Start+0x34>
 800a106:	2900      	cmp	r1, #0
 800a108:	d019      	beq.n	800a13e <HAL_TIM_OC_Start+0x42>
 800a10a:	2904      	cmp	r1, #4
 800a10c:	d022      	beq.n	800a154 <HAL_TIM_OC_Start+0x58>
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 800a10e:	0013      	movs	r3, r2
    return HAL_ERROR;
 800a110:	2001      	movs	r0, #1
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 800a112:	3343      	adds	r3, #67	; 0x43
 800a114:	781b      	ldrb	r3, [r3, #0]
 800a116:	4283      	cmp	r3, r0
 800a118:	d11b      	bne.n	800a152 <HAL_TIM_OC_Start+0x56>
 800a11a:	2908      	cmp	r1, #8
 800a11c:	d831      	bhi.n	800a182 <HAL_TIM_OC_Start+0x86>
 800a11e:	2302      	movs	r3, #2
 800a120:	2900      	cmp	r1, #0
 800a122:	d036      	beq.n	800a192 <HAL_TIM_OC_Start+0x96>
 800a124:	2904      	cmp	r1, #4
 800a126:	d056      	beq.n	800a1d6 <HAL_TIM_OC_Start+0xda>
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 800a128:	0013      	movs	r3, r2
 800a12a:	2002      	movs	r0, #2
 800a12c:	3343      	adds	r3, #67	; 0x43
 800a12e:	e023      	b.n	800a178 <HAL_TIM_OC_Start+0x7c>
 800a130:	290c      	cmp	r1, #12
 800a132:	d023      	beq.n	800a17c <HAL_TIM_OC_Start+0x80>
 800a134:	2910      	cmp	r1, #16
 800a136:	d1ea      	bne.n	800a10e <HAL_TIM_OC_Start+0x12>
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 800a138:	0003      	movs	r3, r0
 800a13a:	3342      	adds	r3, #66	; 0x42
 800a13c:	e00f      	b.n	800a15e <HAL_TIM_OC_Start+0x62>
 800a13e:	0003      	movs	r3, r0
 800a140:	333e      	adds	r3, #62	; 0x3e
 800a142:	781b      	ldrb	r3, [r3, #0]
 800a144:	3b01      	subs	r3, #1
 800a146:	1e58      	subs	r0, r3, #1
 800a148:	4183      	sbcs	r3, r0
 800a14a:	b2db      	uxtb	r3, r3
    return HAL_ERROR;
 800a14c:	2001      	movs	r0, #1
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 800a14e:	2b00      	cmp	r3, #0
 800a150:	d0e5      	beq.n	800a11e <HAL_TIM_OC_Start+0x22>
}
 800a152:	bd10      	pop	{r4, pc}
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 800a154:	0003      	movs	r3, r0
 800a156:	333f      	adds	r3, #63	; 0x3f
 800a158:	e7f3      	b.n	800a142 <HAL_TIM_OC_Start+0x46>
 800a15a:	0003      	movs	r3, r0
 800a15c:	3340      	adds	r3, #64	; 0x40
 800a15e:	781b      	ldrb	r3, [r3, #0]
 800a160:	3b01      	subs	r3, #1
 800a162:	1e58      	subs	r0, r3, #1
 800a164:	4183      	sbcs	r3, r0
 800a166:	b2db      	uxtb	r3, r3
    return HAL_ERROR;
 800a168:	2001      	movs	r0, #1
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 800a16a:	2b00      	cmp	r3, #0
 800a16c:	d1f1      	bne.n	800a152 <HAL_TIM_OC_Start+0x56>
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 800a16e:	2908      	cmp	r1, #8
 800a170:	d1d3      	bne.n	800a11a <HAL_TIM_OC_Start+0x1e>
 800a172:	0013      	movs	r3, r2
 800a174:	2002      	movs	r0, #2
 800a176:	3340      	adds	r3, #64	; 0x40
 800a178:	7018      	strb	r0, [r3, #0]
 800a17a:	e00d      	b.n	800a198 <HAL_TIM_OC_Start+0x9c>
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 800a17c:	0003      	movs	r3, r0
 800a17e:	3341      	adds	r3, #65	; 0x41
 800a180:	e7ed      	b.n	800a15e <HAL_TIM_OC_Start+0x62>
 800a182:	2302      	movs	r3, #2
 800a184:	290c      	cmp	r1, #12
 800a186:	d029      	beq.n	800a1dc <HAL_TIM_OC_Start+0xe0>
 800a188:	2910      	cmp	r1, #16
 800a18a:	d1cd      	bne.n	800a128 <HAL_TIM_OC_Start+0x2c>
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 800a18c:	0010      	movs	r0, r2
 800a18e:	3042      	adds	r0, #66	; 0x42
 800a190:	e001      	b.n	800a196 <HAL_TIM_OC_Start+0x9a>
 800a192:	0010      	movs	r0, r2
 800a194:	303e      	adds	r0, #62	; 0x3e
 800a196:	7003      	strb	r3, [r0, #0]
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 800a198:	6814      	ldr	r4, [r2, #0]
 800a19a:	2201      	movs	r2, #1
 800a19c:	0020      	movs	r0, r4
 800a19e:	f7ff ff9f 	bl	800a0e0 <TIM_CCxChannelCmd>
  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 800a1a2:	4a1b      	ldr	r2, [pc, #108]	; (800a210 <HAL_TIM_OC_Start+0x114>)
 800a1a4:	4294      	cmp	r4, r2
 800a1a6:	d008      	beq.n	800a1ba <HAL_TIM_OC_Start+0xbe>
 800a1a8:	4b1a      	ldr	r3, [pc, #104]	; (800a214 <HAL_TIM_OC_Start+0x118>)
 800a1aa:	429c      	cmp	r4, r3
 800a1ac:	d005      	beq.n	800a1ba <HAL_TIM_OC_Start+0xbe>
 800a1ae:	4b1a      	ldr	r3, [pc, #104]	; (800a218 <HAL_TIM_OC_Start+0x11c>)
 800a1b0:	429c      	cmp	r4, r3
 800a1b2:	d002      	beq.n	800a1ba <HAL_TIM_OC_Start+0xbe>
 800a1b4:	4b19      	ldr	r3, [pc, #100]	; (800a21c <HAL_TIM_OC_Start+0x120>)
 800a1b6:	429c      	cmp	r4, r3
 800a1b8:	d128      	bne.n	800a20c <HAL_TIM_OC_Start+0x110>
    __HAL_TIM_MOE_ENABLE(htim);
 800a1ba:	2380      	movs	r3, #128	; 0x80
 800a1bc:	6c61      	ldr	r1, [r4, #68]	; 0x44
 800a1be:	021b      	lsls	r3, r3, #8
 800a1c0:	430b      	orrs	r3, r1
 800a1c2:	6463      	str	r3, [r4, #68]	; 0x44
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800a1c4:	4294      	cmp	r4, r2
 800a1c6:	d10c      	bne.n	800a1e2 <HAL_TIM_OC_Start+0xe6>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800a1c8:	68a3      	ldr	r3, [r4, #8]
 800a1ca:	4a15      	ldr	r2, [pc, #84]	; (800a220 <HAL_TIM_OC_Start+0x124>)
 800a1cc:	4013      	ands	r3, r2
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800a1ce:	2b06      	cmp	r3, #6
 800a1d0:	d112      	bne.n	800a1f8 <HAL_TIM_OC_Start+0xfc>
  return HAL_OK;
 800a1d2:	2000      	movs	r0, #0
 800a1d4:	e7bd      	b.n	800a152 <HAL_TIM_OC_Start+0x56>
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 800a1d6:	0010      	movs	r0, r2
 800a1d8:	303f      	adds	r0, #63	; 0x3f
 800a1da:	e7dc      	b.n	800a196 <HAL_TIM_OC_Start+0x9a>
 800a1dc:	0010      	movs	r0, r2
 800a1de:	3041      	adds	r0, #65	; 0x41
 800a1e0:	e7d9      	b.n	800a196 <HAL_TIM_OC_Start+0x9a>
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800a1e2:	4b10      	ldr	r3, [pc, #64]	; (800a224 <HAL_TIM_OC_Start+0x128>)
 800a1e4:	429c      	cmp	r4, r3
 800a1e6:	d0ef      	beq.n	800a1c8 <HAL_TIM_OC_Start+0xcc>
 800a1e8:	4b0a      	ldr	r3, [pc, #40]	; (800a214 <HAL_TIM_OC_Start+0x118>)
 800a1ea:	429c      	cmp	r4, r3
 800a1ec:	d0ec      	beq.n	800a1c8 <HAL_TIM_OC_Start+0xcc>
    __HAL_TIM_ENABLE(htim);
 800a1ee:	2301      	movs	r3, #1
 800a1f0:	6822      	ldr	r2, [r4, #0]
 800a1f2:	4313      	orrs	r3, r2
 800a1f4:	6023      	str	r3, [r4, #0]
 800a1f6:	e7ec      	b.n	800a1d2 <HAL_TIM_OC_Start+0xd6>
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800a1f8:	2280      	movs	r2, #128	; 0x80
  return HAL_OK;
 800a1fa:	2000      	movs	r0, #0
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800a1fc:	0252      	lsls	r2, r2, #9
 800a1fe:	4293      	cmp	r3, r2
 800a200:	d0a7      	beq.n	800a152 <HAL_TIM_OC_Start+0x56>
      __HAL_TIM_ENABLE(htim);
 800a202:	2301      	movs	r3, #1
 800a204:	6822      	ldr	r2, [r4, #0]
 800a206:	4313      	orrs	r3, r2
 800a208:	6023      	str	r3, [r4, #0]
 800a20a:	e7a2      	b.n	800a152 <HAL_TIM_OC_Start+0x56>
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800a20c:	4b05      	ldr	r3, [pc, #20]	; (800a224 <HAL_TIM_OC_Start+0x128>)
 800a20e:	e7ec      	b.n	800a1ea <HAL_TIM_OC_Start+0xee>
 800a210:	40012c00 	.word	0x40012c00
 800a214:	40014000 	.word	0x40014000
 800a218:	40014400 	.word	0x40014400
 800a21c:	40014800 	.word	0x40014800
 800a220:	00010007 	.word	0x00010007
 800a224:	40000400 	.word	0x40000400

0800a228 <HAL_TIM_PWM_Start>:
 800a228:	b510      	push	{r4, lr}
 800a22a:	f7ff ff67 	bl	800a0fc <HAL_TIM_OC_Start>
 800a22e:	bd10      	pop	{r4, pc}

0800a230 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 800a230:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800a232:	0004      	movs	r4, r0
 800a234:	2202      	movs	r2, #2
 800a236:	343c      	adds	r4, #60	; 0x3c
 800a238:	7825      	ldrb	r5, [r4, #0]
{
 800a23a:	0003      	movs	r3, r0
  __HAL_LOCK(htim);
 800a23c:	0010      	movs	r0, r2
 800a23e:	2d01      	cmp	r5, #1
 800a240:	d022      	beq.n	800a288 <HAL_TIMEx_MasterConfigSynchronization+0x58>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 800a242:	001d      	movs	r5, r3
 800a244:	353d      	adds	r5, #61	; 0x3d
 800a246:	702a      	strb	r2, [r5, #0]

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800a248:	681a      	ldr	r2, [r3, #0]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 800a24a:	4e10      	ldr	r6, [pc, #64]	; (800a28c <HAL_TIMEx_MasterConfigSynchronization+0x5c>)
  tmpcr2 = htim->Instance->CR2;
 800a24c:	6853      	ldr	r3, [r2, #4]
  tmpsmcr = htim->Instance->SMCR;
 800a24e:	6890      	ldr	r0, [r2, #8]
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 800a250:	42b2      	cmp	r2, r6
 800a252:	d103      	bne.n	800a25c <HAL_TIMEx_MasterConfigSynchronization+0x2c>
  {
    /* Check the parameters */
    assert_param(IS_TIM_TRGO2_SOURCE(sMasterConfig->MasterOutputTrigger2));

    /* Clear the MMS2 bits */
    tmpcr2 &= ~TIM_CR2_MMS2;
 800a254:	4f0e      	ldr	r7, [pc, #56]	; (800a290 <HAL_TIMEx_MasterConfigSynchronization+0x60>)
 800a256:	403b      	ands	r3, r7
    /* Select the TRGO2 source*/
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 800a258:	684f      	ldr	r7, [r1, #4]
 800a25a:	433b      	orrs	r3, r7
  }

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 800a25c:	2770      	movs	r7, #112	; 0x70
 800a25e:	43bb      	bics	r3, r7
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800a260:	680f      	ldr	r7, [r1, #0]
 800a262:	433b      	orrs	r3, r7

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800a264:	6053      	str	r3, [r2, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800a266:	42b2      	cmp	r2, r6
 800a268:	d005      	beq.n	800a276 <HAL_TIMEx_MasterConfigSynchronization+0x46>
 800a26a:	4b0a      	ldr	r3, [pc, #40]	; (800a294 <HAL_TIMEx_MasterConfigSynchronization+0x64>)
 800a26c:	429a      	cmp	r2, r3
 800a26e:	d002      	beq.n	800a276 <HAL_TIMEx_MasterConfigSynchronization+0x46>
 800a270:	4b09      	ldr	r3, [pc, #36]	; (800a298 <HAL_TIMEx_MasterConfigSynchronization+0x68>)
 800a272:	429a      	cmp	r2, r3
 800a274:	d104      	bne.n	800a280 <HAL_TIMEx_MasterConfigSynchronization+0x50>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 800a276:	2380      	movs	r3, #128	; 0x80
 800a278:	4398      	bics	r0, r3
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800a27a:	688b      	ldr	r3, [r1, #8]
 800a27c:	4318      	orrs	r0, r3

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800a27e:	6090      	str	r0, [r2, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 800a280:	2301      	movs	r3, #1

  __HAL_UNLOCK(htim);
 800a282:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 800a284:	702b      	strb	r3, [r5, #0]
  __HAL_UNLOCK(htim);
 800a286:	7020      	strb	r0, [r4, #0]

  return HAL_OK;
}
 800a288:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a28a:	46c0      	nop			; (mov r8, r8)
 800a28c:	40012c00 	.word	0x40012c00
 800a290:	ff0fffff 	.word	0xff0fffff
 800a294:	40000400 	.word	0x40000400
 800a298:	40014000 	.word	0x40014000

0800a29c <HAL_TIMEx_ConfigBreakDeadTime>:
  *         interrupt can be enabled by calling the @ref __HAL_TIM_ENABLE_IT macro.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_ConfigBreakDeadTime(TIM_HandleTypeDef *htim,
                                                const TIM_BreakDeadTimeConfigTypeDef *sBreakDeadTimeConfig)
{
 800a29c:	b510      	push	{r4, lr}
  assert_param(IS_TIM_BREAK_FILTER(sBreakDeadTimeConfig->BreakFilter));
  assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(sBreakDeadTimeConfig->AutomaticOutput));
  assert_param(IS_TIM_BREAK_AFMODE(sBreakDeadTimeConfig->BreakAFMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800a29e:	0004      	movs	r4, r0
 800a2a0:	343c      	adds	r4, #60	; 0x3c
 800a2a2:	7823      	ldrb	r3, [r4, #0]
{
 800a2a4:	0002      	movs	r2, r0
  __HAL_LOCK(htim);
 800a2a6:	2002      	movs	r0, #2
 800a2a8:	2b01      	cmp	r3, #1
 800a2aa:	d039      	beq.n	800a320 <HAL_TIMEx_ConfigBreakDeadTime+0x84>
  /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
     the OSSI State, the dead time value and the Automatic Output Enable Bit */

  /* Set the BDTR bits */
  MODIFY_REG(tmpbdtr, TIM_BDTR_DTG, sBreakDeadTimeConfig->DeadTime);
  MODIFY_REG(tmpbdtr, TIM_BDTR_LOCK, sBreakDeadTimeConfig->LockLevel);
 800a2ac:	481d      	ldr	r0, [pc, #116]	; (800a324 <HAL_TIMEx_ConfigBreakDeadTime+0x88>)
 800a2ae:	68cb      	ldr	r3, [r1, #12]
 800a2b0:	4003      	ands	r3, r0
 800a2b2:	6888      	ldr	r0, [r1, #8]
 800a2b4:	4303      	orrs	r3, r0
  MODIFY_REG(tmpbdtr, TIM_BDTR_OSSI, sBreakDeadTimeConfig->OffStateIDLEMode);
 800a2b6:	481c      	ldr	r0, [pc, #112]	; (800a328 <HAL_TIMEx_ConfigBreakDeadTime+0x8c>)
 800a2b8:	4003      	ands	r3, r0
 800a2ba:	6848      	ldr	r0, [r1, #4]
 800a2bc:	4303      	orrs	r3, r0
  MODIFY_REG(tmpbdtr, TIM_BDTR_OSSR, sBreakDeadTimeConfig->OffStateRunMode);
 800a2be:	481b      	ldr	r0, [pc, #108]	; (800a32c <HAL_TIMEx_ConfigBreakDeadTime+0x90>)
 800a2c0:	4003      	ands	r3, r0
 800a2c2:	6808      	ldr	r0, [r1, #0]
 800a2c4:	4303      	orrs	r3, r0
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKE, sBreakDeadTimeConfig->BreakState);
 800a2c6:	481a      	ldr	r0, [pc, #104]	; (800a330 <HAL_TIMEx_ConfigBreakDeadTime+0x94>)
 800a2c8:	4003      	ands	r3, r0
 800a2ca:	6908      	ldr	r0, [r1, #16]
 800a2cc:	4303      	orrs	r3, r0
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKP, sBreakDeadTimeConfig->BreakPolarity);
 800a2ce:	4819      	ldr	r0, [pc, #100]	; (800a334 <HAL_TIMEx_ConfigBreakDeadTime+0x98>)
 800a2d0:	4003      	ands	r3, r0
 800a2d2:	6948      	ldr	r0, [r1, #20]
 800a2d4:	4303      	orrs	r3, r0
  MODIFY_REG(tmpbdtr, TIM_BDTR_AOE, sBreakDeadTimeConfig->AutomaticOutput);
 800a2d6:	4818      	ldr	r0, [pc, #96]	; (800a338 <HAL_TIMEx_ConfigBreakDeadTime+0x9c>)
 800a2d8:	4003      	ands	r3, r0
 800a2da:	6b08      	ldr	r0, [r1, #48]	; 0x30
 800a2dc:	4303      	orrs	r3, r0
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKF, (sBreakDeadTimeConfig->BreakFilter << TIM_BDTR_BKF_Pos));
 800a2de:	4817      	ldr	r0, [pc, #92]	; (800a33c <HAL_TIMEx_ConfigBreakDeadTime+0xa0>)
 800a2e0:	4003      	ands	r3, r0
 800a2e2:	6988      	ldr	r0, [r1, #24]
 800a2e4:	0400      	lsls	r0, r0, #16
 800a2e6:	4303      	orrs	r3, r0
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKBID, sBreakDeadTimeConfig->BreakAFMode);
 800a2e8:	4815      	ldr	r0, [pc, #84]	; (800a340 <HAL_TIMEx_ConfigBreakDeadTime+0xa4>)
 800a2ea:	4003      	ands	r3, r0
 800a2ec:	69c8      	ldr	r0, [r1, #28]
 800a2ee:	4303      	orrs	r3, r0

  if (IS_TIM_BKIN2_INSTANCE(htim->Instance))
 800a2f0:	6810      	ldr	r0, [r2, #0]
 800a2f2:	4a14      	ldr	r2, [pc, #80]	; (800a344 <HAL_TIMEx_ConfigBreakDeadTime+0xa8>)
 800a2f4:	4290      	cmp	r0, r2
 800a2f6:	d110      	bne.n	800a31a <HAL_TIMEx_ConfigBreakDeadTime+0x7e>
    assert_param(IS_TIM_BREAK2_POLARITY(sBreakDeadTimeConfig->Break2Polarity));
    assert_param(IS_TIM_BREAK_FILTER(sBreakDeadTimeConfig->Break2Filter));
    assert_param(IS_TIM_BREAK2_AFMODE(sBreakDeadTimeConfig->Break2AFMode));

    /* Set the BREAK2 input related BDTR bits */
    MODIFY_REG(tmpbdtr, TIM_BDTR_BK2F, (sBreakDeadTimeConfig->Break2Filter << TIM_BDTR_BK2F_Pos));
 800a2f8:	4a13      	ldr	r2, [pc, #76]	; (800a348 <HAL_TIMEx_ConfigBreakDeadTime+0xac>)
 800a2fa:	4013      	ands	r3, r2
 800a2fc:	6a8a      	ldr	r2, [r1, #40]	; 0x28
 800a2fe:	0512      	lsls	r2, r2, #20
 800a300:	431a      	orrs	r2, r3
    MODIFY_REG(tmpbdtr, TIM_BDTR_BK2E, sBreakDeadTimeConfig->Break2State);
 800a302:	4b12      	ldr	r3, [pc, #72]	; (800a34c <HAL_TIMEx_ConfigBreakDeadTime+0xb0>)
 800a304:	401a      	ands	r2, r3
 800a306:	6a0b      	ldr	r3, [r1, #32]
 800a308:	431a      	orrs	r2, r3
    MODIFY_REG(tmpbdtr, TIM_BDTR_BK2P, sBreakDeadTimeConfig->Break2Polarity);
 800a30a:	4b11      	ldr	r3, [pc, #68]	; (800a350 <HAL_TIMEx_ConfigBreakDeadTime+0xb4>)
 800a30c:	401a      	ands	r2, r3
 800a30e:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 800a310:	431a      	orrs	r2, r3
    MODIFY_REG(tmpbdtr, TIM_BDTR_BK2BID, sBreakDeadTimeConfig->Break2AFMode);
 800a312:	4b10      	ldr	r3, [pc, #64]	; (800a354 <HAL_TIMEx_ConfigBreakDeadTime+0xb8>)
 800a314:	401a      	ands	r2, r3
 800a316:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 800a318:	4313      	orrs	r3, r2
  }

  /* Set TIMx_BDTR */
  htim->Instance->BDTR = tmpbdtr;
 800a31a:	6443      	str	r3, [r0, #68]	; 0x44

  __HAL_UNLOCK(htim);
 800a31c:	2000      	movs	r0, #0
 800a31e:	7020      	strb	r0, [r4, #0]

  return HAL_OK;
}
 800a320:	bd10      	pop	{r4, pc}
 800a322:	46c0      	nop			; (mov r8, r8)
 800a324:	fffffcff 	.word	0xfffffcff
 800a328:	fffffbff 	.word	0xfffffbff
 800a32c:	fffff7ff 	.word	0xfffff7ff
 800a330:	ffffefff 	.word	0xffffefff
 800a334:	ffffdfff 	.word	0xffffdfff
 800a338:	ffffbfff 	.word	0xffffbfff
 800a33c:	fff0ffff 	.word	0xfff0ffff
 800a340:	efffffff 	.word	0xefffffff
 800a344:	40012c00 	.word	0x40012c00
 800a348:	ff0fffff 	.word	0xff0fffff
 800a34c:	feffffff 	.word	0xfeffffff
 800a350:	fdffffff 	.word	0xfdffffff
 800a354:	dfffffff 	.word	0xdfffffff

0800a358 <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 800a358:	b530      	push	{r4, r5, lr}
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800a35a:	f3ef 8410 	mrs	r4, PRIMASK
  \details Assigns the given value to the Priority Mask Register.
  \param [in]    priMask  Priority Mask
 */
__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800a35e:	2201      	movs	r2, #1
 800a360:	f382 8810 	msr	PRIMASK, r2
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 800a364:	6801      	ldr	r1, [r0, #0]
 800a366:	4d13      	ldr	r5, [pc, #76]	; (800a3b4 <UART_EndRxTransfer+0x5c>)
 800a368:	680b      	ldr	r3, [r1, #0]
 800a36a:	402b      	ands	r3, r5
 800a36c:	600b      	str	r3, [r1, #0]
 800a36e:	f384 8810 	msr	PRIMASK, r4
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800a372:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800a376:	f382 8810 	msr	PRIMASK, r2
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 800a37a:	6802      	ldr	r2, [r0, #0]
 800a37c:	4c0e      	ldr	r4, [pc, #56]	; (800a3b8 <UART_EndRxTransfer+0x60>)
 800a37e:	6893      	ldr	r3, [r2, #8]
 800a380:	4023      	ands	r3, r4
 800a382:	6093      	str	r3, [r2, #8]
 800a384:	f381 8810 	msr	PRIMASK, r1

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800a388:	6ec3      	ldr	r3, [r0, #108]	; 0x6c
 800a38a:	2b01      	cmp	r3, #1
 800a38c:	d10a      	bne.n	800a3a4 <UART_EndRxTransfer+0x4c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800a38e:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800a392:	f383 8810 	msr	PRIMASK, r3
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800a396:	2410      	movs	r4, #16
 800a398:	6802      	ldr	r2, [r0, #0]
 800a39a:	6813      	ldr	r3, [r2, #0]
 800a39c:	43a3      	bics	r3, r4
 800a39e:	6013      	str	r3, [r2, #0]
 800a3a0:	f381 8810 	msr	PRIMASK, r1
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 800a3a4:	0003      	movs	r3, r0
 800a3a6:	2220      	movs	r2, #32
 800a3a8:	338c      	adds	r3, #140	; 0x8c
 800a3aa:	601a      	str	r2, [r3, #0]
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800a3ac:	2300      	movs	r3, #0
 800a3ae:	66c3      	str	r3, [r0, #108]	; 0x6c

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 800a3b0:	6743      	str	r3, [r0, #116]	; 0x74
}
 800a3b2:	bd30      	pop	{r4, r5, pc}
 800a3b4:	fffffedf 	.word	0xfffffedf
 800a3b8:	effffffe 	.word	0xeffffffe

0800a3bc <UART_SetConfig>:
{
 800a3bc:	b570      	push	{r4, r5, r6, lr}
 800a3be:	0004      	movs	r4, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 800a3c0:	6925      	ldr	r5, [r4, #16]
 800a3c2:	68a1      	ldr	r1, [r4, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 800a3c4:	6802      	ldr	r2, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 800a3c6:	4329      	orrs	r1, r5
 800a3c8:	6965      	ldr	r5, [r4, #20]
 800a3ca:	69c3      	ldr	r3, [r0, #28]
 800a3cc:	4329      	orrs	r1, r5
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 800a3ce:	6810      	ldr	r0, [r2, #0]
 800a3d0:	4d4e      	ldr	r5, [pc, #312]	; (800a50c <UART_SetConfig+0x150>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 800a3d2:	4319      	orrs	r1, r3
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 800a3d4:	4028      	ands	r0, r5
 800a3d6:	4301      	orrs	r1, r0
 800a3d8:	6011      	str	r1, [r2, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800a3da:	6851      	ldr	r1, [r2, #4]
 800a3dc:	484c      	ldr	r0, [pc, #304]	; (800a510 <UART_SetConfig+0x154>)
    tmpreg |= huart->Init.OneBitSampling;
 800a3de:	6a25      	ldr	r5, [r4, #32]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800a3e0:	4001      	ands	r1, r0
 800a3e2:	68e0      	ldr	r0, [r4, #12]
 800a3e4:	4301      	orrs	r1, r0
 800a3e6:	6051      	str	r1, [r2, #4]
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 800a3e8:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 800a3ea:	6890      	ldr	r0, [r2, #8]
    tmpreg |= huart->Init.OneBitSampling;
 800a3ec:	4329      	orrs	r1, r5
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 800a3ee:	4d49      	ldr	r5, [pc, #292]	; (800a514 <UART_SetConfig+0x158>)
 800a3f0:	4028      	ands	r0, r5
 800a3f2:	4301      	orrs	r1, r0
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
 800a3f4:	200f      	movs	r0, #15
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 800a3f6:	6091      	str	r1, [r2, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
 800a3f8:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 800a3fa:	4381      	bics	r1, r0
 800a3fc:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800a3fe:	4301      	orrs	r1, r0
 800a400:	62d1      	str	r1, [r2, #44]	; 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
 800a402:	4945      	ldr	r1, [pc, #276]	; (800a518 <UART_SetConfig+0x15c>)
 800a404:	428a      	cmp	r2, r1
 800a406:	d117      	bne.n	800a438 <UART_SetConfig+0x7c>
 800a408:	2103      	movs	r1, #3
 800a40a:	4a44      	ldr	r2, [pc, #272]	; (800a51c <UART_SetConfig+0x160>)
 800a40c:	6d52      	ldr	r2, [r2, #84]	; 0x54
 800a40e:	400a      	ands	r2, r1
 800a410:	3a01      	subs	r2, #1
 800a412:	4943      	ldr	r1, [pc, #268]	; (800a520 <UART_SetConfig+0x164>)
 800a414:	2a02      	cmp	r2, #2
 800a416:	d917      	bls.n	800a448 <UART_SetConfig+0x8c>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800a418:	2280      	movs	r2, #128	; 0x80
 800a41a:	0212      	lsls	r2, r2, #8
 800a41c:	4293      	cmp	r3, r2
 800a41e:	d000      	beq.n	800a422 <UART_SetConfig+0x66>
 800a420:	e068      	b.n	800a4f4 <UART_SetConfig+0x138>
        pclk = HAL_RCC_GetPCLK1Freq();
 800a422:	f7ff f9d5 	bl	80097d0 <HAL_RCC_GetPCLK1Freq>
        pclk = HAL_RCC_GetSysClockFreq();
 800a426:	1e03      	subs	r3, r0, #0
    if (pclk != 0U)
 800a428:	d128      	bne.n	800a47c <UART_SetConfig+0xc0>
 800a42a:	2000      	movs	r0, #0
  huart->NbRxDataToProcess = 1;
 800a42c:	4b3d      	ldr	r3, [pc, #244]	; (800a524 <UART_SetConfig+0x168>)
 800a42e:	66a3      	str	r3, [r4, #104]	; 0x68
  huart->RxISR = NULL;
 800a430:	2300      	movs	r3, #0
 800a432:	6763      	str	r3, [r4, #116]	; 0x74
  huart->TxISR = NULL;
 800a434:	67a3      	str	r3, [r4, #120]	; 0x78
}
 800a436:	bd70      	pop	{r4, r5, r6, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
 800a438:	493b      	ldr	r1, [pc, #236]	; (800a528 <UART_SetConfig+0x16c>)
 800a43a:	428a      	cmp	r2, r1
 800a43c:	d112      	bne.n	800a464 <UART_SetConfig+0xa8>
 800a43e:	200c      	movs	r0, #12
 800a440:	4a36      	ldr	r2, [pc, #216]	; (800a51c <UART_SetConfig+0x160>)
 800a442:	493a      	ldr	r1, [pc, #232]	; (800a52c <UART_SetConfig+0x170>)
 800a444:	6d52      	ldr	r2, [r2, #84]	; 0x54
 800a446:	4002      	ands	r2, r0
 800a448:	5c88      	ldrb	r0, [r1, r2]
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800a44a:	2280      	movs	r2, #128	; 0x80
 800a44c:	0212      	lsls	r2, r2, #8
 800a44e:	4293      	cmp	r3, r2
 800a450:	d131      	bne.n	800a4b6 <UART_SetConfig+0xfa>
    switch (clocksource)
 800a452:	2808      	cmp	r0, #8
 800a454:	d80c      	bhi.n	800a470 <UART_SetConfig+0xb4>
 800a456:	f7fc fac9 	bl	80069ec <__gnu_thumb1_case_sqi>
 800a45a:	0be4      	.short	0x0be4
 800a45c:	0b0d0b10 	.word	0x0b0d0b10
 800a460:	0b0b      	.short	0x0b0b
 800a462:	11          	.byte	0x11
 800a463:	00          	.byte	0x00
  UART_GETCLOCKSOURCE(huart, clocksource);
 800a464:	4932      	ldr	r1, [pc, #200]	; (800a530 <UART_SetConfig+0x174>)
 800a466:	428a      	cmp	r2, r1
 800a468:	d0d6      	beq.n	800a418 <UART_SetConfig+0x5c>
 800a46a:	4932      	ldr	r1, [pc, #200]	; (800a534 <UART_SetConfig+0x178>)
 800a46c:	428a      	cmp	r2, r1
 800a46e:	d0d3      	beq.n	800a418 <UART_SetConfig+0x5c>
    switch (clocksource)
 800a470:	2001      	movs	r0, #1
 800a472:	e7db      	b.n	800a42c <UART_SetConfig+0x70>
        pclk = HAL_RCC_GetSysClockFreq();
 800a474:	f7ff f8ba 	bl	80095ec <HAL_RCC_GetSysClockFreq>
 800a478:	e7d5      	b.n	800a426 <UART_SetConfig+0x6a>
    switch (clocksource)
 800a47a:	4b2f      	ldr	r3, [pc, #188]	; (800a538 <UART_SetConfig+0x17c>)
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 800a47c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a47e:	4a2f      	ldr	r2, [pc, #188]	; (800a53c <UART_SetConfig+0x180>)
 800a480:	0049      	lsls	r1, r1, #1
 800a482:	5a89      	ldrh	r1, [r1, r2]
 800a484:	0018      	movs	r0, r3
 800a486:	f7fc fac5 	bl	8006a14 <__udivsi3>
 800a48a:	6865      	ldr	r5, [r4, #4]
 800a48c:	0040      	lsls	r0, r0, #1
 800a48e:	086b      	lsrs	r3, r5, #1
 800a490:	18c0      	adds	r0, r0, r3
 800a492:	0029      	movs	r1, r5
 800a494:	f7fc fabe 	bl	8006a14 <__udivsi3>
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 800a498:	0002      	movs	r2, r0
 800a49a:	4b29      	ldr	r3, [pc, #164]	; (800a540 <UART_SetConfig+0x184>)
 800a49c:	3a10      	subs	r2, #16
 800a49e:	429a      	cmp	r2, r3
 800a4a0:	d8e6      	bhi.n	800a470 <UART_SetConfig+0xb4>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 800a4a2:	230f      	movs	r3, #15
 800a4a4:	0002      	movs	r2, r0
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 800a4a6:	0700      	lsls	r0, r0, #28
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 800a4a8:	439a      	bics	r2, r3
 800a4aa:	b293      	uxth	r3, r2
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 800a4ac:	0f40      	lsrs	r0, r0, #29
        huart->Instance->BRR = brrtemp;
 800a4ae:	6822      	ldr	r2, [r4, #0]
 800a4b0:	4303      	orrs	r3, r0
 800a4b2:	60d3      	str	r3, [r2, #12]
 800a4b4:	e7b9      	b.n	800a42a <UART_SetConfig+0x6e>
    switch (clocksource)
 800a4b6:	2808      	cmp	r0, #8
 800a4b8:	d8da      	bhi.n	800a470 <UART_SetConfig+0xb4>
 800a4ba:	f7fc fa97 	bl	80069ec <__gnu_thumb1_case_sqi>
 800a4be:	d91b      	.short	0xd91b
 800a4c0:	d921d924 	.word	0xd921d924
 800a4c4:	d9d9      	.short	0xd9d9
 800a4c6:	05          	.byte	0x05
 800a4c7:	00          	.byte	0x00
 800a4c8:	2080      	movs	r0, #128	; 0x80
 800a4ca:	0200      	lsls	r0, r0, #8
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 800a4cc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a4ce:	4b1b      	ldr	r3, [pc, #108]	; (800a53c <UART_SetConfig+0x180>)
 800a4d0:	0052      	lsls	r2, r2, #1
 800a4d2:	5ad1      	ldrh	r1, [r2, r3]
 800a4d4:	f7fc fa9e 	bl	8006a14 <__udivsi3>
 800a4d8:	6865      	ldr	r5, [r4, #4]
 800a4da:	086b      	lsrs	r3, r5, #1
 800a4dc:	18c0      	adds	r0, r0, r3
 800a4de:	0029      	movs	r1, r5
 800a4e0:	f7fc fa98 	bl	8006a14 <__udivsi3>
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 800a4e4:	0002      	movs	r2, r0
 800a4e6:	4b16      	ldr	r3, [pc, #88]	; (800a540 <UART_SetConfig+0x184>)
 800a4e8:	3a10      	subs	r2, #16
 800a4ea:	429a      	cmp	r2, r3
 800a4ec:	d8c0      	bhi.n	800a470 <UART_SetConfig+0xb4>
        huart->Instance->BRR = (uint16_t)usartdiv;
 800a4ee:	6823      	ldr	r3, [r4, #0]
 800a4f0:	60d8      	str	r0, [r3, #12]
 800a4f2:	e79a      	b.n	800a42a <UART_SetConfig+0x6e>
        pclk = HAL_RCC_GetPCLK1Freq();
 800a4f4:	f7ff f96c 	bl	80097d0 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 800a4f8:	2800      	cmp	r0, #0
 800a4fa:	d100      	bne.n	800a4fe <UART_SetConfig+0x142>
 800a4fc:	e795      	b.n	800a42a <UART_SetConfig+0x6e>
 800a4fe:	e7e5      	b.n	800a4cc <UART_SetConfig+0x110>
        pclk = HAL_RCC_GetSysClockFreq();
 800a500:	f7ff f874 	bl	80095ec <HAL_RCC_GetSysClockFreq>
        break;
 800a504:	e7f8      	b.n	800a4f8 <UART_SetConfig+0x13c>
        pclk = (uint32_t) HSI_VALUE;
 800a506:	480c      	ldr	r0, [pc, #48]	; (800a538 <UART_SetConfig+0x17c>)
 800a508:	e7e0      	b.n	800a4cc <UART_SetConfig+0x110>
 800a50a:	46c0      	nop			; (mov r8, r8)
 800a50c:	cfff69f3 	.word	0xcfff69f3
 800a510:	ffffcfff 	.word	0xffffcfff
 800a514:	11fff4ff 	.word	0x11fff4ff
 800a518:	40013800 	.word	0x40013800
 800a51c:	40021000 	.word	0x40021000
 800a520:	0800f85c 	.word	0x0800f85c
 800a524:	00010001 	.word	0x00010001
 800a528:	40004400 	.word	0x40004400
 800a52c:	0800f85f 	.word	0x0800f85f
 800a530:	40004800 	.word	0x40004800
 800a534:	40004c00 	.word	0x40004c00
 800a538:	00f42400 	.word	0x00f42400
 800a53c:	0800f86c 	.word	0x0800f86c
 800a540:	0000ffef 	.word	0x0000ffef

0800a544 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 800a544:	6a83      	ldr	r3, [r0, #40]	; 0x28
{
 800a546:	b530      	push	{r4, r5, lr}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 800a548:	071a      	lsls	r2, r3, #28
 800a54a:	d506      	bpl.n	800a55a <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 800a54c:	6801      	ldr	r1, [r0, #0]
 800a54e:	4c28      	ldr	r4, [pc, #160]	; (800a5f0 <UART_AdvFeatureConfig+0xac>)
 800a550:	684a      	ldr	r2, [r1, #4]
 800a552:	4022      	ands	r2, r4
 800a554:	6b84      	ldr	r4, [r0, #56]	; 0x38
 800a556:	4322      	orrs	r2, r4
 800a558:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 800a55a:	07da      	lsls	r2, r3, #31
 800a55c:	d506      	bpl.n	800a56c <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 800a55e:	6801      	ldr	r1, [r0, #0]
 800a560:	4c24      	ldr	r4, [pc, #144]	; (800a5f4 <UART_AdvFeatureConfig+0xb0>)
 800a562:	684a      	ldr	r2, [r1, #4]
 800a564:	4022      	ands	r2, r4
 800a566:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 800a568:	4322      	orrs	r2, r4
 800a56a:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 800a56c:	079a      	lsls	r2, r3, #30
 800a56e:	d506      	bpl.n	800a57e <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 800a570:	6801      	ldr	r1, [r0, #0]
 800a572:	4c21      	ldr	r4, [pc, #132]	; (800a5f8 <UART_AdvFeatureConfig+0xb4>)
 800a574:	684a      	ldr	r2, [r1, #4]
 800a576:	4022      	ands	r2, r4
 800a578:	6b04      	ldr	r4, [r0, #48]	; 0x30
 800a57a:	4322      	orrs	r2, r4
 800a57c:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 800a57e:	075a      	lsls	r2, r3, #29
 800a580:	d506      	bpl.n	800a590 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 800a582:	6801      	ldr	r1, [r0, #0]
 800a584:	4c1d      	ldr	r4, [pc, #116]	; (800a5fc <UART_AdvFeatureConfig+0xb8>)
 800a586:	684a      	ldr	r2, [r1, #4]
 800a588:	4022      	ands	r2, r4
 800a58a:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800a58c:	4322      	orrs	r2, r4
 800a58e:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 800a590:	06da      	lsls	r2, r3, #27
 800a592:	d506      	bpl.n	800a5a2 <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 800a594:	6801      	ldr	r1, [r0, #0]
 800a596:	4c1a      	ldr	r4, [pc, #104]	; (800a600 <UART_AdvFeatureConfig+0xbc>)
 800a598:	688a      	ldr	r2, [r1, #8]
 800a59a:	4022      	ands	r2, r4
 800a59c:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 800a59e:	4322      	orrs	r2, r4
 800a5a0:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 800a5a2:	069a      	lsls	r2, r3, #26
 800a5a4:	d506      	bpl.n	800a5b4 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 800a5a6:	6801      	ldr	r1, [r0, #0]
 800a5a8:	4c16      	ldr	r4, [pc, #88]	; (800a604 <UART_AdvFeatureConfig+0xc0>)
 800a5aa:	688a      	ldr	r2, [r1, #8]
 800a5ac:	4022      	ands	r2, r4
 800a5ae:	6c04      	ldr	r4, [r0, #64]	; 0x40
 800a5b0:	4322      	orrs	r2, r4
 800a5b2:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 800a5b4:	065a      	lsls	r2, r3, #25
 800a5b6:	d510      	bpl.n	800a5da <UART_AdvFeatureConfig+0x96>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 800a5b8:	6801      	ldr	r1, [r0, #0]
 800a5ba:	4d13      	ldr	r5, [pc, #76]	; (800a608 <UART_AdvFeatureConfig+0xc4>)
 800a5bc:	684a      	ldr	r2, [r1, #4]
 800a5be:	6c44      	ldr	r4, [r0, #68]	; 0x44
 800a5c0:	402a      	ands	r2, r5
 800a5c2:	4322      	orrs	r2, r4
 800a5c4:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 800a5c6:	2280      	movs	r2, #128	; 0x80
 800a5c8:	0352      	lsls	r2, r2, #13
 800a5ca:	4294      	cmp	r4, r2
 800a5cc:	d105      	bne.n	800a5da <UART_AdvFeatureConfig+0x96>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 800a5ce:	684a      	ldr	r2, [r1, #4]
 800a5d0:	4c0e      	ldr	r4, [pc, #56]	; (800a60c <UART_AdvFeatureConfig+0xc8>)
 800a5d2:	4022      	ands	r2, r4
 800a5d4:	6c84      	ldr	r4, [r0, #72]	; 0x48
 800a5d6:	4322      	orrs	r2, r4
 800a5d8:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 800a5da:	061b      	lsls	r3, r3, #24
 800a5dc:	d506      	bpl.n	800a5ec <UART_AdvFeatureConfig+0xa8>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 800a5de:	6802      	ldr	r2, [r0, #0]
 800a5e0:	490b      	ldr	r1, [pc, #44]	; (800a610 <UART_AdvFeatureConfig+0xcc>)
 800a5e2:	6853      	ldr	r3, [r2, #4]
 800a5e4:	400b      	ands	r3, r1
 800a5e6:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 800a5e8:	430b      	orrs	r3, r1
 800a5ea:	6053      	str	r3, [r2, #4]
}
 800a5ec:	bd30      	pop	{r4, r5, pc}
 800a5ee:	46c0      	nop			; (mov r8, r8)
 800a5f0:	ffff7fff 	.word	0xffff7fff
 800a5f4:	fffdffff 	.word	0xfffdffff
 800a5f8:	fffeffff 	.word	0xfffeffff
 800a5fc:	fffbffff 	.word	0xfffbffff
 800a600:	ffffefff 	.word	0xffffefff
 800a604:	ffffdfff 	.word	0xffffdfff
 800a608:	ffefffff 	.word	0xffefffff
 800a60c:	ff9fffff 	.word	0xff9fffff
 800a610:	fff7ffff 	.word	0xfff7ffff

0800a614 <UART_WaitOnFlagUntilTimeout>:
{
 800a614:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a616:	0004      	movs	r4, r0
 800a618:	000d      	movs	r5, r1
 800a61a:	0017      	movs	r7, r2
 800a61c:	9300      	str	r3, [sp, #0]
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800a61e:	6822      	ldr	r2, [r4, #0]
 800a620:	69d3      	ldr	r3, [r2, #28]
 800a622:	402b      	ands	r3, r5
 800a624:	1b5b      	subs	r3, r3, r5
 800a626:	4259      	negs	r1, r3
 800a628:	414b      	adcs	r3, r1
 800a62a:	42bb      	cmp	r3, r7
 800a62c:	d001      	beq.n	800a632 <UART_WaitOnFlagUntilTimeout+0x1e>
  return HAL_OK;
 800a62e:	2000      	movs	r0, #0
 800a630:	e027      	b.n	800a682 <UART_WaitOnFlagUntilTimeout+0x6e>
    if (Timeout != HAL_MAX_DELAY)
 800a632:	9b08      	ldr	r3, [sp, #32]
 800a634:	3301      	adds	r3, #1
 800a636:	d0f3      	beq.n	800a620 <UART_WaitOnFlagUntilTimeout+0xc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a638:	f7fe faf4 	bl	8008c24 <HAL_GetTick>
 800a63c:	9b00      	ldr	r3, [sp, #0]
 800a63e:	1ac0      	subs	r0, r0, r3
 800a640:	9b08      	ldr	r3, [sp, #32]
 800a642:	4298      	cmp	r0, r3
 800a644:	d82e      	bhi.n	800a6a4 <UART_WaitOnFlagUntilTimeout+0x90>
 800a646:	2b00      	cmp	r3, #0
 800a648:	d02c      	beq.n	800a6a4 <UART_WaitOnFlagUntilTimeout+0x90>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 800a64a:	2104      	movs	r1, #4
 800a64c:	6823      	ldr	r3, [r4, #0]
 800a64e:	681a      	ldr	r2, [r3, #0]
 800a650:	420a      	tst	r2, r1
 800a652:	d0e4      	beq.n	800a61e <UART_WaitOnFlagUntilTimeout+0xa>
 800a654:	002a      	movs	r2, r5
 800a656:	313c      	adds	r1, #60	; 0x3c
 800a658:	3a40      	subs	r2, #64	; 0x40
 800a65a:	438a      	bics	r2, r1
 800a65c:	d0df      	beq.n	800a61e <UART_WaitOnFlagUntilTimeout+0xa>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 800a65e:	69da      	ldr	r2, [r3, #28]
 800a660:	2608      	movs	r6, #8
 800a662:	0011      	movs	r1, r2
 800a664:	4031      	ands	r1, r6
 800a666:	9101      	str	r1, [sp, #4]
 800a668:	4232      	tst	r2, r6
 800a66a:	d00b      	beq.n	800a684 <UART_WaitOnFlagUntilTimeout+0x70>
          UART_EndRxTransfer(huart);
 800a66c:	0020      	movs	r0, r4
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 800a66e:	621e      	str	r6, [r3, #32]
          UART_EndRxTransfer(huart);
 800a670:	f7ff fe72 	bl	800a358 <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_ORE;
 800a674:	0023      	movs	r3, r4
 800a676:	3390      	adds	r3, #144	; 0x90
 800a678:	601e      	str	r6, [r3, #0]
          __HAL_UNLOCK(huart);
 800a67a:	2300      	movs	r3, #0
          return HAL_ERROR;
 800a67c:	2001      	movs	r0, #1
          __HAL_UNLOCK(huart);
 800a67e:	3484      	adds	r4, #132	; 0x84
 800a680:	7023      	strb	r3, [r4, #0]
}
 800a682:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 800a684:	2280      	movs	r2, #128	; 0x80
 800a686:	69d9      	ldr	r1, [r3, #28]
 800a688:	0112      	lsls	r2, r2, #4
 800a68a:	4211      	tst	r1, r2
 800a68c:	d0c7      	beq.n	800a61e <UART_WaitOnFlagUntilTimeout+0xa>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 800a68e:	621a      	str	r2, [r3, #32]
          UART_EndRxTransfer(huart);
 800a690:	0020      	movs	r0, r4
 800a692:	f7ff fe61 	bl	800a358 <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 800a696:	0023      	movs	r3, r4
 800a698:	2220      	movs	r2, #32
 800a69a:	3390      	adds	r3, #144	; 0x90
 800a69c:	601a      	str	r2, [r3, #0]
          __HAL_UNLOCK(huart);
 800a69e:	9b01      	ldr	r3, [sp, #4]
 800a6a0:	3484      	adds	r4, #132	; 0x84
 800a6a2:	7023      	strb	r3, [r4, #0]
        return HAL_TIMEOUT;
 800a6a4:	2003      	movs	r0, #3
 800a6a6:	e7ec      	b.n	800a682 <UART_WaitOnFlagUntilTimeout+0x6e>

0800a6a8 <UART_CheckIdleState>:
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800a6a8:	0003      	movs	r3, r0
{
 800a6aa:	b573      	push	{r0, r1, r4, r5, r6, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800a6ac:	2600      	movs	r6, #0
{
 800a6ae:	0004      	movs	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800a6b0:	3390      	adds	r3, #144	; 0x90
 800a6b2:	601e      	str	r6, [r3, #0]
  tickstart = HAL_GetTick();
 800a6b4:	f7fe fab6 	bl	8008c24 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 800a6b8:	6823      	ldr	r3, [r4, #0]
  tickstart = HAL_GetTick();
 800a6ba:	0005      	movs	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 800a6bc:	681b      	ldr	r3, [r3, #0]
 800a6be:	071b      	lsls	r3, r3, #28
 800a6c0:	d51f      	bpl.n	800a702 <UART_CheckIdleState+0x5a>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800a6c2:	2180      	movs	r1, #128	; 0x80
 800a6c4:	4b28      	ldr	r3, [pc, #160]	; (800a768 <UART_CheckIdleState+0xc0>)
 800a6c6:	0032      	movs	r2, r6
 800a6c8:	9300      	str	r3, [sp, #0]
 800a6ca:	0389      	lsls	r1, r1, #14
 800a6cc:	0003      	movs	r3, r0
 800a6ce:	0020      	movs	r0, r4
 800a6d0:	f7ff ffa0 	bl	800a614 <UART_WaitOnFlagUntilTimeout>
 800a6d4:	42b0      	cmp	r0, r6
 800a6d6:	d014      	beq.n	800a702 <UART_CheckIdleState+0x5a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800a6d8:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800a6dc:	2301      	movs	r3, #1
 800a6de:	f383 8810 	msr	PRIMASK, r3
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE));
 800a6e2:	2080      	movs	r0, #128	; 0x80
 800a6e4:	6822      	ldr	r2, [r4, #0]
 800a6e6:	6813      	ldr	r3, [r2, #0]
 800a6e8:	4383      	bics	r3, r0
 800a6ea:	6013      	str	r3, [r2, #0]
 800a6ec:	f381 8810 	msr	PRIMASK, r1
      huart->gState = HAL_UART_STATE_READY;
 800a6f0:	0023      	movs	r3, r4
 800a6f2:	2220      	movs	r2, #32
 800a6f4:	3388      	adds	r3, #136	; 0x88
 800a6f6:	601a      	str	r2, [r3, #0]
      return HAL_TIMEOUT;
 800a6f8:	2003      	movs	r0, #3
      __HAL_UNLOCK(huart);
 800a6fa:	2300      	movs	r3, #0
 800a6fc:	3484      	adds	r4, #132	; 0x84
 800a6fe:	7023      	strb	r3, [r4, #0]
}
 800a700:	bd76      	pop	{r1, r2, r4, r5, r6, pc}
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 800a702:	0026      	movs	r6, r4
 800a704:	6823      	ldr	r3, [r4, #0]
 800a706:	368c      	adds	r6, #140	; 0x8c
 800a708:	681b      	ldr	r3, [r3, #0]
 800a70a:	075b      	lsls	r3, r3, #29
 800a70c:	d523      	bpl.n	800a756 <UART_CheckIdleState+0xae>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800a70e:	2180      	movs	r1, #128	; 0x80
 800a710:	4b15      	ldr	r3, [pc, #84]	; (800a768 <UART_CheckIdleState+0xc0>)
 800a712:	2200      	movs	r2, #0
 800a714:	9300      	str	r3, [sp, #0]
 800a716:	0020      	movs	r0, r4
 800a718:	002b      	movs	r3, r5
 800a71a:	03c9      	lsls	r1, r1, #15
 800a71c:	f7ff ff7a 	bl	800a614 <UART_WaitOnFlagUntilTimeout>
 800a720:	2800      	cmp	r0, #0
 800a722:	d018      	beq.n	800a756 <UART_CheckIdleState+0xae>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800a724:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800a728:	2201      	movs	r2, #1
 800a72a:	f382 8810 	msr	PRIMASK, r2
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 800a72e:	6821      	ldr	r1, [r4, #0]
 800a730:	4d0e      	ldr	r5, [pc, #56]	; (800a76c <UART_CheckIdleState+0xc4>)
 800a732:	680b      	ldr	r3, [r1, #0]
 800a734:	402b      	ands	r3, r5
 800a736:	600b      	str	r3, [r1, #0]
 800a738:	f380 8810 	msr	PRIMASK, r0
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800a73c:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800a740:	f382 8810 	msr	PRIMASK, r2
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800a744:	6821      	ldr	r1, [r4, #0]
 800a746:	688b      	ldr	r3, [r1, #8]
 800a748:	4393      	bics	r3, r2
 800a74a:	608b      	str	r3, [r1, #8]
 800a74c:	f380 8810 	msr	PRIMASK, r0
      huart->RxState = HAL_UART_STATE_READY;
 800a750:	2320      	movs	r3, #32
 800a752:	6033      	str	r3, [r6, #0]
 800a754:	e7d0      	b.n	800a6f8 <UART_CheckIdleState+0x50>
  huart->gState = HAL_UART_STATE_READY;
 800a756:	0023      	movs	r3, r4
 800a758:	2220      	movs	r2, #32
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800a75a:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 800a75c:	3388      	adds	r3, #136	; 0x88
 800a75e:	601a      	str	r2, [r3, #0]
  huart->RxState = HAL_UART_STATE_READY;
 800a760:	6032      	str	r2, [r6, #0]
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800a762:	66e0      	str	r0, [r4, #108]	; 0x6c
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 800a764:	6720      	str	r0, [r4, #112]	; 0x70
  return HAL_OK;
 800a766:	e7c8      	b.n	800a6fa <UART_CheckIdleState+0x52>
 800a768:	01ffffff 	.word	0x01ffffff
 800a76c:	fffffedf 	.word	0xfffffedf

0800a770 <HAL_UART_Init>:
{
 800a770:	b570      	push	{r4, r5, r6, lr}
 800a772:	1e04      	subs	r4, r0, #0
  if (huart == NULL)
 800a774:	d101      	bne.n	800a77a <HAL_UART_Init+0xa>
    return HAL_ERROR;
 800a776:	2001      	movs	r0, #1
}
 800a778:	bd70      	pop	{r4, r5, r6, pc}
  if (huart->gState == HAL_UART_STATE_RESET)
 800a77a:	0005      	movs	r5, r0
 800a77c:	3588      	adds	r5, #136	; 0x88
 800a77e:	682b      	ldr	r3, [r5, #0]
 800a780:	2b00      	cmp	r3, #0
 800a782:	d104      	bne.n	800a78e <HAL_UART_Init+0x1e>
    huart->Lock = HAL_UNLOCKED;
 800a784:	0002      	movs	r2, r0
 800a786:	3284      	adds	r2, #132	; 0x84
 800a788:	7013      	strb	r3, [r2, #0]
    HAL_UART_MspInit(huart);
 800a78a:	f7fe f8f7 	bl	800897c <HAL_UART_MspInit>
  huart->gState = HAL_UART_STATE_BUSY;
 800a78e:	2324      	movs	r3, #36	; 0x24
  __HAL_UART_DISABLE(huart);
 800a790:	2101      	movs	r1, #1
 800a792:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 800a794:	602b      	str	r3, [r5, #0]
  __HAL_UART_DISABLE(huart);
 800a796:	6813      	ldr	r3, [r2, #0]
 800a798:	438b      	bics	r3, r1
 800a79a:	6013      	str	r3, [r2, #0]
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 800a79c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800a79e:	2b00      	cmp	r3, #0
 800a7a0:	d002      	beq.n	800a7a8 <HAL_UART_Init+0x38>
    UART_AdvFeatureConfig(huart);
 800a7a2:	0020      	movs	r0, r4
 800a7a4:	f7ff fece 	bl	800a544 <UART_AdvFeatureConfig>
  if (UART_SetConfig(huart) == HAL_ERROR)
 800a7a8:	0020      	movs	r0, r4
 800a7aa:	f7ff fe07 	bl	800a3bc <UART_SetConfig>
 800a7ae:	2801      	cmp	r0, #1
 800a7b0:	d0e1      	beq.n	800a776 <HAL_UART_Init+0x6>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800a7b2:	6823      	ldr	r3, [r4, #0]
 800a7b4:	4907      	ldr	r1, [pc, #28]	; (800a7d4 <HAL_UART_Init+0x64>)
 800a7b6:	685a      	ldr	r2, [r3, #4]
  return (UART_CheckIdleState(huart));
 800a7b8:	0020      	movs	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800a7ba:	400a      	ands	r2, r1
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800a7bc:	212a      	movs	r1, #42	; 0x2a
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800a7be:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800a7c0:	689a      	ldr	r2, [r3, #8]
 800a7c2:	438a      	bics	r2, r1
 800a7c4:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 800a7c6:	2201      	movs	r2, #1
 800a7c8:	6819      	ldr	r1, [r3, #0]
 800a7ca:	430a      	orrs	r2, r1
 800a7cc:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
 800a7ce:	f7ff ff6b 	bl	800a6a8 <UART_CheckIdleState>
 800a7d2:	e7d1      	b.n	800a778 <HAL_UART_Init+0x8>
 800a7d4:	ffffb7ff 	.word	0xffffb7ff

0800a7d8 <UARTEx_SetNbDataToProcess>:
  *       the UART configuration registers.
  * @param huart UART handle.
  * @retval None
  */
static void UARTEx_SetNbDataToProcess(UART_HandleTypeDef *huart)
{
 800a7d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a7da:	0007      	movs	r7, r0
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
 800a7dc:	6e43      	ldr	r3, [r0, #100]	; 0x64
{
 800a7de:	0004      	movs	r4, r0
 800a7e0:	376a      	adds	r7, #106	; 0x6a
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
 800a7e2:	2b00      	cmp	r3, #0
 800a7e4:	d104      	bne.n	800a7f0 <UARTEx_SetNbDataToProcess+0x18>
  {
    huart->NbTxDataToProcess = 1U;
 800a7e6:	2001      	movs	r0, #1
 800a7e8:	8038      	strh	r0, [r7, #0]
    huart->NbRxDataToProcess = 1U;
 800a7ea:	3468      	adds	r4, #104	; 0x68
 800a7ec:	8020      	strh	r0, [r4, #0]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
                               (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
                               (uint16_t)denominator[rx_fifo_threshold];
  }
}
 800a7ee:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 800a7f0:	6803      	ldr	r3, [r0, #0]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 800a7f2:	4e0b      	ldr	r6, [pc, #44]	; (800a820 <UARTEx_SetNbDataToProcess+0x48>)
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 800a7f4:	689a      	ldr	r2, [r3, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 800a7f6:	689b      	ldr	r3, [r3, #8]
                               (uint16_t)denominator[tx_fifo_threshold];
 800a7f8:	4d0a      	ldr	r5, [pc, #40]	; (800a824 <UARTEx_SetNbDataToProcess+0x4c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 800a7fa:	0f5b      	lsrs	r3, r3, #29
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 800a7fc:	5cf0      	ldrb	r0, [r6, r3]
                               (uint16_t)denominator[tx_fifo_threshold];
 800a7fe:	5ce9      	ldrb	r1, [r5, r3]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 800a800:	00c0      	lsls	r0, r0, #3
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 800a802:	9201      	str	r2, [sp, #4]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 800a804:	f7fc f990 	bl	8006b28 <__divsi3>
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 800a808:	9b01      	ldr	r3, [sp, #4]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 800a80a:	8038      	strh	r0, [r7, #0]
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 800a80c:	011b      	lsls	r3, r3, #4
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 800a80e:	0f5b      	lsrs	r3, r3, #29
 800a810:	5cf0      	ldrb	r0, [r6, r3]
                               (uint16_t)denominator[rx_fifo_threshold];
 800a812:	5ce9      	ldrb	r1, [r5, r3]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 800a814:	00c0      	lsls	r0, r0, #3
 800a816:	f7fc f987 	bl	8006b28 <__divsi3>
 800a81a:	b280      	uxth	r0, r0
}
 800a81c:	e7e5      	b.n	800a7ea <UARTEx_SetNbDataToProcess+0x12>
 800a81e:	46c0      	nop			; (mov r8, r8)
 800a820:	0800f88c 	.word	0x0800f88c
 800a824:	0800f884 	.word	0x0800f884

0800a828 <HAL_UARTEx_DisableFifoMode>:
{
 800a828:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(huart);
 800a82a:	0004      	movs	r4, r0
 800a82c:	3484      	adds	r4, #132	; 0x84
 800a82e:	7822      	ldrb	r2, [r4, #0]
{
 800a830:	0003      	movs	r3, r0
  __HAL_LOCK(huart);
 800a832:	2002      	movs	r0, #2
 800a834:	2a01      	cmp	r2, #1
 800a836:	d011      	beq.n	800a85c <HAL_UARTEx_DisableFifoMode+0x34>
  huart->gState = HAL_UART_STATE_BUSY;
 800a838:	001d      	movs	r5, r3
 800a83a:	2224      	movs	r2, #36	; 0x24
  __HAL_UART_DISABLE(huart);
 800a83c:	2601      	movs	r6, #1
  huart->gState = HAL_UART_STATE_BUSY;
 800a83e:	3588      	adds	r5, #136	; 0x88
 800a840:	602a      	str	r2, [r5, #0]
  tmpcr1 = READ_REG(huart->Instance->CR1);
 800a842:	681a      	ldr	r2, [r3, #0]
 800a844:	6811      	ldr	r1, [r2, #0]
  __HAL_UART_DISABLE(huart);
 800a846:	6810      	ldr	r0, [r2, #0]
 800a848:	43b0      	bics	r0, r6
 800a84a:	6010      	str	r0, [r2, #0]
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
 800a84c:	4804      	ldr	r0, [pc, #16]	; (800a860 <HAL_UARTEx_DisableFifoMode+0x38>)
 800a84e:	4001      	ands	r1, r0
  huart->FifoMode = UART_FIFOMODE_DISABLE;
 800a850:	2000      	movs	r0, #0
 800a852:	6658      	str	r0, [r3, #100]	; 0x64
  huart->gState = HAL_UART_STATE_READY;
 800a854:	2320      	movs	r3, #32
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 800a856:	6011      	str	r1, [r2, #0]
  huart->gState = HAL_UART_STATE_READY;
 800a858:	602b      	str	r3, [r5, #0]
  __HAL_UNLOCK(huart);
 800a85a:	7020      	strb	r0, [r4, #0]
}
 800a85c:	bd70      	pop	{r4, r5, r6, pc}
 800a85e:	46c0      	nop			; (mov r8, r8)
 800a860:	dfffffff 	.word	0xdfffffff

0800a864 <HAL_UARTEx_SetTxFifoThreshold>:
{
 800a864:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(huart);
 800a866:	0005      	movs	r5, r0
 800a868:	3584      	adds	r5, #132	; 0x84
{
 800a86a:	000b      	movs	r3, r1
  __HAL_LOCK(huart);
 800a86c:	7829      	ldrb	r1, [r5, #0]
 800a86e:	2202      	movs	r2, #2
 800a870:	2901      	cmp	r1, #1
 800a872:	d015      	beq.n	800a8a0 <HAL_UARTEx_SetTxFifoThreshold+0x3c>
  huart->gState = HAL_UART_STATE_BUSY;
 800a874:	0006      	movs	r6, r0
  __HAL_UART_DISABLE(huart);
 800a876:	2101      	movs	r1, #1
  tmpcr1 = READ_REG(huart->Instance->CR1);
 800a878:	6804      	ldr	r4, [r0, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 800a87a:	3688      	adds	r6, #136	; 0x88
 800a87c:	3222      	adds	r2, #34	; 0x22
 800a87e:	6032      	str	r2, [r6, #0]
  tmpcr1 = READ_REG(huart->Instance->CR1);
 800a880:	6827      	ldr	r7, [r4, #0]
  __HAL_UART_DISABLE(huart);
 800a882:	6822      	ldr	r2, [r4, #0]
 800a884:	438a      	bics	r2, r1
 800a886:	6022      	str	r2, [r4, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
 800a888:	68a1      	ldr	r1, [r4, #8]
 800a88a:	00c9      	lsls	r1, r1, #3
 800a88c:	08c9      	lsrs	r1, r1, #3
 800a88e:	4319      	orrs	r1, r3
 800a890:	60a1      	str	r1, [r4, #8]
  UARTEx_SetNbDataToProcess(huart);
 800a892:	f7ff ffa1 	bl	800a7d8 <UARTEx_SetNbDataToProcess>
  huart->gState = HAL_UART_STATE_READY;
 800a896:	2320      	movs	r3, #32
  __HAL_UNLOCK(huart);
 800a898:	2200      	movs	r2, #0
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 800a89a:	6027      	str	r7, [r4, #0]
  huart->gState = HAL_UART_STATE_READY;
 800a89c:	6033      	str	r3, [r6, #0]
  __HAL_UNLOCK(huart);
 800a89e:	702a      	strb	r2, [r5, #0]
}
 800a8a0:	0010      	movs	r0, r2
 800a8a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800a8a4 <HAL_UARTEx_SetRxFifoThreshold>:
{
 800a8a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(huart);
 800a8a6:	0005      	movs	r5, r0
 800a8a8:	3584      	adds	r5, #132	; 0x84
{
 800a8aa:	000a      	movs	r2, r1
  __HAL_LOCK(huart);
 800a8ac:	7829      	ldrb	r1, [r5, #0]
 800a8ae:	2302      	movs	r3, #2
 800a8b0:	2901      	cmp	r1, #1
 800a8b2:	d015      	beq.n	800a8e0 <HAL_UARTEx_SetRxFifoThreshold+0x3c>
  huart->gState = HAL_UART_STATE_BUSY;
 800a8b4:	0006      	movs	r6, r0
  __HAL_UART_DISABLE(huart);
 800a8b6:	2101      	movs	r1, #1
  tmpcr1 = READ_REG(huart->Instance->CR1);
 800a8b8:	6804      	ldr	r4, [r0, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 800a8ba:	3688      	adds	r6, #136	; 0x88
 800a8bc:	3322      	adds	r3, #34	; 0x22
 800a8be:	6033      	str	r3, [r6, #0]
  tmpcr1 = READ_REG(huart->Instance->CR1);
 800a8c0:	6827      	ldr	r7, [r4, #0]
  __HAL_UART_DISABLE(huart);
 800a8c2:	6823      	ldr	r3, [r4, #0]
 800a8c4:	438b      	bics	r3, r1
 800a8c6:	6023      	str	r3, [r4, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
 800a8c8:	68a1      	ldr	r1, [r4, #8]
 800a8ca:	4b06      	ldr	r3, [pc, #24]	; (800a8e4 <HAL_UARTEx_SetRxFifoThreshold+0x40>)
 800a8cc:	4019      	ands	r1, r3
 800a8ce:	4311      	orrs	r1, r2
 800a8d0:	60a1      	str	r1, [r4, #8]
  UARTEx_SetNbDataToProcess(huart);
 800a8d2:	f7ff ff81 	bl	800a7d8 <UARTEx_SetNbDataToProcess>
  huart->gState = HAL_UART_STATE_READY;
 800a8d6:	2320      	movs	r3, #32
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 800a8d8:	6027      	str	r7, [r4, #0]
  huart->gState = HAL_UART_STATE_READY;
 800a8da:	6033      	str	r3, [r6, #0]
  __HAL_UNLOCK(huart);
 800a8dc:	2300      	movs	r3, #0
 800a8de:	702b      	strb	r3, [r5, #0]
}
 800a8e0:	0018      	movs	r0, r3
 800a8e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a8e4:	f1ffffff 	.word	0xf1ffffff

0800a8e8 <_ZdlPvj>:
 800a8e8:	b510      	push	{r4, lr}
 800a8ea:	f000 f881 	bl	800a9f0 <_ZdlPv>
 800a8ee:	bd10      	pop	{r4, pc}

0800a8f0 <_Znwj>:
 800a8f0:	b510      	push	{r4, lr}
 800a8f2:	1e04      	subs	r4, r0, #0
 800a8f4:	d100      	bne.n	800a8f8 <_Znwj+0x8>
 800a8f6:	3401      	adds	r4, #1
 800a8f8:	0020      	movs	r0, r4
 800a8fa:	f001 fa3b 	bl	800bd74 <malloc>
 800a8fe:	2800      	cmp	r0, #0
 800a900:	d000      	beq.n	800a904 <_Znwj+0x14>
 800a902:	bd10      	pop	{r4, pc}
 800a904:	f000 fe12 	bl	800b52c <_ZSt15get_new_handlerv>
 800a908:	2800      	cmp	r0, #0
 800a90a:	d001      	beq.n	800a910 <_Znwj+0x20>
 800a90c:	4780      	blx	r0
 800a90e:	e7f3      	b.n	800a8f8 <_Znwj+0x8>
 800a910:	3004      	adds	r0, #4
 800a912:	f000 f8d3 	bl	800aabc <__cxa_allocate_exception>
 800a916:	4b03      	ldr	r3, [pc, #12]	; (800a924 <_Znwj+0x34>)
 800a918:	4a03      	ldr	r2, [pc, #12]	; (800a928 <_Znwj+0x38>)
 800a91a:	4904      	ldr	r1, [pc, #16]	; (800a92c <_Znwj+0x3c>)
 800a91c:	6003      	str	r3, [r0, #0]
 800a91e:	f000 fdb3 	bl	800b488 <__cxa_throw>
 800a922:	46c0      	nop			; (mov r8, r8)
 800a924:	0800f8c8 	.word	0x0800f8c8
 800a928:	0800a9b9 	.word	0x0800a9b9
 800a92c:	0800f8a4 	.word	0x0800f8a4

0800a930 <_ZSt17__throw_bad_allocv>:
 800a930:	2004      	movs	r0, #4
 800a932:	b510      	push	{r4, lr}
 800a934:	f000 f8c2 	bl	800aabc <__cxa_allocate_exception>
 800a938:	4b02      	ldr	r3, [pc, #8]	; (800a944 <_ZSt17__throw_bad_allocv+0x14>)
 800a93a:	4a03      	ldr	r2, [pc, #12]	; (800a948 <_ZSt17__throw_bad_allocv+0x18>)
 800a93c:	4903      	ldr	r1, [pc, #12]	; (800a94c <_ZSt17__throw_bad_allocv+0x1c>)
 800a93e:	6003      	str	r3, [r0, #0]
 800a940:	f000 fda2 	bl	800b488 <__cxa_throw>
 800a944:	0800f8c8 	.word	0x0800f8c8
 800a948:	0800a9b9 	.word	0x0800a9b9
 800a94c:	0800f8a4 	.word	0x0800f8a4

0800a950 <_ZSt19__throw_logic_errorPKc>:
 800a950:	b570      	push	{r4, r5, r6, lr}
 800a952:	0005      	movs	r5, r0
 800a954:	2008      	movs	r0, #8
 800a956:	f000 f8b1 	bl	800aabc <__cxa_allocate_exception>
 800a95a:	0029      	movs	r1, r5
 800a95c:	0004      	movs	r4, r0
 800a95e:	f000 ffb3 	bl	800b8c8 <_ZNSt11logic_errorC1EPKc>
 800a962:	0020      	movs	r0, r4
 800a964:	4a04      	ldr	r2, [pc, #16]	; (800a978 <_ZSt19__throw_logic_errorPKc+0x28>)
 800a966:	4905      	ldr	r1, [pc, #20]	; (800a97c <_ZSt19__throw_logic_errorPKc+0x2c>)
 800a968:	f000 fd8e 	bl	800b488 <__cxa_throw>
 800a96c:	0020      	movs	r0, r4
 800a96e:	f000 f8bb 	bl	800aae8 <__cxa_free_exception>
 800a972:	f000 f8e1 	bl	800ab38 <__cxa_end_cleanup>
 800a976:	46c0      	nop			; (mov r8, r8)
 800a978:	0800b7b9 	.word	0x0800b7b9
 800a97c:	0800fac8 	.word	0x0800fac8

0800a980 <_ZSt20__throw_length_errorPKc>:
 800a980:	b570      	push	{r4, r5, r6, lr}
 800a982:	0005      	movs	r5, r0
 800a984:	2008      	movs	r0, #8
 800a986:	f000 f899 	bl	800aabc <__cxa_allocate_exception>
 800a98a:	0029      	movs	r1, r5
 800a98c:	0004      	movs	r4, r0
 800a98e:	f000 ffdf 	bl	800b950 <_ZNSt12length_errorC1EPKc>
 800a992:	0020      	movs	r0, r4
 800a994:	4a04      	ldr	r2, [pc, #16]	; (800a9a8 <_ZSt20__throw_length_errorPKc+0x28>)
 800a996:	4905      	ldr	r1, [pc, #20]	; (800a9ac <_ZSt20__throw_length_errorPKc+0x2c>)
 800a998:	f000 fd76 	bl	800b488 <__cxa_throw>
 800a99c:	0020      	movs	r0, r4
 800a99e:	f000 f8a3 	bl	800aae8 <__cxa_free_exception>
 800a9a2:	f000 f8c9 	bl	800ab38 <__cxa_end_cleanup>
 800a9a6:	46c0      	nop			; (mov r8, r8)
 800a9a8:	0800b7f9 	.word	0x0800b7f9
 800a9ac:	0800fad4 	.word	0x0800fad4

0800a9b0 <_ZNKSt9bad_alloc4whatEv>:
 800a9b0:	4800      	ldr	r0, [pc, #0]	; (800a9b4 <_ZNKSt9bad_alloc4whatEv+0x4>)
 800a9b2:	4770      	bx	lr
 800a9b4:	0800f894 	.word	0x0800f894

0800a9b8 <_ZNSt9bad_allocD1Ev>:
 800a9b8:	b510      	push	{r4, lr}
 800a9ba:	0004      	movs	r4, r0
 800a9bc:	4b03      	ldr	r3, [pc, #12]	; (800a9cc <_ZNSt9bad_allocD1Ev+0x14>)
 800a9be:	3308      	adds	r3, #8
 800a9c0:	6003      	str	r3, [r0, #0]
 800a9c2:	f000 f985 	bl	800acd0 <_ZNSt9exceptionD1Ev>
 800a9c6:	0020      	movs	r0, r4
 800a9c8:	bd10      	pop	{r4, pc}
 800a9ca:	46c0      	nop			; (mov r8, r8)
 800a9cc:	0800f8c0 	.word	0x0800f8c0

0800a9d0 <_ZNSt9bad_allocD0Ev>:
 800a9d0:	b510      	push	{r4, lr}
 800a9d2:	0004      	movs	r4, r0
 800a9d4:	4b05      	ldr	r3, [pc, #20]	; (800a9ec <_ZNSt9bad_allocD0Ev+0x1c>)
 800a9d6:	3308      	adds	r3, #8
 800a9d8:	6003      	str	r3, [r0, #0]
 800a9da:	f000 f979 	bl	800acd0 <_ZNSt9exceptionD1Ev>
 800a9de:	0020      	movs	r0, r4
 800a9e0:	2104      	movs	r1, #4
 800a9e2:	f7ff ff81 	bl	800a8e8 <_ZdlPvj>
 800a9e6:	0020      	movs	r0, r4
 800a9e8:	bd10      	pop	{r4, pc}
 800a9ea:	46c0      	nop			; (mov r8, r8)
 800a9ec:	0800f8c0 	.word	0x0800f8c0

0800a9f0 <_ZdlPv>:
 800a9f0:	b510      	push	{r4, lr}
 800a9f2:	f001 f9c9 	bl	800bd88 <free>
 800a9f6:	bd10      	pop	{r4, pc}

0800a9f8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0>:
 800a9f8:	b570      	push	{r4, r5, r6, lr}
 800a9fa:	4c1b      	ldr	r4, [pc, #108]	; (800aa68 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x70>)
 800a9fc:	3808      	subs	r0, #8
 800a9fe:	6863      	ldr	r3, [r4, #4]
 800aa00:	6806      	ldr	r6, [r0, #0]
 800aa02:	2b00      	cmp	r3, #0
 800aa04:	d024      	beq.n	800aa50 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x58>
 800aa06:	1985      	adds	r5, r0, r6
 800aa08:	42ab      	cmp	r3, r5
 800aa0a:	d821      	bhi.n	800aa50 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x58>
 800aa0c:	d01c      	beq.n	800aa48 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x50>
 800aa0e:	685a      	ldr	r2, [r3, #4]
 800aa10:	3404      	adds	r4, #4
 800aa12:	2a00      	cmp	r2, #0
 800aa14:	d106      	bne.n	800aa24 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x2c>
 800aa16:	e00d      	b.n	800aa34 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x3c>
 800aa18:	6851      	ldr	r1, [r2, #4]
 800aa1a:	1d1c      	adds	r4, r3, #4
 800aa1c:	2900      	cmp	r1, #0
 800aa1e:	d01d      	beq.n	800aa5c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x64>
 800aa20:	0013      	movs	r3, r2
 800aa22:	000a      	movs	r2, r1
 800aa24:	4295      	cmp	r5, r2
 800aa26:	d3f7      	bcc.n	800aa18 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x20>
 800aa28:	d103      	bne.n	800aa32 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x3a>
 800aa2a:	682a      	ldr	r2, [r5, #0]
 800aa2c:	18b6      	adds	r6, r6, r2
 800aa2e:	686a      	ldr	r2, [r5, #4]
 800aa30:	605a      	str	r2, [r3, #4]
 800aa32:	6823      	ldr	r3, [r4, #0]
 800aa34:	681a      	ldr	r2, [r3, #0]
 800aa36:	1899      	adds	r1, r3, r2
 800aa38:	4288      	cmp	r0, r1
 800aa3a:	d00c      	beq.n	800aa56 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x5e>
 800aa3c:	685b      	ldr	r3, [r3, #4]
 800aa3e:	6006      	str	r6, [r0, #0]
 800aa40:	6043      	str	r3, [r0, #4]
 800aa42:	6823      	ldr	r3, [r4, #0]
 800aa44:	6058      	str	r0, [r3, #4]
 800aa46:	e005      	b.n	800aa54 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x5c>
 800aa48:	681a      	ldr	r2, [r3, #0]
 800aa4a:	685b      	ldr	r3, [r3, #4]
 800aa4c:	1992      	adds	r2, r2, r6
 800aa4e:	6002      	str	r2, [r0, #0]
 800aa50:	6043      	str	r3, [r0, #4]
 800aa52:	6060      	str	r0, [r4, #4]
 800aa54:	bd70      	pop	{r4, r5, r6, pc}
 800aa56:	1992      	adds	r2, r2, r6
 800aa58:	601a      	str	r2, [r3, #0]
 800aa5a:	e7fb      	b.n	800aa54 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x5c>
 800aa5c:	685b      	ldr	r3, [r3, #4]
 800aa5e:	681a      	ldr	r2, [r3, #0]
 800aa60:	1899      	adds	r1, r3, r2
 800aa62:	4288      	cmp	r0, r1
 800aa64:	d1ea      	bne.n	800aa3c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x44>
 800aa66:	e7f6      	b.n	800aa56 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x5e>
 800aa68:	200005e0 	.word	0x200005e0

0800aa6c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0>:
 800aa6c:	0002      	movs	r2, r0
 800aa6e:	b530      	push	{r4, r5, lr}
 800aa70:	3208      	adds	r2, #8
 800aa72:	3008      	adds	r0, #8
 800aa74:	d300      	bcc.n	800aa78 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0xc>
 800aa76:	2208      	movs	r2, #8
 800aa78:	2307      	movs	r3, #7
 800aa7a:	490f      	ldr	r1, [pc, #60]	; (800aab8 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x4c>)
 800aa7c:	3207      	adds	r2, #7
 800aa7e:	6848      	ldr	r0, [r1, #4]
 800aa80:	439a      	bics	r2, r3
 800aa82:	3104      	adds	r1, #4
 800aa84:	2800      	cmp	r0, #0
 800aa86:	d104      	bne.n	800aa92 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x26>
 800aa88:	e00d      	b.n	800aaa6 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x3a>
 800aa8a:	1d01      	adds	r1, r0, #4
 800aa8c:	6840      	ldr	r0, [r0, #4]
 800aa8e:	2800      	cmp	r0, #0
 800aa90:	d009      	beq.n	800aaa6 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x3a>
 800aa92:	6803      	ldr	r3, [r0, #0]
 800aa94:	429a      	cmp	r2, r3
 800aa96:	d8f8      	bhi.n	800aa8a <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x1e>
 800aa98:	1a9d      	subs	r5, r3, r2
 800aa9a:	2d07      	cmp	r5, #7
 800aa9c:	d804      	bhi.n	800aaa8 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x3c>
 800aa9e:	6844      	ldr	r4, [r0, #4]
 800aaa0:	6003      	str	r3, [r0, #0]
 800aaa2:	600c      	str	r4, [r1, #0]
 800aaa4:	3008      	adds	r0, #8
 800aaa6:	bd30      	pop	{r4, r5, pc}
 800aaa8:	6843      	ldr	r3, [r0, #4]
 800aaaa:	1884      	adds	r4, r0, r2
 800aaac:	6063      	str	r3, [r4, #4]
 800aaae:	6808      	ldr	r0, [r1, #0]
 800aab0:	6025      	str	r5, [r4, #0]
 800aab2:	6002      	str	r2, [r0, #0]
 800aab4:	e7f5      	b.n	800aaa2 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x36>
 800aab6:	46c0      	nop			; (mov r8, r8)
 800aab8:	200005e0 	.word	0x200005e0

0800aabc <__cxa_allocate_exception>:
 800aabc:	b570      	push	{r4, r5, r6, lr}
 800aabe:	3080      	adds	r0, #128	; 0x80
 800aac0:	0005      	movs	r5, r0
 800aac2:	f001 f957 	bl	800bd74 <malloc>
 800aac6:	1e04      	subs	r4, r0, #0
 800aac8:	d007      	beq.n	800aada <__cxa_allocate_exception+0x1e>
 800aaca:	2280      	movs	r2, #128	; 0x80
 800aacc:	2100      	movs	r1, #0
 800aace:	0020      	movs	r0, r4
 800aad0:	f001 fd6b 	bl	800c5aa <memset>
 800aad4:	0020      	movs	r0, r4
 800aad6:	3080      	adds	r0, #128	; 0x80
 800aad8:	bd70      	pop	{r4, r5, r6, pc}
 800aada:	0028      	movs	r0, r5
 800aadc:	f7ff ffc6 	bl	800aa6c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0>
 800aae0:	1e04      	subs	r4, r0, #0
 800aae2:	d1f2      	bne.n	800aaca <__cxa_allocate_exception+0xe>
 800aae4:	f000 fc70 	bl	800b3c8 <_ZSt9terminatev>

0800aae8 <__cxa_free_exception>:
 800aae8:	4a07      	ldr	r2, [pc, #28]	; (800ab08 <__cxa_free_exception+0x20>)
 800aaea:	3880      	subs	r0, #128	; 0x80
 800aaec:	6893      	ldr	r3, [r2, #8]
 800aaee:	b510      	push	{r4, lr}
 800aaf0:	4298      	cmp	r0, r3
 800aaf2:	d903      	bls.n	800aafc <__cxa_free_exception+0x14>
 800aaf4:	68d2      	ldr	r2, [r2, #12]
 800aaf6:	189b      	adds	r3, r3, r2
 800aaf8:	4298      	cmp	r0, r3
 800aafa:	d302      	bcc.n	800ab02 <__cxa_free_exception+0x1a>
 800aafc:	f001 f944 	bl	800bd88 <free>
 800ab00:	bd10      	pop	{r4, pc}
 800ab02:	f7ff ff79 	bl	800a9f8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0>
 800ab06:	e7fb      	b.n	800ab00 <__cxa_free_exception+0x18>
 800ab08:	200005e0 	.word	0x200005e0

0800ab0c <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv>:
 800ab0c:	b570      	push	{r4, r5, r6, lr}
 800ab0e:	259e      	movs	r5, #158	; 0x9e
 800ab10:	4c08      	ldr	r4, [pc, #32]	; (800ab34 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x28>)
 800ab12:	012d      	lsls	r5, r5, #4
 800ab14:	0028      	movs	r0, r5
 800ab16:	60e5      	str	r5, [r4, #12]
 800ab18:	f001 f92c 	bl	800bd74 <malloc>
 800ab1c:	60a0      	str	r0, [r4, #8]
 800ab1e:	2800      	cmp	r0, #0
 800ab20:	d004      	beq.n	800ab2c <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x20>
 800ab22:	2300      	movs	r3, #0
 800ab24:	6060      	str	r0, [r4, #4]
 800ab26:	6005      	str	r5, [r0, #0]
 800ab28:	6043      	str	r3, [r0, #4]
 800ab2a:	bd70      	pop	{r4, r5, r6, pc}
 800ab2c:	60e0      	str	r0, [r4, #12]
 800ab2e:	6060      	str	r0, [r4, #4]
 800ab30:	e7fb      	b.n	800ab2a <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x1e>
 800ab32:	46c0      	nop			; (mov r8, r8)
 800ab34:	200005e0 	.word	0x200005e0

0800ab38 <__cxa_end_cleanup>:
 800ab38:	b41e      	push	{r1, r2, r3, r4}
 800ab3a:	f000 f891 	bl	800ac60 <__gnu_end_cleanup>
 800ab3e:	bc1e      	pop	{r1, r2, r3, r4}
 800ab40:	f7fc fe54 	bl	80077ec <_Unwind_Resume>

0800ab44 <__cxa_type_match>:
 800ab44:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ab46:	46c6      	mov	lr, r8
 800ab48:	b500      	push	{lr}
 800ab4a:	4698      	mov	r8, r3
 800ab4c:	7803      	ldrb	r3, [r0, #0]
 800ab4e:	000c      	movs	r4, r1
 800ab50:	b082      	sub	sp, #8
 800ab52:	2b47      	cmp	r3, #71	; 0x47
 800ab54:	d01c      	beq.n	800ab90 <__cxa_type_match+0x4c>
 800ab56:	2000      	movs	r0, #0
 800ab58:	4d27      	ldr	r5, [pc, #156]	; (800abf8 <__cxa_type_match+0xb4>)
 800ab5a:	682b      	ldr	r3, [r5, #0]
 800ab5c:	9001      	str	r0, [sp, #4]
 800ab5e:	689b      	ldr	r3, [r3, #8]
 800ab60:	0028      	movs	r0, r5
 800ab62:	4798      	blx	r3
 800ab64:	2601      	movs	r6, #1
 800ab66:	2800      	cmp	r0, #0
 800ab68:	d003      	beq.n	800ab72 <__cxa_type_match+0x2e>
 800ab6a:	9b01      	ldr	r3, [sp, #4]
 800ab6c:	3601      	adds	r6, #1
 800ab6e:	681b      	ldr	r3, [r3, #0]
 800ab70:	9301      	str	r3, [sp, #4]
 800ab72:	6823      	ldr	r3, [r4, #0]
 800ab74:	0029      	movs	r1, r5
 800ab76:	691f      	ldr	r7, [r3, #16]
 800ab78:	0020      	movs	r0, r4
 800ab7a:	2301      	movs	r3, #1
 800ab7c:	aa01      	add	r2, sp, #4
 800ab7e:	47b8      	blx	r7
 800ab80:	2800      	cmp	r0, #0
 800ab82:	d123      	bne.n	800abcc <__cxa_type_match+0x88>
 800ab84:	2600      	movs	r6, #0
 800ab86:	0030      	movs	r0, r6
 800ab88:	b002      	add	sp, #8
 800ab8a:	bc80      	pop	{r7}
 800ab8c:	46b8      	mov	r8, r7
 800ab8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ab90:	7843      	ldrb	r3, [r0, #1]
 800ab92:	2b4e      	cmp	r3, #78	; 0x4e
 800ab94:	d1df      	bne.n	800ab56 <__cxa_type_match+0x12>
 800ab96:	7883      	ldrb	r3, [r0, #2]
 800ab98:	2b55      	cmp	r3, #85	; 0x55
 800ab9a:	d1dc      	bne.n	800ab56 <__cxa_type_match+0x12>
 800ab9c:	78c3      	ldrb	r3, [r0, #3]
 800ab9e:	2b43      	cmp	r3, #67	; 0x43
 800aba0:	d1d9      	bne.n	800ab56 <__cxa_type_match+0x12>
 800aba2:	7903      	ldrb	r3, [r0, #4]
 800aba4:	2b46      	cmp	r3, #70	; 0x46
 800aba6:	d01b      	beq.n	800abe0 <__cxa_type_match+0x9c>
 800aba8:	7903      	ldrb	r3, [r0, #4]
 800abaa:	2b43      	cmp	r3, #67	; 0x43
 800abac:	d1d3      	bne.n	800ab56 <__cxa_type_match+0x12>
 800abae:	7943      	ldrb	r3, [r0, #5]
 800abb0:	2b2b      	cmp	r3, #43	; 0x2b
 800abb2:	d1d0      	bne.n	800ab56 <__cxa_type_match+0x12>
 800abb4:	7983      	ldrb	r3, [r0, #6]
 800abb6:	2b2b      	cmp	r3, #43	; 0x2b
 800abb8:	d1cd      	bne.n	800ab56 <__cxa_type_match+0x12>
 800abba:	79c3      	ldrb	r3, [r0, #7]
 800abbc:	2b01      	cmp	r3, #1
 800abbe:	d8ca      	bhi.n	800ab56 <__cxa_type_match+0x12>
 800abc0:	d008      	beq.n	800abd4 <__cxa_type_match+0x90>
 800abc2:	0003      	movs	r3, r0
 800abc4:	3b20      	subs	r3, #32
 800abc6:	681d      	ldr	r5, [r3, #0]
 800abc8:	3058      	adds	r0, #88	; 0x58
 800abca:	e7c6      	b.n	800ab5a <__cxa_type_match+0x16>
 800abcc:	4642      	mov	r2, r8
 800abce:	9b01      	ldr	r3, [sp, #4]
 800abd0:	6013      	str	r3, [r2, #0]
 800abd2:	e7d8      	b.n	800ab86 <__cxa_type_match+0x42>
 800abd4:	3820      	subs	r0, #32
 800abd6:	6800      	ldr	r0, [r0, #0]
 800abd8:	0003      	movs	r3, r0
 800abda:	3b78      	subs	r3, #120	; 0x78
 800abdc:	681d      	ldr	r5, [r3, #0]
 800abde:	e7bc      	b.n	800ab5a <__cxa_type_match+0x16>
 800abe0:	7943      	ldrb	r3, [r0, #5]
 800abe2:	2b4f      	cmp	r3, #79	; 0x4f
 800abe4:	d1e0      	bne.n	800aba8 <__cxa_type_match+0x64>
 800abe6:	7983      	ldrb	r3, [r0, #6]
 800abe8:	2b52      	cmp	r3, #82	; 0x52
 800abea:	d1dd      	bne.n	800aba8 <__cxa_type_match+0x64>
 800abec:	79c3      	ldrb	r3, [r0, #7]
 800abee:	2b00      	cmp	r3, #0
 800abf0:	d1da      	bne.n	800aba8 <__cxa_type_match+0x64>
 800abf2:	0018      	movs	r0, r3
 800abf4:	4d01      	ldr	r5, [pc, #4]	; (800abfc <__cxa_type_match+0xb8>)
 800abf6:	e7b0      	b.n	800ab5a <__cxa_type_match+0x16>
 800abf8:	0800f8f0 	.word	0x0800f8f0
 800abfc:	0800f8e8 	.word	0x0800f8e8

0800ac00 <__cxa_begin_cleanup>:
 800ac00:	b510      	push	{r4, lr}
 800ac02:	0004      	movs	r4, r0
 800ac04:	f000 f878 	bl	800acf8 <__cxa_get_globals>
 800ac08:	0022      	movs	r2, r4
 800ac0a:	7823      	ldrb	r3, [r4, #0]
 800ac0c:	3a20      	subs	r2, #32
 800ac0e:	2b47      	cmp	r3, #71	; 0x47
 800ac10:	d005      	beq.n	800ac1e <__cxa_begin_cleanup+0x1e>
 800ac12:	6883      	ldr	r3, [r0, #8]
 800ac14:	2b00      	cmp	r3, #0
 800ac16:	d120      	bne.n	800ac5a <__cxa_begin_cleanup+0x5a>
 800ac18:	6082      	str	r2, [r0, #8]
 800ac1a:	2001      	movs	r0, #1
 800ac1c:	bd10      	pop	{r4, pc}
 800ac1e:	7863      	ldrb	r3, [r4, #1]
 800ac20:	2b4e      	cmp	r3, #78	; 0x4e
 800ac22:	d1f6      	bne.n	800ac12 <__cxa_begin_cleanup+0x12>
 800ac24:	78a3      	ldrb	r3, [r4, #2]
 800ac26:	2b55      	cmp	r3, #85	; 0x55
 800ac28:	d1f3      	bne.n	800ac12 <__cxa_begin_cleanup+0x12>
 800ac2a:	78e3      	ldrb	r3, [r4, #3]
 800ac2c:	2b43      	cmp	r3, #67	; 0x43
 800ac2e:	d1f0      	bne.n	800ac12 <__cxa_begin_cleanup+0x12>
 800ac30:	7923      	ldrb	r3, [r4, #4]
 800ac32:	2b43      	cmp	r3, #67	; 0x43
 800ac34:	d1ed      	bne.n	800ac12 <__cxa_begin_cleanup+0x12>
 800ac36:	7963      	ldrb	r3, [r4, #5]
 800ac38:	2b2b      	cmp	r3, #43	; 0x2b
 800ac3a:	d1ea      	bne.n	800ac12 <__cxa_begin_cleanup+0x12>
 800ac3c:	79a3      	ldrb	r3, [r4, #6]
 800ac3e:	2b2b      	cmp	r3, #43	; 0x2b
 800ac40:	d1e7      	bne.n	800ac12 <__cxa_begin_cleanup+0x12>
 800ac42:	79e3      	ldrb	r3, [r4, #7]
 800ac44:	2b01      	cmp	r3, #1
 800ac46:	d8e4      	bhi.n	800ac12 <__cxa_begin_cleanup+0x12>
 800ac48:	69d3      	ldr	r3, [r2, #28]
 800ac4a:	3301      	adds	r3, #1
 800ac4c:	61d3      	str	r3, [r2, #28]
 800ac4e:	2b01      	cmp	r3, #1
 800ac50:	d1e3      	bne.n	800ac1a <__cxa_begin_cleanup+0x1a>
 800ac52:	6883      	ldr	r3, [r0, #8]
 800ac54:	6193      	str	r3, [r2, #24]
 800ac56:	6082      	str	r2, [r0, #8]
 800ac58:	e7df      	b.n	800ac1a <__cxa_begin_cleanup+0x1a>
 800ac5a:	f000 fbb5 	bl	800b3c8 <_ZSt9terminatev>
 800ac5e:	46c0      	nop			; (mov r8, r8)

0800ac60 <__gnu_end_cleanup>:
 800ac60:	b510      	push	{r4, lr}
 800ac62:	f000 f849 	bl	800acf8 <__cxa_get_globals>
 800ac66:	6883      	ldr	r3, [r0, #8]
 800ac68:	2b00      	cmp	r3, #0
 800ac6a:	d02e      	beq.n	800acca <__gnu_end_cleanup+0x6a>
 800ac6c:	2220      	movs	r2, #32
 800ac6e:	5c9a      	ldrb	r2, [r3, r2]
 800ac70:	2a47      	cmp	r2, #71	; 0x47
 800ac72:	d004      	beq.n	800ac7e <__gnu_end_cleanup+0x1e>
 800ac74:	2200      	movs	r2, #0
 800ac76:	6082      	str	r2, [r0, #8]
 800ac78:	3320      	adds	r3, #32
 800ac7a:	0018      	movs	r0, r3
 800ac7c:	bd10      	pop	{r4, pc}
 800ac7e:	3a26      	subs	r2, #38	; 0x26
 800ac80:	5c9a      	ldrb	r2, [r3, r2]
 800ac82:	2a4e      	cmp	r2, #78	; 0x4e
 800ac84:	d1f6      	bne.n	800ac74 <__gnu_end_cleanup+0x14>
 800ac86:	3a2c      	subs	r2, #44	; 0x2c
 800ac88:	5c9a      	ldrb	r2, [r3, r2]
 800ac8a:	2a55      	cmp	r2, #85	; 0x55
 800ac8c:	d1f2      	bne.n	800ac74 <__gnu_end_cleanup+0x14>
 800ac8e:	3a32      	subs	r2, #50	; 0x32
 800ac90:	5c9a      	ldrb	r2, [r3, r2]
 800ac92:	2a43      	cmp	r2, #67	; 0x43
 800ac94:	d1ee      	bne.n	800ac74 <__gnu_end_cleanup+0x14>
 800ac96:	3a1f      	subs	r2, #31
 800ac98:	5c9a      	ldrb	r2, [r3, r2]
 800ac9a:	2a43      	cmp	r2, #67	; 0x43
 800ac9c:	d1ea      	bne.n	800ac74 <__gnu_end_cleanup+0x14>
 800ac9e:	3a1e      	subs	r2, #30
 800aca0:	5c9a      	ldrb	r2, [r3, r2]
 800aca2:	2a2b      	cmp	r2, #43	; 0x2b
 800aca4:	d1e6      	bne.n	800ac74 <__gnu_end_cleanup+0x14>
 800aca6:	3a05      	subs	r2, #5
 800aca8:	5c9a      	ldrb	r2, [r3, r2]
 800acaa:	2a2b      	cmp	r2, #43	; 0x2b
 800acac:	d1e2      	bne.n	800ac74 <__gnu_end_cleanup+0x14>
 800acae:	3a04      	subs	r2, #4
 800acb0:	5c9a      	ldrb	r2, [r3, r2]
 800acb2:	2a01      	cmp	r2, #1
 800acb4:	d8de      	bhi.n	800ac74 <__gnu_end_cleanup+0x14>
 800acb6:	69da      	ldr	r2, [r3, #28]
 800acb8:	3a01      	subs	r2, #1
 800acba:	61da      	str	r2, [r3, #28]
 800acbc:	2a00      	cmp	r2, #0
 800acbe:	d1db      	bne.n	800ac78 <__gnu_end_cleanup+0x18>
 800acc0:	699a      	ldr	r2, [r3, #24]
 800acc2:	6082      	str	r2, [r0, #8]
 800acc4:	2200      	movs	r2, #0
 800acc6:	619a      	str	r2, [r3, #24]
 800acc8:	e7d6      	b.n	800ac78 <__gnu_end_cleanup+0x18>
 800acca:	f000 fb7d 	bl	800b3c8 <_ZSt9terminatev>
 800acce:	46c0      	nop			; (mov r8, r8)

0800acd0 <_ZNSt9exceptionD1Ev>:
 800acd0:	4770      	bx	lr
 800acd2:	46c0      	nop			; (mov r8, r8)

0800acd4 <_ZNSt13bad_exceptionD1Ev>:
 800acd4:	4770      	bx	lr
 800acd6:	46c0      	nop			; (mov r8, r8)

0800acd8 <_ZGTtNKSt13bad_exception4whatEv>:
 800acd8:	4800      	ldr	r0, [pc, #0]	; (800acdc <_ZGTtNKSt13bad_exception4whatEv+0x4>)
 800acda:	4770      	bx	lr
 800acdc:	0800f8d4 	.word	0x0800f8d4

0800ace0 <_ZNSt13bad_exceptionD0Ev>:
 800ace0:	b510      	push	{r4, lr}
 800ace2:	0004      	movs	r4, r0
 800ace4:	2104      	movs	r1, #4
 800ace6:	f7ff fdff 	bl	800a8e8 <_ZdlPvj>
 800acea:	0020      	movs	r0, r4
 800acec:	bd10      	pop	{r4, pc}
 800acee:	46c0      	nop			; (mov r8, r8)

0800acf0 <__cxa_get_globals_fast>:
 800acf0:	4800      	ldr	r0, [pc, #0]	; (800acf4 <__cxa_get_globals_fast+0x4>)
 800acf2:	4770      	bx	lr
 800acf4:	200005f0 	.word	0x200005f0

0800acf8 <__cxa_get_globals>:
 800acf8:	4800      	ldr	r0, [pc, #0]	; (800acfc <__cxa_get_globals+0x4>)
 800acfa:	4770      	bx	lr
 800acfc:	200005f0 	.word	0x200005f0

0800ad00 <_ZL28read_encoded_value_with_basehjPKhPj>:
 800ad00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ad02:	46de      	mov	lr, fp
 800ad04:	4645      	mov	r5, r8
 800ad06:	4657      	mov	r7, sl
 800ad08:	464e      	mov	r6, r9
 800ad0a:	468b      	mov	fp, r1
 800ad0c:	b5e0      	push	{r5, r6, r7, lr}
 800ad0e:	0005      	movs	r5, r0
 800ad10:	2850      	cmp	r0, #80	; 0x50
 800ad12:	d025      	beq.n	800ad60 <_ZL28read_encoded_value_with_basehjPKhPj+0x60>
 800ad14:	200f      	movs	r0, #15
 800ad16:	4028      	ands	r0, r5
 800ad18:	280c      	cmp	r0, #12
 800ad1a:	d900      	bls.n	800ad1e <_ZL28read_encoded_value_with_basehjPKhPj+0x1e>
 800ad1c:	e075      	b.n	800ae0a <_ZL28read_encoded_value_with_basehjPKhPj+0x10a>
 800ad1e:	4c3c      	ldr	r4, [pc, #240]	; (800ae10 <_ZL28read_encoded_value_with_basehjPKhPj+0x110>)
 800ad20:	0080      	lsls	r0, r0, #2
 800ad22:	5820      	ldr	r0, [r4, r0]
 800ad24:	4687      	mov	pc, r0
 800ad26:	7854      	ldrb	r4, [r2, #1]
 800ad28:	7810      	ldrb	r0, [r2, #0]
 800ad2a:	0224      	lsls	r4, r4, #8
 800ad2c:	4304      	orrs	r4, r0
 800ad2e:	7890      	ldrb	r0, [r2, #2]
 800ad30:	0400      	lsls	r0, r0, #16
 800ad32:	4320      	orrs	r0, r4
 800ad34:	78d4      	ldrb	r4, [r2, #3]
 800ad36:	0624      	lsls	r4, r4, #24
 800ad38:	4304      	orrs	r4, r0
 800ad3a:	1d10      	adds	r0, r2, #4
 800ad3c:	2c00      	cmp	r4, #0
 800ad3e:	d008      	beq.n	800ad52 <_ZL28read_encoded_value_with_basehjPKhPj+0x52>
 800ad40:	2670      	movs	r6, #112	; 0x70
 800ad42:	402e      	ands	r6, r5
 800ad44:	2e10      	cmp	r6, #16
 800ad46:	d100      	bne.n	800ad4a <_ZL28read_encoded_value_with_basehjPKhPj+0x4a>
 800ad48:	4693      	mov	fp, r2
 800ad4a:	b26d      	sxtb	r5, r5
 800ad4c:	445c      	add	r4, fp
 800ad4e:	2d00      	cmp	r5, #0
 800ad50:	db0b      	blt.n	800ad6a <_ZL28read_encoded_value_with_basehjPKhPj+0x6a>
 800ad52:	601c      	str	r4, [r3, #0]
 800ad54:	bcf0      	pop	{r4, r5, r6, r7}
 800ad56:	46bb      	mov	fp, r7
 800ad58:	46b2      	mov	sl, r6
 800ad5a:	46a9      	mov	r9, r5
 800ad5c:	46a0      	mov	r8, r4
 800ad5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ad60:	1cd0      	adds	r0, r2, #3
 800ad62:	2203      	movs	r2, #3
 800ad64:	4390      	bics	r0, r2
 800ad66:	c810      	ldmia	r0!, {r4}
 800ad68:	e7f3      	b.n	800ad52 <_ZL28read_encoded_value_with_basehjPKhPj+0x52>
 800ad6a:	6824      	ldr	r4, [r4, #0]
 800ad6c:	e7f1      	b.n	800ad52 <_ZL28read_encoded_value_with_basehjPKhPj+0x52>
 800ad6e:	7854      	ldrb	r4, [r2, #1]
 800ad70:	7810      	ldrb	r0, [r2, #0]
 800ad72:	0224      	lsls	r4, r4, #8
 800ad74:	4304      	orrs	r4, r0
 800ad76:	7890      	ldrb	r0, [r2, #2]
 800ad78:	0400      	lsls	r0, r0, #16
 800ad7a:	4320      	orrs	r0, r4
 800ad7c:	78d4      	ldrb	r4, [r2, #3]
 800ad7e:	0624      	lsls	r4, r4, #24
 800ad80:	4304      	orrs	r4, r0
 800ad82:	0010      	movs	r0, r2
 800ad84:	3008      	adds	r0, #8
 800ad86:	e7d9      	b.n	800ad3c <_ZL28read_encoded_value_with_basehjPKhPj+0x3c>
 800ad88:	7854      	ldrb	r4, [r2, #1]
 800ad8a:	7810      	ldrb	r0, [r2, #0]
 800ad8c:	0224      	lsls	r4, r4, #8
 800ad8e:	4304      	orrs	r4, r0
 800ad90:	1c90      	adds	r0, r2, #2
 800ad92:	e7d3      	b.n	800ad3c <_ZL28read_encoded_value_with_basehjPKhPj+0x3c>
 800ad94:	7854      	ldrb	r4, [r2, #1]
 800ad96:	7810      	ldrb	r0, [r2, #0]
 800ad98:	0224      	lsls	r4, r4, #8
 800ad9a:	4304      	orrs	r4, r0
 800ad9c:	0424      	lsls	r4, r4, #16
 800ad9e:	1424      	asrs	r4, r4, #16
 800ada0:	1c90      	adds	r0, r2, #2
 800ada2:	e7cb      	b.n	800ad3c <_ZL28read_encoded_value_with_basehjPKhPj+0x3c>
 800ada4:	217f      	movs	r1, #127	; 0x7f
 800ada6:	4690      	mov	r8, r2
 800ada8:	2400      	movs	r4, #0
 800adaa:	2700      	movs	r7, #0
 800adac:	4689      	mov	r9, r1
 800adae:	4646      	mov	r6, r8
 800adb0:	7831      	ldrb	r1, [r6, #0]
 800adb2:	1c70      	adds	r0, r6, #1
 800adb4:	464e      	mov	r6, r9
 800adb6:	400e      	ands	r6, r1
 800adb8:	40be      	lsls	r6, r7
 800adba:	4334      	orrs	r4, r6
 800adbc:	b24e      	sxtb	r6, r1
 800adbe:	4680      	mov	r8, r0
 800adc0:	3707      	adds	r7, #7
 800adc2:	2e00      	cmp	r6, #0
 800adc4:	dbf3      	blt.n	800adae <_ZL28read_encoded_value_with_basehjPKhPj+0xae>
 800adc6:	2f1f      	cmp	r7, #31
 800adc8:	d8b8      	bhi.n	800ad3c <_ZL28read_encoded_value_with_basehjPKhPj+0x3c>
 800adca:	064e      	lsls	r6, r1, #25
 800adcc:	d5b6      	bpl.n	800ad3c <_ZL28read_encoded_value_with_basehjPKhPj+0x3c>
 800adce:	2601      	movs	r6, #1
 800add0:	40be      	lsls	r6, r7
 800add2:	4276      	negs	r6, r6
 800add4:	4334      	orrs	r4, r6
 800add6:	e7b3      	b.n	800ad40 <_ZL28read_encoded_value_with_basehjPKhPj+0x40>
 800add8:	2100      	movs	r1, #0
 800adda:	4688      	mov	r8, r1
 800addc:	317f      	adds	r1, #127	; 0x7f
 800adde:	0017      	movs	r7, r2
 800ade0:	2400      	movs	r4, #0
 800ade2:	4689      	mov	r9, r1
 800ade4:	003e      	movs	r6, r7
 800ade6:	7831      	ldrb	r1, [r6, #0]
 800ade8:	3701      	adds	r7, #1
 800adea:	468a      	mov	sl, r1
 800adec:	4649      	mov	r1, r9
 800adee:	4656      	mov	r6, sl
 800adf0:	4031      	ands	r1, r6
 800adf2:	4646      	mov	r6, r8
 800adf4:	40b1      	lsls	r1, r6
 800adf6:	430c      	orrs	r4, r1
 800adf8:	2107      	movs	r1, #7
 800adfa:	468c      	mov	ip, r1
 800adfc:	4651      	mov	r1, sl
 800adfe:	b24e      	sxtb	r6, r1
 800ae00:	0038      	movs	r0, r7
 800ae02:	44e0      	add	r8, ip
 800ae04:	2e00      	cmp	r6, #0
 800ae06:	dbed      	blt.n	800ade4 <_ZL28read_encoded_value_with_basehjPKhPj+0xe4>
 800ae08:	e798      	b.n	800ad3c <_ZL28read_encoded_value_with_basehjPKhPj+0x3c>
 800ae0a:	f000 ffab 	bl	800bd64 <abort>
 800ae0e:	46c0      	nop			; (mov r8, r8)
 800ae10:	0800f988 	.word	0x0800f988

0800ae14 <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
 800ae14:	0002      	movs	r2, r0
 800ae16:	b510      	push	{r4, lr}
 800ae18:	0008      	movs	r0, r1
 800ae1a:	2aff      	cmp	r2, #255	; 0xff
 800ae1c:	d015      	beq.n	800ae4a <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x36>
 800ae1e:	2370      	movs	r3, #112	; 0x70
 800ae20:	4013      	ands	r3, r2
 800ae22:	2b30      	cmp	r3, #48	; 0x30
 800ae24:	d017      	beq.n	800ae56 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x42>
 800ae26:	d804      	bhi.n	800ae32 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x1e>
 800ae28:	2b20      	cmp	r3, #32
 800ae2a:	d107      	bne.n	800ae3c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x28>
 800ae2c:	f002 f939 	bl	800d0a2 <_Unwind_GetTextRelBase>
 800ae30:	e003      	b.n	800ae3a <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x26>
 800ae32:	2b40      	cmp	r3, #64	; 0x40
 800ae34:	d10b      	bne.n	800ae4e <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x3a>
 800ae36:	f7fc feef 	bl	8007c18 <_Unwind_GetRegionStart>
 800ae3a:	bd10      	pop	{r4, pc}
 800ae3c:	2b20      	cmp	r3, #32
 800ae3e:	d802      	bhi.n	800ae46 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x32>
 800ae40:	2360      	movs	r3, #96	; 0x60
 800ae42:	4213      	tst	r3, r2
 800ae44:	d001      	beq.n	800ae4a <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x36>
 800ae46:	f000 ff8d 	bl	800bd64 <abort>
 800ae4a:	2000      	movs	r0, #0
 800ae4c:	e7f5      	b.n	800ae3a <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x26>
 800ae4e:	2000      	movs	r0, #0
 800ae50:	2b50      	cmp	r3, #80	; 0x50
 800ae52:	d0f2      	beq.n	800ae3a <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x26>
 800ae54:	e7f7      	b.n	800ae46 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x32>
 800ae56:	f002 f921 	bl	800d09c <_Unwind_GetDataRelBase>
 800ae5a:	e7ee      	b.n	800ae3a <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x26>

0800ae5c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
 800ae5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ae5e:	0005      	movs	r5, r0
 800ae60:	000e      	movs	r6, r1
 800ae62:	0014      	movs	r4, r2
 800ae64:	2000      	movs	r0, #0
 800ae66:	2d00      	cmp	r5, #0
 800ae68:	d002      	beq.n	800ae70 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x14>
 800ae6a:	0028      	movs	r0, r5
 800ae6c:	f7fc fed4 	bl	8007c18 <_Unwind_GetRegionStart>
 800ae70:	6020      	str	r0, [r4, #0]
 800ae72:	1c77      	adds	r7, r6, #1
 800ae74:	7836      	ldrb	r6, [r6, #0]
 800ae76:	2eff      	cmp	r6, #255	; 0xff
 800ae78:	d128      	bne.n	800aecc <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x70>
 800ae7a:	6060      	str	r0, [r4, #4]
 800ae7c:	783b      	ldrb	r3, [r7, #0]
 800ae7e:	1c78      	adds	r0, r7, #1
 800ae80:	2bff      	cmp	r3, #255	; 0xff
 800ae82:	d032      	beq.n	800aeea <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x8e>
 800ae84:	2310      	movs	r3, #16
 800ae86:	2500      	movs	r5, #0
 800ae88:	2100      	movs	r1, #0
 800ae8a:	267f      	movs	r6, #127	; 0x7f
 800ae8c:	7523      	strb	r3, [r4, #20]
 800ae8e:	0032      	movs	r2, r6
 800ae90:	7803      	ldrb	r3, [r0, #0]
 800ae92:	3001      	adds	r0, #1
 800ae94:	401a      	ands	r2, r3
 800ae96:	408a      	lsls	r2, r1
 800ae98:	b25b      	sxtb	r3, r3
 800ae9a:	4315      	orrs	r5, r2
 800ae9c:	3107      	adds	r1, #7
 800ae9e:	2b00      	cmp	r3, #0
 800aea0:	dbf5      	blt.n	800ae8e <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x32>
 800aea2:	1945      	adds	r5, r0, r5
 800aea4:	60e5      	str	r5, [r4, #12]
 800aea6:	2200      	movs	r2, #0
 800aea8:	2500      	movs	r5, #0
 800aeaa:	267f      	movs	r6, #127	; 0x7f
 800aeac:	7803      	ldrb	r3, [r0, #0]
 800aeae:	3001      	adds	r0, #1
 800aeb0:	7563      	strb	r3, [r4, #21]
 800aeb2:	0031      	movs	r1, r6
 800aeb4:	7803      	ldrb	r3, [r0, #0]
 800aeb6:	3001      	adds	r0, #1
 800aeb8:	4019      	ands	r1, r3
 800aeba:	4091      	lsls	r1, r2
 800aebc:	b25b      	sxtb	r3, r3
 800aebe:	430d      	orrs	r5, r1
 800aec0:	3207      	adds	r2, #7
 800aec2:	2b00      	cmp	r3, #0
 800aec4:	dbf5      	blt.n	800aeb2 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x56>
 800aec6:	1945      	adds	r5, r0, r5
 800aec8:	6125      	str	r5, [r4, #16]
 800aeca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800aecc:	0029      	movs	r1, r5
 800aece:	0030      	movs	r0, r6
 800aed0:	f7ff ffa0 	bl	800ae14 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800aed4:	003a      	movs	r2, r7
 800aed6:	0001      	movs	r1, r0
 800aed8:	1d23      	adds	r3, r4, #4
 800aeda:	0030      	movs	r0, r6
 800aedc:	f7ff ff10 	bl	800ad00 <_ZL28read_encoded_value_with_basehjPKhPj>
 800aee0:	0007      	movs	r7, r0
 800aee2:	783b      	ldrb	r3, [r7, #0]
 800aee4:	1c78      	adds	r0, r7, #1
 800aee6:	2bff      	cmp	r3, #255	; 0xff
 800aee8:	d1cc      	bne.n	800ae84 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x28>
 800aeea:	2500      	movs	r5, #0
 800aeec:	7523      	strb	r3, [r4, #20]
 800aeee:	e7d9      	b.n	800aea4 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x48>

0800aef0 <__gxx_personality_v0>:
 800aef0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aef2:	46de      	mov	lr, fp
 800aef4:	4645      	mov	r5, r8
 800aef6:	4657      	mov	r7, sl
 800aef8:	464e      	mov	r6, r9
 800aefa:	2300      	movs	r3, #0
 800aefc:	b5e0      	push	{r5, r6, r7, lr}
 800aefe:	b093      	sub	sp, #76	; 0x4c
 800af00:	9308      	str	r3, [sp, #32]
 800af02:	3303      	adds	r3, #3
 800af04:	468b      	mov	fp, r1
 800af06:	4690      	mov	r8, r2
 800af08:	4003      	ands	r3, r0
 800af0a:	2b01      	cmp	r3, #1
 800af0c:	d016      	beq.n	800af3c <__gxx_personality_v0+0x4c>
 800af0e:	2b02      	cmp	r3, #2
 800af10:	d10f      	bne.n	800af32 <__gxx_personality_v0+0x42>
 800af12:	4641      	mov	r1, r8
 800af14:	4658      	mov	r0, fp
 800af16:	f7fc fe6b 	bl	8007bf0 <__gnu_unwind_frame>
 800af1a:	2409      	movs	r4, #9
 800af1c:	2800      	cmp	r0, #0
 800af1e:	d100      	bne.n	800af22 <__gxx_personality_v0+0x32>
 800af20:	2408      	movs	r4, #8
 800af22:	0020      	movs	r0, r4
 800af24:	b013      	add	sp, #76	; 0x4c
 800af26:	bcf0      	pop	{r4, r5, r6, r7}
 800af28:	46bb      	mov	fp, r7
 800af2a:	46b2      	mov	sl, r6
 800af2c:	46a9      	mov	r9, r5
 800af2e:	46a0      	mov	r8, r4
 800af30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800af32:	2b00      	cmp	r3, #0
 800af34:	d100      	bne.n	800af38 <__gxx_personality_v0+0x48>
 800af36:	e090      	b.n	800b05a <__gxx_personality_v0+0x16a>
 800af38:	f000 ff14 	bl	800bd64 <abort>
 800af3c:	2308      	movs	r3, #8
 800af3e:	001a      	movs	r2, r3
 800af40:	4002      	ands	r2, r0
 800af42:	4203      	tst	r3, r0
 800af44:	d100      	bne.n	800af48 <__gxx_personality_v0+0x58>
 800af46:	e096      	b.n	800b076 <__gxx_personality_v0+0x186>
 800af48:	2302      	movs	r3, #2
 800af4a:	431a      	orrs	r2, r3
 800af4c:	9202      	str	r2, [sp, #8]
 800af4e:	910c      	str	r1, [sp, #48]	; 0x30
 800af50:	ad0c      	add	r5, sp, #48	; 0x30
 800af52:	2300      	movs	r3, #0
 800af54:	220c      	movs	r2, #12
 800af56:	2100      	movs	r1, #0
 800af58:	4640      	mov	r0, r8
 800af5a:	9500      	str	r5, [sp, #0]
 800af5c:	f7fc f8c4 	bl	80070e8 <_Unwind_VRS_Set>
 800af60:	4640      	mov	r0, r8
 800af62:	f7fc fe5f 	bl	8007c24 <_Unwind_GetLanguageSpecificData>
 800af66:	9003      	str	r0, [sp, #12]
 800af68:	2800      	cmp	r0, #0
 800af6a:	d0d2      	beq.n	800af12 <__gxx_personality_v0+0x22>
 800af6c:	002a      	movs	r2, r5
 800af6e:	9903      	ldr	r1, [sp, #12]
 800af70:	4640      	mov	r0, r8
 800af72:	f7ff ff73 	bl	800ae5c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 800af76:	4641      	mov	r1, r8
 800af78:	0006      	movs	r6, r0
 800af7a:	7d28      	ldrb	r0, [r5, #20]
 800af7c:	f7ff ff4a 	bl	800ae14 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800af80:	ab0b      	add	r3, sp, #44	; 0x2c
 800af82:	60a8      	str	r0, [r5, #8]
 800af84:	220f      	movs	r2, #15
 800af86:	9300      	str	r3, [sp, #0]
 800af88:	469a      	mov	sl, r3
 800af8a:	2100      	movs	r1, #0
 800af8c:	2300      	movs	r3, #0
 800af8e:	4640      	mov	r0, r8
 800af90:	f7fc f884 	bl	800709c <_Unwind_VRS_Get>
 800af94:	2201      	movs	r2, #1
 800af96:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800af98:	4393      	bics	r3, r2
 800af9a:	3b01      	subs	r3, #1
 800af9c:	4699      	mov	r9, r3
 800af9e:	692b      	ldr	r3, [r5, #16]
 800afa0:	429e      	cmp	r6, r3
 800afa2:	d300      	bcc.n	800afa6 <__gxx_personality_v0+0xb6>
 800afa4:	e0be      	b.n	800b124 <__gxx_personality_v0+0x234>
 800afa6:	277f      	movs	r7, #127	; 0x7f
 800afa8:	7d6c      	ldrb	r4, [r5, #21]
 800afaa:	2100      	movs	r1, #0
 800afac:	0020      	movs	r0, r4
 800afae:	f7ff ff31 	bl	800ae14 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800afb2:	0032      	movs	r2, r6
 800afb4:	0001      	movs	r1, r0
 800afb6:	ab09      	add	r3, sp, #36	; 0x24
 800afb8:	0020      	movs	r0, r4
 800afba:	f7ff fea1 	bl	800ad00 <_ZL28read_encoded_value_with_basehjPKhPj>
 800afbe:	7d6c      	ldrb	r4, [r5, #21]
 800afc0:	0006      	movs	r6, r0
 800afc2:	2100      	movs	r1, #0
 800afc4:	0020      	movs	r0, r4
 800afc6:	f7ff ff25 	bl	800ae14 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800afca:	0032      	movs	r2, r6
 800afcc:	0001      	movs	r1, r0
 800afce:	ab0a      	add	r3, sp, #40	; 0x28
 800afd0:	0020      	movs	r0, r4
 800afd2:	f7ff fe95 	bl	800ad00 <_ZL28read_encoded_value_with_basehjPKhPj>
 800afd6:	7d6c      	ldrb	r4, [r5, #21]
 800afd8:	0006      	movs	r6, r0
 800afda:	2100      	movs	r1, #0
 800afdc:	0020      	movs	r0, r4
 800afde:	f7ff ff19 	bl	800ae14 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800afe2:	4653      	mov	r3, sl
 800afe4:	0001      	movs	r1, r0
 800afe6:	0032      	movs	r2, r6
 800afe8:	0020      	movs	r0, r4
 800afea:	f7ff fe89 	bl	800ad00 <_ZL28read_encoded_value_with_basehjPKhPj>
 800afee:	2400      	movs	r4, #0
 800aff0:	2100      	movs	r1, #0
 800aff2:	0003      	movs	r3, r0
 800aff4:	003a      	movs	r2, r7
 800aff6:	781b      	ldrb	r3, [r3, #0]
 800aff8:	3001      	adds	r0, #1
 800affa:	401a      	ands	r2, r3
 800affc:	408a      	lsls	r2, r1
 800affe:	b25b      	sxtb	r3, r3
 800b000:	0006      	movs	r6, r0
 800b002:	4314      	orrs	r4, r2
 800b004:	3107      	adds	r1, #7
 800b006:	2b00      	cmp	r3, #0
 800b008:	dbf3      	blt.n	800aff2 <__gxx_personality_v0+0x102>
 800b00a:	682b      	ldr	r3, [r5, #0]
 800b00c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800b00e:	189b      	adds	r3, r3, r2
 800b010:	454b      	cmp	r3, r9
 800b012:	d91a      	bls.n	800b04a <__gxx_personality_v0+0x15a>
 800b014:	9a02      	ldr	r2, [sp, #8]
 800b016:	07d3      	lsls	r3, r2, #31
 800b018:	d528      	bpl.n	800b06c <__gxx_personality_v0+0x17c>
 800b01a:	2300      	movs	r3, #0
 800b01c:	2400      	movs	r4, #0
 800b01e:	9304      	str	r3, [sp, #16]
 800b020:	4653      	mov	r3, sl
 800b022:	220d      	movs	r2, #13
 800b024:	9300      	str	r3, [sp, #0]
 800b026:	2100      	movs	r1, #0
 800b028:	2300      	movs	r3, #0
 800b02a:	4640      	mov	r0, r8
 800b02c:	9d08      	ldr	r5, [sp, #32]
 800b02e:	f7fc f835 	bl	800709c <_Unwind_VRS_Get>
 800b032:	465a      	mov	r2, fp
 800b034:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b036:	6294      	str	r4, [r2, #40]	; 0x28
 800b038:	6213      	str	r3, [r2, #32]
 800b03a:	465b      	mov	r3, fp
 800b03c:	6255      	str	r5, [r2, #36]	; 0x24
 800b03e:	9a03      	ldr	r2, [sp, #12]
 800b040:	2406      	movs	r4, #6
 800b042:	62da      	str	r2, [r3, #44]	; 0x2c
 800b044:	9a04      	ldr	r2, [sp, #16]
 800b046:	631a      	str	r2, [r3, #48]	; 0x30
 800b048:	e76b      	b.n	800af22 <__gxx_personality_v0+0x32>
 800b04a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b04c:	189b      	adds	r3, r3, r2
 800b04e:	454b      	cmp	r3, r9
 800b050:	d873      	bhi.n	800b13a <__gxx_personality_v0+0x24a>
 800b052:	692b      	ldr	r3, [r5, #16]
 800b054:	4283      	cmp	r3, r0
 800b056:	d8a7      	bhi.n	800afa8 <__gxx_personality_v0+0xb8>
 800b058:	e7dc      	b.n	800b014 <__gxx_personality_v0+0x124>
 800b05a:	0700      	lsls	r0, r0, #28
 800b05c:	d500      	bpl.n	800b060 <__gxx_personality_v0+0x170>
 800b05e:	e758      	b.n	800af12 <__gxx_personality_v0+0x22>
 800b060:	2301      	movs	r3, #1
 800b062:	ad0c      	add	r5, sp, #48	; 0x30
 800b064:	9302      	str	r3, [sp, #8]
 800b066:	465b      	mov	r3, fp
 800b068:	930c      	str	r3, [sp, #48]	; 0x30
 800b06a:	e772      	b.n	800af52 <__gxx_personality_v0+0x62>
 800b06c:	2308      	movs	r3, #8
 800b06e:	4213      	tst	r3, r2
 800b070:	d060      	beq.n	800b134 <__gxx_personality_v0+0x244>
 800b072:	f000 f9a9 	bl	800b3c8 <_ZSt9terminatev>
 800b076:	ad0c      	add	r5, sp, #48	; 0x30
 800b078:	6a0c      	ldr	r4, [r1, #32]
 800b07a:	2300      	movs	r3, #0
 800b07c:	220d      	movs	r2, #13
 800b07e:	2100      	movs	r1, #0
 800b080:	4640      	mov	r0, r8
 800b082:	9500      	str	r5, [sp, #0]
 800b084:	f7fc f80a 	bl	800709c <_Unwind_VRS_Get>
 800b088:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b08a:	429c      	cmp	r4, r3
 800b08c:	d002      	beq.n	800b094 <__gxx_personality_v0+0x1a4>
 800b08e:	2302      	movs	r3, #2
 800b090:	9302      	str	r3, [sp, #8]
 800b092:	e7e8      	b.n	800b066 <__gxx_personality_v0+0x176>
 800b094:	465b      	mov	r3, fp
 800b096:	220c      	movs	r2, #12
 800b098:	930c      	str	r3, [sp, #48]	; 0x30
 800b09a:	2100      	movs	r1, #0
 800b09c:	2300      	movs	r3, #0
 800b09e:	4640      	mov	r0, r8
 800b0a0:	9500      	str	r5, [sp, #0]
 800b0a2:	f7fc f821 	bl	80070e8 <_Unwind_VRS_Set>
 800b0a6:	465a      	mov	r2, fp
 800b0a8:	465b      	mov	r3, fp
 800b0aa:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800b0ac:	6a9c      	ldr	r4, [r3, #40]	; 0x28
 800b0ae:	9204      	str	r2, [sp, #16]
 800b0b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b0b2:	2a00      	cmp	r2, #0
 800b0b4:	d03e      	beq.n	800b134 <__gxx_personality_v0+0x244>
 800b0b6:	9303      	str	r3, [sp, #12]
 800b0b8:	ab0b      	add	r3, sp, #44	; 0x2c
 800b0ba:	469a      	mov	sl, r3
 800b0bc:	2603      	movs	r6, #3
 800b0be:	2c00      	cmp	r4, #0
 800b0c0:	db5d      	blt.n	800b17e <__gxx_personality_v0+0x28e>
 800b0c2:	465b      	mov	r3, fp
 800b0c4:	930b      	str	r3, [sp, #44]	; 0x2c
 800b0c6:	4653      	mov	r3, sl
 800b0c8:	2200      	movs	r2, #0
 800b0ca:	2100      	movs	r1, #0
 800b0cc:	9300      	str	r3, [sp, #0]
 800b0ce:	4640      	mov	r0, r8
 800b0d0:	2300      	movs	r3, #0
 800b0d2:	f7fc f809 	bl	80070e8 <_Unwind_VRS_Set>
 800b0d6:	4653      	mov	r3, sl
 800b0d8:	2201      	movs	r2, #1
 800b0da:	2100      	movs	r1, #0
 800b0dc:	9300      	str	r3, [sp, #0]
 800b0de:	4640      	mov	r0, r8
 800b0e0:	2300      	movs	r3, #0
 800b0e2:	940b      	str	r4, [sp, #44]	; 0x2c
 800b0e4:	f7fc f800 	bl	80070e8 <_Unwind_VRS_Set>
 800b0e8:	4653      	mov	r3, sl
 800b0ea:	220f      	movs	r2, #15
 800b0ec:	2100      	movs	r1, #0
 800b0ee:	9300      	str	r3, [sp, #0]
 800b0f0:	4640      	mov	r0, r8
 800b0f2:	2300      	movs	r3, #0
 800b0f4:	f7fb ffd2 	bl	800709c <_Unwind_VRS_Get>
 800b0f8:	2301      	movs	r3, #1
 800b0fa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b0fc:	2100      	movs	r1, #0
 800b0fe:	4013      	ands	r3, r2
 800b100:	9a04      	ldr	r2, [sp, #16]
 800b102:	4640      	mov	r0, r8
 800b104:	4313      	orrs	r3, r2
 800b106:	930b      	str	r3, [sp, #44]	; 0x2c
 800b108:	4653      	mov	r3, sl
 800b10a:	220f      	movs	r2, #15
 800b10c:	9300      	str	r3, [sp, #0]
 800b10e:	2300      	movs	r3, #0
 800b110:	f7fb ffea 	bl	80070e8 <_Unwind_VRS_Set>
 800b114:	2407      	movs	r4, #7
 800b116:	2e02      	cmp	r6, #2
 800b118:	d000      	beq.n	800b11c <__gxx_personality_v0+0x22c>
 800b11a:	e702      	b.n	800af22 <__gxx_personality_v0+0x32>
 800b11c:	4658      	mov	r0, fp
 800b11e:	f7ff fd6f 	bl	800ac00 <__cxa_begin_cleanup>
 800b122:	e6fe      	b.n	800af22 <__gxx_personality_v0+0x32>
 800b124:	9b02      	ldr	r3, [sp, #8]
 800b126:	421a      	tst	r2, r3
 800b128:	d000      	beq.n	800b12c <__gxx_personality_v0+0x23c>
 800b12a:	e776      	b.n	800b01a <__gxx_personality_v0+0x12a>
 800b12c:	2308      	movs	r3, #8
 800b12e:	9a02      	ldr	r2, [sp, #8]
 800b130:	4213      	tst	r3, r2
 800b132:	d19e      	bne.n	800b072 <__gxx_personality_v0+0x182>
 800b134:	4658      	mov	r0, fp
 800b136:	f000 fcf3 	bl	800bb20 <__cxa_call_terminate>
 800b13a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b13c:	2b00      	cmp	r3, #0
 800b13e:	d100      	bne.n	800b142 <__gxx_personality_v0+0x252>
 800b140:	e6e7      	b.n	800af12 <__gxx_personality_v0+0x22>
 800b142:	686a      	ldr	r2, [r5, #4]
 800b144:	189b      	adds	r3, r3, r2
 800b146:	9304      	str	r3, [sp, #16]
 800b148:	2c00      	cmp	r4, #0
 800b14a:	d137      	bne.n	800b1bc <__gxx_personality_v0+0x2cc>
 800b14c:	2b00      	cmp	r3, #0
 800b14e:	d100      	bne.n	800b152 <__gxx_personality_v0+0x262>
 800b150:	e6df      	b.n	800af12 <__gxx_personality_v0+0x22>
 800b152:	9b02      	ldr	r3, [sp, #8]
 800b154:	07db      	lsls	r3, r3, #31
 800b156:	d500      	bpl.n	800b15a <__gxx_personality_v0+0x26a>
 800b158:	e6db      	b.n	800af12 <__gxx_personality_v0+0x22>
 800b15a:	2308      	movs	r3, #8
 800b15c:	9a02      	ldr	r2, [sp, #8]
 800b15e:	4213      	tst	r3, r2
 800b160:	d100      	bne.n	800b164 <__gxx_personality_v0+0x274>
 800b162:	e120      	b.n	800b3a6 <__gxx_personality_v0+0x4b6>
 800b164:	2400      	movs	r4, #0
 800b166:	2602      	movs	r6, #2
 800b168:	e7ab      	b.n	800b0c2 <__gxx_personality_v0+0x1d2>
 800b16a:	9b07      	ldr	r3, [sp, #28]
 800b16c:	4654      	mov	r4, sl
 800b16e:	46ab      	mov	fp, r5
 800b170:	4698      	mov	r8, r3
 800b172:	46b2      	mov	sl, r6
 800b174:	464d      	mov	r5, r9
 800b176:	9b02      	ldr	r3, [sp, #8]
 800b178:	07db      	lsls	r3, r3, #31
 800b17a:	d500      	bpl.n	800b17e <__gxx_personality_v0+0x28e>
 800b17c:	e750      	b.n	800b020 <__gxx_personality_v0+0x130>
 800b17e:	002a      	movs	r2, r5
 800b180:	9903      	ldr	r1, [sp, #12]
 800b182:	4640      	mov	r0, r8
 800b184:	f7ff fe6a 	bl	800ae5c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 800b188:	4641      	mov	r1, r8
 800b18a:	7d28      	ldrb	r0, [r5, #20]
 800b18c:	f7ff fe42 	bl	800ae14 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800b190:	43e3      	mvns	r3, r4
 800b192:	68e9      	ldr	r1, [r5, #12]
 800b194:	009b      	lsls	r3, r3, #2
 800b196:	60a8      	str	r0, [r5, #8]
 800b198:	18c9      	adds	r1, r1, r3
 800b19a:	680b      	ldr	r3, [r1, #0]
 800b19c:	2b00      	cmp	r3, #0
 800b19e:	d005      	beq.n	800b1ac <__gxx_personality_v0+0x2bc>
 800b1a0:	2300      	movs	r3, #0
 800b1a2:	3301      	adds	r3, #1
 800b1a4:	009a      	lsls	r2, r3, #2
 800b1a6:	588a      	ldr	r2, [r1, r2]
 800b1a8:	2a00      	cmp	r2, #0
 800b1aa:	d1fa      	bne.n	800b1a2 <__gxx_personality_v0+0x2b2>
 800b1ac:	465a      	mov	r2, fp
 800b1ae:	6293      	str	r3, [r2, #40]	; 0x28
 800b1b0:	2304      	movs	r3, #4
 800b1b2:	2603      	movs	r6, #3
 800b1b4:	62d0      	str	r0, [r2, #44]	; 0x2c
 800b1b6:	6313      	str	r3, [r2, #48]	; 0x30
 800b1b8:	6351      	str	r1, [r2, #52]	; 0x34
 800b1ba:	e782      	b.n	800b0c2 <__gxx_personality_v0+0x1d2>
 800b1bc:	692b      	ldr	r3, [r5, #16]
 800b1be:	9a04      	ldr	r2, [sp, #16]
 800b1c0:	3c01      	subs	r4, #1
 800b1c2:	191b      	adds	r3, r3, r4
 800b1c4:	2a00      	cmp	r2, #0
 800b1c6:	d100      	bne.n	800b1ca <__gxx_personality_v0+0x2da>
 800b1c8:	e6a3      	b.n	800af12 <__gxx_personality_v0+0x22>
 800b1ca:	2b00      	cmp	r3, #0
 800b1cc:	d100      	bne.n	800b1d0 <__gxx_personality_v0+0x2e0>
 800b1ce:	e0df      	b.n	800b390 <__gxx_personality_v0+0x4a0>
 800b1d0:	9902      	ldr	r1, [sp, #8]
 800b1d2:	2208      	movs	r2, #8
 800b1d4:	0008      	movs	r0, r1
 800b1d6:	4010      	ands	r0, r2
 800b1d8:	9006      	str	r0, [sp, #24]
 800b1da:	420a      	tst	r2, r1
 800b1dc:	d100      	bne.n	800b1e0 <__gxx_personality_v0+0x2f0>
 800b1de:	e0cc      	b.n	800b37a <__gxx_personality_v0+0x48a>
 800b1e0:	4659      	mov	r1, fp
 800b1e2:	323f      	adds	r2, #63	; 0x3f
 800b1e4:	700a      	strb	r2, [r1, #0]
 800b1e6:	3207      	adds	r2, #7
 800b1e8:	704a      	strb	r2, [r1, #1]
 800b1ea:	3207      	adds	r2, #7
 800b1ec:	708a      	strb	r2, [r1, #2]
 800b1ee:	3a12      	subs	r2, #18
 800b1f0:	70ca      	strb	r2, [r1, #3]
 800b1f2:	3203      	adds	r2, #3
 800b1f4:	710a      	strb	r2, [r1, #4]
 800b1f6:	3209      	adds	r2, #9
 800b1f8:	714a      	strb	r2, [r1, #5]
 800b1fa:	3203      	adds	r2, #3
 800b1fc:	718a      	strb	r2, [r1, #6]
 800b1fe:	2200      	movs	r2, #0
 800b200:	71ca      	strb	r2, [r1, #7]
 800b202:	2200      	movs	r2, #0
 800b204:	9205      	str	r2, [sp, #20]
 800b206:	4642      	mov	r2, r8
 800b208:	277f      	movs	r7, #127	; 0x7f
 800b20a:	46a9      	mov	r9, r5
 800b20c:	9207      	str	r2, [sp, #28]
 800b20e:	2400      	movs	r4, #0
 800b210:	2100      	movs	r1, #0
 800b212:	001a      	movs	r2, r3
 800b214:	7810      	ldrb	r0, [r2, #0]
 800b216:	003a      	movs	r2, r7
 800b218:	4002      	ands	r2, r0
 800b21a:	408a      	lsls	r2, r1
 800b21c:	3301      	adds	r3, #1
 800b21e:	4314      	orrs	r4, r2
 800b220:	b242      	sxtb	r2, r0
 800b222:	001d      	movs	r5, r3
 800b224:	3107      	adds	r1, #7
 800b226:	2a00      	cmp	r2, #0
 800b228:	dbf3      	blt.n	800b212 <__gxx_personality_v0+0x322>
 800b22a:	291f      	cmp	r1, #31
 800b22c:	d806      	bhi.n	800b23c <__gxx_personality_v0+0x34c>
 800b22e:	2240      	movs	r2, #64	; 0x40
 800b230:	4202      	tst	r2, r0
 800b232:	d003      	beq.n	800b23c <__gxx_personality_v0+0x34c>
 800b234:	3a3f      	subs	r2, #63	; 0x3f
 800b236:	408a      	lsls	r2, r1
 800b238:	4252      	negs	r2, r2
 800b23a:	4314      	orrs	r4, r2
 800b23c:	2600      	movs	r6, #0
 800b23e:	2100      	movs	r1, #0
 800b240:	003a      	movs	r2, r7
 800b242:	7818      	ldrb	r0, [r3, #0]
 800b244:	3301      	adds	r3, #1
 800b246:	4002      	ands	r2, r0
 800b248:	408a      	lsls	r2, r1
 800b24a:	4316      	orrs	r6, r2
 800b24c:	b242      	sxtb	r2, r0
 800b24e:	3107      	adds	r1, #7
 800b250:	2a00      	cmp	r2, #0
 800b252:	dbf5      	blt.n	800b240 <__gxx_personality_v0+0x350>
 800b254:	291f      	cmp	r1, #31
 800b256:	d806      	bhi.n	800b266 <__gxx_personality_v0+0x376>
 800b258:	2340      	movs	r3, #64	; 0x40
 800b25a:	4203      	tst	r3, r0
 800b25c:	d003      	beq.n	800b266 <__gxx_personality_v0+0x376>
 800b25e:	3b3f      	subs	r3, #63	; 0x3f
 800b260:	408b      	lsls	r3, r1
 800b262:	425b      	negs	r3, r3
 800b264:	431e      	orrs	r6, r3
 800b266:	2c00      	cmp	r4, #0
 800b268:	d011      	beq.n	800b28e <__gxx_personality_v0+0x39e>
 800b26a:	dc13      	bgt.n	800b294 <__gxx_personality_v0+0x3a4>
 800b26c:	465b      	mov	r3, fp
 800b26e:	2b00      	cmp	r3, #0
 800b270:	d002      	beq.n	800b278 <__gxx_personality_v0+0x388>
 800b272:	9b06      	ldr	r3, [sp, #24]
 800b274:	2b00      	cmp	r3, #0
 800b276:	d049      	beq.n	800b30c <__gxx_personality_v0+0x41c>
 800b278:	464a      	mov	r2, r9
 800b27a:	43e3      	mvns	r3, r4
 800b27c:	68d2      	ldr	r2, [r2, #12]
 800b27e:	009b      	lsls	r3, r3, #2
 800b280:	589b      	ldr	r3, [r3, r2]
 800b282:	2b00      	cmp	r3, #0
 800b284:	d02b      	beq.n	800b2de <__gxx_personality_v0+0x3ee>
 800b286:	2e00      	cmp	r6, #0
 800b288:	d06c      	beq.n	800b364 <__gxx_personality_v0+0x474>
 800b28a:	19ab      	adds	r3, r5, r6
 800b28c:	e7bf      	b.n	800b20e <__gxx_personality_v0+0x31e>
 800b28e:	2301      	movs	r3, #1
 800b290:	9305      	str	r3, [sp, #20]
 800b292:	e7f8      	b.n	800b286 <__gxx_personality_v0+0x396>
 800b294:	464b      	mov	r3, r9
 800b296:	7d18      	ldrb	r0, [r3, #20]
 800b298:	28ff      	cmp	r0, #255	; 0xff
 800b29a:	d061      	beq.n	800b360 <__gxx_personality_v0+0x470>
 800b29c:	2307      	movs	r3, #7
 800b29e:	4003      	ands	r3, r0
 800b2a0:	2b02      	cmp	r3, #2
 800b2a2:	d05a      	beq.n	800b35a <__gxx_personality_v0+0x46a>
 800b2a4:	d92c      	bls.n	800b300 <__gxx_personality_v0+0x410>
 800b2a6:	2b03      	cmp	r3, #3
 800b2a8:	d02d      	beq.n	800b306 <__gxx_personality_v0+0x416>
 800b2aa:	2b04      	cmp	r3, #4
 800b2ac:	d000      	beq.n	800b2b0 <__gxx_personality_v0+0x3c0>
 800b2ae:	e643      	b.n	800af38 <__gxx_personality_v0+0x48>
 800b2b0:	00e3      	lsls	r3, r4, #3
 800b2b2:	425b      	negs	r3, r3
 800b2b4:	464a      	mov	r2, r9
 800b2b6:	68d2      	ldr	r2, [r2, #12]
 800b2b8:	18d2      	adds	r2, r2, r3
 800b2ba:	464b      	mov	r3, r9
 800b2bc:	6899      	ldr	r1, [r3, #8]
 800b2be:	4653      	mov	r3, sl
 800b2c0:	f7ff fd1e 	bl	800ad00 <_ZL28read_encoded_value_with_basehjPKhPj>
 800b2c4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b2c6:	2900      	cmp	r1, #0
 800b2c8:	d009      	beq.n	800b2de <__gxx_personality_v0+0x3ee>
 800b2ca:	465b      	mov	r3, fp
 800b2cc:	2b00      	cmp	r3, #0
 800b2ce:	d0da      	beq.n	800b286 <__gxx_personality_v0+0x396>
 800b2d0:	2200      	movs	r2, #0
 800b2d2:	4658      	mov	r0, fp
 800b2d4:	ab08      	add	r3, sp, #32
 800b2d6:	f7ff fc35 	bl	800ab44 <__cxa_type_match>
 800b2da:	2800      	cmp	r0, #0
 800b2dc:	d0d3      	beq.n	800b286 <__gxx_personality_v0+0x396>
 800b2de:	9b07      	ldr	r3, [sp, #28]
 800b2e0:	464d      	mov	r5, r9
 800b2e2:	4698      	mov	r8, r3
 800b2e4:	9b02      	ldr	r3, [sp, #8]
 800b2e6:	07db      	lsls	r3, r3, #31
 800b2e8:	d500      	bpl.n	800b2ec <__gxx_personality_v0+0x3fc>
 800b2ea:	e699      	b.n	800b020 <__gxx_personality_v0+0x130>
 800b2ec:	9b06      	ldr	r3, [sp, #24]
 800b2ee:	2b00      	cmp	r3, #0
 800b2f0:	d100      	bne.n	800b2f4 <__gxx_personality_v0+0x404>
 800b2f2:	e6e3      	b.n	800b0bc <__gxx_personality_v0+0x1cc>
 800b2f4:	2603      	movs	r6, #3
 800b2f6:	2c00      	cmp	r4, #0
 800b2f8:	db00      	blt.n	800b2fc <__gxx_personality_v0+0x40c>
 800b2fa:	e6e2      	b.n	800b0c2 <__gxx_personality_v0+0x1d2>
 800b2fc:	f000 f870 	bl	800b3e0 <_ZSt10unexpectedv>
 800b300:	2b00      	cmp	r3, #0
 800b302:	d000      	beq.n	800b306 <__gxx_personality_v0+0x416>
 800b304:	e618      	b.n	800af38 <__gxx_personality_v0+0x48>
 800b306:	00a3      	lsls	r3, r4, #2
 800b308:	425b      	negs	r3, r3
 800b30a:	e7d3      	b.n	800b2b4 <__gxx_personality_v0+0x3c4>
 800b30c:	9b08      	ldr	r3, [sp, #32]
 800b30e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800b310:	930b      	str	r3, [sp, #44]	; 0x2c
 800b312:	43e3      	mvns	r3, r4
 800b314:	4690      	mov	r8, r2
 800b316:	009b      	lsls	r3, r3, #2
 800b318:	4498      	add	r8, r3
 800b31a:	4643      	mov	r3, r8
 800b31c:	6819      	ldr	r1, [r3, #0]
 800b31e:	2900      	cmp	r1, #0
 800b320:	d043      	beq.n	800b3aa <__gxx_personality_v0+0x4ba>
 800b322:	465b      	mov	r3, fp
 800b324:	4652      	mov	r2, sl
 800b326:	46ab      	mov	fp, r5
 800b328:	46a2      	mov	sl, r4
 800b32a:	001d      	movs	r5, r3
 800b32c:	4644      	mov	r4, r8
 800b32e:	46b0      	mov	r8, r6
 800b330:	0016      	movs	r6, r2
 800b332:	e004      	b.n	800b33e <__gxx_personality_v0+0x44e>
 800b334:	6861      	ldr	r1, [r4, #4]
 800b336:	3404      	adds	r4, #4
 800b338:	2900      	cmp	r1, #0
 800b33a:	d100      	bne.n	800b33e <__gxx_personality_v0+0x44e>
 800b33c:	e715      	b.n	800b16a <__gxx_personality_v0+0x27a>
 800b33e:	0033      	movs	r3, r6
 800b340:	2200      	movs	r2, #0
 800b342:	0028      	movs	r0, r5
 800b344:	1861      	adds	r1, r4, r1
 800b346:	f7ff fbfd 	bl	800ab44 <__cxa_type_match>
 800b34a:	2800      	cmp	r0, #0
 800b34c:	d0f2      	beq.n	800b334 <__gxx_personality_v0+0x444>
 800b34e:	002b      	movs	r3, r5
 800b350:	46b2      	mov	sl, r6
 800b352:	465d      	mov	r5, fp
 800b354:	4646      	mov	r6, r8
 800b356:	469b      	mov	fp, r3
 800b358:	e795      	b.n	800b286 <__gxx_personality_v0+0x396>
 800b35a:	0063      	lsls	r3, r4, #1
 800b35c:	425b      	negs	r3, r3
 800b35e:	e7a9      	b.n	800b2b4 <__gxx_personality_v0+0x3c4>
 800b360:	2300      	movs	r3, #0
 800b362:	e7a7      	b.n	800b2b4 <__gxx_personality_v0+0x3c4>
 800b364:	9b07      	ldr	r3, [sp, #28]
 800b366:	4698      	mov	r8, r3
 800b368:	9b05      	ldr	r3, [sp, #20]
 800b36a:	2b00      	cmp	r3, #0
 800b36c:	d100      	bne.n	800b370 <__gxx_personality_v0+0x480>
 800b36e:	e5d0      	b.n	800af12 <__gxx_personality_v0+0x22>
 800b370:	9b02      	ldr	r3, [sp, #8]
 800b372:	07db      	lsls	r3, r3, #31
 800b374:	d500      	bpl.n	800b378 <__gxx_personality_v0+0x488>
 800b376:	e5cc      	b.n	800af12 <__gxx_personality_v0+0x22>
 800b378:	e6f4      	b.n	800b164 <__gxx_personality_v0+0x274>
 800b37a:	465a      	mov	r2, fp
 800b37c:	79d1      	ldrb	r1, [r2, #7]
 800b37e:	3258      	adds	r2, #88	; 0x58
 800b380:	2901      	cmp	r1, #1
 800b382:	d001      	beq.n	800b388 <__gxx_personality_v0+0x498>
 800b384:	9208      	str	r2, [sp, #32]
 800b386:	e73c      	b.n	800b202 <__gxx_personality_v0+0x312>
 800b388:	3a78      	subs	r2, #120	; 0x78
 800b38a:	6812      	ldr	r2, [r2, #0]
 800b38c:	9208      	str	r2, [sp, #32]
 800b38e:	e738      	b.n	800b202 <__gxx_personality_v0+0x312>
 800b390:	9b02      	ldr	r3, [sp, #8]
 800b392:	07db      	lsls	r3, r3, #31
 800b394:	d500      	bpl.n	800b398 <__gxx_personality_v0+0x4a8>
 800b396:	e5bc      	b.n	800af12 <__gxx_personality_v0+0x22>
 800b398:	9a02      	ldr	r2, [sp, #8]
 800b39a:	2308      	movs	r3, #8
 800b39c:	0014      	movs	r4, r2
 800b39e:	401c      	ands	r4, r3
 800b3a0:	421a      	tst	r2, r3
 800b3a2:	d000      	beq.n	800b3a6 <__gxx_personality_v0+0x4b6>
 800b3a4:	e6de      	b.n	800b164 <__gxx_personality_v0+0x274>
 800b3a6:	2602      	movs	r6, #2
 800b3a8:	e68b      	b.n	800b0c2 <__gxx_personality_v0+0x1d2>
 800b3aa:	9b07      	ldr	r3, [sp, #28]
 800b3ac:	464d      	mov	r5, r9
 800b3ae:	4698      	mov	r8, r3
 800b3b0:	e6e1      	b.n	800b176 <__gxx_personality_v0+0x286>
 800b3b2:	f000 fc45 	bl	800bc40 <__cxa_begin_catch>
 800b3b6:	e65c      	b.n	800b072 <__gxx_personality_v0+0x182>

0800b3b8 <_ZN10__cxxabiv111__terminateEPFvvE>:
 800b3b8:	b510      	push	{r4, lr}
 800b3ba:	4780      	blx	r0
 800b3bc:	f000 fcd2 	bl	800bd64 <abort>
 800b3c0:	f000 fc3e 	bl	800bc40 <__cxa_begin_catch>
 800b3c4:	f000 fcce 	bl	800bd64 <abort>

0800b3c8 <_ZSt9terminatev>:
 800b3c8:	4b02      	ldr	r3, [pc, #8]	; (800b3d4 <_ZSt9terminatev+0xc>)
 800b3ca:	b510      	push	{r4, lr}
 800b3cc:	6818      	ldr	r0, [r3, #0]
 800b3ce:	f7ff fff3 	bl	800b3b8 <_ZN10__cxxabiv111__terminateEPFvvE>
 800b3d2:	46c0      	nop			; (mov r8, r8)
 800b3d4:	20000010 	.word	0x20000010

0800b3d8 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
 800b3d8:	b510      	push	{r4, lr}
 800b3da:	4780      	blx	r0
 800b3dc:	f7ff fff4 	bl	800b3c8 <_ZSt9terminatev>

0800b3e0 <_ZSt10unexpectedv>:
 800b3e0:	4b02      	ldr	r3, [pc, #8]	; (800b3ec <_ZSt10unexpectedv+0xc>)
 800b3e2:	b510      	push	{r4, lr}
 800b3e4:	6818      	ldr	r0, [r3, #0]
 800b3e6:	f7ff fff7 	bl	800b3d8 <_ZN10__cxxabiv112__unexpectedEPFvvE>
 800b3ea:	46c0      	nop			; (mov r8, r8)
 800b3ec:	2000000c 	.word	0x2000000c

0800b3f0 <_ZSt13get_terminatev>:
 800b3f0:	4b01      	ldr	r3, [pc, #4]	; (800b3f8 <_ZSt13get_terminatev+0x8>)
 800b3f2:	6818      	ldr	r0, [r3, #0]
 800b3f4:	4770      	bx	lr
 800b3f6:	46c0      	nop			; (mov r8, r8)
 800b3f8:	20000010 	.word	0x20000010

0800b3fc <_ZSt14get_unexpectedv>:
 800b3fc:	4b01      	ldr	r3, [pc, #4]	; (800b404 <_ZSt14get_unexpectedv+0x8>)
 800b3fe:	6818      	ldr	r0, [r3, #0]
 800b400:	4770      	bx	lr
 800b402:	46c0      	nop			; (mov r8, r8)
 800b404:	2000000c 	.word	0x2000000c

0800b408 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block>:
 800b408:	b510      	push	{r4, lr}
 800b40a:	2801      	cmp	r0, #1
 800b40c:	d812      	bhi.n	800b434 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x2c>
 800b40e:	000b      	movs	r3, r1
 800b410:	3b28      	subs	r3, #40	; 0x28
 800b412:	681a      	ldr	r2, [r3, #0]
 800b414:	1e50      	subs	r0, r2, #1
 800b416:	6018      	str	r0, [r3, #0]
 800b418:	2a01      	cmp	r2, #1
 800b41a:	d000      	beq.n	800b41e <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x16>
 800b41c:	bd10      	pop	{r4, pc}
 800b41e:	68db      	ldr	r3, [r3, #12]
 800b420:	3158      	adds	r1, #88	; 0x58
 800b422:	000c      	movs	r4, r1
 800b424:	2b00      	cmp	r3, #0
 800b426:	d001      	beq.n	800b42c <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x24>
 800b428:	0008      	movs	r0, r1
 800b42a:	4798      	blx	r3
 800b42c:	0020      	movs	r0, r4
 800b42e:	f7ff fb5b 	bl	800aae8 <__cxa_free_exception>
 800b432:	e7f3      	b.n	800b41c <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x14>
 800b434:	3928      	subs	r1, #40	; 0x28
 800b436:	6948      	ldr	r0, [r1, #20]
 800b438:	f7ff ffbe 	bl	800b3b8 <_ZN10__cxxabiv111__terminateEPFvvE>

0800b43c <__cxa_init_primary_exception>:
 800b43c:	b570      	push	{r4, r5, r6, lr}
 800b43e:	0005      	movs	r5, r0
 800b440:	2600      	movs	r6, #0
 800b442:	3d80      	subs	r5, #128	; 0x80
 800b444:	60ea      	str	r2, [r5, #12]
 800b446:	602e      	str	r6, [r5, #0]
 800b448:	60a9      	str	r1, [r5, #8]
 800b44a:	0004      	movs	r4, r0
 800b44c:	f7ff ffd6 	bl	800b3fc <_ZSt14get_unexpectedv>
 800b450:	6128      	str	r0, [r5, #16]
 800b452:	f7ff ffcd 	bl	800b3f0 <_ZSt13get_terminatev>
 800b456:	0023      	movs	r3, r4
 800b458:	2247      	movs	r2, #71	; 0x47
 800b45a:	3b58      	subs	r3, #88	; 0x58
 800b45c:	6168      	str	r0, [r5, #20]
 800b45e:	701a      	strb	r2, [r3, #0]
 800b460:	3207      	adds	r2, #7
 800b462:	705a      	strb	r2, [r3, #1]
 800b464:	3207      	adds	r2, #7
 800b466:	709a      	strb	r2, [r3, #2]
 800b468:	0022      	movs	r2, r4
 800b46a:	2343      	movs	r3, #67	; 0x43
 800b46c:	3a55      	subs	r2, #85	; 0x55
 800b46e:	7013      	strb	r3, [r2, #0]
 800b470:	7053      	strb	r3, [r2, #1]
 800b472:	3b18      	subs	r3, #24
 800b474:	7093      	strb	r3, [r2, #2]
 800b476:	70d3      	strb	r3, [r2, #3]
 800b478:	4b02      	ldr	r3, [pc, #8]	; (800b484 <__cxa_init_primary_exception+0x48>)
 800b47a:	3c51      	subs	r4, #81	; 0x51
 800b47c:	0028      	movs	r0, r5
 800b47e:	7026      	strb	r6, [r4, #0]
 800b480:	632b      	str	r3, [r5, #48]	; 0x30
 800b482:	bd70      	pop	{r4, r5, r6, pc}
 800b484:	0800b409 	.word	0x0800b409

0800b488 <__cxa_throw>:
 800b488:	b570      	push	{r4, r5, r6, lr}
 800b48a:	0004      	movs	r4, r0
 800b48c:	000d      	movs	r5, r1
 800b48e:	0016      	movs	r6, r2
 800b490:	f7ff fc32 	bl	800acf8 <__cxa_get_globals>
 800b494:	6843      	ldr	r3, [r0, #4]
 800b496:	0032      	movs	r2, r6
 800b498:	3301      	adds	r3, #1
 800b49a:	0029      	movs	r1, r5
 800b49c:	6043      	str	r3, [r0, #4]
 800b49e:	0020      	movs	r0, r4
 800b4a0:	f7ff ffcc 	bl	800b43c <__cxa_init_primary_exception>
 800b4a4:	2301      	movs	r3, #1
 800b4a6:	6003      	str	r3, [r0, #0]
 800b4a8:	3028      	adds	r0, #40	; 0x28
 800b4aa:	0004      	movs	r4, r0
 800b4ac:	f7fc f986 	bl	80077bc <_Unwind_RaiseException>
 800b4b0:	0020      	movs	r0, r4
 800b4b2:	f000 fbc5 	bl	800bc40 <__cxa_begin_catch>
 800b4b6:	f7ff ff87 	bl	800b3c8 <_ZSt9terminatev>
 800b4ba:	46c0      	nop			; (mov r8, r8)

0800b4bc <__cxa_rethrow>:
 800b4bc:	b510      	push	{r4, lr}
 800b4be:	f7ff fc1b 	bl	800acf8 <__cxa_get_globals>
 800b4c2:	6843      	ldr	r3, [r0, #4]
 800b4c4:	6804      	ldr	r4, [r0, #0]
 800b4c6:	3301      	adds	r3, #1
 800b4c8:	6043      	str	r3, [r0, #4]
 800b4ca:	2c00      	cmp	r4, #0
 800b4cc:	d00c      	beq.n	800b4e8 <__cxa_rethrow+0x2c>
 800b4ce:	2320      	movs	r3, #32
 800b4d0:	5ce3      	ldrb	r3, [r4, r3]
 800b4d2:	2b47      	cmp	r3, #71	; 0x47
 800b4d4:	d00a      	beq.n	800b4ec <__cxa_rethrow+0x30>
 800b4d6:	2300      	movs	r3, #0
 800b4d8:	6003      	str	r3, [r0, #0]
 800b4da:	3420      	adds	r4, #32
 800b4dc:	0020      	movs	r0, r4
 800b4de:	f7fc f99d 	bl	800781c <_Unwind_Resume_or_Rethrow>
 800b4e2:	0020      	movs	r0, r4
 800b4e4:	f000 fbac 	bl	800bc40 <__cxa_begin_catch>
 800b4e8:	f7ff ff6e 	bl	800b3c8 <_ZSt9terminatev>
 800b4ec:	3b26      	subs	r3, #38	; 0x26
 800b4ee:	5ce3      	ldrb	r3, [r4, r3]
 800b4f0:	2b4e      	cmp	r3, #78	; 0x4e
 800b4f2:	d1f0      	bne.n	800b4d6 <__cxa_rethrow+0x1a>
 800b4f4:	3b2c      	subs	r3, #44	; 0x2c
 800b4f6:	5ce3      	ldrb	r3, [r4, r3]
 800b4f8:	2b55      	cmp	r3, #85	; 0x55
 800b4fa:	d1ec      	bne.n	800b4d6 <__cxa_rethrow+0x1a>
 800b4fc:	3b32      	subs	r3, #50	; 0x32
 800b4fe:	5ce3      	ldrb	r3, [r4, r3]
 800b500:	2b43      	cmp	r3, #67	; 0x43
 800b502:	d1e8      	bne.n	800b4d6 <__cxa_rethrow+0x1a>
 800b504:	3b1f      	subs	r3, #31
 800b506:	5ce3      	ldrb	r3, [r4, r3]
 800b508:	2b43      	cmp	r3, #67	; 0x43
 800b50a:	d1e4      	bne.n	800b4d6 <__cxa_rethrow+0x1a>
 800b50c:	3b1e      	subs	r3, #30
 800b50e:	5ce3      	ldrb	r3, [r4, r3]
 800b510:	2b2b      	cmp	r3, #43	; 0x2b
 800b512:	d1e0      	bne.n	800b4d6 <__cxa_rethrow+0x1a>
 800b514:	3b05      	subs	r3, #5
 800b516:	5ce3      	ldrb	r3, [r4, r3]
 800b518:	2b2b      	cmp	r3, #43	; 0x2b
 800b51a:	d1dc      	bne.n	800b4d6 <__cxa_rethrow+0x1a>
 800b51c:	3b04      	subs	r3, #4
 800b51e:	5ce3      	ldrb	r3, [r4, r3]
 800b520:	2b01      	cmp	r3, #1
 800b522:	d8d8      	bhi.n	800b4d6 <__cxa_rethrow+0x1a>
 800b524:	6963      	ldr	r3, [r4, #20]
 800b526:	425b      	negs	r3, r3
 800b528:	6163      	str	r3, [r4, #20]
 800b52a:	e7d6      	b.n	800b4da <__cxa_rethrow+0x1e>

0800b52c <_ZSt15get_new_handlerv>:
 800b52c:	4b01      	ldr	r3, [pc, #4]	; (800b534 <_ZSt15get_new_handlerv+0x8>)
 800b52e:	6818      	ldr	r0, [r3, #0]
 800b530:	4770      	bx	lr
 800b532:	46c0      	nop			; (mov r8, r8)
 800b534:	200005fc 	.word	0x200005fc

0800b538 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
 800b538:	b510      	push	{r4, lr}
 800b53a:	0004      	movs	r4, r0
 800b53c:	4b03      	ldr	r3, [pc, #12]	; (800b54c <_ZN10__cxxabiv120__si_class_type_infoD1Ev+0x14>)
 800b53e:	3308      	adds	r3, #8
 800b540:	6003      	str	r3, [r0, #0]
 800b542:	f000 fa73 	bl	800ba2c <_ZN10__cxxabiv117__class_type_infoD1Ev>
 800b546:	0020      	movs	r0, r4
 800b548:	bd10      	pop	{r4, pc}
 800b54a:	46c0      	nop			; (mov r8, r8)
 800b54c:	0800f9f0 	.word	0x0800f9f0

0800b550 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
 800b550:	b510      	push	{r4, lr}
 800b552:	0004      	movs	r4, r0
 800b554:	4b05      	ldr	r3, [pc, #20]	; (800b56c <_ZN10__cxxabiv120__si_class_type_infoD0Ev+0x1c>)
 800b556:	3308      	adds	r3, #8
 800b558:	6003      	str	r3, [r0, #0]
 800b55a:	f000 fa67 	bl	800ba2c <_ZN10__cxxabiv117__class_type_infoD1Ev>
 800b55e:	0020      	movs	r0, r4
 800b560:	210c      	movs	r1, #12
 800b562:	f7ff f9c1 	bl	800a8e8 <_ZdlPvj>
 800b566:	0020      	movs	r0, r4
 800b568:	bd10      	pop	{r4, pc}
 800b56a:	46c0      	nop			; (mov r8, r8)
 800b56c:	0800f9f0 	.word	0x0800f9f0

0800b570 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 800b570:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b572:	b083      	sub	sp, #12
 800b574:	001e      	movs	r6, r3
 800b576:	9b08      	ldr	r3, [sp, #32]
 800b578:	0005      	movs	r5, r0
 800b57a:	000f      	movs	r7, r1
 800b57c:	0014      	movs	r4, r2
 800b57e:	4293      	cmp	r3, r2
 800b580:	d00a      	beq.n	800b598 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x28>
 800b582:	68a8      	ldr	r0, [r5, #8]
 800b584:	9a08      	ldr	r2, [sp, #32]
 800b586:	6803      	ldr	r3, [r0, #0]
 800b588:	9200      	str	r2, [sp, #0]
 800b58a:	6a1d      	ldr	r5, [r3, #32]
 800b58c:	0022      	movs	r2, r4
 800b58e:	0033      	movs	r3, r6
 800b590:	0039      	movs	r1, r7
 800b592:	47a8      	blx	r5
 800b594:	b003      	add	sp, #12
 800b596:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b598:	0031      	movs	r1, r6
 800b59a:	f000 f869 	bl	800b670 <_ZNKSt9type_infoeqERKS_>
 800b59e:	2800      	cmp	r0, #0
 800b5a0:	d0ef      	beq.n	800b582 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x12>
 800b5a2:	2006      	movs	r0, #6
 800b5a4:	e7f6      	b.n	800b594 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x24>
 800b5a6:	46c0      	nop			; (mov r8, r8)

0800b5a8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 800b5a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b5aa:	46c6      	mov	lr, r8
 800b5ac:	b500      	push	{lr}
 800b5ae:	000d      	movs	r5, r1
 800b5b0:	b084      	sub	sp, #16
 800b5b2:	0019      	movs	r1, r3
 800b5b4:	0006      	movs	r6, r0
 800b5b6:	4690      	mov	r8, r2
 800b5b8:	001f      	movs	r7, r3
 800b5ba:	f000 f859 	bl	800b670 <_ZNKSt9type_infoeqERKS_>
 800b5be:	1e04      	subs	r4, r0, #0
 800b5c0:	d118      	bne.n	800b5f4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x4c>
 800b5c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b5c4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800b5c6:	4293      	cmp	r3, r2
 800b5c8:	d031      	beq.n	800b62e <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x86>
 800b5ca:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800b5cc:	68b0      	ldr	r0, [r6, #8]
 800b5ce:	0029      	movs	r1, r5
 800b5d0:	6803      	ldr	r3, [r0, #0]
 800b5d2:	9203      	str	r2, [sp, #12]
 800b5d4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800b5d6:	9202      	str	r2, [sp, #8]
 800b5d8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b5da:	9201      	str	r2, [sp, #4]
 800b5dc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b5de:	9200      	str	r2, [sp, #0]
 800b5e0:	69dc      	ldr	r4, [r3, #28]
 800b5e2:	4642      	mov	r2, r8
 800b5e4:	003b      	movs	r3, r7
 800b5e6:	47a0      	blx	r4
 800b5e8:	0004      	movs	r4, r0
 800b5ea:	0020      	movs	r0, r4
 800b5ec:	b004      	add	sp, #16
 800b5ee:	bc80      	pop	{r7}
 800b5f0:	46b8      	mov	r8, r7
 800b5f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b5f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b5f6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b5f8:	601a      	str	r2, [r3, #0]
 800b5fa:	4642      	mov	r2, r8
 800b5fc:	711a      	strb	r2, [r3, #4]
 800b5fe:	2d00      	cmp	r5, #0
 800b600:	db0e      	blt.n	800b620 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x78>
 800b602:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b604:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800b606:	469c      	mov	ip, r3
 800b608:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b60a:	4465      	add	r5, ip
 800b60c:	1b5d      	subs	r5, r3, r5
 800b60e:	426b      	negs	r3, r5
 800b610:	415d      	adcs	r5, r3
 800b612:	2305      	movs	r3, #5
 800b614:	426d      	negs	r5, r5
 800b616:	402b      	ands	r3, r5
 800b618:	3301      	adds	r3, #1
 800b61a:	2400      	movs	r4, #0
 800b61c:	7193      	strb	r3, [r2, #6]
 800b61e:	e7e4      	b.n	800b5ea <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x42>
 800b620:	2400      	movs	r4, #0
 800b622:	3502      	adds	r5, #2
 800b624:	d1e1      	bne.n	800b5ea <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x42>
 800b626:	2301      	movs	r3, #1
 800b628:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800b62a:	7193      	strb	r3, [r2, #6]
 800b62c:	e7dd      	b.n	800b5ea <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x42>
 800b62e:	0030      	movs	r0, r6
 800b630:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b632:	f000 f81d 	bl	800b670 <_ZNKSt9type_infoeqERKS_>
 800b636:	2800      	cmp	r0, #0
 800b638:	d0c7      	beq.n	800b5ca <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x22>
 800b63a:	4642      	mov	r2, r8
 800b63c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b63e:	715a      	strb	r2, [r3, #5]
 800b640:	e7d3      	b.n	800b5ea <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x42>
 800b642:	46c0      	nop			; (mov r8, r8)

0800b644 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 800b644:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b646:	0007      	movs	r7, r0
 800b648:	000c      	movs	r4, r1
 800b64a:	0015      	movs	r5, r2
 800b64c:	001e      	movs	r6, r3
 800b64e:	f000 fa29 	bl	800baa4 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 800b652:	2800      	cmp	r0, #0
 800b654:	d106      	bne.n	800b664 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x20>
 800b656:	68b8      	ldr	r0, [r7, #8]
 800b658:	002a      	movs	r2, r5
 800b65a:	6803      	ldr	r3, [r0, #0]
 800b65c:	0021      	movs	r1, r4
 800b65e:	699f      	ldr	r7, [r3, #24]
 800b660:	0033      	movs	r3, r6
 800b662:	47b8      	blx	r7
 800b664:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b666:	46c0      	nop			; (mov r8, r8)

0800b668 <_ZNSt9type_infoD1Ev>:
 800b668:	4770      	bx	lr
 800b66a:	46c0      	nop			; (mov r8, r8)

0800b66c <_ZNKSt9type_info14__is_pointer_pEv>:
 800b66c:	2000      	movs	r0, #0
 800b66e:	4770      	bx	lr

0800b670 <_ZNKSt9type_infoeqERKS_>:
 800b670:	b510      	push	{r4, lr}
 800b672:	4281      	cmp	r1, r0
 800b674:	d011      	beq.n	800b69a <_ZNKSt9type_infoeqERKS_+0x2a>
 800b676:	6840      	ldr	r0, [r0, #4]
 800b678:	7803      	ldrb	r3, [r0, #0]
 800b67a:	2b2a      	cmp	r3, #42	; 0x2a
 800b67c:	d00b      	beq.n	800b696 <_ZNKSt9type_infoeqERKS_+0x26>
 800b67e:	6849      	ldr	r1, [r1, #4]
 800b680:	780b      	ldrb	r3, [r1, #0]
 800b682:	3b2a      	subs	r3, #42	; 0x2a
 800b684:	425a      	negs	r2, r3
 800b686:	4153      	adcs	r3, r2
 800b688:	18c9      	adds	r1, r1, r3
 800b68a:	f7fb f99d 	bl	80069c8 <strcmp>
 800b68e:	4243      	negs	r3, r0
 800b690:	4158      	adcs	r0, r3
 800b692:	b2c0      	uxtb	r0, r0
 800b694:	bd10      	pop	{r4, pc}
 800b696:	2000      	movs	r0, #0
 800b698:	e7fc      	b.n	800b694 <_ZNKSt9type_infoeqERKS_+0x24>
 800b69a:	2001      	movs	r0, #1
 800b69c:	e7fa      	b.n	800b694 <_ZNKSt9type_infoeqERKS_+0x24>
 800b69e:	46c0      	nop			; (mov r8, r8)

0800b6a0 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv>:
 800b6a0:	b570      	push	{r4, r5, r6, lr}
 800b6a2:	4b3d      	ldr	r3, [pc, #244]	; (800b798 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf8>)
 800b6a4:	b082      	sub	sp, #8
 800b6a6:	781a      	ldrb	r2, [r3, #0]
 800b6a8:	2a00      	cmp	r2, #0
 800b6aa:	d144      	bne.n	800b736 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x96>
 800b6ac:	2201      	movs	r2, #1
 800b6ae:	701a      	strb	r2, [r3, #0]
 800b6b0:	f000 fb48 	bl	800bd44 <__cxa_current_exception_type>
 800b6b4:	2800      	cmp	r0, #0
 800b6b6:	d034      	beq.n	800b722 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x82>
 800b6b8:	6844      	ldr	r4, [r0, #4]
 800b6ba:	2100      	movs	r1, #0
 800b6bc:	7823      	ldrb	r3, [r4, #0]
 800b6be:	3b2a      	subs	r3, #42	; 0x2a
 800b6c0:	425a      	negs	r2, r3
 800b6c2:	4153      	adcs	r3, r2
 800b6c4:	18e4      	adds	r4, r4, r3
 800b6c6:	2301      	movs	r3, #1
 800b6c8:	425b      	negs	r3, r3
 800b6ca:	2200      	movs	r2, #0
 800b6cc:	9301      	str	r3, [sp, #4]
 800b6ce:	0020      	movs	r0, r4
 800b6d0:	ab01      	add	r3, sp, #4
 800b6d2:	f7fb f901 	bl	80068d8 <__cxa_demangle>
 800b6d6:	4d31      	ldr	r5, [pc, #196]	; (800b79c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xfc>)
 800b6d8:	0006      	movs	r6, r0
 800b6da:	682b      	ldr	r3, [r5, #0]
 800b6dc:	2230      	movs	r2, #48	; 0x30
 800b6de:	68db      	ldr	r3, [r3, #12]
 800b6e0:	2101      	movs	r1, #1
 800b6e2:	482f      	ldr	r0, [pc, #188]	; (800b7a0 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x100>)
 800b6e4:	f000 fdec 	bl	800c2c0 <fwrite>
 800b6e8:	9b01      	ldr	r3, [sp, #4]
 800b6ea:	2b00      	cmp	r3, #0
 800b6ec:	d013      	beq.n	800b716 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x76>
 800b6ee:	682b      	ldr	r3, [r5, #0]
 800b6f0:	0020      	movs	r0, r4
 800b6f2:	68d9      	ldr	r1, [r3, #12]
 800b6f4:	f000 fd6e 	bl	800c1d4 <fputs>
 800b6f8:	682b      	ldr	r3, [r5, #0]
 800b6fa:	2202      	movs	r2, #2
 800b6fc:	68db      	ldr	r3, [r3, #12]
 800b6fe:	2101      	movs	r1, #1
 800b700:	4828      	ldr	r0, [pc, #160]	; (800b7a4 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x104>)
 800b702:	f000 fddd 	bl	800c2c0 <fwrite>
 800b706:	9b01      	ldr	r3, [sp, #4]
 800b708:	2b00      	cmp	r3, #0
 800b70a:	d102      	bne.n	800b712 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x72>
 800b70c:	0030      	movs	r0, r6
 800b70e:	f000 fb3b 	bl	800bd88 <free>
 800b712:	f7ff fed3 	bl	800b4bc <__cxa_rethrow>
 800b716:	682b      	ldr	r3, [r5, #0]
 800b718:	0030      	movs	r0, r6
 800b71a:	68d9      	ldr	r1, [r3, #12]
 800b71c:	f000 fd5a 	bl	800c1d4 <fputs>
 800b720:	e7ea      	b.n	800b6f8 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x58>
 800b722:	4b1e      	ldr	r3, [pc, #120]	; (800b79c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xfc>)
 800b724:	222d      	movs	r2, #45	; 0x2d
 800b726:	681b      	ldr	r3, [r3, #0]
 800b728:	2101      	movs	r1, #1
 800b72a:	481f      	ldr	r0, [pc, #124]	; (800b7a8 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x108>)
 800b72c:	68db      	ldr	r3, [r3, #12]
 800b72e:	f000 fdc7 	bl	800c2c0 <fwrite>
 800b732:	f000 fb17 	bl	800bd64 <abort>
 800b736:	4b19      	ldr	r3, [pc, #100]	; (800b79c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xfc>)
 800b738:	221d      	movs	r2, #29
 800b73a:	681b      	ldr	r3, [r3, #0]
 800b73c:	2101      	movs	r1, #1
 800b73e:	68db      	ldr	r3, [r3, #12]
 800b740:	481a      	ldr	r0, [pc, #104]	; (800b7ac <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x10c>)
 800b742:	f000 fdbd 	bl	800c2c0 <fwrite>
 800b746:	f000 fb0d 	bl	800bd64 <abort>
 800b74a:	000c      	movs	r4, r1
 800b74c:	2901      	cmp	r1, #1
 800b74e:	d119      	bne.n	800b784 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xe4>
 800b750:	f000 fa76 	bl	800bc40 <__cxa_begin_catch>
 800b754:	6803      	ldr	r3, [r0, #0]
 800b756:	689b      	ldr	r3, [r3, #8]
 800b758:	4798      	blx	r3
 800b75a:	682b      	ldr	r3, [r5, #0]
 800b75c:	0006      	movs	r6, r0
 800b75e:	220b      	movs	r2, #11
 800b760:	0021      	movs	r1, r4
 800b762:	4813      	ldr	r0, [pc, #76]	; (800b7b0 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x110>)
 800b764:	68db      	ldr	r3, [r3, #12]
 800b766:	f000 fdab 	bl	800c2c0 <fwrite>
 800b76a:	682b      	ldr	r3, [r5, #0]
 800b76c:	0030      	movs	r0, r6
 800b76e:	68d9      	ldr	r1, [r3, #12]
 800b770:	f000 fd30 	bl	800c1d4 <fputs>
 800b774:	682b      	ldr	r3, [r5, #0]
 800b776:	200a      	movs	r0, #10
 800b778:	68d9      	ldr	r1, [r3, #12]
 800b77a:	f000 fccb 	bl	800c114 <fputc>
 800b77e:	f000 fa99 	bl	800bcb4 <__cxa_end_catch>
 800b782:	e7d6      	b.n	800b732 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x92>
 800b784:	f000 fa5c 	bl	800bc40 <__cxa_begin_catch>
 800b788:	f000 fa94 	bl	800bcb4 <__cxa_end_catch>
 800b78c:	e7d1      	b.n	800b732 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x92>
 800b78e:	f000 fa91 	bl	800bcb4 <__cxa_end_catch>
 800b792:	f7ff f9d1 	bl	800ab38 <__cxa_end_cleanup>
 800b796:	46c0      	nop			; (mov r8, r8)
 800b798:	20000600 	.word	0x20000600
 800b79c:	2000006c 	.word	0x2000006c
 800b7a0:	0800fa54 	.word	0x0800fa54
 800b7a4:	0800fa88 	.word	0x0800fa88
 800b7a8:	0800fa8c 	.word	0x0800fa8c
 800b7ac:	0800fa34 	.word	0x0800fa34
 800b7b0:	0800fabc 	.word	0x0800fabc

0800b7b4 <_ZNKSt11logic_error4whatEv>:
 800b7b4:	6840      	ldr	r0, [r0, #4]
 800b7b6:	4770      	bx	lr

0800b7b8 <_ZNSt11logic_errorD1Ev>:
 800b7b8:	4b0d      	ldr	r3, [pc, #52]	; (800b7f0 <_ZNSt11logic_errorD1Ev+0x38>)
 800b7ba:	b510      	push	{r4, lr}
 800b7bc:	3308      	adds	r3, #8
 800b7be:	6003      	str	r3, [r0, #0]
 800b7c0:	6843      	ldr	r3, [r0, #4]
 800b7c2:	0004      	movs	r4, r0
 800b7c4:	0018      	movs	r0, r3
 800b7c6:	4a0b      	ldr	r2, [pc, #44]	; (800b7f4 <_ZNSt11logic_errorD1Ev+0x3c>)
 800b7c8:	380c      	subs	r0, #12
 800b7ca:	b082      	sub	sp, #8
 800b7cc:	4290      	cmp	r0, r2
 800b7ce:	d105      	bne.n	800b7dc <_ZNSt11logic_errorD1Ev+0x24>
 800b7d0:	0020      	movs	r0, r4
 800b7d2:	f7ff fa7d 	bl	800acd0 <_ZNSt9exceptionD1Ev>
 800b7d6:	0020      	movs	r0, r4
 800b7d8:	b002      	add	sp, #8
 800b7da:	bd10      	pop	{r4, pc}
 800b7dc:	3b04      	subs	r3, #4
 800b7de:	681a      	ldr	r2, [r3, #0]
 800b7e0:	1e51      	subs	r1, r2, #1
 800b7e2:	6019      	str	r1, [r3, #0]
 800b7e4:	2a00      	cmp	r2, #0
 800b7e6:	dcf3      	bgt.n	800b7d0 <_ZNSt11logic_errorD1Ev+0x18>
 800b7e8:	a901      	add	r1, sp, #4
 800b7ea:	f000 f8f7 	bl	800b9dc <_ZNSs4_Rep10_M_destroyERKSaIcE>
 800b7ee:	e7ef      	b.n	800b7d0 <_ZNSt11logic_errorD1Ev+0x18>
 800b7f0:	0800fb04 	.word	0x0800fb04
 800b7f4:	20000604 	.word	0x20000604

0800b7f8 <_ZNSt12length_errorD1Ev>:
 800b7f8:	4b0d      	ldr	r3, [pc, #52]	; (800b830 <_ZNSt12length_errorD1Ev+0x38>)
 800b7fa:	b510      	push	{r4, lr}
 800b7fc:	3308      	adds	r3, #8
 800b7fe:	6003      	str	r3, [r0, #0]
 800b800:	6843      	ldr	r3, [r0, #4]
 800b802:	0004      	movs	r4, r0
 800b804:	0018      	movs	r0, r3
 800b806:	4a0b      	ldr	r2, [pc, #44]	; (800b834 <_ZNSt12length_errorD1Ev+0x3c>)
 800b808:	380c      	subs	r0, #12
 800b80a:	b082      	sub	sp, #8
 800b80c:	4290      	cmp	r0, r2
 800b80e:	d105      	bne.n	800b81c <_ZNSt12length_errorD1Ev+0x24>
 800b810:	0020      	movs	r0, r4
 800b812:	f7ff fa5d 	bl	800acd0 <_ZNSt9exceptionD1Ev>
 800b816:	0020      	movs	r0, r4
 800b818:	b002      	add	sp, #8
 800b81a:	bd10      	pop	{r4, pc}
 800b81c:	3b04      	subs	r3, #4
 800b81e:	681a      	ldr	r2, [r3, #0]
 800b820:	1e51      	subs	r1, r2, #1
 800b822:	6019      	str	r1, [r3, #0]
 800b824:	2a00      	cmp	r2, #0
 800b826:	dcf3      	bgt.n	800b810 <_ZNSt12length_errorD1Ev+0x18>
 800b828:	a901      	add	r1, sp, #4
 800b82a:	f000 f8d7 	bl	800b9dc <_ZNSs4_Rep10_M_destroyERKSaIcE>
 800b82e:	e7ef      	b.n	800b810 <_ZNSt12length_errorD1Ev+0x18>
 800b830:	0800fb04 	.word	0x0800fb04
 800b834:	20000604 	.word	0x20000604

0800b838 <_ZNSt11logic_errorD0Ev>:
 800b838:	4b0f      	ldr	r3, [pc, #60]	; (800b878 <_ZNSt11logic_errorD0Ev+0x40>)
 800b83a:	b510      	push	{r4, lr}
 800b83c:	3308      	adds	r3, #8
 800b83e:	6003      	str	r3, [r0, #0]
 800b840:	6843      	ldr	r3, [r0, #4]
 800b842:	0004      	movs	r4, r0
 800b844:	0018      	movs	r0, r3
 800b846:	4a0d      	ldr	r2, [pc, #52]	; (800b87c <_ZNSt11logic_errorD0Ev+0x44>)
 800b848:	380c      	subs	r0, #12
 800b84a:	b082      	sub	sp, #8
 800b84c:	4290      	cmp	r0, r2
 800b84e:	d108      	bne.n	800b862 <_ZNSt11logic_errorD0Ev+0x2a>
 800b850:	0020      	movs	r0, r4
 800b852:	f7ff fa3d 	bl	800acd0 <_ZNSt9exceptionD1Ev>
 800b856:	0020      	movs	r0, r4
 800b858:	f7ff f8ca 	bl	800a9f0 <_ZdlPv>
 800b85c:	0020      	movs	r0, r4
 800b85e:	b002      	add	sp, #8
 800b860:	bd10      	pop	{r4, pc}
 800b862:	3b04      	subs	r3, #4
 800b864:	681a      	ldr	r2, [r3, #0]
 800b866:	1e51      	subs	r1, r2, #1
 800b868:	6019      	str	r1, [r3, #0]
 800b86a:	2a00      	cmp	r2, #0
 800b86c:	dcf0      	bgt.n	800b850 <_ZNSt11logic_errorD0Ev+0x18>
 800b86e:	a901      	add	r1, sp, #4
 800b870:	f000 f8b4 	bl	800b9dc <_ZNSs4_Rep10_M_destroyERKSaIcE>
 800b874:	e7ec      	b.n	800b850 <_ZNSt11logic_errorD0Ev+0x18>
 800b876:	46c0      	nop			; (mov r8, r8)
 800b878:	0800fb04 	.word	0x0800fb04
 800b87c:	20000604 	.word	0x20000604

0800b880 <_ZNSt12length_errorD0Ev>:
 800b880:	4b0f      	ldr	r3, [pc, #60]	; (800b8c0 <_ZNSt12length_errorD0Ev+0x40>)
 800b882:	b510      	push	{r4, lr}
 800b884:	3308      	adds	r3, #8
 800b886:	6003      	str	r3, [r0, #0]
 800b888:	6843      	ldr	r3, [r0, #4]
 800b88a:	0004      	movs	r4, r0
 800b88c:	0018      	movs	r0, r3
 800b88e:	4a0d      	ldr	r2, [pc, #52]	; (800b8c4 <_ZNSt12length_errorD0Ev+0x44>)
 800b890:	380c      	subs	r0, #12
 800b892:	b082      	sub	sp, #8
 800b894:	4290      	cmp	r0, r2
 800b896:	d108      	bne.n	800b8aa <_ZNSt12length_errorD0Ev+0x2a>
 800b898:	0020      	movs	r0, r4
 800b89a:	f7ff fa19 	bl	800acd0 <_ZNSt9exceptionD1Ev>
 800b89e:	0020      	movs	r0, r4
 800b8a0:	f7ff f8a6 	bl	800a9f0 <_ZdlPv>
 800b8a4:	0020      	movs	r0, r4
 800b8a6:	b002      	add	sp, #8
 800b8a8:	bd10      	pop	{r4, pc}
 800b8aa:	3b04      	subs	r3, #4
 800b8ac:	681a      	ldr	r2, [r3, #0]
 800b8ae:	1e51      	subs	r1, r2, #1
 800b8b0:	6019      	str	r1, [r3, #0]
 800b8b2:	2a00      	cmp	r2, #0
 800b8b4:	dcf0      	bgt.n	800b898 <_ZNSt12length_errorD0Ev+0x18>
 800b8b6:	a901      	add	r1, sp, #4
 800b8b8:	f000 f890 	bl	800b9dc <_ZNSs4_Rep10_M_destroyERKSaIcE>
 800b8bc:	e7ec      	b.n	800b898 <_ZNSt12length_errorD0Ev+0x18>
 800b8be:	46c0      	nop			; (mov r8, r8)
 800b8c0:	0800fb04 	.word	0x0800fb04
 800b8c4:	20000604 	.word	0x20000604

0800b8c8 <_ZNSt11logic_errorC1EPKc>:
 800b8c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b8ca:	46c6      	mov	lr, r8
 800b8cc:	b500      	push	{lr}
 800b8ce:	4b1c      	ldr	r3, [pc, #112]	; (800b940 <_ZNSt11logic_errorC1EPKc+0x78>)
 800b8d0:	0004      	movs	r4, r0
 800b8d2:	000d      	movs	r5, r1
 800b8d4:	b082      	sub	sp, #8
 800b8d6:	6003      	str	r3, [r0, #0]
 800b8d8:	2900      	cmp	r1, #0
 800b8da:	d029      	beq.n	800b930 <_ZNSt11logic_errorC1EPKc+0x68>
 800b8dc:	0008      	movs	r0, r1
 800b8de:	f7fb f87d 	bl	80069dc <strlen>
 800b8e2:	1e06      	subs	r6, r0, #0
 800b8e4:	d018      	beq.n	800b918 <_ZNSt11logic_errorC1EPKc+0x50>
 800b8e6:	2100      	movs	r1, #0
 800b8e8:	aa01      	add	r2, sp, #4
 800b8ea:	f000 f83b 	bl	800b964 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
 800b8ee:	230c      	movs	r3, #12
 800b8f0:	4698      	mov	r8, r3
 800b8f2:	0007      	movs	r7, r0
 800b8f4:	4480      	add	r8, r0
 800b8f6:	2e01      	cmp	r6, #1
 800b8f8:	d011      	beq.n	800b91e <_ZNSt11logic_errorC1EPKc+0x56>
 800b8fa:	0032      	movs	r2, r6
 800b8fc:	0029      	movs	r1, r5
 800b8fe:	4640      	mov	r0, r8
 800b900:	f000 ff4e 	bl	800c7a0 <memcpy>
 800b904:	4b0f      	ldr	r3, [pc, #60]	; (800b944 <_ZNSt11logic_errorC1EPKc+0x7c>)
 800b906:	429f      	cmp	r7, r3
 800b908:	d10c      	bne.n	800b924 <_ZNSt11logic_errorC1EPKc+0x5c>
 800b90a:	4643      	mov	r3, r8
 800b90c:	0020      	movs	r0, r4
 800b90e:	6063      	str	r3, [r4, #4]
 800b910:	b002      	add	sp, #8
 800b912:	bc80      	pop	{r7}
 800b914:	46b8      	mov	r8, r7
 800b916:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b918:	4b0b      	ldr	r3, [pc, #44]	; (800b948 <_ZNSt11logic_errorC1EPKc+0x80>)
 800b91a:	4698      	mov	r8, r3
 800b91c:	e7f5      	b.n	800b90a <_ZNSt11logic_errorC1EPKc+0x42>
 800b91e:	782b      	ldrb	r3, [r5, #0]
 800b920:	7303      	strb	r3, [r0, #12]
 800b922:	e7ef      	b.n	800b904 <_ZNSt11logic_errorC1EPKc+0x3c>
 800b924:	2300      	movs	r3, #0
 800b926:	603e      	str	r6, [r7, #0]
 800b928:	60bb      	str	r3, [r7, #8]
 800b92a:	19bf      	adds	r7, r7, r6
 800b92c:	733b      	strb	r3, [r7, #12]
 800b92e:	e7ec      	b.n	800b90a <_ZNSt11logic_errorC1EPKc+0x42>
 800b930:	4806      	ldr	r0, [pc, #24]	; (800b94c <_ZNSt11logic_errorC1EPKc+0x84>)
 800b932:	f7ff f80d 	bl	800a950 <_ZSt19__throw_logic_errorPKc>
 800b936:	0020      	movs	r0, r4
 800b938:	f7ff f9ca 	bl	800acd0 <_ZNSt9exceptionD1Ev>
 800b93c:	f7ff f8fc 	bl	800ab38 <__cxa_end_cleanup>
 800b940:	0800fb0c 	.word	0x0800fb0c
 800b944:	20000604 	.word	0x20000604
 800b948:	20000610 	.word	0x20000610
 800b94c:	0800fb2c 	.word	0x0800fb2c

0800b950 <_ZNSt12length_errorC1EPKc>:
 800b950:	b510      	push	{r4, lr}
 800b952:	0004      	movs	r4, r0
 800b954:	f7ff ffb8 	bl	800b8c8 <_ZNSt11logic_errorC1EPKc>
 800b958:	4b01      	ldr	r3, [pc, #4]	; (800b960 <_ZNSt12length_errorC1EPKc+0x10>)
 800b95a:	0020      	movs	r0, r4
 800b95c:	6023      	str	r3, [r4, #0]
 800b95e:	bd10      	pop	{r4, pc}
 800b960:	0800fb20 	.word	0x0800fb20

0800b964 <_ZNSs4_Rep9_S_createEjjRKSaIcE>:
 800b964:	4b1b      	ldr	r3, [pc, #108]	; (800b9d4 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x70>)
 800b966:	b510      	push	{r4, lr}
 800b968:	0004      	movs	r4, r0
 800b96a:	4298      	cmp	r0, r3
 800b96c:	d82f      	bhi.n	800b9ce <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x6a>
 800b96e:	4288      	cmp	r0, r1
 800b970:	d918      	bls.n	800b9a4 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x40>
 800b972:	004b      	lsls	r3, r1, #1
 800b974:	4298      	cmp	r0, r3
 800b976:	d200      	bcs.n	800b97a <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x16>
 800b978:	001c      	movs	r4, r3
 800b97a:	0023      	movs	r3, r4
 800b97c:	0020      	movs	r0, r4
 800b97e:	2280      	movs	r2, #128	; 0x80
 800b980:	331d      	adds	r3, #29
 800b982:	300d      	adds	r0, #13
 800b984:	0152      	lsls	r2, r2, #5
 800b986:	4293      	cmp	r3, r2
 800b988:	d913      	bls.n	800b9b2 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x4e>
 800b98a:	428c      	cmp	r4, r1
 800b98c:	d911      	bls.n	800b9b2 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x4e>
 800b98e:	4694      	mov	ip, r2
 800b990:	051b      	lsls	r3, r3, #20
 800b992:	0d1b      	lsrs	r3, r3, #20
 800b994:	4464      	add	r4, ip
 800b996:	1ae4      	subs	r4, r4, r3
 800b998:	4b0e      	ldr	r3, [pc, #56]	; (800b9d4 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x70>)
 800b99a:	429c      	cmp	r4, r3
 800b99c:	d811      	bhi.n	800b9c2 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x5e>
 800b99e:	0020      	movs	r0, r4
 800b9a0:	300d      	adds	r0, #13
 800b9a2:	e008      	b.n	800b9b6 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x52>
 800b9a4:	0023      	movs	r3, r4
 800b9a6:	2280      	movs	r2, #128	; 0x80
 800b9a8:	331d      	adds	r3, #29
 800b9aa:	300d      	adds	r0, #13
 800b9ac:	0152      	lsls	r2, r2, #5
 800b9ae:	4293      	cmp	r3, r2
 800b9b0:	d901      	bls.n	800b9b6 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x52>
 800b9b2:	2800      	cmp	r0, #0
 800b9b4:	db09      	blt.n	800b9ca <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x66>
 800b9b6:	f7fe ff9b 	bl	800a8f0 <_Znwj>
 800b9ba:	2300      	movs	r3, #0
 800b9bc:	6044      	str	r4, [r0, #4]
 800b9be:	6083      	str	r3, [r0, #8]
 800b9c0:	bd10      	pop	{r4, pc}
 800b9c2:	001c      	movs	r4, r3
 800b9c4:	0020      	movs	r0, r4
 800b9c6:	300d      	adds	r0, #13
 800b9c8:	e7f5      	b.n	800b9b6 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x52>
 800b9ca:	f7fe ffb1 	bl	800a930 <_ZSt17__throw_bad_allocv>
 800b9ce:	4802      	ldr	r0, [pc, #8]	; (800b9d8 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x74>)
 800b9d0:	f7fe ffd6 	bl	800a980 <_ZSt20__throw_length_errorPKc>
 800b9d4:	3ffffffc 	.word	0x3ffffffc
 800b9d8:	0800fb58 	.word	0x0800fb58

0800b9dc <_ZNSs4_Rep10_M_destroyERKSaIcE>:
 800b9dc:	b510      	push	{r4, lr}
 800b9de:	f7ff f807 	bl	800a9f0 <_ZdlPv>
 800b9e2:	bd10      	pop	{r4, pc}

0800b9e4 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
 800b9e4:	2300      	movs	r3, #0
 800b9e6:	b530      	push	{r4, r5, lr}
 800b9e8:	0014      	movs	r4, r2
 800b9ea:	2210      	movs	r2, #16
 800b9ec:	b085      	sub	sp, #20
 800b9ee:	9300      	str	r3, [sp, #0]
 800b9f0:	9301      	str	r3, [sp, #4]
 800b9f2:	9303      	str	r3, [sp, #12]
 800b9f4:	6803      	ldr	r3, [r0, #0]
 800b9f6:	9202      	str	r2, [sp, #8]
 800b9f8:	699d      	ldr	r5, [r3, #24]
 800b9fa:	6822      	ldr	r2, [r4, #0]
 800b9fc:	466b      	mov	r3, sp
 800b9fe:	47a8      	blx	r5
 800ba00:	466b      	mov	r3, sp
 800ba02:	791a      	ldrb	r2, [r3, #4]
 800ba04:	2306      	movs	r3, #6
 800ba06:	2000      	movs	r0, #0
 800ba08:	4013      	ands	r3, r2
 800ba0a:	2b06      	cmp	r3, #6
 800ba0c:	d102      	bne.n	800ba14 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x30>
 800ba0e:	9b00      	ldr	r3, [sp, #0]
 800ba10:	3001      	adds	r0, #1
 800ba12:	6023      	str	r3, [r4, #0]
 800ba14:	b005      	add	sp, #20
 800ba16:	bd30      	pop	{r4, r5, pc}

0800ba18 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
 800ba18:	9b00      	ldr	r3, [sp, #0]
 800ba1a:	1a98      	subs	r0, r3, r2
 800ba1c:	1e43      	subs	r3, r0, #1
 800ba1e:	4198      	sbcs	r0, r3
 800ba20:	2304      	movs	r3, #4
 800ba22:	4240      	negs	r0, r0
 800ba24:	4398      	bics	r0, r3
 800ba26:	3006      	adds	r0, #6
 800ba28:	4770      	bx	lr
 800ba2a:	46c0      	nop			; (mov r8, r8)

0800ba2c <_ZN10__cxxabiv117__class_type_infoD1Ev>:
 800ba2c:	b510      	push	{r4, lr}
 800ba2e:	0004      	movs	r4, r0
 800ba30:	4b03      	ldr	r3, [pc, #12]	; (800ba40 <_ZN10__cxxabiv117__class_type_infoD1Ev+0x14>)
 800ba32:	3308      	adds	r3, #8
 800ba34:	6003      	str	r3, [r0, #0]
 800ba36:	f7ff fe17 	bl	800b668 <_ZNSt9type_infoD1Ev>
 800ba3a:	0020      	movs	r0, r4
 800ba3c:	bd10      	pop	{r4, pc}
 800ba3e:	46c0      	nop			; (mov r8, r8)
 800ba40:	0800fba0 	.word	0x0800fba0

0800ba44 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
 800ba44:	b510      	push	{r4, lr}
 800ba46:	0004      	movs	r4, r0
 800ba48:	4b05      	ldr	r3, [pc, #20]	; (800ba60 <_ZN10__cxxabiv117__class_type_infoD0Ev+0x1c>)
 800ba4a:	3308      	adds	r3, #8
 800ba4c:	6003      	str	r3, [r0, #0]
 800ba4e:	f7ff fe0b 	bl	800b668 <_ZNSt9type_infoD1Ev>
 800ba52:	0020      	movs	r0, r4
 800ba54:	2108      	movs	r1, #8
 800ba56:	f7fe ff47 	bl	800a8e8 <_ZdlPvj>
 800ba5a:	0020      	movs	r0, r4
 800ba5c:	bd10      	pop	{r4, pc}
 800ba5e:	46c0      	nop			; (mov r8, r8)
 800ba60:	0800fba0 	.word	0x0800fba0

0800ba64 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
 800ba64:	b570      	push	{r4, r5, r6, lr}
 800ba66:	0016      	movs	r6, r2
 800ba68:	001d      	movs	r5, r3
 800ba6a:	9a06      	ldr	r2, [sp, #24]
 800ba6c:	9b04      	ldr	r3, [sp, #16]
 800ba6e:	0004      	movs	r4, r0
 800ba70:	4293      	cmp	r3, r2
 800ba72:	d00e      	beq.n	800ba92 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x2e>
 800ba74:	0029      	movs	r1, r5
 800ba76:	0020      	movs	r0, r4
 800ba78:	f7ff fdfa 	bl	800b670 <_ZNKSt9type_infoeqERKS_>
 800ba7c:	2800      	cmp	r0, #0
 800ba7e:	d006      	beq.n	800ba8e <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x2a>
 800ba80:	9b07      	ldr	r3, [sp, #28]
 800ba82:	9a04      	ldr	r2, [sp, #16]
 800ba84:	711e      	strb	r6, [r3, #4]
 800ba86:	601a      	str	r2, [r3, #0]
 800ba88:	2301      	movs	r3, #1
 800ba8a:	9a07      	ldr	r2, [sp, #28]
 800ba8c:	7193      	strb	r3, [r2, #6]
 800ba8e:	2000      	movs	r0, #0
 800ba90:	bd70      	pop	{r4, r5, r6, pc}
 800ba92:	9905      	ldr	r1, [sp, #20]
 800ba94:	f7ff fdec 	bl	800b670 <_ZNKSt9type_infoeqERKS_>
 800ba98:	2800      	cmp	r0, #0
 800ba9a:	d0eb      	beq.n	800ba74 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x10>
 800ba9c:	9b07      	ldr	r3, [sp, #28]
 800ba9e:	715e      	strb	r6, [r3, #5]
 800baa0:	e7f5      	b.n	800ba8e <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x2a>
 800baa2:	46c0      	nop			; (mov r8, r8)

0800baa4 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
 800baa4:	b570      	push	{r4, r5, r6, lr}
 800baa6:	0015      	movs	r5, r2
 800baa8:	001c      	movs	r4, r3
 800baaa:	f7ff fde1 	bl	800b670 <_ZNKSt9type_infoeqERKS_>
 800baae:	2800      	cmp	r0, #0
 800bab0:	d004      	beq.n	800babc <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x18>
 800bab2:	2308      	movs	r3, #8
 800bab4:	60e3      	str	r3, [r4, #12]
 800bab6:	3b02      	subs	r3, #2
 800bab8:	6025      	str	r5, [r4, #0]
 800baba:	7123      	strb	r3, [r4, #4]
 800babc:	bd70      	pop	{r4, r5, r6, pc}
 800babe:	46c0      	nop			; (mov r8, r8)

0800bac0 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
 800bac0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bac2:	0005      	movs	r5, r0
 800bac4:	000c      	movs	r4, r1
 800bac6:	0017      	movs	r7, r2
 800bac8:	001e      	movs	r6, r3
 800baca:	f7ff fdd1 	bl	800b670 <_ZNKSt9type_infoeqERKS_>
 800bace:	2800      	cmp	r0, #0
 800bad0:	d107      	bne.n	800bae2 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x22>
 800bad2:	2e03      	cmp	r6, #3
 800bad4:	d805      	bhi.n	800bae2 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x22>
 800bad6:	6823      	ldr	r3, [r4, #0]
 800bad8:	003a      	movs	r2, r7
 800bada:	0029      	movs	r1, r5
 800badc:	0020      	movs	r0, r4
 800bade:	695b      	ldr	r3, [r3, #20]
 800bae0:	4798      	blx	r3
 800bae2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800bae4 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>:
 800bae4:	7802      	ldrb	r2, [r0, #0]
 800bae6:	0003      	movs	r3, r0
 800bae8:	2000      	movs	r0, #0
 800baea:	2a47      	cmp	r2, #71	; 0x47
 800baec:	d000      	beq.n	800baf0 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xc>
 800baee:	4770      	bx	lr
 800baf0:	785a      	ldrb	r2, [r3, #1]
 800baf2:	2a4e      	cmp	r2, #78	; 0x4e
 800baf4:	d1fb      	bne.n	800baee <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>
 800baf6:	789a      	ldrb	r2, [r3, #2]
 800baf8:	2a55      	cmp	r2, #85	; 0x55
 800bafa:	d1f8      	bne.n	800baee <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>
 800bafc:	78da      	ldrb	r2, [r3, #3]
 800bafe:	2a43      	cmp	r2, #67	; 0x43
 800bb00:	d1f5      	bne.n	800baee <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>
 800bb02:	791a      	ldrb	r2, [r3, #4]
 800bb04:	2a43      	cmp	r2, #67	; 0x43
 800bb06:	d1f2      	bne.n	800baee <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>
 800bb08:	795a      	ldrb	r2, [r3, #5]
 800bb0a:	2a2b      	cmp	r2, #43	; 0x2b
 800bb0c:	d1ef      	bne.n	800baee <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>
 800bb0e:	799a      	ldrb	r2, [r3, #6]
 800bb10:	2a2b      	cmp	r2, #43	; 0x2b
 800bb12:	d1ec      	bne.n	800baee <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>
 800bb14:	79db      	ldrb	r3, [r3, #7]
 800bb16:	3a2a      	subs	r2, #42	; 0x2a
 800bb18:	429a      	cmp	r2, r3
 800bb1a:	4140      	adcs	r0, r0
 800bb1c:	b2c0      	uxtb	r0, r0
 800bb1e:	e7e6      	b.n	800baee <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>

0800bb20 <__cxa_call_terminate>:
 800bb20:	b510      	push	{r4, lr}
 800bb22:	1e04      	subs	r4, r0, #0
 800bb24:	d006      	beq.n	800bb34 <__cxa_call_terminate+0x14>
 800bb26:	f000 f88b 	bl	800bc40 <__cxa_begin_catch>
 800bb2a:	0020      	movs	r0, r4
 800bb2c:	f7ff ffda 	bl	800bae4 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 800bb30:	2800      	cmp	r0, #0
 800bb32:	d101      	bne.n	800bb38 <__cxa_call_terminate+0x18>
 800bb34:	f7ff fc48 	bl	800b3c8 <_ZSt9terminatev>
 800bb38:	3c20      	subs	r4, #32
 800bb3a:	68e0      	ldr	r0, [r4, #12]
 800bb3c:	f7ff fc3c 	bl	800b3b8 <_ZN10__cxxabiv111__terminateEPFvvE>

0800bb40 <__cxa_call_unexpected>:
 800bb40:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bb42:	46de      	mov	lr, fp
 800bb44:	464e      	mov	r6, r9
 800bb46:	4657      	mov	r7, sl
 800bb48:	4645      	mov	r5, r8
 800bb4a:	b5e0      	push	{r5, r6, r7, lr}
 800bb4c:	b085      	sub	sp, #20
 800bb4e:	0006      	movs	r6, r0
 800bb50:	f7ff ffc8 	bl	800bae4 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 800bb54:	1e04      	subs	r4, r0, #0
 800bb56:	d00b      	beq.n	800bb70 <__cxa_call_unexpected+0x30>
 800bb58:	0033      	movs	r3, r6
 800bb5a:	3b20      	subs	r3, #32
 800bb5c:	689a      	ldr	r2, [r3, #8]
 800bb5e:	68dc      	ldr	r4, [r3, #12]
 800bb60:	6ab3      	ldr	r3, [r6, #40]	; 0x28
 800bb62:	4691      	mov	r9, r2
 800bb64:	469a      	mov	sl, r3
 800bb66:	2300      	movs	r3, #0
 800bb68:	6b37      	ldr	r7, [r6, #48]	; 0x30
 800bb6a:	4698      	mov	r8, r3
 800bb6c:	6b75      	ldr	r5, [r6, #52]	; 0x34
 800bb6e:	e005      	b.n	800bb7c <__cxa_call_unexpected+0x3c>
 800bb70:	2301      	movs	r3, #1
 800bb72:	4681      	mov	r9, r0
 800bb74:	4698      	mov	r8, r3
 800bb76:	0005      	movs	r5, r0
 800bb78:	0007      	movs	r7, r0
 800bb7a:	4682      	mov	sl, r0
 800bb7c:	0030      	movs	r0, r6
 800bb7e:	f000 f85f 	bl	800bc40 <__cxa_begin_catch>
 800bb82:	4643      	mov	r3, r8
 800bb84:	2b00      	cmp	r3, #0
 800bb86:	d001      	beq.n	800bb8c <__cxa_call_unexpected+0x4c>
 800bb88:	f7ff fc2a 	bl	800b3e0 <_ZSt10unexpectedv>
 800bb8c:	4648      	mov	r0, r9
 800bb8e:	f7ff fc23 	bl	800b3d8 <_ZN10__cxxabiv112__unexpectedEPFvvE>
 800bb92:	f000 f855 	bl	800bc40 <__cxa_begin_catch>
 800bb96:	4643      	mov	r3, r8
 800bb98:	2b00      	cmp	r3, #0
 800bb9a:	d001      	beq.n	800bba0 <__cxa_call_unexpected+0x60>
 800bb9c:	f7ff fc14 	bl	800b3c8 <_ZSt9terminatev>
 800bba0:	f7ff f8a6 	bl	800acf0 <__cxa_get_globals_fast>
 800bba4:	2327      	movs	r3, #39	; 0x27
 800bba6:	6806      	ldr	r6, [r0, #0]
 800bba8:	5cf2      	ldrb	r2, [r6, r3]
 800bbaa:	0033      	movs	r3, r6
 800bbac:	3378      	adds	r3, #120	; 0x78
 800bbae:	2a01      	cmp	r2, #1
 800bbb0:	d100      	bne.n	800bbb4 <__cxa_call_unexpected+0x74>
 800bbb2:	6833      	ldr	r3, [r6, #0]
 800bbb4:	08bf      	lsrs	r7, r7, #2
 800bbb6:	9302      	str	r3, [sp, #8]
 800bbb8:	00bb      	lsls	r3, r7, #2
 800bbba:	9301      	str	r3, [sp, #4]
 800bbbc:	2300      	movs	r3, #0
 800bbbe:	4699      	mov	r9, r3
 800bbc0:	3620      	adds	r6, #32
 800bbc2:	45ca      	cmp	sl, r9
 800bbc4:	dd20      	ble.n	800bc08 <__cxa_call_unexpected+0xc8>
 800bbc6:	682f      	ldr	r7, [r5, #0]
 800bbc8:	2f00      	cmp	r7, #0
 800bbca:	d000      	beq.n	800bbce <__cxa_call_unexpected+0x8e>
 800bbcc:	197f      	adds	r7, r7, r5
 800bbce:	2200      	movs	r2, #0
 800bbd0:	0039      	movs	r1, r7
 800bbd2:	0030      	movs	r0, r6
 800bbd4:	ab02      	add	r3, sp, #8
 800bbd6:	f7fe ffb5 	bl	800ab44 <__cxa_type_match>
 800bbda:	2800      	cmp	r0, #0
 800bbdc:	d001      	beq.n	800bbe2 <__cxa_call_unexpected+0xa2>
 800bbde:	f7ff fc6d 	bl	800b4bc <__cxa_rethrow>
 800bbe2:	683b      	ldr	r3, [r7, #0]
 800bbe4:	9003      	str	r0, [sp, #12]
 800bbe6:	691b      	ldr	r3, [r3, #16]
 800bbe8:	0038      	movs	r0, r7
 800bbea:	469b      	mov	fp, r3
 800bbec:	4911      	ldr	r1, [pc, #68]	; (800bc34 <__cxa_call_unexpected+0xf4>)
 800bbee:	2301      	movs	r3, #1
 800bbf0:	aa03      	add	r2, sp, #12
 800bbf2:	47d8      	blx	fp
 800bbf4:	2800      	cmp	r0, #0
 800bbf6:	d000      	beq.n	800bbfa <__cxa_call_unexpected+0xba>
 800bbf8:	4680      	mov	r8, r0
 800bbfa:	2301      	movs	r3, #1
 800bbfc:	469c      	mov	ip, r3
 800bbfe:	9b01      	ldr	r3, [sp, #4]
 800bc00:	44e1      	add	r9, ip
 800bc02:	469c      	mov	ip, r3
 800bc04:	4465      	add	r5, ip
 800bc06:	e7dc      	b.n	800bbc2 <__cxa_call_unexpected+0x82>
 800bc08:	4643      	mov	r3, r8
 800bc0a:	2b00      	cmp	r3, #0
 800bc0c:	d008      	beq.n	800bc20 <__cxa_call_unexpected+0xe0>
 800bc0e:	2004      	movs	r0, #4
 800bc10:	f7fe ff54 	bl	800aabc <__cxa_allocate_exception>
 800bc14:	4b08      	ldr	r3, [pc, #32]	; (800bc38 <__cxa_call_unexpected+0xf8>)
 800bc16:	4a09      	ldr	r2, [pc, #36]	; (800bc3c <__cxa_call_unexpected+0xfc>)
 800bc18:	4906      	ldr	r1, [pc, #24]	; (800bc34 <__cxa_call_unexpected+0xf4>)
 800bc1a:	6003      	str	r3, [r0, #0]
 800bc1c:	f7ff fc34 	bl	800b488 <__cxa_throw>
 800bc20:	0020      	movs	r0, r4
 800bc22:	f7ff fbc9 	bl	800b3b8 <_ZN10__cxxabiv111__terminateEPFvvE>
 800bc26:	f000 f845 	bl	800bcb4 <__cxa_end_catch>
 800bc2a:	f000 f843 	bl	800bcb4 <__cxa_end_catch>
 800bc2e:	f7fe ff83 	bl	800ab38 <__cxa_end_cleanup>
 800bc32:	46c0      	nop			; (mov r8, r8)
 800bc34:	0800f8f8 	.word	0x0800f8f8
 800bc38:	0800f97c 	.word	0x0800f97c
 800bc3c:	0800acd5 	.word	0x0800acd5

0800bc40 <__cxa_begin_catch>:
 800bc40:	b570      	push	{r4, r5, r6, lr}
 800bc42:	0004      	movs	r4, r0
 800bc44:	f7ff f858 	bl	800acf8 <__cxa_get_globals>
 800bc48:	0022      	movs	r2, r4
 800bc4a:	7823      	ldrb	r3, [r4, #0]
 800bc4c:	6805      	ldr	r5, [r0, #0]
 800bc4e:	3a20      	subs	r2, #32
 800bc50:	2b47      	cmp	r3, #71	; 0x47
 800bc52:	d004      	beq.n	800bc5e <__cxa_begin_catch+0x1e>
 800bc54:	2d00      	cmp	r5, #0
 800bc56:	d12b      	bne.n	800bcb0 <__cxa_begin_catch+0x70>
 800bc58:	6002      	str	r2, [r0, #0]
 800bc5a:	0028      	movs	r0, r5
 800bc5c:	bd70      	pop	{r4, r5, r6, pc}
 800bc5e:	7863      	ldrb	r3, [r4, #1]
 800bc60:	2b4e      	cmp	r3, #78	; 0x4e
 800bc62:	d1f7      	bne.n	800bc54 <__cxa_begin_catch+0x14>
 800bc64:	78a3      	ldrb	r3, [r4, #2]
 800bc66:	2b55      	cmp	r3, #85	; 0x55
 800bc68:	d1f4      	bne.n	800bc54 <__cxa_begin_catch+0x14>
 800bc6a:	78e3      	ldrb	r3, [r4, #3]
 800bc6c:	2b43      	cmp	r3, #67	; 0x43
 800bc6e:	d1f1      	bne.n	800bc54 <__cxa_begin_catch+0x14>
 800bc70:	7923      	ldrb	r3, [r4, #4]
 800bc72:	2b43      	cmp	r3, #67	; 0x43
 800bc74:	d1ee      	bne.n	800bc54 <__cxa_begin_catch+0x14>
 800bc76:	7963      	ldrb	r3, [r4, #5]
 800bc78:	2b2b      	cmp	r3, #43	; 0x2b
 800bc7a:	d1eb      	bne.n	800bc54 <__cxa_begin_catch+0x14>
 800bc7c:	79a3      	ldrb	r3, [r4, #6]
 800bc7e:	2b2b      	cmp	r3, #43	; 0x2b
 800bc80:	d1e8      	bne.n	800bc54 <__cxa_begin_catch+0x14>
 800bc82:	79e3      	ldrb	r3, [r4, #7]
 800bc84:	2b01      	cmp	r3, #1
 800bc86:	d8e5      	bhi.n	800bc54 <__cxa_begin_catch+0x14>
 800bc88:	6953      	ldr	r3, [r2, #20]
 800bc8a:	2b00      	cmp	r3, #0
 800bc8c:	db0d      	blt.n	800bcaa <__cxa_begin_catch+0x6a>
 800bc8e:	3301      	adds	r3, #1
 800bc90:	6153      	str	r3, [r2, #20]
 800bc92:	6843      	ldr	r3, [r0, #4]
 800bc94:	3b01      	subs	r3, #1
 800bc96:	6043      	str	r3, [r0, #4]
 800bc98:	4295      	cmp	r5, r2
 800bc9a:	d001      	beq.n	800bca0 <__cxa_begin_catch+0x60>
 800bc9c:	6115      	str	r5, [r2, #16]
 800bc9e:	6002      	str	r2, [r0, #0]
 800bca0:	0020      	movs	r0, r4
 800bca2:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800bca4:	f7fb f9f0 	bl	8007088 <_Unwind_Complete>
 800bca8:	e7d7      	b.n	800bc5a <__cxa_begin_catch+0x1a>
 800bcaa:	2101      	movs	r1, #1
 800bcac:	1acb      	subs	r3, r1, r3
 800bcae:	e7ef      	b.n	800bc90 <__cxa_begin_catch+0x50>
 800bcb0:	f7ff fb8a 	bl	800b3c8 <_ZSt9terminatev>

0800bcb4 <__cxa_end_catch>:
 800bcb4:	b510      	push	{r4, lr}
 800bcb6:	f7ff f81b 	bl	800acf0 <__cxa_get_globals_fast>
 800bcba:	6803      	ldr	r3, [r0, #0]
 800bcbc:	2b00      	cmp	r3, #0
 800bcbe:	d009      	beq.n	800bcd4 <__cxa_end_catch+0x20>
 800bcc0:	2220      	movs	r2, #32
 800bcc2:	5c9a      	ldrb	r2, [r3, r2]
 800bcc4:	2a47      	cmp	r2, #71	; 0x47
 800bcc6:	d006      	beq.n	800bcd6 <__cxa_end_catch+0x22>
 800bcc8:	2200      	movs	r2, #0
 800bcca:	3320      	adds	r3, #32
 800bccc:	6002      	str	r2, [r0, #0]
 800bcce:	0018      	movs	r0, r3
 800bcd0:	f7fb f9dc 	bl	800708c <_Unwind_DeleteException>
 800bcd4:	bd10      	pop	{r4, pc}
 800bcd6:	3a26      	subs	r2, #38	; 0x26
 800bcd8:	5c9a      	ldrb	r2, [r3, r2]
 800bcda:	2a4e      	cmp	r2, #78	; 0x4e
 800bcdc:	d1f4      	bne.n	800bcc8 <__cxa_end_catch+0x14>
 800bcde:	3a2c      	subs	r2, #44	; 0x2c
 800bce0:	5c9a      	ldrb	r2, [r3, r2]
 800bce2:	2a55      	cmp	r2, #85	; 0x55
 800bce4:	d1f0      	bne.n	800bcc8 <__cxa_end_catch+0x14>
 800bce6:	3a32      	subs	r2, #50	; 0x32
 800bce8:	5c9a      	ldrb	r2, [r3, r2]
 800bcea:	2a43      	cmp	r2, #67	; 0x43
 800bcec:	d1ec      	bne.n	800bcc8 <__cxa_end_catch+0x14>
 800bcee:	3a1f      	subs	r2, #31
 800bcf0:	5c9a      	ldrb	r2, [r3, r2]
 800bcf2:	2a43      	cmp	r2, #67	; 0x43
 800bcf4:	d1e8      	bne.n	800bcc8 <__cxa_end_catch+0x14>
 800bcf6:	3a1e      	subs	r2, #30
 800bcf8:	5c9a      	ldrb	r2, [r3, r2]
 800bcfa:	2a2b      	cmp	r2, #43	; 0x2b
 800bcfc:	d1e4      	bne.n	800bcc8 <__cxa_end_catch+0x14>
 800bcfe:	3a05      	subs	r2, #5
 800bd00:	5c9a      	ldrb	r2, [r3, r2]
 800bd02:	2a2b      	cmp	r2, #43	; 0x2b
 800bd04:	d1e0      	bne.n	800bcc8 <__cxa_end_catch+0x14>
 800bd06:	3a04      	subs	r2, #4
 800bd08:	5c9a      	ldrb	r2, [r3, r2]
 800bd0a:	2a01      	cmp	r2, #1
 800bd0c:	d8dc      	bhi.n	800bcc8 <__cxa_end_catch+0x14>
 800bd0e:	695a      	ldr	r2, [r3, #20]
 800bd10:	2a00      	cmp	r2, #0
 800bd12:	db08      	blt.n	800bd26 <__cxa_end_catch+0x72>
 800bd14:	1e51      	subs	r1, r2, #1
 800bd16:	2a01      	cmp	r2, #1
 800bd18:	d00c      	beq.n	800bd34 <__cxa_end_catch+0x80>
 800bd1a:	1c4a      	adds	r2, r1, #1
 800bd1c:	d001      	beq.n	800bd22 <__cxa_end_catch+0x6e>
 800bd1e:	6159      	str	r1, [r3, #20]
 800bd20:	e7d8      	b.n	800bcd4 <__cxa_end_catch+0x20>
 800bd22:	f7ff fb51 	bl	800b3c8 <_ZSt9terminatev>
 800bd26:	1c51      	adds	r1, r2, #1
 800bd28:	3201      	adds	r2, #1
 800bd2a:	d1f8      	bne.n	800bd1e <__cxa_end_catch+0x6a>
 800bd2c:	691a      	ldr	r2, [r3, #16]
 800bd2e:	6002      	str	r2, [r0, #0]
 800bd30:	6159      	str	r1, [r3, #20]
 800bd32:	e7cf      	b.n	800bcd4 <__cxa_end_catch+0x20>
 800bd34:	691a      	ldr	r2, [r3, #16]
 800bd36:	3320      	adds	r3, #32
 800bd38:	6002      	str	r2, [r0, #0]
 800bd3a:	0018      	movs	r0, r3
 800bd3c:	f7fb f9a6 	bl	800708c <_Unwind_DeleteException>
 800bd40:	e7c8      	b.n	800bcd4 <__cxa_end_catch+0x20>
 800bd42:	46c0      	nop			; (mov r8, r8)

0800bd44 <__cxa_current_exception_type>:
 800bd44:	b510      	push	{r4, lr}
 800bd46:	f7fe ffd7 	bl	800acf8 <__cxa_get_globals>
 800bd4a:	6800      	ldr	r0, [r0, #0]
 800bd4c:	2800      	cmp	r0, #0
 800bd4e:	d004      	beq.n	800bd5a <__cxa_current_exception_type+0x16>
 800bd50:	2327      	movs	r3, #39	; 0x27
 800bd52:	5cc3      	ldrb	r3, [r0, r3]
 800bd54:	2b01      	cmp	r3, #1
 800bd56:	d001      	beq.n	800bd5c <__cxa_current_exception_type+0x18>
 800bd58:	6800      	ldr	r0, [r0, #0]
 800bd5a:	bd10      	pop	{r4, pc}
 800bd5c:	6800      	ldr	r0, [r0, #0]
 800bd5e:	3878      	subs	r0, #120	; 0x78
 800bd60:	e7fa      	b.n	800bd58 <__cxa_current_exception_type+0x14>
 800bd62:	46c0      	nop			; (mov r8, r8)

0800bd64 <abort>:
 800bd64:	2006      	movs	r0, #6
 800bd66:	b510      	push	{r4, lr}
 800bd68:	f000 fc62 	bl	800c630 <raise>
 800bd6c:	2001      	movs	r0, #1
 800bd6e:	f7fc fe99 	bl	8008aa4 <_exit>
	...

0800bd74 <malloc>:
 800bd74:	b510      	push	{r4, lr}
 800bd76:	4b03      	ldr	r3, [pc, #12]	; (800bd84 <malloc+0x10>)
 800bd78:	0001      	movs	r1, r0
 800bd7a:	6818      	ldr	r0, [r3, #0]
 800bd7c:	f000 f830 	bl	800bde0 <_malloc_r>
 800bd80:	bd10      	pop	{r4, pc}
 800bd82:	46c0      	nop			; (mov r8, r8)
 800bd84:	2000006c 	.word	0x2000006c

0800bd88 <free>:
 800bd88:	b510      	push	{r4, lr}
 800bd8a:	4b03      	ldr	r3, [pc, #12]	; (800bd98 <free+0x10>)
 800bd8c:	0001      	movs	r1, r0
 800bd8e:	6818      	ldr	r0, [r3, #0]
 800bd90:	f000 fd10 	bl	800c7b4 <_free_r>
 800bd94:	bd10      	pop	{r4, pc}
 800bd96:	46c0      	nop			; (mov r8, r8)
 800bd98:	2000006c 	.word	0x2000006c

0800bd9c <sbrk_aligned>:
 800bd9c:	b570      	push	{r4, r5, r6, lr}
 800bd9e:	4e0f      	ldr	r6, [pc, #60]	; (800bddc <sbrk_aligned+0x40>)
 800bda0:	000d      	movs	r5, r1
 800bda2:	6831      	ldr	r1, [r6, #0]
 800bda4:	0004      	movs	r4, r0
 800bda6:	2900      	cmp	r1, #0
 800bda8:	d102      	bne.n	800bdb0 <sbrk_aligned+0x14>
 800bdaa:	f000 fc9b 	bl	800c6e4 <_sbrk_r>
 800bdae:	6030      	str	r0, [r6, #0]
 800bdb0:	0029      	movs	r1, r5
 800bdb2:	0020      	movs	r0, r4
 800bdb4:	f000 fc96 	bl	800c6e4 <_sbrk_r>
 800bdb8:	1c43      	adds	r3, r0, #1
 800bdba:	d00a      	beq.n	800bdd2 <sbrk_aligned+0x36>
 800bdbc:	2303      	movs	r3, #3
 800bdbe:	1cc5      	adds	r5, r0, #3
 800bdc0:	439d      	bics	r5, r3
 800bdc2:	42a8      	cmp	r0, r5
 800bdc4:	d007      	beq.n	800bdd6 <sbrk_aligned+0x3a>
 800bdc6:	1a29      	subs	r1, r5, r0
 800bdc8:	0020      	movs	r0, r4
 800bdca:	f000 fc8b 	bl	800c6e4 <_sbrk_r>
 800bdce:	3001      	adds	r0, #1
 800bdd0:	d101      	bne.n	800bdd6 <sbrk_aligned+0x3a>
 800bdd2:	2501      	movs	r5, #1
 800bdd4:	426d      	negs	r5, r5
 800bdd6:	0028      	movs	r0, r5
 800bdd8:	bd70      	pop	{r4, r5, r6, pc}
 800bdda:	46c0      	nop			; (mov r8, r8)
 800bddc:	20000618 	.word	0x20000618

0800bde0 <_malloc_r>:
 800bde0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bde2:	2203      	movs	r2, #3
 800bde4:	1ccb      	adds	r3, r1, #3
 800bde6:	4393      	bics	r3, r2
 800bde8:	3308      	adds	r3, #8
 800bdea:	0006      	movs	r6, r0
 800bdec:	001f      	movs	r7, r3
 800bdee:	2b0c      	cmp	r3, #12
 800bdf0:	d238      	bcs.n	800be64 <_malloc_r+0x84>
 800bdf2:	270c      	movs	r7, #12
 800bdf4:	42b9      	cmp	r1, r7
 800bdf6:	d837      	bhi.n	800be68 <_malloc_r+0x88>
 800bdf8:	0030      	movs	r0, r6
 800bdfa:	f000 f873 	bl	800bee4 <__malloc_lock>
 800bdfe:	4b38      	ldr	r3, [pc, #224]	; (800bee0 <_malloc_r+0x100>)
 800be00:	9300      	str	r3, [sp, #0]
 800be02:	681b      	ldr	r3, [r3, #0]
 800be04:	001c      	movs	r4, r3
 800be06:	2c00      	cmp	r4, #0
 800be08:	d133      	bne.n	800be72 <_malloc_r+0x92>
 800be0a:	0039      	movs	r1, r7
 800be0c:	0030      	movs	r0, r6
 800be0e:	f7ff ffc5 	bl	800bd9c <sbrk_aligned>
 800be12:	0004      	movs	r4, r0
 800be14:	1c43      	adds	r3, r0, #1
 800be16:	d15e      	bne.n	800bed6 <_malloc_r+0xf6>
 800be18:	9b00      	ldr	r3, [sp, #0]
 800be1a:	681c      	ldr	r4, [r3, #0]
 800be1c:	0025      	movs	r5, r4
 800be1e:	2d00      	cmp	r5, #0
 800be20:	d14e      	bne.n	800bec0 <_malloc_r+0xe0>
 800be22:	2c00      	cmp	r4, #0
 800be24:	d051      	beq.n	800beca <_malloc_r+0xea>
 800be26:	6823      	ldr	r3, [r4, #0]
 800be28:	0029      	movs	r1, r5
 800be2a:	18e3      	adds	r3, r4, r3
 800be2c:	0030      	movs	r0, r6
 800be2e:	9301      	str	r3, [sp, #4]
 800be30:	f000 fc58 	bl	800c6e4 <_sbrk_r>
 800be34:	9b01      	ldr	r3, [sp, #4]
 800be36:	4283      	cmp	r3, r0
 800be38:	d147      	bne.n	800beca <_malloc_r+0xea>
 800be3a:	6823      	ldr	r3, [r4, #0]
 800be3c:	0030      	movs	r0, r6
 800be3e:	1aff      	subs	r7, r7, r3
 800be40:	0039      	movs	r1, r7
 800be42:	f7ff ffab 	bl	800bd9c <sbrk_aligned>
 800be46:	3001      	adds	r0, #1
 800be48:	d03f      	beq.n	800beca <_malloc_r+0xea>
 800be4a:	6823      	ldr	r3, [r4, #0]
 800be4c:	19db      	adds	r3, r3, r7
 800be4e:	6023      	str	r3, [r4, #0]
 800be50:	9b00      	ldr	r3, [sp, #0]
 800be52:	681b      	ldr	r3, [r3, #0]
 800be54:	2b00      	cmp	r3, #0
 800be56:	d040      	beq.n	800beda <_malloc_r+0xfa>
 800be58:	685a      	ldr	r2, [r3, #4]
 800be5a:	42a2      	cmp	r2, r4
 800be5c:	d133      	bne.n	800bec6 <_malloc_r+0xe6>
 800be5e:	2200      	movs	r2, #0
 800be60:	605a      	str	r2, [r3, #4]
 800be62:	e014      	b.n	800be8e <_malloc_r+0xae>
 800be64:	2b00      	cmp	r3, #0
 800be66:	dac5      	bge.n	800bdf4 <_malloc_r+0x14>
 800be68:	230c      	movs	r3, #12
 800be6a:	2500      	movs	r5, #0
 800be6c:	6033      	str	r3, [r6, #0]
 800be6e:	0028      	movs	r0, r5
 800be70:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800be72:	6821      	ldr	r1, [r4, #0]
 800be74:	1bc9      	subs	r1, r1, r7
 800be76:	d420      	bmi.n	800beba <_malloc_r+0xda>
 800be78:	290b      	cmp	r1, #11
 800be7a:	d918      	bls.n	800beae <_malloc_r+0xce>
 800be7c:	19e2      	adds	r2, r4, r7
 800be7e:	6027      	str	r7, [r4, #0]
 800be80:	42a3      	cmp	r3, r4
 800be82:	d112      	bne.n	800beaa <_malloc_r+0xca>
 800be84:	9b00      	ldr	r3, [sp, #0]
 800be86:	601a      	str	r2, [r3, #0]
 800be88:	6863      	ldr	r3, [r4, #4]
 800be8a:	6011      	str	r1, [r2, #0]
 800be8c:	6053      	str	r3, [r2, #4]
 800be8e:	0030      	movs	r0, r6
 800be90:	0025      	movs	r5, r4
 800be92:	f000 f82f 	bl	800bef4 <__malloc_unlock>
 800be96:	2207      	movs	r2, #7
 800be98:	350b      	adds	r5, #11
 800be9a:	1d23      	adds	r3, r4, #4
 800be9c:	4395      	bics	r5, r2
 800be9e:	1aea      	subs	r2, r5, r3
 800bea0:	429d      	cmp	r5, r3
 800bea2:	d0e4      	beq.n	800be6e <_malloc_r+0x8e>
 800bea4:	1b5b      	subs	r3, r3, r5
 800bea6:	50a3      	str	r3, [r4, r2]
 800bea8:	e7e1      	b.n	800be6e <_malloc_r+0x8e>
 800beaa:	605a      	str	r2, [r3, #4]
 800beac:	e7ec      	b.n	800be88 <_malloc_r+0xa8>
 800beae:	6862      	ldr	r2, [r4, #4]
 800beb0:	42a3      	cmp	r3, r4
 800beb2:	d1d5      	bne.n	800be60 <_malloc_r+0x80>
 800beb4:	9b00      	ldr	r3, [sp, #0]
 800beb6:	601a      	str	r2, [r3, #0]
 800beb8:	e7e9      	b.n	800be8e <_malloc_r+0xae>
 800beba:	0023      	movs	r3, r4
 800bebc:	6864      	ldr	r4, [r4, #4]
 800bebe:	e7a2      	b.n	800be06 <_malloc_r+0x26>
 800bec0:	002c      	movs	r4, r5
 800bec2:	686d      	ldr	r5, [r5, #4]
 800bec4:	e7ab      	b.n	800be1e <_malloc_r+0x3e>
 800bec6:	0013      	movs	r3, r2
 800bec8:	e7c4      	b.n	800be54 <_malloc_r+0x74>
 800beca:	230c      	movs	r3, #12
 800becc:	0030      	movs	r0, r6
 800bece:	6033      	str	r3, [r6, #0]
 800bed0:	f000 f810 	bl	800bef4 <__malloc_unlock>
 800bed4:	e7cb      	b.n	800be6e <_malloc_r+0x8e>
 800bed6:	6027      	str	r7, [r4, #0]
 800bed8:	e7d9      	b.n	800be8e <_malloc_r+0xae>
 800beda:	605b      	str	r3, [r3, #4]
 800bedc:	deff      	udf	#255	; 0xff
 800bede:	46c0      	nop			; (mov r8, r8)
 800bee0:	20000614 	.word	0x20000614

0800bee4 <__malloc_lock>:
 800bee4:	b510      	push	{r4, lr}
 800bee6:	4802      	ldr	r0, [pc, #8]	; (800bef0 <__malloc_lock+0xc>)
 800bee8:	f000 fc4d 	bl	800c786 <__retarget_lock_acquire_recursive>
 800beec:	bd10      	pop	{r4, pc}
 800beee:	46c0      	nop			; (mov r8, r8)
 800bef0:	2000075c 	.word	0x2000075c

0800bef4 <__malloc_unlock>:
 800bef4:	b510      	push	{r4, lr}
 800bef6:	4802      	ldr	r0, [pc, #8]	; (800bf00 <__malloc_unlock+0xc>)
 800bef8:	f000 fc46 	bl	800c788 <__retarget_lock_release_recursive>
 800befc:	bd10      	pop	{r4, pc}
 800befe:	46c0      	nop			; (mov r8, r8)
 800bf00:	2000075c 	.word	0x2000075c

0800bf04 <realloc>:
 800bf04:	b510      	push	{r4, lr}
 800bf06:	4b03      	ldr	r3, [pc, #12]	; (800bf14 <realloc+0x10>)
 800bf08:	000a      	movs	r2, r1
 800bf0a:	0001      	movs	r1, r0
 800bf0c:	6818      	ldr	r0, [r3, #0]
 800bf0e:	f000 f803 	bl	800bf18 <_realloc_r>
 800bf12:	bd10      	pop	{r4, pc}
 800bf14:	2000006c 	.word	0x2000006c

0800bf18 <_realloc_r>:
 800bf18:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bf1a:	0007      	movs	r7, r0
 800bf1c:	000e      	movs	r6, r1
 800bf1e:	0014      	movs	r4, r2
 800bf20:	2900      	cmp	r1, #0
 800bf22:	d105      	bne.n	800bf30 <_realloc_r+0x18>
 800bf24:	0011      	movs	r1, r2
 800bf26:	f7ff ff5b 	bl	800bde0 <_malloc_r>
 800bf2a:	0005      	movs	r5, r0
 800bf2c:	0028      	movs	r0, r5
 800bf2e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800bf30:	2a00      	cmp	r2, #0
 800bf32:	d103      	bne.n	800bf3c <_realloc_r+0x24>
 800bf34:	f000 fc3e 	bl	800c7b4 <_free_r>
 800bf38:	0025      	movs	r5, r4
 800bf3a:	e7f7      	b.n	800bf2c <_realloc_r+0x14>
 800bf3c:	f000 fc84 	bl	800c848 <_malloc_usable_size_r>
 800bf40:	9001      	str	r0, [sp, #4]
 800bf42:	4284      	cmp	r4, r0
 800bf44:	d803      	bhi.n	800bf4e <_realloc_r+0x36>
 800bf46:	0035      	movs	r5, r6
 800bf48:	0843      	lsrs	r3, r0, #1
 800bf4a:	42a3      	cmp	r3, r4
 800bf4c:	d3ee      	bcc.n	800bf2c <_realloc_r+0x14>
 800bf4e:	0021      	movs	r1, r4
 800bf50:	0038      	movs	r0, r7
 800bf52:	f7ff ff45 	bl	800bde0 <_malloc_r>
 800bf56:	1e05      	subs	r5, r0, #0
 800bf58:	d0e8      	beq.n	800bf2c <_realloc_r+0x14>
 800bf5a:	9b01      	ldr	r3, [sp, #4]
 800bf5c:	0022      	movs	r2, r4
 800bf5e:	429c      	cmp	r4, r3
 800bf60:	d900      	bls.n	800bf64 <_realloc_r+0x4c>
 800bf62:	001a      	movs	r2, r3
 800bf64:	0031      	movs	r1, r6
 800bf66:	0028      	movs	r0, r5
 800bf68:	f000 fc1a 	bl	800c7a0 <memcpy>
 800bf6c:	0031      	movs	r1, r6
 800bf6e:	0038      	movs	r0, r7
 800bf70:	f000 fc20 	bl	800c7b4 <_free_r>
 800bf74:	e7da      	b.n	800bf2c <_realloc_r+0x14>
	...

0800bf78 <std>:
 800bf78:	2300      	movs	r3, #0
 800bf7a:	b510      	push	{r4, lr}
 800bf7c:	0004      	movs	r4, r0
 800bf7e:	6003      	str	r3, [r0, #0]
 800bf80:	6043      	str	r3, [r0, #4]
 800bf82:	6083      	str	r3, [r0, #8]
 800bf84:	8181      	strh	r1, [r0, #12]
 800bf86:	6643      	str	r3, [r0, #100]	; 0x64
 800bf88:	81c2      	strh	r2, [r0, #14]
 800bf8a:	6103      	str	r3, [r0, #16]
 800bf8c:	6143      	str	r3, [r0, #20]
 800bf8e:	6183      	str	r3, [r0, #24]
 800bf90:	0019      	movs	r1, r3
 800bf92:	2208      	movs	r2, #8
 800bf94:	305c      	adds	r0, #92	; 0x5c
 800bf96:	f000 fb08 	bl	800c5aa <memset>
 800bf9a:	4b0b      	ldr	r3, [pc, #44]	; (800bfc8 <std+0x50>)
 800bf9c:	6224      	str	r4, [r4, #32]
 800bf9e:	6263      	str	r3, [r4, #36]	; 0x24
 800bfa0:	4b0a      	ldr	r3, [pc, #40]	; (800bfcc <std+0x54>)
 800bfa2:	62a3      	str	r3, [r4, #40]	; 0x28
 800bfa4:	4b0a      	ldr	r3, [pc, #40]	; (800bfd0 <std+0x58>)
 800bfa6:	62e3      	str	r3, [r4, #44]	; 0x2c
 800bfa8:	4b0a      	ldr	r3, [pc, #40]	; (800bfd4 <std+0x5c>)
 800bfaa:	6323      	str	r3, [r4, #48]	; 0x30
 800bfac:	4b0a      	ldr	r3, [pc, #40]	; (800bfd8 <std+0x60>)
 800bfae:	429c      	cmp	r4, r3
 800bfb0:	d005      	beq.n	800bfbe <std+0x46>
 800bfb2:	4b0a      	ldr	r3, [pc, #40]	; (800bfdc <std+0x64>)
 800bfb4:	429c      	cmp	r4, r3
 800bfb6:	d002      	beq.n	800bfbe <std+0x46>
 800bfb8:	4b09      	ldr	r3, [pc, #36]	; (800bfe0 <std+0x68>)
 800bfba:	429c      	cmp	r4, r3
 800bfbc:	d103      	bne.n	800bfc6 <std+0x4e>
 800bfbe:	0020      	movs	r0, r4
 800bfc0:	3058      	adds	r0, #88	; 0x58
 800bfc2:	f000 fbdf 	bl	800c784 <__retarget_lock_init_recursive>
 800bfc6:	bd10      	pop	{r4, pc}
 800bfc8:	0800c385 	.word	0x0800c385
 800bfcc:	0800c3ad 	.word	0x0800c3ad
 800bfd0:	0800c3e5 	.word	0x0800c3e5
 800bfd4:	0800c411 	.word	0x0800c411
 800bfd8:	2000061c 	.word	0x2000061c
 800bfdc:	20000684 	.word	0x20000684
 800bfe0:	200006ec 	.word	0x200006ec

0800bfe4 <stdio_exit_handler>:
 800bfe4:	b510      	push	{r4, lr}
 800bfe6:	4a03      	ldr	r2, [pc, #12]	; (800bff4 <stdio_exit_handler+0x10>)
 800bfe8:	4903      	ldr	r1, [pc, #12]	; (800bff8 <stdio_exit_handler+0x14>)
 800bfea:	4804      	ldr	r0, [pc, #16]	; (800bffc <stdio_exit_handler+0x18>)
 800bfec:	f000 f8fc 	bl	800c1e8 <_fwalk_sglue>
 800bff0:	bd10      	pop	{r4, pc}
 800bff2:	46c0      	nop			; (mov r8, r8)
 800bff4:	20000014 	.word	0x20000014
 800bff8:	0800cf31 	.word	0x0800cf31
 800bffc:	20000020 	.word	0x20000020

0800c000 <cleanup_stdio>:
 800c000:	6841      	ldr	r1, [r0, #4]
 800c002:	4b0b      	ldr	r3, [pc, #44]	; (800c030 <cleanup_stdio+0x30>)
 800c004:	b510      	push	{r4, lr}
 800c006:	0004      	movs	r4, r0
 800c008:	4299      	cmp	r1, r3
 800c00a:	d001      	beq.n	800c010 <cleanup_stdio+0x10>
 800c00c:	f000 ff90 	bl	800cf30 <_fflush_r>
 800c010:	68a1      	ldr	r1, [r4, #8]
 800c012:	4b08      	ldr	r3, [pc, #32]	; (800c034 <cleanup_stdio+0x34>)
 800c014:	4299      	cmp	r1, r3
 800c016:	d002      	beq.n	800c01e <cleanup_stdio+0x1e>
 800c018:	0020      	movs	r0, r4
 800c01a:	f000 ff89 	bl	800cf30 <_fflush_r>
 800c01e:	68e1      	ldr	r1, [r4, #12]
 800c020:	4b05      	ldr	r3, [pc, #20]	; (800c038 <cleanup_stdio+0x38>)
 800c022:	4299      	cmp	r1, r3
 800c024:	d002      	beq.n	800c02c <cleanup_stdio+0x2c>
 800c026:	0020      	movs	r0, r4
 800c028:	f000 ff82 	bl	800cf30 <_fflush_r>
 800c02c:	bd10      	pop	{r4, pc}
 800c02e:	46c0      	nop			; (mov r8, r8)
 800c030:	2000061c 	.word	0x2000061c
 800c034:	20000684 	.word	0x20000684
 800c038:	200006ec 	.word	0x200006ec

0800c03c <global_stdio_init.part.0>:
 800c03c:	b510      	push	{r4, lr}
 800c03e:	4b09      	ldr	r3, [pc, #36]	; (800c064 <global_stdio_init.part.0+0x28>)
 800c040:	4a09      	ldr	r2, [pc, #36]	; (800c068 <global_stdio_init.part.0+0x2c>)
 800c042:	2104      	movs	r1, #4
 800c044:	601a      	str	r2, [r3, #0]
 800c046:	4809      	ldr	r0, [pc, #36]	; (800c06c <global_stdio_init.part.0+0x30>)
 800c048:	2200      	movs	r2, #0
 800c04a:	f7ff ff95 	bl	800bf78 <std>
 800c04e:	2201      	movs	r2, #1
 800c050:	2109      	movs	r1, #9
 800c052:	4807      	ldr	r0, [pc, #28]	; (800c070 <global_stdio_init.part.0+0x34>)
 800c054:	f7ff ff90 	bl	800bf78 <std>
 800c058:	2202      	movs	r2, #2
 800c05a:	2112      	movs	r1, #18
 800c05c:	4805      	ldr	r0, [pc, #20]	; (800c074 <global_stdio_init.part.0+0x38>)
 800c05e:	f7ff ff8b 	bl	800bf78 <std>
 800c062:	bd10      	pop	{r4, pc}
 800c064:	20000754 	.word	0x20000754
 800c068:	0800bfe5 	.word	0x0800bfe5
 800c06c:	2000061c 	.word	0x2000061c
 800c070:	20000684 	.word	0x20000684
 800c074:	200006ec 	.word	0x200006ec

0800c078 <__sfp_lock_acquire>:
 800c078:	b510      	push	{r4, lr}
 800c07a:	4802      	ldr	r0, [pc, #8]	; (800c084 <__sfp_lock_acquire+0xc>)
 800c07c:	f000 fb83 	bl	800c786 <__retarget_lock_acquire_recursive>
 800c080:	bd10      	pop	{r4, pc}
 800c082:	46c0      	nop			; (mov r8, r8)
 800c084:	2000075d 	.word	0x2000075d

0800c088 <__sfp_lock_release>:
 800c088:	b510      	push	{r4, lr}
 800c08a:	4802      	ldr	r0, [pc, #8]	; (800c094 <__sfp_lock_release+0xc>)
 800c08c:	f000 fb7c 	bl	800c788 <__retarget_lock_release_recursive>
 800c090:	bd10      	pop	{r4, pc}
 800c092:	46c0      	nop			; (mov r8, r8)
 800c094:	2000075d 	.word	0x2000075d

0800c098 <__sinit>:
 800c098:	b510      	push	{r4, lr}
 800c09a:	0004      	movs	r4, r0
 800c09c:	f7ff ffec 	bl	800c078 <__sfp_lock_acquire>
 800c0a0:	6a23      	ldr	r3, [r4, #32]
 800c0a2:	2b00      	cmp	r3, #0
 800c0a4:	d002      	beq.n	800c0ac <__sinit+0x14>
 800c0a6:	f7ff ffef 	bl	800c088 <__sfp_lock_release>
 800c0aa:	bd10      	pop	{r4, pc}
 800c0ac:	4b04      	ldr	r3, [pc, #16]	; (800c0c0 <__sinit+0x28>)
 800c0ae:	6223      	str	r3, [r4, #32]
 800c0b0:	4b04      	ldr	r3, [pc, #16]	; (800c0c4 <__sinit+0x2c>)
 800c0b2:	681b      	ldr	r3, [r3, #0]
 800c0b4:	2b00      	cmp	r3, #0
 800c0b6:	d1f6      	bne.n	800c0a6 <__sinit+0xe>
 800c0b8:	f7ff ffc0 	bl	800c03c <global_stdio_init.part.0>
 800c0bc:	e7f3      	b.n	800c0a6 <__sinit+0xe>
 800c0be:	46c0      	nop			; (mov r8, r8)
 800c0c0:	0800c001 	.word	0x0800c001
 800c0c4:	20000754 	.word	0x20000754

0800c0c8 <_fputc_r>:
 800c0c8:	b570      	push	{r4, r5, r6, lr}
 800c0ca:	0005      	movs	r5, r0
 800c0cc:	000e      	movs	r6, r1
 800c0ce:	0014      	movs	r4, r2
 800c0d0:	2800      	cmp	r0, #0
 800c0d2:	d004      	beq.n	800c0de <_fputc_r+0x16>
 800c0d4:	6a03      	ldr	r3, [r0, #32]
 800c0d6:	2b00      	cmp	r3, #0
 800c0d8:	d101      	bne.n	800c0de <_fputc_r+0x16>
 800c0da:	f7ff ffdd 	bl	800c098 <__sinit>
 800c0de:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800c0e0:	07db      	lsls	r3, r3, #31
 800c0e2:	d405      	bmi.n	800c0f0 <_fputc_r+0x28>
 800c0e4:	89a3      	ldrh	r3, [r4, #12]
 800c0e6:	059b      	lsls	r3, r3, #22
 800c0e8:	d402      	bmi.n	800c0f0 <_fputc_r+0x28>
 800c0ea:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c0ec:	f000 fb4b 	bl	800c786 <__retarget_lock_acquire_recursive>
 800c0f0:	0028      	movs	r0, r5
 800c0f2:	0022      	movs	r2, r4
 800c0f4:	0031      	movs	r1, r6
 800c0f6:	f000 f8ef 	bl	800c2d8 <_putc_r>
 800c0fa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800c0fc:	0005      	movs	r5, r0
 800c0fe:	07db      	lsls	r3, r3, #31
 800c100:	d405      	bmi.n	800c10e <_fputc_r+0x46>
 800c102:	89a3      	ldrh	r3, [r4, #12]
 800c104:	059b      	lsls	r3, r3, #22
 800c106:	d402      	bmi.n	800c10e <_fputc_r+0x46>
 800c108:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c10a:	f000 fb3d 	bl	800c788 <__retarget_lock_release_recursive>
 800c10e:	0028      	movs	r0, r5
 800c110:	bd70      	pop	{r4, r5, r6, pc}
	...

0800c114 <fputc>:
 800c114:	b510      	push	{r4, lr}
 800c116:	4b03      	ldr	r3, [pc, #12]	; (800c124 <fputc+0x10>)
 800c118:	000a      	movs	r2, r1
 800c11a:	0001      	movs	r1, r0
 800c11c:	6818      	ldr	r0, [r3, #0]
 800c11e:	f7ff ffd3 	bl	800c0c8 <_fputc_r>
 800c122:	bd10      	pop	{r4, pc}
 800c124:	2000006c 	.word	0x2000006c

0800c128 <_fputs_r>:
 800c128:	b570      	push	{r4, r5, r6, lr}
 800c12a:	0005      	movs	r5, r0
 800c12c:	000e      	movs	r6, r1
 800c12e:	0014      	movs	r4, r2
 800c130:	2800      	cmp	r0, #0
 800c132:	d004      	beq.n	800c13e <_fputs_r+0x16>
 800c134:	6a03      	ldr	r3, [r0, #32]
 800c136:	2b00      	cmp	r3, #0
 800c138:	d101      	bne.n	800c13e <_fputs_r+0x16>
 800c13a:	f7ff ffad 	bl	800c098 <__sinit>
 800c13e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800c140:	07db      	lsls	r3, r3, #31
 800c142:	d405      	bmi.n	800c150 <_fputs_r+0x28>
 800c144:	89a3      	ldrh	r3, [r4, #12]
 800c146:	059b      	lsls	r3, r3, #22
 800c148:	d402      	bmi.n	800c150 <_fputs_r+0x28>
 800c14a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c14c:	f000 fb1b 	bl	800c786 <__retarget_lock_acquire_recursive>
 800c150:	89a3      	ldrh	r3, [r4, #12]
 800c152:	071b      	lsls	r3, r3, #28
 800c154:	d502      	bpl.n	800c15c <_fputs_r+0x34>
 800c156:	6923      	ldr	r3, [r4, #16]
 800c158:	2b00      	cmp	r3, #0
 800c15a:	d120      	bne.n	800c19e <_fputs_r+0x76>
 800c15c:	0021      	movs	r1, r4
 800c15e:	0028      	movs	r0, r5
 800c160:	f000 f99e 	bl	800c4a0 <__swsetup_r>
 800c164:	2800      	cmp	r0, #0
 800c166:	d01a      	beq.n	800c19e <_fputs_r+0x76>
 800c168:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800c16a:	07db      	lsls	r3, r3, #31
 800c16c:	d405      	bmi.n	800c17a <_fputs_r+0x52>
 800c16e:	89a3      	ldrh	r3, [r4, #12]
 800c170:	059b      	lsls	r3, r3, #22
 800c172:	d402      	bmi.n	800c17a <_fputs_r+0x52>
 800c174:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c176:	f000 fb07 	bl	800c788 <__retarget_lock_release_recursive>
 800c17a:	2501      	movs	r5, #1
 800c17c:	426d      	negs	r5, r5
 800c17e:	e01d      	b.n	800c1bc <_fputs_r+0x94>
 800c180:	68a3      	ldr	r3, [r4, #8]
 800c182:	3601      	adds	r6, #1
 800c184:	3b01      	subs	r3, #1
 800c186:	60a3      	str	r3, [r4, #8]
 800c188:	2b00      	cmp	r3, #0
 800c18a:	da04      	bge.n	800c196 <_fputs_r+0x6e>
 800c18c:	69a2      	ldr	r2, [r4, #24]
 800c18e:	4293      	cmp	r3, r2
 800c190:	db16      	blt.n	800c1c0 <_fputs_r+0x98>
 800c192:	290a      	cmp	r1, #10
 800c194:	d014      	beq.n	800c1c0 <_fputs_r+0x98>
 800c196:	6823      	ldr	r3, [r4, #0]
 800c198:	1c5a      	adds	r2, r3, #1
 800c19a:	6022      	str	r2, [r4, #0]
 800c19c:	7019      	strb	r1, [r3, #0]
 800c19e:	7831      	ldrb	r1, [r6, #0]
 800c1a0:	2900      	cmp	r1, #0
 800c1a2:	d1ed      	bne.n	800c180 <_fputs_r+0x58>
 800c1a4:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800c1a6:	2301      	movs	r3, #1
 800c1a8:	0015      	movs	r5, r2
 800c1aa:	401d      	ands	r5, r3
 800c1ac:	421a      	tst	r2, r3
 800c1ae:	d10e      	bne.n	800c1ce <_fputs_r+0xa6>
 800c1b0:	89a3      	ldrh	r3, [r4, #12]
 800c1b2:	059b      	lsls	r3, r3, #22
 800c1b4:	d402      	bmi.n	800c1bc <_fputs_r+0x94>
 800c1b6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c1b8:	f000 fae6 	bl	800c788 <__retarget_lock_release_recursive>
 800c1bc:	0028      	movs	r0, r5
 800c1be:	bd70      	pop	{r4, r5, r6, pc}
 800c1c0:	0022      	movs	r2, r4
 800c1c2:	0028      	movs	r0, r5
 800c1c4:	f000 f92a 	bl	800c41c <__swbuf_r>
 800c1c8:	3001      	adds	r0, #1
 800c1ca:	d1e8      	bne.n	800c19e <_fputs_r+0x76>
 800c1cc:	e7cc      	b.n	800c168 <_fputs_r+0x40>
 800c1ce:	000d      	movs	r5, r1
 800c1d0:	e7f4      	b.n	800c1bc <_fputs_r+0x94>
	...

0800c1d4 <fputs>:
 800c1d4:	b510      	push	{r4, lr}
 800c1d6:	4b03      	ldr	r3, [pc, #12]	; (800c1e4 <fputs+0x10>)
 800c1d8:	000a      	movs	r2, r1
 800c1da:	0001      	movs	r1, r0
 800c1dc:	6818      	ldr	r0, [r3, #0]
 800c1de:	f7ff ffa3 	bl	800c128 <_fputs_r>
 800c1e2:	bd10      	pop	{r4, pc}
 800c1e4:	2000006c 	.word	0x2000006c

0800c1e8 <_fwalk_sglue>:
 800c1e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c1ea:	0014      	movs	r4, r2
 800c1ec:	2600      	movs	r6, #0
 800c1ee:	9000      	str	r0, [sp, #0]
 800c1f0:	9101      	str	r1, [sp, #4]
 800c1f2:	68a5      	ldr	r5, [r4, #8]
 800c1f4:	6867      	ldr	r7, [r4, #4]
 800c1f6:	3f01      	subs	r7, #1
 800c1f8:	d504      	bpl.n	800c204 <_fwalk_sglue+0x1c>
 800c1fa:	6824      	ldr	r4, [r4, #0]
 800c1fc:	2c00      	cmp	r4, #0
 800c1fe:	d1f8      	bne.n	800c1f2 <_fwalk_sglue+0xa>
 800c200:	0030      	movs	r0, r6
 800c202:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800c204:	89ab      	ldrh	r3, [r5, #12]
 800c206:	2b01      	cmp	r3, #1
 800c208:	d908      	bls.n	800c21c <_fwalk_sglue+0x34>
 800c20a:	220e      	movs	r2, #14
 800c20c:	5eab      	ldrsh	r3, [r5, r2]
 800c20e:	3301      	adds	r3, #1
 800c210:	d004      	beq.n	800c21c <_fwalk_sglue+0x34>
 800c212:	0029      	movs	r1, r5
 800c214:	9800      	ldr	r0, [sp, #0]
 800c216:	9b01      	ldr	r3, [sp, #4]
 800c218:	4798      	blx	r3
 800c21a:	4306      	orrs	r6, r0
 800c21c:	3568      	adds	r5, #104	; 0x68
 800c21e:	e7ea      	b.n	800c1f6 <_fwalk_sglue+0xe>

0800c220 <_fwrite_r>:
 800c220:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c222:	4353      	muls	r3, r2
 800c224:	0005      	movs	r5, r0
 800c226:	0017      	movs	r7, r2
 800c228:	9c08      	ldr	r4, [sp, #32]
 800c22a:	9101      	str	r1, [sp, #4]
 800c22c:	9300      	str	r3, [sp, #0]
 800c22e:	2800      	cmp	r0, #0
 800c230:	d004      	beq.n	800c23c <_fwrite_r+0x1c>
 800c232:	6a03      	ldr	r3, [r0, #32]
 800c234:	2b00      	cmp	r3, #0
 800c236:	d101      	bne.n	800c23c <_fwrite_r+0x1c>
 800c238:	f7ff ff2e 	bl	800c098 <__sinit>
 800c23c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800c23e:	07db      	lsls	r3, r3, #31
 800c240:	d405      	bmi.n	800c24e <_fwrite_r+0x2e>
 800c242:	89a3      	ldrh	r3, [r4, #12]
 800c244:	059b      	lsls	r3, r3, #22
 800c246:	d402      	bmi.n	800c24e <_fwrite_r+0x2e>
 800c248:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c24a:	f000 fa9c 	bl	800c786 <__retarget_lock_acquire_recursive>
 800c24e:	89a3      	ldrh	r3, [r4, #12]
 800c250:	071b      	lsls	r3, r3, #28
 800c252:	d518      	bpl.n	800c286 <_fwrite_r+0x66>
 800c254:	6923      	ldr	r3, [r4, #16]
 800c256:	2b00      	cmp	r3, #0
 800c258:	d015      	beq.n	800c286 <_fwrite_r+0x66>
 800c25a:	2600      	movs	r6, #0
 800c25c:	9b00      	ldr	r3, [sp, #0]
 800c25e:	429e      	cmp	r6, r3
 800c260:	d018      	beq.n	800c294 <_fwrite_r+0x74>
 800c262:	9b01      	ldr	r3, [sp, #4]
 800c264:	5d99      	ldrb	r1, [r3, r6]
 800c266:	68a3      	ldr	r3, [r4, #8]
 800c268:	3b01      	subs	r3, #1
 800c26a:	60a3      	str	r3, [r4, #8]
 800c26c:	2b00      	cmp	r3, #0
 800c26e:	da04      	bge.n	800c27a <_fwrite_r+0x5a>
 800c270:	69a2      	ldr	r2, [r4, #24]
 800c272:	4293      	cmp	r3, r2
 800c274:	db1c      	blt.n	800c2b0 <_fwrite_r+0x90>
 800c276:	290a      	cmp	r1, #10
 800c278:	d01a      	beq.n	800c2b0 <_fwrite_r+0x90>
 800c27a:	6823      	ldr	r3, [r4, #0]
 800c27c:	1c5a      	adds	r2, r3, #1
 800c27e:	6022      	str	r2, [r4, #0]
 800c280:	7019      	strb	r1, [r3, #0]
 800c282:	3601      	adds	r6, #1
 800c284:	e7ea      	b.n	800c25c <_fwrite_r+0x3c>
 800c286:	0021      	movs	r1, r4
 800c288:	0028      	movs	r0, r5
 800c28a:	f000 f909 	bl	800c4a0 <__swsetup_r>
 800c28e:	2600      	movs	r6, #0
 800c290:	42b0      	cmp	r0, r6
 800c292:	d0e2      	beq.n	800c25a <_fwrite_r+0x3a>
 800c294:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800c296:	07db      	lsls	r3, r3, #31
 800c298:	d405      	bmi.n	800c2a6 <_fwrite_r+0x86>
 800c29a:	89a3      	ldrh	r3, [r4, #12]
 800c29c:	059b      	lsls	r3, r3, #22
 800c29e:	d402      	bmi.n	800c2a6 <_fwrite_r+0x86>
 800c2a0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c2a2:	f000 fa71 	bl	800c788 <__retarget_lock_release_recursive>
 800c2a6:	0039      	movs	r1, r7
 800c2a8:	0030      	movs	r0, r6
 800c2aa:	f7fa fbb3 	bl	8006a14 <__udivsi3>
 800c2ae:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800c2b0:	0022      	movs	r2, r4
 800c2b2:	0028      	movs	r0, r5
 800c2b4:	f000 f8b2 	bl	800c41c <__swbuf_r>
 800c2b8:	3001      	adds	r0, #1
 800c2ba:	d1e2      	bne.n	800c282 <_fwrite_r+0x62>
 800c2bc:	e7ea      	b.n	800c294 <_fwrite_r+0x74>
	...

0800c2c0 <fwrite>:
 800c2c0:	b513      	push	{r0, r1, r4, lr}
 800c2c2:	4c04      	ldr	r4, [pc, #16]	; (800c2d4 <fwrite+0x14>)
 800c2c4:	9300      	str	r3, [sp, #0]
 800c2c6:	0013      	movs	r3, r2
 800c2c8:	000a      	movs	r2, r1
 800c2ca:	0001      	movs	r1, r0
 800c2cc:	6820      	ldr	r0, [r4, #0]
 800c2ce:	f7ff ffa7 	bl	800c220 <_fwrite_r>
 800c2d2:	bd16      	pop	{r1, r2, r4, pc}
 800c2d4:	2000006c 	.word	0x2000006c

0800c2d8 <_putc_r>:
 800c2d8:	b570      	push	{r4, r5, r6, lr}
 800c2da:	0006      	movs	r6, r0
 800c2dc:	000d      	movs	r5, r1
 800c2de:	0014      	movs	r4, r2
 800c2e0:	2800      	cmp	r0, #0
 800c2e2:	d004      	beq.n	800c2ee <_putc_r+0x16>
 800c2e4:	6a03      	ldr	r3, [r0, #32]
 800c2e6:	2b00      	cmp	r3, #0
 800c2e8:	d101      	bne.n	800c2ee <_putc_r+0x16>
 800c2ea:	f7ff fed5 	bl	800c098 <__sinit>
 800c2ee:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800c2f0:	07db      	lsls	r3, r3, #31
 800c2f2:	d405      	bmi.n	800c300 <_putc_r+0x28>
 800c2f4:	89a3      	ldrh	r3, [r4, #12]
 800c2f6:	059b      	lsls	r3, r3, #22
 800c2f8:	d402      	bmi.n	800c300 <_putc_r+0x28>
 800c2fa:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c2fc:	f000 fa43 	bl	800c786 <__retarget_lock_acquire_recursive>
 800c300:	68a3      	ldr	r3, [r4, #8]
 800c302:	3b01      	subs	r3, #1
 800c304:	60a3      	str	r3, [r4, #8]
 800c306:	2b00      	cmp	r3, #0
 800c308:	da05      	bge.n	800c316 <_putc_r+0x3e>
 800c30a:	69a2      	ldr	r2, [r4, #24]
 800c30c:	4293      	cmp	r3, r2
 800c30e:	db12      	blt.n	800c336 <_putc_r+0x5e>
 800c310:	b2eb      	uxtb	r3, r5
 800c312:	2b0a      	cmp	r3, #10
 800c314:	d00f      	beq.n	800c336 <_putc_r+0x5e>
 800c316:	6823      	ldr	r3, [r4, #0]
 800c318:	1c5a      	adds	r2, r3, #1
 800c31a:	6022      	str	r2, [r4, #0]
 800c31c:	701d      	strb	r5, [r3, #0]
 800c31e:	b2ed      	uxtb	r5, r5
 800c320:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800c322:	07db      	lsls	r3, r3, #31
 800c324:	d405      	bmi.n	800c332 <_putc_r+0x5a>
 800c326:	89a3      	ldrh	r3, [r4, #12]
 800c328:	059b      	lsls	r3, r3, #22
 800c32a:	d402      	bmi.n	800c332 <_putc_r+0x5a>
 800c32c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c32e:	f000 fa2b 	bl	800c788 <__retarget_lock_release_recursive>
 800c332:	0028      	movs	r0, r5
 800c334:	bd70      	pop	{r4, r5, r6, pc}
 800c336:	0029      	movs	r1, r5
 800c338:	0022      	movs	r2, r4
 800c33a:	0030      	movs	r0, r6
 800c33c:	f000 f86e 	bl	800c41c <__swbuf_r>
 800c340:	0005      	movs	r5, r0
 800c342:	e7ed      	b.n	800c320 <_putc_r+0x48>

0800c344 <siprintf>:
 800c344:	b40e      	push	{r1, r2, r3}
 800c346:	b500      	push	{lr}
 800c348:	490b      	ldr	r1, [pc, #44]	; (800c378 <siprintf+0x34>)
 800c34a:	b09c      	sub	sp, #112	; 0x70
 800c34c:	ab1d      	add	r3, sp, #116	; 0x74
 800c34e:	9002      	str	r0, [sp, #8]
 800c350:	9006      	str	r0, [sp, #24]
 800c352:	9107      	str	r1, [sp, #28]
 800c354:	9104      	str	r1, [sp, #16]
 800c356:	4809      	ldr	r0, [pc, #36]	; (800c37c <siprintf+0x38>)
 800c358:	4909      	ldr	r1, [pc, #36]	; (800c380 <siprintf+0x3c>)
 800c35a:	cb04      	ldmia	r3!, {r2}
 800c35c:	9105      	str	r1, [sp, #20]
 800c35e:	6800      	ldr	r0, [r0, #0]
 800c360:	a902      	add	r1, sp, #8
 800c362:	9301      	str	r3, [sp, #4]
 800c364:	f000 fada 	bl	800c91c <_svfiprintf_r>
 800c368:	2200      	movs	r2, #0
 800c36a:	9b02      	ldr	r3, [sp, #8]
 800c36c:	701a      	strb	r2, [r3, #0]
 800c36e:	b01c      	add	sp, #112	; 0x70
 800c370:	bc08      	pop	{r3}
 800c372:	b003      	add	sp, #12
 800c374:	4718      	bx	r3
 800c376:	46c0      	nop			; (mov r8, r8)
 800c378:	7fffffff 	.word	0x7fffffff
 800c37c:	2000006c 	.word	0x2000006c
 800c380:	ffff0208 	.word	0xffff0208

0800c384 <__sread>:
 800c384:	b570      	push	{r4, r5, r6, lr}
 800c386:	000c      	movs	r4, r1
 800c388:	250e      	movs	r5, #14
 800c38a:	5f49      	ldrsh	r1, [r1, r5]
 800c38c:	f000 f980 	bl	800c690 <_read_r>
 800c390:	2800      	cmp	r0, #0
 800c392:	db03      	blt.n	800c39c <__sread+0x18>
 800c394:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800c396:	181b      	adds	r3, r3, r0
 800c398:	6563      	str	r3, [r4, #84]	; 0x54
 800c39a:	bd70      	pop	{r4, r5, r6, pc}
 800c39c:	89a3      	ldrh	r3, [r4, #12]
 800c39e:	4a02      	ldr	r2, [pc, #8]	; (800c3a8 <__sread+0x24>)
 800c3a0:	4013      	ands	r3, r2
 800c3a2:	81a3      	strh	r3, [r4, #12]
 800c3a4:	e7f9      	b.n	800c39a <__sread+0x16>
 800c3a6:	46c0      	nop			; (mov r8, r8)
 800c3a8:	ffffefff 	.word	0xffffefff

0800c3ac <__swrite>:
 800c3ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c3ae:	001f      	movs	r7, r3
 800c3b0:	898b      	ldrh	r3, [r1, #12]
 800c3b2:	0005      	movs	r5, r0
 800c3b4:	000c      	movs	r4, r1
 800c3b6:	0016      	movs	r6, r2
 800c3b8:	05db      	lsls	r3, r3, #23
 800c3ba:	d505      	bpl.n	800c3c8 <__swrite+0x1c>
 800c3bc:	230e      	movs	r3, #14
 800c3be:	5ec9      	ldrsh	r1, [r1, r3]
 800c3c0:	2200      	movs	r2, #0
 800c3c2:	2302      	movs	r3, #2
 800c3c4:	f000 f950 	bl	800c668 <_lseek_r>
 800c3c8:	89a3      	ldrh	r3, [r4, #12]
 800c3ca:	4a05      	ldr	r2, [pc, #20]	; (800c3e0 <__swrite+0x34>)
 800c3cc:	0028      	movs	r0, r5
 800c3ce:	4013      	ands	r3, r2
 800c3d0:	81a3      	strh	r3, [r4, #12]
 800c3d2:	0032      	movs	r2, r6
 800c3d4:	230e      	movs	r3, #14
 800c3d6:	5ee1      	ldrsh	r1, [r4, r3]
 800c3d8:	003b      	movs	r3, r7
 800c3da:	f000 f995 	bl	800c708 <_write_r>
 800c3de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c3e0:	ffffefff 	.word	0xffffefff

0800c3e4 <__sseek>:
 800c3e4:	b570      	push	{r4, r5, r6, lr}
 800c3e6:	000c      	movs	r4, r1
 800c3e8:	250e      	movs	r5, #14
 800c3ea:	5f49      	ldrsh	r1, [r1, r5]
 800c3ec:	f000 f93c 	bl	800c668 <_lseek_r>
 800c3f0:	89a3      	ldrh	r3, [r4, #12]
 800c3f2:	1c42      	adds	r2, r0, #1
 800c3f4:	d103      	bne.n	800c3fe <__sseek+0x1a>
 800c3f6:	4a05      	ldr	r2, [pc, #20]	; (800c40c <__sseek+0x28>)
 800c3f8:	4013      	ands	r3, r2
 800c3fa:	81a3      	strh	r3, [r4, #12]
 800c3fc:	bd70      	pop	{r4, r5, r6, pc}
 800c3fe:	2280      	movs	r2, #128	; 0x80
 800c400:	0152      	lsls	r2, r2, #5
 800c402:	4313      	orrs	r3, r2
 800c404:	81a3      	strh	r3, [r4, #12]
 800c406:	6560      	str	r0, [r4, #84]	; 0x54
 800c408:	e7f8      	b.n	800c3fc <__sseek+0x18>
 800c40a:	46c0      	nop			; (mov r8, r8)
 800c40c:	ffffefff 	.word	0xffffefff

0800c410 <__sclose>:
 800c410:	b510      	push	{r4, lr}
 800c412:	230e      	movs	r3, #14
 800c414:	5ec9      	ldrsh	r1, [r1, r3]
 800c416:	f000 f915 	bl	800c644 <_close_r>
 800c41a:	bd10      	pop	{r4, pc}

0800c41c <__swbuf_r>:
 800c41c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c41e:	0006      	movs	r6, r0
 800c420:	000d      	movs	r5, r1
 800c422:	0014      	movs	r4, r2
 800c424:	2800      	cmp	r0, #0
 800c426:	d004      	beq.n	800c432 <__swbuf_r+0x16>
 800c428:	6a03      	ldr	r3, [r0, #32]
 800c42a:	2b00      	cmp	r3, #0
 800c42c:	d101      	bne.n	800c432 <__swbuf_r+0x16>
 800c42e:	f7ff fe33 	bl	800c098 <__sinit>
 800c432:	69a3      	ldr	r3, [r4, #24]
 800c434:	60a3      	str	r3, [r4, #8]
 800c436:	89a3      	ldrh	r3, [r4, #12]
 800c438:	071b      	lsls	r3, r3, #28
 800c43a:	d528      	bpl.n	800c48e <__swbuf_r+0x72>
 800c43c:	6923      	ldr	r3, [r4, #16]
 800c43e:	2b00      	cmp	r3, #0
 800c440:	d025      	beq.n	800c48e <__swbuf_r+0x72>
 800c442:	6923      	ldr	r3, [r4, #16]
 800c444:	6820      	ldr	r0, [r4, #0]
 800c446:	b2ef      	uxtb	r7, r5
 800c448:	1ac0      	subs	r0, r0, r3
 800c44a:	6963      	ldr	r3, [r4, #20]
 800c44c:	b2ed      	uxtb	r5, r5
 800c44e:	4283      	cmp	r3, r0
 800c450:	dc05      	bgt.n	800c45e <__swbuf_r+0x42>
 800c452:	0021      	movs	r1, r4
 800c454:	0030      	movs	r0, r6
 800c456:	f000 fd6b 	bl	800cf30 <_fflush_r>
 800c45a:	2800      	cmp	r0, #0
 800c45c:	d11d      	bne.n	800c49a <__swbuf_r+0x7e>
 800c45e:	68a3      	ldr	r3, [r4, #8]
 800c460:	3001      	adds	r0, #1
 800c462:	3b01      	subs	r3, #1
 800c464:	60a3      	str	r3, [r4, #8]
 800c466:	6823      	ldr	r3, [r4, #0]
 800c468:	1c5a      	adds	r2, r3, #1
 800c46a:	6022      	str	r2, [r4, #0]
 800c46c:	701f      	strb	r7, [r3, #0]
 800c46e:	6963      	ldr	r3, [r4, #20]
 800c470:	4283      	cmp	r3, r0
 800c472:	d004      	beq.n	800c47e <__swbuf_r+0x62>
 800c474:	89a3      	ldrh	r3, [r4, #12]
 800c476:	07db      	lsls	r3, r3, #31
 800c478:	d507      	bpl.n	800c48a <__swbuf_r+0x6e>
 800c47a:	2d0a      	cmp	r5, #10
 800c47c:	d105      	bne.n	800c48a <__swbuf_r+0x6e>
 800c47e:	0021      	movs	r1, r4
 800c480:	0030      	movs	r0, r6
 800c482:	f000 fd55 	bl	800cf30 <_fflush_r>
 800c486:	2800      	cmp	r0, #0
 800c488:	d107      	bne.n	800c49a <__swbuf_r+0x7e>
 800c48a:	0028      	movs	r0, r5
 800c48c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c48e:	0021      	movs	r1, r4
 800c490:	0030      	movs	r0, r6
 800c492:	f000 f805 	bl	800c4a0 <__swsetup_r>
 800c496:	2800      	cmp	r0, #0
 800c498:	d0d3      	beq.n	800c442 <__swbuf_r+0x26>
 800c49a:	2501      	movs	r5, #1
 800c49c:	426d      	negs	r5, r5
 800c49e:	e7f4      	b.n	800c48a <__swbuf_r+0x6e>

0800c4a0 <__swsetup_r>:
 800c4a0:	4b30      	ldr	r3, [pc, #192]	; (800c564 <__swsetup_r+0xc4>)
 800c4a2:	b570      	push	{r4, r5, r6, lr}
 800c4a4:	0005      	movs	r5, r0
 800c4a6:	6818      	ldr	r0, [r3, #0]
 800c4a8:	000c      	movs	r4, r1
 800c4aa:	2800      	cmp	r0, #0
 800c4ac:	d004      	beq.n	800c4b8 <__swsetup_r+0x18>
 800c4ae:	6a03      	ldr	r3, [r0, #32]
 800c4b0:	2b00      	cmp	r3, #0
 800c4b2:	d101      	bne.n	800c4b8 <__swsetup_r+0x18>
 800c4b4:	f7ff fdf0 	bl	800c098 <__sinit>
 800c4b8:	230c      	movs	r3, #12
 800c4ba:	5ee2      	ldrsh	r2, [r4, r3]
 800c4bc:	b293      	uxth	r3, r2
 800c4be:	0711      	lsls	r1, r2, #28
 800c4c0:	d423      	bmi.n	800c50a <__swsetup_r+0x6a>
 800c4c2:	06d9      	lsls	r1, r3, #27
 800c4c4:	d407      	bmi.n	800c4d6 <__swsetup_r+0x36>
 800c4c6:	2309      	movs	r3, #9
 800c4c8:	2001      	movs	r0, #1
 800c4ca:	602b      	str	r3, [r5, #0]
 800c4cc:	3337      	adds	r3, #55	; 0x37
 800c4ce:	4313      	orrs	r3, r2
 800c4d0:	81a3      	strh	r3, [r4, #12]
 800c4d2:	4240      	negs	r0, r0
 800c4d4:	bd70      	pop	{r4, r5, r6, pc}
 800c4d6:	075b      	lsls	r3, r3, #29
 800c4d8:	d513      	bpl.n	800c502 <__swsetup_r+0x62>
 800c4da:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800c4dc:	2900      	cmp	r1, #0
 800c4de:	d008      	beq.n	800c4f2 <__swsetup_r+0x52>
 800c4e0:	0023      	movs	r3, r4
 800c4e2:	3344      	adds	r3, #68	; 0x44
 800c4e4:	4299      	cmp	r1, r3
 800c4e6:	d002      	beq.n	800c4ee <__swsetup_r+0x4e>
 800c4e8:	0028      	movs	r0, r5
 800c4ea:	f000 f963 	bl	800c7b4 <_free_r>
 800c4ee:	2300      	movs	r3, #0
 800c4f0:	6363      	str	r3, [r4, #52]	; 0x34
 800c4f2:	2224      	movs	r2, #36	; 0x24
 800c4f4:	89a3      	ldrh	r3, [r4, #12]
 800c4f6:	4393      	bics	r3, r2
 800c4f8:	81a3      	strh	r3, [r4, #12]
 800c4fa:	2300      	movs	r3, #0
 800c4fc:	6063      	str	r3, [r4, #4]
 800c4fe:	6923      	ldr	r3, [r4, #16]
 800c500:	6023      	str	r3, [r4, #0]
 800c502:	2308      	movs	r3, #8
 800c504:	89a2      	ldrh	r2, [r4, #12]
 800c506:	4313      	orrs	r3, r2
 800c508:	81a3      	strh	r3, [r4, #12]
 800c50a:	6923      	ldr	r3, [r4, #16]
 800c50c:	2b00      	cmp	r3, #0
 800c50e:	d10b      	bne.n	800c528 <__swsetup_r+0x88>
 800c510:	21a0      	movs	r1, #160	; 0xa0
 800c512:	2280      	movs	r2, #128	; 0x80
 800c514:	89a3      	ldrh	r3, [r4, #12]
 800c516:	0089      	lsls	r1, r1, #2
 800c518:	0092      	lsls	r2, r2, #2
 800c51a:	400b      	ands	r3, r1
 800c51c:	4293      	cmp	r3, r2
 800c51e:	d003      	beq.n	800c528 <__swsetup_r+0x88>
 800c520:	0021      	movs	r1, r4
 800c522:	0028      	movs	r0, r5
 800c524:	f000 fd58 	bl	800cfd8 <__smakebuf_r>
 800c528:	220c      	movs	r2, #12
 800c52a:	5ea3      	ldrsh	r3, [r4, r2]
 800c52c:	2001      	movs	r0, #1
 800c52e:	001a      	movs	r2, r3
 800c530:	b299      	uxth	r1, r3
 800c532:	4002      	ands	r2, r0
 800c534:	4203      	tst	r3, r0
 800c536:	d00f      	beq.n	800c558 <__swsetup_r+0xb8>
 800c538:	2200      	movs	r2, #0
 800c53a:	60a2      	str	r2, [r4, #8]
 800c53c:	6962      	ldr	r2, [r4, #20]
 800c53e:	4252      	negs	r2, r2
 800c540:	61a2      	str	r2, [r4, #24]
 800c542:	2000      	movs	r0, #0
 800c544:	6922      	ldr	r2, [r4, #16]
 800c546:	4282      	cmp	r2, r0
 800c548:	d1c4      	bne.n	800c4d4 <__swsetup_r+0x34>
 800c54a:	0609      	lsls	r1, r1, #24
 800c54c:	d5c2      	bpl.n	800c4d4 <__swsetup_r+0x34>
 800c54e:	2240      	movs	r2, #64	; 0x40
 800c550:	4313      	orrs	r3, r2
 800c552:	81a3      	strh	r3, [r4, #12]
 800c554:	3801      	subs	r0, #1
 800c556:	e7bd      	b.n	800c4d4 <__swsetup_r+0x34>
 800c558:	0788      	lsls	r0, r1, #30
 800c55a:	d400      	bmi.n	800c55e <__swsetup_r+0xbe>
 800c55c:	6962      	ldr	r2, [r4, #20]
 800c55e:	60a2      	str	r2, [r4, #8]
 800c560:	e7ef      	b.n	800c542 <__swsetup_r+0xa2>
 800c562:	46c0      	nop			; (mov r8, r8)
 800c564:	2000006c 	.word	0x2000006c

0800c568 <memcmp>:
 800c568:	b530      	push	{r4, r5, lr}
 800c56a:	2400      	movs	r4, #0
 800c56c:	3901      	subs	r1, #1
 800c56e:	42a2      	cmp	r2, r4
 800c570:	d101      	bne.n	800c576 <memcmp+0xe>
 800c572:	2000      	movs	r0, #0
 800c574:	e005      	b.n	800c582 <memcmp+0x1a>
 800c576:	5d03      	ldrb	r3, [r0, r4]
 800c578:	3401      	adds	r4, #1
 800c57a:	5d0d      	ldrb	r5, [r1, r4]
 800c57c:	42ab      	cmp	r3, r5
 800c57e:	d0f6      	beq.n	800c56e <memcmp+0x6>
 800c580:	1b58      	subs	r0, r3, r5
 800c582:	bd30      	pop	{r4, r5, pc}

0800c584 <memmove>:
 800c584:	b510      	push	{r4, lr}
 800c586:	4288      	cmp	r0, r1
 800c588:	d902      	bls.n	800c590 <memmove+0xc>
 800c58a:	188b      	adds	r3, r1, r2
 800c58c:	4298      	cmp	r0, r3
 800c58e:	d303      	bcc.n	800c598 <memmove+0x14>
 800c590:	2300      	movs	r3, #0
 800c592:	e007      	b.n	800c5a4 <memmove+0x20>
 800c594:	5c8b      	ldrb	r3, [r1, r2]
 800c596:	5483      	strb	r3, [r0, r2]
 800c598:	3a01      	subs	r2, #1
 800c59a:	d2fb      	bcs.n	800c594 <memmove+0x10>
 800c59c:	bd10      	pop	{r4, pc}
 800c59e:	5ccc      	ldrb	r4, [r1, r3]
 800c5a0:	54c4      	strb	r4, [r0, r3]
 800c5a2:	3301      	adds	r3, #1
 800c5a4:	429a      	cmp	r2, r3
 800c5a6:	d1fa      	bne.n	800c59e <memmove+0x1a>
 800c5a8:	e7f8      	b.n	800c59c <memmove+0x18>

0800c5aa <memset>:
 800c5aa:	0003      	movs	r3, r0
 800c5ac:	1882      	adds	r2, r0, r2
 800c5ae:	4293      	cmp	r3, r2
 800c5b0:	d100      	bne.n	800c5b4 <memset+0xa>
 800c5b2:	4770      	bx	lr
 800c5b4:	7019      	strb	r1, [r3, #0]
 800c5b6:	3301      	adds	r3, #1
 800c5b8:	e7f9      	b.n	800c5ae <memset+0x4>

0800c5ba <strncmp>:
 800c5ba:	b530      	push	{r4, r5, lr}
 800c5bc:	0005      	movs	r5, r0
 800c5be:	1e10      	subs	r0, r2, #0
 800c5c0:	d00b      	beq.n	800c5da <strncmp+0x20>
 800c5c2:	2400      	movs	r4, #0
 800c5c4:	3a01      	subs	r2, #1
 800c5c6:	5d2b      	ldrb	r3, [r5, r4]
 800c5c8:	5d08      	ldrb	r0, [r1, r4]
 800c5ca:	4283      	cmp	r3, r0
 800c5cc:	d104      	bne.n	800c5d8 <strncmp+0x1e>
 800c5ce:	42a2      	cmp	r2, r4
 800c5d0:	d002      	beq.n	800c5d8 <strncmp+0x1e>
 800c5d2:	3401      	adds	r4, #1
 800c5d4:	2b00      	cmp	r3, #0
 800c5d6:	d1f6      	bne.n	800c5c6 <strncmp+0xc>
 800c5d8:	1a18      	subs	r0, r3, r0
 800c5da:	bd30      	pop	{r4, r5, pc}

0800c5dc <_raise_r>:
 800c5dc:	b570      	push	{r4, r5, r6, lr}
 800c5de:	0004      	movs	r4, r0
 800c5e0:	000d      	movs	r5, r1
 800c5e2:	291f      	cmp	r1, #31
 800c5e4:	d904      	bls.n	800c5f0 <_raise_r+0x14>
 800c5e6:	2316      	movs	r3, #22
 800c5e8:	6003      	str	r3, [r0, #0]
 800c5ea:	2001      	movs	r0, #1
 800c5ec:	4240      	negs	r0, r0
 800c5ee:	bd70      	pop	{r4, r5, r6, pc}
 800c5f0:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800c5f2:	2b00      	cmp	r3, #0
 800c5f4:	d004      	beq.n	800c600 <_raise_r+0x24>
 800c5f6:	008a      	lsls	r2, r1, #2
 800c5f8:	189b      	adds	r3, r3, r2
 800c5fa:	681a      	ldr	r2, [r3, #0]
 800c5fc:	2a00      	cmp	r2, #0
 800c5fe:	d108      	bne.n	800c612 <_raise_r+0x36>
 800c600:	0020      	movs	r0, r4
 800c602:	f000 f86b 	bl	800c6dc <_getpid_r>
 800c606:	002a      	movs	r2, r5
 800c608:	0001      	movs	r1, r0
 800c60a:	0020      	movs	r0, r4
 800c60c:	f000 f854 	bl	800c6b8 <_kill_r>
 800c610:	e7ed      	b.n	800c5ee <_raise_r+0x12>
 800c612:	2000      	movs	r0, #0
 800c614:	2a01      	cmp	r2, #1
 800c616:	d0ea      	beq.n	800c5ee <_raise_r+0x12>
 800c618:	1c51      	adds	r1, r2, #1
 800c61a:	d103      	bne.n	800c624 <_raise_r+0x48>
 800c61c:	2316      	movs	r3, #22
 800c61e:	3001      	adds	r0, #1
 800c620:	6023      	str	r3, [r4, #0]
 800c622:	e7e4      	b.n	800c5ee <_raise_r+0x12>
 800c624:	2400      	movs	r4, #0
 800c626:	0028      	movs	r0, r5
 800c628:	601c      	str	r4, [r3, #0]
 800c62a:	4790      	blx	r2
 800c62c:	0020      	movs	r0, r4
 800c62e:	e7de      	b.n	800c5ee <_raise_r+0x12>

0800c630 <raise>:
 800c630:	b510      	push	{r4, lr}
 800c632:	4b03      	ldr	r3, [pc, #12]	; (800c640 <raise+0x10>)
 800c634:	0001      	movs	r1, r0
 800c636:	6818      	ldr	r0, [r3, #0]
 800c638:	f7ff ffd0 	bl	800c5dc <_raise_r>
 800c63c:	bd10      	pop	{r4, pc}
 800c63e:	46c0      	nop			; (mov r8, r8)
 800c640:	2000006c 	.word	0x2000006c

0800c644 <_close_r>:
 800c644:	2300      	movs	r3, #0
 800c646:	b570      	push	{r4, r5, r6, lr}
 800c648:	4d06      	ldr	r5, [pc, #24]	; (800c664 <_close_r+0x20>)
 800c64a:	0004      	movs	r4, r0
 800c64c:	0008      	movs	r0, r1
 800c64e:	602b      	str	r3, [r5, #0]
 800c650:	f7fc fa48 	bl	8008ae4 <_close>
 800c654:	1c43      	adds	r3, r0, #1
 800c656:	d103      	bne.n	800c660 <_close_r+0x1c>
 800c658:	682b      	ldr	r3, [r5, #0]
 800c65a:	2b00      	cmp	r3, #0
 800c65c:	d000      	beq.n	800c660 <_close_r+0x1c>
 800c65e:	6023      	str	r3, [r4, #0]
 800c660:	bd70      	pop	{r4, r5, r6, pc}
 800c662:	46c0      	nop			; (mov r8, r8)
 800c664:	20000758 	.word	0x20000758

0800c668 <_lseek_r>:
 800c668:	b570      	push	{r4, r5, r6, lr}
 800c66a:	0004      	movs	r4, r0
 800c66c:	0008      	movs	r0, r1
 800c66e:	0011      	movs	r1, r2
 800c670:	001a      	movs	r2, r3
 800c672:	2300      	movs	r3, #0
 800c674:	4d05      	ldr	r5, [pc, #20]	; (800c68c <_lseek_r+0x24>)
 800c676:	602b      	str	r3, [r5, #0]
 800c678:	f7fc fa3e 	bl	8008af8 <_lseek>
 800c67c:	1c43      	adds	r3, r0, #1
 800c67e:	d103      	bne.n	800c688 <_lseek_r+0x20>
 800c680:	682b      	ldr	r3, [r5, #0]
 800c682:	2b00      	cmp	r3, #0
 800c684:	d000      	beq.n	800c688 <_lseek_r+0x20>
 800c686:	6023      	str	r3, [r4, #0]
 800c688:	bd70      	pop	{r4, r5, r6, pc}
 800c68a:	46c0      	nop			; (mov r8, r8)
 800c68c:	20000758 	.word	0x20000758

0800c690 <_read_r>:
 800c690:	b570      	push	{r4, r5, r6, lr}
 800c692:	0004      	movs	r4, r0
 800c694:	0008      	movs	r0, r1
 800c696:	0011      	movs	r1, r2
 800c698:	001a      	movs	r2, r3
 800c69a:	2300      	movs	r3, #0
 800c69c:	4d05      	ldr	r5, [pc, #20]	; (800c6b4 <_read_r+0x24>)
 800c69e:	602b      	str	r3, [r5, #0]
 800c6a0:	f7fc fa06 	bl	8008ab0 <_read>
 800c6a4:	1c43      	adds	r3, r0, #1
 800c6a6:	d103      	bne.n	800c6b0 <_read_r+0x20>
 800c6a8:	682b      	ldr	r3, [r5, #0]
 800c6aa:	2b00      	cmp	r3, #0
 800c6ac:	d000      	beq.n	800c6b0 <_read_r+0x20>
 800c6ae:	6023      	str	r3, [r4, #0]
 800c6b0:	bd70      	pop	{r4, r5, r6, pc}
 800c6b2:	46c0      	nop			; (mov r8, r8)
 800c6b4:	20000758 	.word	0x20000758

0800c6b8 <_kill_r>:
 800c6b8:	2300      	movs	r3, #0
 800c6ba:	b570      	push	{r4, r5, r6, lr}
 800c6bc:	4d06      	ldr	r5, [pc, #24]	; (800c6d8 <_kill_r+0x20>)
 800c6be:	0004      	movs	r4, r0
 800c6c0:	0008      	movs	r0, r1
 800c6c2:	0011      	movs	r1, r2
 800c6c4:	602b      	str	r3, [r5, #0]
 800c6c6:	f7fc f9e5 	bl	8008a94 <_kill>
 800c6ca:	1c43      	adds	r3, r0, #1
 800c6cc:	d103      	bne.n	800c6d6 <_kill_r+0x1e>
 800c6ce:	682b      	ldr	r3, [r5, #0]
 800c6d0:	2b00      	cmp	r3, #0
 800c6d2:	d000      	beq.n	800c6d6 <_kill_r+0x1e>
 800c6d4:	6023      	str	r3, [r4, #0]
 800c6d6:	bd70      	pop	{r4, r5, r6, pc}
 800c6d8:	20000758 	.word	0x20000758

0800c6dc <_getpid_r>:
 800c6dc:	b510      	push	{r4, lr}
 800c6de:	f7fc f9d7 	bl	8008a90 <_getpid>
 800c6e2:	bd10      	pop	{r4, pc}

0800c6e4 <_sbrk_r>:
 800c6e4:	2300      	movs	r3, #0
 800c6e6:	b570      	push	{r4, r5, r6, lr}
 800c6e8:	4d06      	ldr	r5, [pc, #24]	; (800c704 <_sbrk_r+0x20>)
 800c6ea:	0004      	movs	r4, r0
 800c6ec:	0008      	movs	r0, r1
 800c6ee:	602b      	str	r3, [r5, #0]
 800c6f0:	f7fc fa04 	bl	8008afc <_sbrk>
 800c6f4:	1c43      	adds	r3, r0, #1
 800c6f6:	d103      	bne.n	800c700 <_sbrk_r+0x1c>
 800c6f8:	682b      	ldr	r3, [r5, #0]
 800c6fa:	2b00      	cmp	r3, #0
 800c6fc:	d000      	beq.n	800c700 <_sbrk_r+0x1c>
 800c6fe:	6023      	str	r3, [r4, #0]
 800c700:	bd70      	pop	{r4, r5, r6, pc}
 800c702:	46c0      	nop			; (mov r8, r8)
 800c704:	20000758 	.word	0x20000758

0800c708 <_write_r>:
 800c708:	b570      	push	{r4, r5, r6, lr}
 800c70a:	0004      	movs	r4, r0
 800c70c:	0008      	movs	r0, r1
 800c70e:	0011      	movs	r1, r2
 800c710:	001a      	movs	r2, r3
 800c712:	2300      	movs	r3, #0
 800c714:	4d05      	ldr	r5, [pc, #20]	; (800c72c <_write_r+0x24>)
 800c716:	602b      	str	r3, [r5, #0]
 800c718:	f7fc f9d7 	bl	8008aca <_write>
 800c71c:	1c43      	adds	r3, r0, #1
 800c71e:	d103      	bne.n	800c728 <_write_r+0x20>
 800c720:	682b      	ldr	r3, [r5, #0]
 800c722:	2b00      	cmp	r3, #0
 800c724:	d000      	beq.n	800c728 <_write_r+0x20>
 800c726:	6023      	str	r3, [r4, #0]
 800c728:	bd70      	pop	{r4, r5, r6, pc}
 800c72a:	46c0      	nop			; (mov r8, r8)
 800c72c:	20000758 	.word	0x20000758

0800c730 <__errno>:
 800c730:	4b01      	ldr	r3, [pc, #4]	; (800c738 <__errno+0x8>)
 800c732:	6818      	ldr	r0, [r3, #0]
 800c734:	4770      	bx	lr
 800c736:	46c0      	nop			; (mov r8, r8)
 800c738:	2000006c 	.word	0x2000006c

0800c73c <__libc_init_array>:
 800c73c:	b570      	push	{r4, r5, r6, lr}
 800c73e:	2600      	movs	r6, #0
 800c740:	4c0c      	ldr	r4, [pc, #48]	; (800c774 <__libc_init_array+0x38>)
 800c742:	4d0d      	ldr	r5, [pc, #52]	; (800c778 <__libc_init_array+0x3c>)
 800c744:	1b64      	subs	r4, r4, r5
 800c746:	10a4      	asrs	r4, r4, #2
 800c748:	42a6      	cmp	r6, r4
 800c74a:	d109      	bne.n	800c760 <__libc_init_array+0x24>
 800c74c:	2600      	movs	r6, #0
 800c74e:	f000 fcab 	bl	800d0a8 <_init>
 800c752:	4c0a      	ldr	r4, [pc, #40]	; (800c77c <__libc_init_array+0x40>)
 800c754:	4d0a      	ldr	r5, [pc, #40]	; (800c780 <__libc_init_array+0x44>)
 800c756:	1b64      	subs	r4, r4, r5
 800c758:	10a4      	asrs	r4, r4, #2
 800c75a:	42a6      	cmp	r6, r4
 800c75c:	d105      	bne.n	800c76a <__libc_init_array+0x2e>
 800c75e:	bd70      	pop	{r4, r5, r6, pc}
 800c760:	00b3      	lsls	r3, r6, #2
 800c762:	58eb      	ldr	r3, [r5, r3]
 800c764:	4798      	blx	r3
 800c766:	3601      	adds	r6, #1
 800c768:	e7ee      	b.n	800c748 <__libc_init_array+0xc>
 800c76a:	00b3      	lsls	r3, r6, #2
 800c76c:	58eb      	ldr	r3, [r5, r3]
 800c76e:	4798      	blx	r3
 800c770:	3601      	adds	r6, #1
 800c772:	e7f2      	b.n	800c75a <__libc_init_array+0x1e>
 800c774:	080107d8 	.word	0x080107d8
 800c778:	080107d8 	.word	0x080107d8
 800c77c:	080107ec 	.word	0x080107ec
 800c780:	080107d8 	.word	0x080107d8

0800c784 <__retarget_lock_init_recursive>:
 800c784:	4770      	bx	lr

0800c786 <__retarget_lock_acquire_recursive>:
 800c786:	4770      	bx	lr

0800c788 <__retarget_lock_release_recursive>:
 800c788:	4770      	bx	lr

0800c78a <memchr>:
 800c78a:	b2c9      	uxtb	r1, r1
 800c78c:	1882      	adds	r2, r0, r2
 800c78e:	4290      	cmp	r0, r2
 800c790:	d101      	bne.n	800c796 <memchr+0xc>
 800c792:	2000      	movs	r0, #0
 800c794:	4770      	bx	lr
 800c796:	7803      	ldrb	r3, [r0, #0]
 800c798:	428b      	cmp	r3, r1
 800c79a:	d0fb      	beq.n	800c794 <memchr+0xa>
 800c79c:	3001      	adds	r0, #1
 800c79e:	e7f6      	b.n	800c78e <memchr+0x4>

0800c7a0 <memcpy>:
 800c7a0:	2300      	movs	r3, #0
 800c7a2:	b510      	push	{r4, lr}
 800c7a4:	429a      	cmp	r2, r3
 800c7a6:	d100      	bne.n	800c7aa <memcpy+0xa>
 800c7a8:	bd10      	pop	{r4, pc}
 800c7aa:	5ccc      	ldrb	r4, [r1, r3]
 800c7ac:	54c4      	strb	r4, [r0, r3]
 800c7ae:	3301      	adds	r3, #1
 800c7b0:	e7f8      	b.n	800c7a4 <memcpy+0x4>
	...

0800c7b4 <_free_r>:
 800c7b4:	b570      	push	{r4, r5, r6, lr}
 800c7b6:	0005      	movs	r5, r0
 800c7b8:	2900      	cmp	r1, #0
 800c7ba:	d010      	beq.n	800c7de <_free_r+0x2a>
 800c7bc:	1f0c      	subs	r4, r1, #4
 800c7be:	6823      	ldr	r3, [r4, #0]
 800c7c0:	2b00      	cmp	r3, #0
 800c7c2:	da00      	bge.n	800c7c6 <_free_r+0x12>
 800c7c4:	18e4      	adds	r4, r4, r3
 800c7c6:	0028      	movs	r0, r5
 800c7c8:	f7ff fb8c 	bl	800bee4 <__malloc_lock>
 800c7cc:	4a1d      	ldr	r2, [pc, #116]	; (800c844 <_free_r+0x90>)
 800c7ce:	6813      	ldr	r3, [r2, #0]
 800c7d0:	2b00      	cmp	r3, #0
 800c7d2:	d105      	bne.n	800c7e0 <_free_r+0x2c>
 800c7d4:	6063      	str	r3, [r4, #4]
 800c7d6:	6014      	str	r4, [r2, #0]
 800c7d8:	0028      	movs	r0, r5
 800c7da:	f7ff fb8b 	bl	800bef4 <__malloc_unlock>
 800c7de:	bd70      	pop	{r4, r5, r6, pc}
 800c7e0:	42a3      	cmp	r3, r4
 800c7e2:	d908      	bls.n	800c7f6 <_free_r+0x42>
 800c7e4:	6820      	ldr	r0, [r4, #0]
 800c7e6:	1821      	adds	r1, r4, r0
 800c7e8:	428b      	cmp	r3, r1
 800c7ea:	d1f3      	bne.n	800c7d4 <_free_r+0x20>
 800c7ec:	6819      	ldr	r1, [r3, #0]
 800c7ee:	685b      	ldr	r3, [r3, #4]
 800c7f0:	1809      	adds	r1, r1, r0
 800c7f2:	6021      	str	r1, [r4, #0]
 800c7f4:	e7ee      	b.n	800c7d4 <_free_r+0x20>
 800c7f6:	001a      	movs	r2, r3
 800c7f8:	685b      	ldr	r3, [r3, #4]
 800c7fa:	2b00      	cmp	r3, #0
 800c7fc:	d001      	beq.n	800c802 <_free_r+0x4e>
 800c7fe:	42a3      	cmp	r3, r4
 800c800:	d9f9      	bls.n	800c7f6 <_free_r+0x42>
 800c802:	6811      	ldr	r1, [r2, #0]
 800c804:	1850      	adds	r0, r2, r1
 800c806:	42a0      	cmp	r0, r4
 800c808:	d10b      	bne.n	800c822 <_free_r+0x6e>
 800c80a:	6820      	ldr	r0, [r4, #0]
 800c80c:	1809      	adds	r1, r1, r0
 800c80e:	1850      	adds	r0, r2, r1
 800c810:	6011      	str	r1, [r2, #0]
 800c812:	4283      	cmp	r3, r0
 800c814:	d1e0      	bne.n	800c7d8 <_free_r+0x24>
 800c816:	6818      	ldr	r0, [r3, #0]
 800c818:	685b      	ldr	r3, [r3, #4]
 800c81a:	1841      	adds	r1, r0, r1
 800c81c:	6011      	str	r1, [r2, #0]
 800c81e:	6053      	str	r3, [r2, #4]
 800c820:	e7da      	b.n	800c7d8 <_free_r+0x24>
 800c822:	42a0      	cmp	r0, r4
 800c824:	d902      	bls.n	800c82c <_free_r+0x78>
 800c826:	230c      	movs	r3, #12
 800c828:	602b      	str	r3, [r5, #0]
 800c82a:	e7d5      	b.n	800c7d8 <_free_r+0x24>
 800c82c:	6820      	ldr	r0, [r4, #0]
 800c82e:	1821      	adds	r1, r4, r0
 800c830:	428b      	cmp	r3, r1
 800c832:	d103      	bne.n	800c83c <_free_r+0x88>
 800c834:	6819      	ldr	r1, [r3, #0]
 800c836:	685b      	ldr	r3, [r3, #4]
 800c838:	1809      	adds	r1, r1, r0
 800c83a:	6021      	str	r1, [r4, #0]
 800c83c:	6063      	str	r3, [r4, #4]
 800c83e:	6054      	str	r4, [r2, #4]
 800c840:	e7ca      	b.n	800c7d8 <_free_r+0x24>
 800c842:	46c0      	nop			; (mov r8, r8)
 800c844:	20000614 	.word	0x20000614

0800c848 <_malloc_usable_size_r>:
 800c848:	1f0b      	subs	r3, r1, #4
 800c84a:	681b      	ldr	r3, [r3, #0]
 800c84c:	1f18      	subs	r0, r3, #4
 800c84e:	2b00      	cmp	r3, #0
 800c850:	da01      	bge.n	800c856 <_malloc_usable_size_r+0xe>
 800c852:	580b      	ldr	r3, [r1, r0]
 800c854:	18c0      	adds	r0, r0, r3
 800c856:	4770      	bx	lr

0800c858 <__ssputs_r>:
 800c858:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c85a:	b085      	sub	sp, #20
 800c85c:	9301      	str	r3, [sp, #4]
 800c85e:	9203      	str	r2, [sp, #12]
 800c860:	688e      	ldr	r6, [r1, #8]
 800c862:	9a01      	ldr	r2, [sp, #4]
 800c864:	0007      	movs	r7, r0
 800c866:	000c      	movs	r4, r1
 800c868:	680b      	ldr	r3, [r1, #0]
 800c86a:	4296      	cmp	r6, r2
 800c86c:	d831      	bhi.n	800c8d2 <__ssputs_r+0x7a>
 800c86e:	898a      	ldrh	r2, [r1, #12]
 800c870:	2190      	movs	r1, #144	; 0x90
 800c872:	00c9      	lsls	r1, r1, #3
 800c874:	420a      	tst	r2, r1
 800c876:	d029      	beq.n	800c8cc <__ssputs_r+0x74>
 800c878:	2003      	movs	r0, #3
 800c87a:	6921      	ldr	r1, [r4, #16]
 800c87c:	1a5b      	subs	r3, r3, r1
 800c87e:	9302      	str	r3, [sp, #8]
 800c880:	6963      	ldr	r3, [r4, #20]
 800c882:	4343      	muls	r3, r0
 800c884:	0fdd      	lsrs	r5, r3, #31
 800c886:	18ed      	adds	r5, r5, r3
 800c888:	9b01      	ldr	r3, [sp, #4]
 800c88a:	9802      	ldr	r0, [sp, #8]
 800c88c:	3301      	adds	r3, #1
 800c88e:	181b      	adds	r3, r3, r0
 800c890:	106d      	asrs	r5, r5, #1
 800c892:	42ab      	cmp	r3, r5
 800c894:	d900      	bls.n	800c898 <__ssputs_r+0x40>
 800c896:	001d      	movs	r5, r3
 800c898:	0552      	lsls	r2, r2, #21
 800c89a:	d529      	bpl.n	800c8f0 <__ssputs_r+0x98>
 800c89c:	0029      	movs	r1, r5
 800c89e:	0038      	movs	r0, r7
 800c8a0:	f7ff fa9e 	bl	800bde0 <_malloc_r>
 800c8a4:	1e06      	subs	r6, r0, #0
 800c8a6:	d02d      	beq.n	800c904 <__ssputs_r+0xac>
 800c8a8:	9a02      	ldr	r2, [sp, #8]
 800c8aa:	6921      	ldr	r1, [r4, #16]
 800c8ac:	f7ff ff78 	bl	800c7a0 <memcpy>
 800c8b0:	89a2      	ldrh	r2, [r4, #12]
 800c8b2:	4b19      	ldr	r3, [pc, #100]	; (800c918 <__ssputs_r+0xc0>)
 800c8b4:	401a      	ands	r2, r3
 800c8b6:	2380      	movs	r3, #128	; 0x80
 800c8b8:	4313      	orrs	r3, r2
 800c8ba:	81a3      	strh	r3, [r4, #12]
 800c8bc:	9b02      	ldr	r3, [sp, #8]
 800c8be:	6126      	str	r6, [r4, #16]
 800c8c0:	18f6      	adds	r6, r6, r3
 800c8c2:	6026      	str	r6, [r4, #0]
 800c8c4:	6165      	str	r5, [r4, #20]
 800c8c6:	9e01      	ldr	r6, [sp, #4]
 800c8c8:	1aed      	subs	r5, r5, r3
 800c8ca:	60a5      	str	r5, [r4, #8]
 800c8cc:	9b01      	ldr	r3, [sp, #4]
 800c8ce:	429e      	cmp	r6, r3
 800c8d0:	d900      	bls.n	800c8d4 <__ssputs_r+0x7c>
 800c8d2:	9e01      	ldr	r6, [sp, #4]
 800c8d4:	0032      	movs	r2, r6
 800c8d6:	9903      	ldr	r1, [sp, #12]
 800c8d8:	6820      	ldr	r0, [r4, #0]
 800c8da:	f7ff fe53 	bl	800c584 <memmove>
 800c8de:	2000      	movs	r0, #0
 800c8e0:	68a3      	ldr	r3, [r4, #8]
 800c8e2:	1b9b      	subs	r3, r3, r6
 800c8e4:	60a3      	str	r3, [r4, #8]
 800c8e6:	6823      	ldr	r3, [r4, #0]
 800c8e8:	199b      	adds	r3, r3, r6
 800c8ea:	6023      	str	r3, [r4, #0]
 800c8ec:	b005      	add	sp, #20
 800c8ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c8f0:	002a      	movs	r2, r5
 800c8f2:	0038      	movs	r0, r7
 800c8f4:	f7ff fb10 	bl	800bf18 <_realloc_r>
 800c8f8:	1e06      	subs	r6, r0, #0
 800c8fa:	d1df      	bne.n	800c8bc <__ssputs_r+0x64>
 800c8fc:	0038      	movs	r0, r7
 800c8fe:	6921      	ldr	r1, [r4, #16]
 800c900:	f7ff ff58 	bl	800c7b4 <_free_r>
 800c904:	230c      	movs	r3, #12
 800c906:	2001      	movs	r0, #1
 800c908:	603b      	str	r3, [r7, #0]
 800c90a:	89a2      	ldrh	r2, [r4, #12]
 800c90c:	3334      	adds	r3, #52	; 0x34
 800c90e:	4313      	orrs	r3, r2
 800c910:	81a3      	strh	r3, [r4, #12]
 800c912:	4240      	negs	r0, r0
 800c914:	e7ea      	b.n	800c8ec <__ssputs_r+0x94>
 800c916:	46c0      	nop			; (mov r8, r8)
 800c918:	fffffb7f 	.word	0xfffffb7f

0800c91c <_svfiprintf_r>:
 800c91c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c91e:	b0a1      	sub	sp, #132	; 0x84
 800c920:	9003      	str	r0, [sp, #12]
 800c922:	001d      	movs	r5, r3
 800c924:	898b      	ldrh	r3, [r1, #12]
 800c926:	000f      	movs	r7, r1
 800c928:	0016      	movs	r6, r2
 800c92a:	061b      	lsls	r3, r3, #24
 800c92c:	d511      	bpl.n	800c952 <_svfiprintf_r+0x36>
 800c92e:	690b      	ldr	r3, [r1, #16]
 800c930:	2b00      	cmp	r3, #0
 800c932:	d10e      	bne.n	800c952 <_svfiprintf_r+0x36>
 800c934:	2140      	movs	r1, #64	; 0x40
 800c936:	f7ff fa53 	bl	800bde0 <_malloc_r>
 800c93a:	6038      	str	r0, [r7, #0]
 800c93c:	6138      	str	r0, [r7, #16]
 800c93e:	2800      	cmp	r0, #0
 800c940:	d105      	bne.n	800c94e <_svfiprintf_r+0x32>
 800c942:	230c      	movs	r3, #12
 800c944:	9a03      	ldr	r2, [sp, #12]
 800c946:	3801      	subs	r0, #1
 800c948:	6013      	str	r3, [r2, #0]
 800c94a:	b021      	add	sp, #132	; 0x84
 800c94c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c94e:	2340      	movs	r3, #64	; 0x40
 800c950:	617b      	str	r3, [r7, #20]
 800c952:	2300      	movs	r3, #0
 800c954:	ac08      	add	r4, sp, #32
 800c956:	6163      	str	r3, [r4, #20]
 800c958:	3320      	adds	r3, #32
 800c95a:	7663      	strb	r3, [r4, #25]
 800c95c:	3310      	adds	r3, #16
 800c95e:	76a3      	strb	r3, [r4, #26]
 800c960:	9507      	str	r5, [sp, #28]
 800c962:	0035      	movs	r5, r6
 800c964:	782b      	ldrb	r3, [r5, #0]
 800c966:	2b00      	cmp	r3, #0
 800c968:	d001      	beq.n	800c96e <_svfiprintf_r+0x52>
 800c96a:	2b25      	cmp	r3, #37	; 0x25
 800c96c:	d148      	bne.n	800ca00 <_svfiprintf_r+0xe4>
 800c96e:	1bab      	subs	r3, r5, r6
 800c970:	9305      	str	r3, [sp, #20]
 800c972:	42b5      	cmp	r5, r6
 800c974:	d00b      	beq.n	800c98e <_svfiprintf_r+0x72>
 800c976:	0032      	movs	r2, r6
 800c978:	0039      	movs	r1, r7
 800c97a:	9803      	ldr	r0, [sp, #12]
 800c97c:	f7ff ff6c 	bl	800c858 <__ssputs_r>
 800c980:	3001      	adds	r0, #1
 800c982:	d100      	bne.n	800c986 <_svfiprintf_r+0x6a>
 800c984:	e0af      	b.n	800cae6 <_svfiprintf_r+0x1ca>
 800c986:	6963      	ldr	r3, [r4, #20]
 800c988:	9a05      	ldr	r2, [sp, #20]
 800c98a:	189b      	adds	r3, r3, r2
 800c98c:	6163      	str	r3, [r4, #20]
 800c98e:	782b      	ldrb	r3, [r5, #0]
 800c990:	2b00      	cmp	r3, #0
 800c992:	d100      	bne.n	800c996 <_svfiprintf_r+0x7a>
 800c994:	e0a7      	b.n	800cae6 <_svfiprintf_r+0x1ca>
 800c996:	2201      	movs	r2, #1
 800c998:	2300      	movs	r3, #0
 800c99a:	4252      	negs	r2, r2
 800c99c:	6062      	str	r2, [r4, #4]
 800c99e:	a904      	add	r1, sp, #16
 800c9a0:	3254      	adds	r2, #84	; 0x54
 800c9a2:	1852      	adds	r2, r2, r1
 800c9a4:	1c6e      	adds	r6, r5, #1
 800c9a6:	6023      	str	r3, [r4, #0]
 800c9a8:	60e3      	str	r3, [r4, #12]
 800c9aa:	60a3      	str	r3, [r4, #8]
 800c9ac:	7013      	strb	r3, [r2, #0]
 800c9ae:	65a3      	str	r3, [r4, #88]	; 0x58
 800c9b0:	4b55      	ldr	r3, [pc, #340]	; (800cb08 <_svfiprintf_r+0x1ec>)
 800c9b2:	2205      	movs	r2, #5
 800c9b4:	0018      	movs	r0, r3
 800c9b6:	7831      	ldrb	r1, [r6, #0]
 800c9b8:	9305      	str	r3, [sp, #20]
 800c9ba:	f7ff fee6 	bl	800c78a <memchr>
 800c9be:	1c75      	adds	r5, r6, #1
 800c9c0:	2800      	cmp	r0, #0
 800c9c2:	d11f      	bne.n	800ca04 <_svfiprintf_r+0xe8>
 800c9c4:	6822      	ldr	r2, [r4, #0]
 800c9c6:	06d3      	lsls	r3, r2, #27
 800c9c8:	d504      	bpl.n	800c9d4 <_svfiprintf_r+0xb8>
 800c9ca:	2353      	movs	r3, #83	; 0x53
 800c9cc:	a904      	add	r1, sp, #16
 800c9ce:	185b      	adds	r3, r3, r1
 800c9d0:	2120      	movs	r1, #32
 800c9d2:	7019      	strb	r1, [r3, #0]
 800c9d4:	0713      	lsls	r3, r2, #28
 800c9d6:	d504      	bpl.n	800c9e2 <_svfiprintf_r+0xc6>
 800c9d8:	2353      	movs	r3, #83	; 0x53
 800c9da:	a904      	add	r1, sp, #16
 800c9dc:	185b      	adds	r3, r3, r1
 800c9de:	212b      	movs	r1, #43	; 0x2b
 800c9e0:	7019      	strb	r1, [r3, #0]
 800c9e2:	7833      	ldrb	r3, [r6, #0]
 800c9e4:	2b2a      	cmp	r3, #42	; 0x2a
 800c9e6:	d016      	beq.n	800ca16 <_svfiprintf_r+0xfa>
 800c9e8:	0035      	movs	r5, r6
 800c9ea:	2100      	movs	r1, #0
 800c9ec:	200a      	movs	r0, #10
 800c9ee:	68e3      	ldr	r3, [r4, #12]
 800c9f0:	782a      	ldrb	r2, [r5, #0]
 800c9f2:	1c6e      	adds	r6, r5, #1
 800c9f4:	3a30      	subs	r2, #48	; 0x30
 800c9f6:	2a09      	cmp	r2, #9
 800c9f8:	d94e      	bls.n	800ca98 <_svfiprintf_r+0x17c>
 800c9fa:	2900      	cmp	r1, #0
 800c9fc:	d111      	bne.n	800ca22 <_svfiprintf_r+0x106>
 800c9fe:	e017      	b.n	800ca30 <_svfiprintf_r+0x114>
 800ca00:	3501      	adds	r5, #1
 800ca02:	e7af      	b.n	800c964 <_svfiprintf_r+0x48>
 800ca04:	9b05      	ldr	r3, [sp, #20]
 800ca06:	6822      	ldr	r2, [r4, #0]
 800ca08:	1ac0      	subs	r0, r0, r3
 800ca0a:	2301      	movs	r3, #1
 800ca0c:	4083      	lsls	r3, r0
 800ca0e:	4313      	orrs	r3, r2
 800ca10:	002e      	movs	r6, r5
 800ca12:	6023      	str	r3, [r4, #0]
 800ca14:	e7cc      	b.n	800c9b0 <_svfiprintf_r+0x94>
 800ca16:	9b07      	ldr	r3, [sp, #28]
 800ca18:	1d19      	adds	r1, r3, #4
 800ca1a:	681b      	ldr	r3, [r3, #0]
 800ca1c:	9107      	str	r1, [sp, #28]
 800ca1e:	2b00      	cmp	r3, #0
 800ca20:	db01      	blt.n	800ca26 <_svfiprintf_r+0x10a>
 800ca22:	930b      	str	r3, [sp, #44]	; 0x2c
 800ca24:	e004      	b.n	800ca30 <_svfiprintf_r+0x114>
 800ca26:	425b      	negs	r3, r3
 800ca28:	60e3      	str	r3, [r4, #12]
 800ca2a:	2302      	movs	r3, #2
 800ca2c:	4313      	orrs	r3, r2
 800ca2e:	6023      	str	r3, [r4, #0]
 800ca30:	782b      	ldrb	r3, [r5, #0]
 800ca32:	2b2e      	cmp	r3, #46	; 0x2e
 800ca34:	d10a      	bne.n	800ca4c <_svfiprintf_r+0x130>
 800ca36:	786b      	ldrb	r3, [r5, #1]
 800ca38:	2b2a      	cmp	r3, #42	; 0x2a
 800ca3a:	d135      	bne.n	800caa8 <_svfiprintf_r+0x18c>
 800ca3c:	9b07      	ldr	r3, [sp, #28]
 800ca3e:	3502      	adds	r5, #2
 800ca40:	1d1a      	adds	r2, r3, #4
 800ca42:	681b      	ldr	r3, [r3, #0]
 800ca44:	9207      	str	r2, [sp, #28]
 800ca46:	2b00      	cmp	r3, #0
 800ca48:	db2b      	blt.n	800caa2 <_svfiprintf_r+0x186>
 800ca4a:	9309      	str	r3, [sp, #36]	; 0x24
 800ca4c:	4e2f      	ldr	r6, [pc, #188]	; (800cb0c <_svfiprintf_r+0x1f0>)
 800ca4e:	2203      	movs	r2, #3
 800ca50:	0030      	movs	r0, r6
 800ca52:	7829      	ldrb	r1, [r5, #0]
 800ca54:	f7ff fe99 	bl	800c78a <memchr>
 800ca58:	2800      	cmp	r0, #0
 800ca5a:	d006      	beq.n	800ca6a <_svfiprintf_r+0x14e>
 800ca5c:	2340      	movs	r3, #64	; 0x40
 800ca5e:	1b80      	subs	r0, r0, r6
 800ca60:	4083      	lsls	r3, r0
 800ca62:	6822      	ldr	r2, [r4, #0]
 800ca64:	3501      	adds	r5, #1
 800ca66:	4313      	orrs	r3, r2
 800ca68:	6023      	str	r3, [r4, #0]
 800ca6a:	7829      	ldrb	r1, [r5, #0]
 800ca6c:	2206      	movs	r2, #6
 800ca6e:	4828      	ldr	r0, [pc, #160]	; (800cb10 <_svfiprintf_r+0x1f4>)
 800ca70:	1c6e      	adds	r6, r5, #1
 800ca72:	7621      	strb	r1, [r4, #24]
 800ca74:	f7ff fe89 	bl	800c78a <memchr>
 800ca78:	2800      	cmp	r0, #0
 800ca7a:	d03c      	beq.n	800caf6 <_svfiprintf_r+0x1da>
 800ca7c:	4b25      	ldr	r3, [pc, #148]	; (800cb14 <_svfiprintf_r+0x1f8>)
 800ca7e:	2b00      	cmp	r3, #0
 800ca80:	d125      	bne.n	800cace <_svfiprintf_r+0x1b2>
 800ca82:	2207      	movs	r2, #7
 800ca84:	9b07      	ldr	r3, [sp, #28]
 800ca86:	3307      	adds	r3, #7
 800ca88:	4393      	bics	r3, r2
 800ca8a:	3308      	adds	r3, #8
 800ca8c:	9307      	str	r3, [sp, #28]
 800ca8e:	6963      	ldr	r3, [r4, #20]
 800ca90:	9a04      	ldr	r2, [sp, #16]
 800ca92:	189b      	adds	r3, r3, r2
 800ca94:	6163      	str	r3, [r4, #20]
 800ca96:	e764      	b.n	800c962 <_svfiprintf_r+0x46>
 800ca98:	4343      	muls	r3, r0
 800ca9a:	0035      	movs	r5, r6
 800ca9c:	2101      	movs	r1, #1
 800ca9e:	189b      	adds	r3, r3, r2
 800caa0:	e7a6      	b.n	800c9f0 <_svfiprintf_r+0xd4>
 800caa2:	2301      	movs	r3, #1
 800caa4:	425b      	negs	r3, r3
 800caa6:	e7d0      	b.n	800ca4a <_svfiprintf_r+0x12e>
 800caa8:	2300      	movs	r3, #0
 800caaa:	200a      	movs	r0, #10
 800caac:	001a      	movs	r2, r3
 800caae:	3501      	adds	r5, #1
 800cab0:	6063      	str	r3, [r4, #4]
 800cab2:	7829      	ldrb	r1, [r5, #0]
 800cab4:	1c6e      	adds	r6, r5, #1
 800cab6:	3930      	subs	r1, #48	; 0x30
 800cab8:	2909      	cmp	r1, #9
 800caba:	d903      	bls.n	800cac4 <_svfiprintf_r+0x1a8>
 800cabc:	2b00      	cmp	r3, #0
 800cabe:	d0c5      	beq.n	800ca4c <_svfiprintf_r+0x130>
 800cac0:	9209      	str	r2, [sp, #36]	; 0x24
 800cac2:	e7c3      	b.n	800ca4c <_svfiprintf_r+0x130>
 800cac4:	4342      	muls	r2, r0
 800cac6:	0035      	movs	r5, r6
 800cac8:	2301      	movs	r3, #1
 800caca:	1852      	adds	r2, r2, r1
 800cacc:	e7f1      	b.n	800cab2 <_svfiprintf_r+0x196>
 800cace:	aa07      	add	r2, sp, #28
 800cad0:	9200      	str	r2, [sp, #0]
 800cad2:	0021      	movs	r1, r4
 800cad4:	003a      	movs	r2, r7
 800cad6:	4b10      	ldr	r3, [pc, #64]	; (800cb18 <_svfiprintf_r+0x1fc>)
 800cad8:	9803      	ldr	r0, [sp, #12]
 800cada:	e000      	b.n	800cade <_svfiprintf_r+0x1c2>
 800cadc:	bf00      	nop
 800cade:	9004      	str	r0, [sp, #16]
 800cae0:	9b04      	ldr	r3, [sp, #16]
 800cae2:	3301      	adds	r3, #1
 800cae4:	d1d3      	bne.n	800ca8e <_svfiprintf_r+0x172>
 800cae6:	89bb      	ldrh	r3, [r7, #12]
 800cae8:	980d      	ldr	r0, [sp, #52]	; 0x34
 800caea:	065b      	lsls	r3, r3, #25
 800caec:	d400      	bmi.n	800caf0 <_svfiprintf_r+0x1d4>
 800caee:	e72c      	b.n	800c94a <_svfiprintf_r+0x2e>
 800caf0:	2001      	movs	r0, #1
 800caf2:	4240      	negs	r0, r0
 800caf4:	e729      	b.n	800c94a <_svfiprintf_r+0x2e>
 800caf6:	aa07      	add	r2, sp, #28
 800caf8:	9200      	str	r2, [sp, #0]
 800cafa:	0021      	movs	r1, r4
 800cafc:	003a      	movs	r2, r7
 800cafe:	4b06      	ldr	r3, [pc, #24]	; (800cb18 <_svfiprintf_r+0x1fc>)
 800cb00:	9803      	ldr	r0, [sp, #12]
 800cb02:	f000 f87b 	bl	800cbfc <_printf_i>
 800cb06:	e7ea      	b.n	800cade <_svfiprintf_r+0x1c2>
 800cb08:	08010481 	.word	0x08010481
 800cb0c:	08010487 	.word	0x08010487
 800cb10:	0801048b 	.word	0x0801048b
 800cb14:	00000000 	.word	0x00000000
 800cb18:	0800c859 	.word	0x0800c859

0800cb1c <_printf_common>:
 800cb1c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cb1e:	0016      	movs	r6, r2
 800cb20:	9301      	str	r3, [sp, #4]
 800cb22:	688a      	ldr	r2, [r1, #8]
 800cb24:	690b      	ldr	r3, [r1, #16]
 800cb26:	000c      	movs	r4, r1
 800cb28:	9000      	str	r0, [sp, #0]
 800cb2a:	4293      	cmp	r3, r2
 800cb2c:	da00      	bge.n	800cb30 <_printf_common+0x14>
 800cb2e:	0013      	movs	r3, r2
 800cb30:	0022      	movs	r2, r4
 800cb32:	6033      	str	r3, [r6, #0]
 800cb34:	3243      	adds	r2, #67	; 0x43
 800cb36:	7812      	ldrb	r2, [r2, #0]
 800cb38:	2a00      	cmp	r2, #0
 800cb3a:	d001      	beq.n	800cb40 <_printf_common+0x24>
 800cb3c:	3301      	adds	r3, #1
 800cb3e:	6033      	str	r3, [r6, #0]
 800cb40:	6823      	ldr	r3, [r4, #0]
 800cb42:	069b      	lsls	r3, r3, #26
 800cb44:	d502      	bpl.n	800cb4c <_printf_common+0x30>
 800cb46:	6833      	ldr	r3, [r6, #0]
 800cb48:	3302      	adds	r3, #2
 800cb4a:	6033      	str	r3, [r6, #0]
 800cb4c:	6822      	ldr	r2, [r4, #0]
 800cb4e:	2306      	movs	r3, #6
 800cb50:	0015      	movs	r5, r2
 800cb52:	401d      	ands	r5, r3
 800cb54:	421a      	tst	r2, r3
 800cb56:	d027      	beq.n	800cba8 <_printf_common+0x8c>
 800cb58:	0023      	movs	r3, r4
 800cb5a:	3343      	adds	r3, #67	; 0x43
 800cb5c:	781b      	ldrb	r3, [r3, #0]
 800cb5e:	1e5a      	subs	r2, r3, #1
 800cb60:	4193      	sbcs	r3, r2
 800cb62:	6822      	ldr	r2, [r4, #0]
 800cb64:	0692      	lsls	r2, r2, #26
 800cb66:	d430      	bmi.n	800cbca <_printf_common+0xae>
 800cb68:	0022      	movs	r2, r4
 800cb6a:	9901      	ldr	r1, [sp, #4]
 800cb6c:	9800      	ldr	r0, [sp, #0]
 800cb6e:	9d08      	ldr	r5, [sp, #32]
 800cb70:	3243      	adds	r2, #67	; 0x43
 800cb72:	47a8      	blx	r5
 800cb74:	3001      	adds	r0, #1
 800cb76:	d025      	beq.n	800cbc4 <_printf_common+0xa8>
 800cb78:	2206      	movs	r2, #6
 800cb7a:	6823      	ldr	r3, [r4, #0]
 800cb7c:	2500      	movs	r5, #0
 800cb7e:	4013      	ands	r3, r2
 800cb80:	2b04      	cmp	r3, #4
 800cb82:	d105      	bne.n	800cb90 <_printf_common+0x74>
 800cb84:	6833      	ldr	r3, [r6, #0]
 800cb86:	68e5      	ldr	r5, [r4, #12]
 800cb88:	1aed      	subs	r5, r5, r3
 800cb8a:	43eb      	mvns	r3, r5
 800cb8c:	17db      	asrs	r3, r3, #31
 800cb8e:	401d      	ands	r5, r3
 800cb90:	68a3      	ldr	r3, [r4, #8]
 800cb92:	6922      	ldr	r2, [r4, #16]
 800cb94:	4293      	cmp	r3, r2
 800cb96:	dd01      	ble.n	800cb9c <_printf_common+0x80>
 800cb98:	1a9b      	subs	r3, r3, r2
 800cb9a:	18ed      	adds	r5, r5, r3
 800cb9c:	2600      	movs	r6, #0
 800cb9e:	42b5      	cmp	r5, r6
 800cba0:	d120      	bne.n	800cbe4 <_printf_common+0xc8>
 800cba2:	2000      	movs	r0, #0
 800cba4:	e010      	b.n	800cbc8 <_printf_common+0xac>
 800cba6:	3501      	adds	r5, #1
 800cba8:	68e3      	ldr	r3, [r4, #12]
 800cbaa:	6832      	ldr	r2, [r6, #0]
 800cbac:	1a9b      	subs	r3, r3, r2
 800cbae:	42ab      	cmp	r3, r5
 800cbb0:	ddd2      	ble.n	800cb58 <_printf_common+0x3c>
 800cbb2:	0022      	movs	r2, r4
 800cbb4:	2301      	movs	r3, #1
 800cbb6:	9901      	ldr	r1, [sp, #4]
 800cbb8:	9800      	ldr	r0, [sp, #0]
 800cbba:	9f08      	ldr	r7, [sp, #32]
 800cbbc:	3219      	adds	r2, #25
 800cbbe:	47b8      	blx	r7
 800cbc0:	3001      	adds	r0, #1
 800cbc2:	d1f0      	bne.n	800cba6 <_printf_common+0x8a>
 800cbc4:	2001      	movs	r0, #1
 800cbc6:	4240      	negs	r0, r0
 800cbc8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800cbca:	2030      	movs	r0, #48	; 0x30
 800cbcc:	18e1      	adds	r1, r4, r3
 800cbce:	3143      	adds	r1, #67	; 0x43
 800cbd0:	7008      	strb	r0, [r1, #0]
 800cbd2:	0021      	movs	r1, r4
 800cbd4:	1c5a      	adds	r2, r3, #1
 800cbd6:	3145      	adds	r1, #69	; 0x45
 800cbd8:	7809      	ldrb	r1, [r1, #0]
 800cbda:	18a2      	adds	r2, r4, r2
 800cbdc:	3243      	adds	r2, #67	; 0x43
 800cbde:	3302      	adds	r3, #2
 800cbe0:	7011      	strb	r1, [r2, #0]
 800cbe2:	e7c1      	b.n	800cb68 <_printf_common+0x4c>
 800cbe4:	0022      	movs	r2, r4
 800cbe6:	2301      	movs	r3, #1
 800cbe8:	9901      	ldr	r1, [sp, #4]
 800cbea:	9800      	ldr	r0, [sp, #0]
 800cbec:	9f08      	ldr	r7, [sp, #32]
 800cbee:	321a      	adds	r2, #26
 800cbf0:	47b8      	blx	r7
 800cbf2:	3001      	adds	r0, #1
 800cbf4:	d0e6      	beq.n	800cbc4 <_printf_common+0xa8>
 800cbf6:	3601      	adds	r6, #1
 800cbf8:	e7d1      	b.n	800cb9e <_printf_common+0x82>
	...

0800cbfc <_printf_i>:
 800cbfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cbfe:	b08b      	sub	sp, #44	; 0x2c
 800cc00:	9206      	str	r2, [sp, #24]
 800cc02:	000a      	movs	r2, r1
 800cc04:	3243      	adds	r2, #67	; 0x43
 800cc06:	9307      	str	r3, [sp, #28]
 800cc08:	9005      	str	r0, [sp, #20]
 800cc0a:	9204      	str	r2, [sp, #16]
 800cc0c:	7e0a      	ldrb	r2, [r1, #24]
 800cc0e:	000c      	movs	r4, r1
 800cc10:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800cc12:	2a78      	cmp	r2, #120	; 0x78
 800cc14:	d809      	bhi.n	800cc2a <_printf_i+0x2e>
 800cc16:	2a62      	cmp	r2, #98	; 0x62
 800cc18:	d80b      	bhi.n	800cc32 <_printf_i+0x36>
 800cc1a:	2a00      	cmp	r2, #0
 800cc1c:	d100      	bne.n	800cc20 <_printf_i+0x24>
 800cc1e:	e0be      	b.n	800cd9e <_printf_i+0x1a2>
 800cc20:	497c      	ldr	r1, [pc, #496]	; (800ce14 <_printf_i+0x218>)
 800cc22:	9103      	str	r1, [sp, #12]
 800cc24:	2a58      	cmp	r2, #88	; 0x58
 800cc26:	d100      	bne.n	800cc2a <_printf_i+0x2e>
 800cc28:	e093      	b.n	800cd52 <_printf_i+0x156>
 800cc2a:	0026      	movs	r6, r4
 800cc2c:	3642      	adds	r6, #66	; 0x42
 800cc2e:	7032      	strb	r2, [r6, #0]
 800cc30:	e022      	b.n	800cc78 <_printf_i+0x7c>
 800cc32:	0010      	movs	r0, r2
 800cc34:	3863      	subs	r0, #99	; 0x63
 800cc36:	2815      	cmp	r0, #21
 800cc38:	d8f7      	bhi.n	800cc2a <_printf_i+0x2e>
 800cc3a:	f7f9 fee1 	bl	8006a00 <__gnu_thumb1_case_shi>
 800cc3e:	0016      	.short	0x0016
 800cc40:	fff6001f 	.word	0xfff6001f
 800cc44:	fff6fff6 	.word	0xfff6fff6
 800cc48:	001ffff6 	.word	0x001ffff6
 800cc4c:	fff6fff6 	.word	0xfff6fff6
 800cc50:	fff6fff6 	.word	0xfff6fff6
 800cc54:	003600a3 	.word	0x003600a3
 800cc58:	fff60083 	.word	0xfff60083
 800cc5c:	00b4fff6 	.word	0x00b4fff6
 800cc60:	0036fff6 	.word	0x0036fff6
 800cc64:	fff6fff6 	.word	0xfff6fff6
 800cc68:	0087      	.short	0x0087
 800cc6a:	0026      	movs	r6, r4
 800cc6c:	681a      	ldr	r2, [r3, #0]
 800cc6e:	3642      	adds	r6, #66	; 0x42
 800cc70:	1d11      	adds	r1, r2, #4
 800cc72:	6019      	str	r1, [r3, #0]
 800cc74:	6813      	ldr	r3, [r2, #0]
 800cc76:	7033      	strb	r3, [r6, #0]
 800cc78:	2301      	movs	r3, #1
 800cc7a:	e0a2      	b.n	800cdc2 <_printf_i+0x1c6>
 800cc7c:	6818      	ldr	r0, [r3, #0]
 800cc7e:	6809      	ldr	r1, [r1, #0]
 800cc80:	1d02      	adds	r2, r0, #4
 800cc82:	060d      	lsls	r5, r1, #24
 800cc84:	d50b      	bpl.n	800cc9e <_printf_i+0xa2>
 800cc86:	6805      	ldr	r5, [r0, #0]
 800cc88:	601a      	str	r2, [r3, #0]
 800cc8a:	2d00      	cmp	r5, #0
 800cc8c:	da03      	bge.n	800cc96 <_printf_i+0x9a>
 800cc8e:	232d      	movs	r3, #45	; 0x2d
 800cc90:	9a04      	ldr	r2, [sp, #16]
 800cc92:	426d      	negs	r5, r5
 800cc94:	7013      	strb	r3, [r2, #0]
 800cc96:	4b5f      	ldr	r3, [pc, #380]	; (800ce14 <_printf_i+0x218>)
 800cc98:	270a      	movs	r7, #10
 800cc9a:	9303      	str	r3, [sp, #12]
 800cc9c:	e01b      	b.n	800ccd6 <_printf_i+0xda>
 800cc9e:	6805      	ldr	r5, [r0, #0]
 800cca0:	601a      	str	r2, [r3, #0]
 800cca2:	0649      	lsls	r1, r1, #25
 800cca4:	d5f1      	bpl.n	800cc8a <_printf_i+0x8e>
 800cca6:	b22d      	sxth	r5, r5
 800cca8:	e7ef      	b.n	800cc8a <_printf_i+0x8e>
 800ccaa:	680d      	ldr	r5, [r1, #0]
 800ccac:	6819      	ldr	r1, [r3, #0]
 800ccae:	1d08      	adds	r0, r1, #4
 800ccb0:	6018      	str	r0, [r3, #0]
 800ccb2:	062e      	lsls	r6, r5, #24
 800ccb4:	d501      	bpl.n	800ccba <_printf_i+0xbe>
 800ccb6:	680d      	ldr	r5, [r1, #0]
 800ccb8:	e003      	b.n	800ccc2 <_printf_i+0xc6>
 800ccba:	066d      	lsls	r5, r5, #25
 800ccbc:	d5fb      	bpl.n	800ccb6 <_printf_i+0xba>
 800ccbe:	680d      	ldr	r5, [r1, #0]
 800ccc0:	b2ad      	uxth	r5, r5
 800ccc2:	4b54      	ldr	r3, [pc, #336]	; (800ce14 <_printf_i+0x218>)
 800ccc4:	2708      	movs	r7, #8
 800ccc6:	9303      	str	r3, [sp, #12]
 800ccc8:	2a6f      	cmp	r2, #111	; 0x6f
 800ccca:	d000      	beq.n	800ccce <_printf_i+0xd2>
 800cccc:	3702      	adds	r7, #2
 800ccce:	0023      	movs	r3, r4
 800ccd0:	2200      	movs	r2, #0
 800ccd2:	3343      	adds	r3, #67	; 0x43
 800ccd4:	701a      	strb	r2, [r3, #0]
 800ccd6:	6863      	ldr	r3, [r4, #4]
 800ccd8:	60a3      	str	r3, [r4, #8]
 800ccda:	2b00      	cmp	r3, #0
 800ccdc:	db03      	blt.n	800cce6 <_printf_i+0xea>
 800ccde:	2104      	movs	r1, #4
 800cce0:	6822      	ldr	r2, [r4, #0]
 800cce2:	438a      	bics	r2, r1
 800cce4:	6022      	str	r2, [r4, #0]
 800cce6:	2d00      	cmp	r5, #0
 800cce8:	d102      	bne.n	800ccf0 <_printf_i+0xf4>
 800ccea:	9e04      	ldr	r6, [sp, #16]
 800ccec:	2b00      	cmp	r3, #0
 800ccee:	d00c      	beq.n	800cd0a <_printf_i+0x10e>
 800ccf0:	9e04      	ldr	r6, [sp, #16]
 800ccf2:	0028      	movs	r0, r5
 800ccf4:	0039      	movs	r1, r7
 800ccf6:	f7f9 ff13 	bl	8006b20 <__aeabi_uidivmod>
 800ccfa:	9b03      	ldr	r3, [sp, #12]
 800ccfc:	3e01      	subs	r6, #1
 800ccfe:	5c5b      	ldrb	r3, [r3, r1]
 800cd00:	7033      	strb	r3, [r6, #0]
 800cd02:	002b      	movs	r3, r5
 800cd04:	0005      	movs	r5, r0
 800cd06:	429f      	cmp	r7, r3
 800cd08:	d9f3      	bls.n	800ccf2 <_printf_i+0xf6>
 800cd0a:	2f08      	cmp	r7, #8
 800cd0c:	d109      	bne.n	800cd22 <_printf_i+0x126>
 800cd0e:	6823      	ldr	r3, [r4, #0]
 800cd10:	07db      	lsls	r3, r3, #31
 800cd12:	d506      	bpl.n	800cd22 <_printf_i+0x126>
 800cd14:	6862      	ldr	r2, [r4, #4]
 800cd16:	6923      	ldr	r3, [r4, #16]
 800cd18:	429a      	cmp	r2, r3
 800cd1a:	dc02      	bgt.n	800cd22 <_printf_i+0x126>
 800cd1c:	2330      	movs	r3, #48	; 0x30
 800cd1e:	3e01      	subs	r6, #1
 800cd20:	7033      	strb	r3, [r6, #0]
 800cd22:	9b04      	ldr	r3, [sp, #16]
 800cd24:	1b9b      	subs	r3, r3, r6
 800cd26:	6123      	str	r3, [r4, #16]
 800cd28:	9b07      	ldr	r3, [sp, #28]
 800cd2a:	0021      	movs	r1, r4
 800cd2c:	9300      	str	r3, [sp, #0]
 800cd2e:	9805      	ldr	r0, [sp, #20]
 800cd30:	9b06      	ldr	r3, [sp, #24]
 800cd32:	aa09      	add	r2, sp, #36	; 0x24
 800cd34:	f7ff fef2 	bl	800cb1c <_printf_common>
 800cd38:	3001      	adds	r0, #1
 800cd3a:	d147      	bne.n	800cdcc <_printf_i+0x1d0>
 800cd3c:	2001      	movs	r0, #1
 800cd3e:	4240      	negs	r0, r0
 800cd40:	b00b      	add	sp, #44	; 0x2c
 800cd42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cd44:	2220      	movs	r2, #32
 800cd46:	6809      	ldr	r1, [r1, #0]
 800cd48:	430a      	orrs	r2, r1
 800cd4a:	6022      	str	r2, [r4, #0]
 800cd4c:	2278      	movs	r2, #120	; 0x78
 800cd4e:	4932      	ldr	r1, [pc, #200]	; (800ce18 <_printf_i+0x21c>)
 800cd50:	9103      	str	r1, [sp, #12]
 800cd52:	0021      	movs	r1, r4
 800cd54:	3145      	adds	r1, #69	; 0x45
 800cd56:	700a      	strb	r2, [r1, #0]
 800cd58:	6819      	ldr	r1, [r3, #0]
 800cd5a:	6822      	ldr	r2, [r4, #0]
 800cd5c:	c920      	ldmia	r1!, {r5}
 800cd5e:	0610      	lsls	r0, r2, #24
 800cd60:	d402      	bmi.n	800cd68 <_printf_i+0x16c>
 800cd62:	0650      	lsls	r0, r2, #25
 800cd64:	d500      	bpl.n	800cd68 <_printf_i+0x16c>
 800cd66:	b2ad      	uxth	r5, r5
 800cd68:	6019      	str	r1, [r3, #0]
 800cd6a:	07d3      	lsls	r3, r2, #31
 800cd6c:	d502      	bpl.n	800cd74 <_printf_i+0x178>
 800cd6e:	2320      	movs	r3, #32
 800cd70:	4313      	orrs	r3, r2
 800cd72:	6023      	str	r3, [r4, #0]
 800cd74:	2710      	movs	r7, #16
 800cd76:	2d00      	cmp	r5, #0
 800cd78:	d1a9      	bne.n	800ccce <_printf_i+0xd2>
 800cd7a:	2220      	movs	r2, #32
 800cd7c:	6823      	ldr	r3, [r4, #0]
 800cd7e:	4393      	bics	r3, r2
 800cd80:	6023      	str	r3, [r4, #0]
 800cd82:	e7a4      	b.n	800ccce <_printf_i+0xd2>
 800cd84:	681a      	ldr	r2, [r3, #0]
 800cd86:	680d      	ldr	r5, [r1, #0]
 800cd88:	1d10      	adds	r0, r2, #4
 800cd8a:	6949      	ldr	r1, [r1, #20]
 800cd8c:	6018      	str	r0, [r3, #0]
 800cd8e:	6813      	ldr	r3, [r2, #0]
 800cd90:	062e      	lsls	r6, r5, #24
 800cd92:	d501      	bpl.n	800cd98 <_printf_i+0x19c>
 800cd94:	6019      	str	r1, [r3, #0]
 800cd96:	e002      	b.n	800cd9e <_printf_i+0x1a2>
 800cd98:	066d      	lsls	r5, r5, #25
 800cd9a:	d5fb      	bpl.n	800cd94 <_printf_i+0x198>
 800cd9c:	8019      	strh	r1, [r3, #0]
 800cd9e:	2300      	movs	r3, #0
 800cda0:	9e04      	ldr	r6, [sp, #16]
 800cda2:	6123      	str	r3, [r4, #16]
 800cda4:	e7c0      	b.n	800cd28 <_printf_i+0x12c>
 800cda6:	681a      	ldr	r2, [r3, #0]
 800cda8:	1d11      	adds	r1, r2, #4
 800cdaa:	6019      	str	r1, [r3, #0]
 800cdac:	6816      	ldr	r6, [r2, #0]
 800cdae:	2100      	movs	r1, #0
 800cdb0:	0030      	movs	r0, r6
 800cdb2:	6862      	ldr	r2, [r4, #4]
 800cdb4:	f7ff fce9 	bl	800c78a <memchr>
 800cdb8:	2800      	cmp	r0, #0
 800cdba:	d001      	beq.n	800cdc0 <_printf_i+0x1c4>
 800cdbc:	1b80      	subs	r0, r0, r6
 800cdbe:	6060      	str	r0, [r4, #4]
 800cdc0:	6863      	ldr	r3, [r4, #4]
 800cdc2:	6123      	str	r3, [r4, #16]
 800cdc4:	2300      	movs	r3, #0
 800cdc6:	9a04      	ldr	r2, [sp, #16]
 800cdc8:	7013      	strb	r3, [r2, #0]
 800cdca:	e7ad      	b.n	800cd28 <_printf_i+0x12c>
 800cdcc:	0032      	movs	r2, r6
 800cdce:	6923      	ldr	r3, [r4, #16]
 800cdd0:	9906      	ldr	r1, [sp, #24]
 800cdd2:	9805      	ldr	r0, [sp, #20]
 800cdd4:	9d07      	ldr	r5, [sp, #28]
 800cdd6:	47a8      	blx	r5
 800cdd8:	3001      	adds	r0, #1
 800cdda:	d0af      	beq.n	800cd3c <_printf_i+0x140>
 800cddc:	6823      	ldr	r3, [r4, #0]
 800cdde:	079b      	lsls	r3, r3, #30
 800cde0:	d415      	bmi.n	800ce0e <_printf_i+0x212>
 800cde2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cde4:	68e0      	ldr	r0, [r4, #12]
 800cde6:	4298      	cmp	r0, r3
 800cde8:	daaa      	bge.n	800cd40 <_printf_i+0x144>
 800cdea:	0018      	movs	r0, r3
 800cdec:	e7a8      	b.n	800cd40 <_printf_i+0x144>
 800cdee:	0022      	movs	r2, r4
 800cdf0:	2301      	movs	r3, #1
 800cdf2:	9906      	ldr	r1, [sp, #24]
 800cdf4:	9805      	ldr	r0, [sp, #20]
 800cdf6:	9e07      	ldr	r6, [sp, #28]
 800cdf8:	3219      	adds	r2, #25
 800cdfa:	47b0      	blx	r6
 800cdfc:	3001      	adds	r0, #1
 800cdfe:	d09d      	beq.n	800cd3c <_printf_i+0x140>
 800ce00:	3501      	adds	r5, #1
 800ce02:	68e3      	ldr	r3, [r4, #12]
 800ce04:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ce06:	1a9b      	subs	r3, r3, r2
 800ce08:	42ab      	cmp	r3, r5
 800ce0a:	dcf0      	bgt.n	800cdee <_printf_i+0x1f2>
 800ce0c:	e7e9      	b.n	800cde2 <_printf_i+0x1e6>
 800ce0e:	2500      	movs	r5, #0
 800ce10:	e7f7      	b.n	800ce02 <_printf_i+0x206>
 800ce12:	46c0      	nop			; (mov r8, r8)
 800ce14:	08010492 	.word	0x08010492
 800ce18:	080104a3 	.word	0x080104a3

0800ce1c <__sflush_r>:
 800ce1c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ce1e:	898b      	ldrh	r3, [r1, #12]
 800ce20:	0005      	movs	r5, r0
 800ce22:	000c      	movs	r4, r1
 800ce24:	071a      	lsls	r2, r3, #28
 800ce26:	d45c      	bmi.n	800cee2 <__sflush_r+0xc6>
 800ce28:	684a      	ldr	r2, [r1, #4]
 800ce2a:	2a00      	cmp	r2, #0
 800ce2c:	dc04      	bgt.n	800ce38 <__sflush_r+0x1c>
 800ce2e:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 800ce30:	2a00      	cmp	r2, #0
 800ce32:	dc01      	bgt.n	800ce38 <__sflush_r+0x1c>
 800ce34:	2000      	movs	r0, #0
 800ce36:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800ce38:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800ce3a:	2f00      	cmp	r7, #0
 800ce3c:	d0fa      	beq.n	800ce34 <__sflush_r+0x18>
 800ce3e:	2200      	movs	r2, #0
 800ce40:	2080      	movs	r0, #128	; 0x80
 800ce42:	682e      	ldr	r6, [r5, #0]
 800ce44:	602a      	str	r2, [r5, #0]
 800ce46:	001a      	movs	r2, r3
 800ce48:	0140      	lsls	r0, r0, #5
 800ce4a:	6a21      	ldr	r1, [r4, #32]
 800ce4c:	4002      	ands	r2, r0
 800ce4e:	4203      	tst	r3, r0
 800ce50:	d034      	beq.n	800cebc <__sflush_r+0xa0>
 800ce52:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800ce54:	89a3      	ldrh	r3, [r4, #12]
 800ce56:	075b      	lsls	r3, r3, #29
 800ce58:	d506      	bpl.n	800ce68 <__sflush_r+0x4c>
 800ce5a:	6863      	ldr	r3, [r4, #4]
 800ce5c:	1ac0      	subs	r0, r0, r3
 800ce5e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800ce60:	2b00      	cmp	r3, #0
 800ce62:	d001      	beq.n	800ce68 <__sflush_r+0x4c>
 800ce64:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ce66:	1ac0      	subs	r0, r0, r3
 800ce68:	0002      	movs	r2, r0
 800ce6a:	2300      	movs	r3, #0
 800ce6c:	0028      	movs	r0, r5
 800ce6e:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800ce70:	6a21      	ldr	r1, [r4, #32]
 800ce72:	47b8      	blx	r7
 800ce74:	89a2      	ldrh	r2, [r4, #12]
 800ce76:	1c43      	adds	r3, r0, #1
 800ce78:	d106      	bne.n	800ce88 <__sflush_r+0x6c>
 800ce7a:	6829      	ldr	r1, [r5, #0]
 800ce7c:	291d      	cmp	r1, #29
 800ce7e:	d82c      	bhi.n	800ceda <__sflush_r+0xbe>
 800ce80:	4b2a      	ldr	r3, [pc, #168]	; (800cf2c <__sflush_r+0x110>)
 800ce82:	410b      	asrs	r3, r1
 800ce84:	07db      	lsls	r3, r3, #31
 800ce86:	d428      	bmi.n	800ceda <__sflush_r+0xbe>
 800ce88:	2300      	movs	r3, #0
 800ce8a:	6063      	str	r3, [r4, #4]
 800ce8c:	6923      	ldr	r3, [r4, #16]
 800ce8e:	6023      	str	r3, [r4, #0]
 800ce90:	04d2      	lsls	r2, r2, #19
 800ce92:	d505      	bpl.n	800cea0 <__sflush_r+0x84>
 800ce94:	1c43      	adds	r3, r0, #1
 800ce96:	d102      	bne.n	800ce9e <__sflush_r+0x82>
 800ce98:	682b      	ldr	r3, [r5, #0]
 800ce9a:	2b00      	cmp	r3, #0
 800ce9c:	d100      	bne.n	800cea0 <__sflush_r+0x84>
 800ce9e:	6560      	str	r0, [r4, #84]	; 0x54
 800cea0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800cea2:	602e      	str	r6, [r5, #0]
 800cea4:	2900      	cmp	r1, #0
 800cea6:	d0c5      	beq.n	800ce34 <__sflush_r+0x18>
 800cea8:	0023      	movs	r3, r4
 800ceaa:	3344      	adds	r3, #68	; 0x44
 800ceac:	4299      	cmp	r1, r3
 800ceae:	d002      	beq.n	800ceb6 <__sflush_r+0x9a>
 800ceb0:	0028      	movs	r0, r5
 800ceb2:	f7ff fc7f 	bl	800c7b4 <_free_r>
 800ceb6:	2000      	movs	r0, #0
 800ceb8:	6360      	str	r0, [r4, #52]	; 0x34
 800ceba:	e7bc      	b.n	800ce36 <__sflush_r+0x1a>
 800cebc:	2301      	movs	r3, #1
 800cebe:	0028      	movs	r0, r5
 800cec0:	47b8      	blx	r7
 800cec2:	1c43      	adds	r3, r0, #1
 800cec4:	d1c6      	bne.n	800ce54 <__sflush_r+0x38>
 800cec6:	682b      	ldr	r3, [r5, #0]
 800cec8:	2b00      	cmp	r3, #0
 800ceca:	d0c3      	beq.n	800ce54 <__sflush_r+0x38>
 800cecc:	2b1d      	cmp	r3, #29
 800cece:	d001      	beq.n	800ced4 <__sflush_r+0xb8>
 800ced0:	2b16      	cmp	r3, #22
 800ced2:	d101      	bne.n	800ced8 <__sflush_r+0xbc>
 800ced4:	602e      	str	r6, [r5, #0]
 800ced6:	e7ad      	b.n	800ce34 <__sflush_r+0x18>
 800ced8:	89a2      	ldrh	r2, [r4, #12]
 800ceda:	2340      	movs	r3, #64	; 0x40
 800cedc:	4313      	orrs	r3, r2
 800cede:	81a3      	strh	r3, [r4, #12]
 800cee0:	e7a9      	b.n	800ce36 <__sflush_r+0x1a>
 800cee2:	690e      	ldr	r6, [r1, #16]
 800cee4:	2e00      	cmp	r6, #0
 800cee6:	d0a5      	beq.n	800ce34 <__sflush_r+0x18>
 800cee8:	680f      	ldr	r7, [r1, #0]
 800ceea:	600e      	str	r6, [r1, #0]
 800ceec:	1bba      	subs	r2, r7, r6
 800ceee:	9201      	str	r2, [sp, #4]
 800cef0:	2200      	movs	r2, #0
 800cef2:	079b      	lsls	r3, r3, #30
 800cef4:	d100      	bne.n	800cef8 <__sflush_r+0xdc>
 800cef6:	694a      	ldr	r2, [r1, #20]
 800cef8:	60a2      	str	r2, [r4, #8]
 800cefa:	9b01      	ldr	r3, [sp, #4]
 800cefc:	2b00      	cmp	r3, #0
 800cefe:	dd99      	ble.n	800ce34 <__sflush_r+0x18>
 800cf00:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800cf02:	0032      	movs	r2, r6
 800cf04:	001f      	movs	r7, r3
 800cf06:	0028      	movs	r0, r5
 800cf08:	9b01      	ldr	r3, [sp, #4]
 800cf0a:	6a21      	ldr	r1, [r4, #32]
 800cf0c:	47b8      	blx	r7
 800cf0e:	2800      	cmp	r0, #0
 800cf10:	dc06      	bgt.n	800cf20 <__sflush_r+0x104>
 800cf12:	2340      	movs	r3, #64	; 0x40
 800cf14:	2001      	movs	r0, #1
 800cf16:	89a2      	ldrh	r2, [r4, #12]
 800cf18:	4240      	negs	r0, r0
 800cf1a:	4313      	orrs	r3, r2
 800cf1c:	81a3      	strh	r3, [r4, #12]
 800cf1e:	e78a      	b.n	800ce36 <__sflush_r+0x1a>
 800cf20:	9b01      	ldr	r3, [sp, #4]
 800cf22:	1836      	adds	r6, r6, r0
 800cf24:	1a1b      	subs	r3, r3, r0
 800cf26:	9301      	str	r3, [sp, #4]
 800cf28:	e7e7      	b.n	800cefa <__sflush_r+0xde>
 800cf2a:	46c0      	nop			; (mov r8, r8)
 800cf2c:	dfbffffe 	.word	0xdfbffffe

0800cf30 <_fflush_r>:
 800cf30:	690b      	ldr	r3, [r1, #16]
 800cf32:	b570      	push	{r4, r5, r6, lr}
 800cf34:	0005      	movs	r5, r0
 800cf36:	000c      	movs	r4, r1
 800cf38:	2b00      	cmp	r3, #0
 800cf3a:	d102      	bne.n	800cf42 <_fflush_r+0x12>
 800cf3c:	2500      	movs	r5, #0
 800cf3e:	0028      	movs	r0, r5
 800cf40:	bd70      	pop	{r4, r5, r6, pc}
 800cf42:	2800      	cmp	r0, #0
 800cf44:	d004      	beq.n	800cf50 <_fflush_r+0x20>
 800cf46:	6a03      	ldr	r3, [r0, #32]
 800cf48:	2b00      	cmp	r3, #0
 800cf4a:	d101      	bne.n	800cf50 <_fflush_r+0x20>
 800cf4c:	f7ff f8a4 	bl	800c098 <__sinit>
 800cf50:	220c      	movs	r2, #12
 800cf52:	5ea3      	ldrsh	r3, [r4, r2]
 800cf54:	2b00      	cmp	r3, #0
 800cf56:	d0f1      	beq.n	800cf3c <_fflush_r+0xc>
 800cf58:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800cf5a:	07d2      	lsls	r2, r2, #31
 800cf5c:	d404      	bmi.n	800cf68 <_fflush_r+0x38>
 800cf5e:	059b      	lsls	r3, r3, #22
 800cf60:	d402      	bmi.n	800cf68 <_fflush_r+0x38>
 800cf62:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800cf64:	f7ff fc0f 	bl	800c786 <__retarget_lock_acquire_recursive>
 800cf68:	0028      	movs	r0, r5
 800cf6a:	0021      	movs	r1, r4
 800cf6c:	f7ff ff56 	bl	800ce1c <__sflush_r>
 800cf70:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800cf72:	0005      	movs	r5, r0
 800cf74:	07db      	lsls	r3, r3, #31
 800cf76:	d4e2      	bmi.n	800cf3e <_fflush_r+0xe>
 800cf78:	89a3      	ldrh	r3, [r4, #12]
 800cf7a:	059b      	lsls	r3, r3, #22
 800cf7c:	d4df      	bmi.n	800cf3e <_fflush_r+0xe>
 800cf7e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800cf80:	f7ff fc02 	bl	800c788 <__retarget_lock_release_recursive>
 800cf84:	e7db      	b.n	800cf3e <_fflush_r+0xe>
	...

0800cf88 <__swhatbuf_r>:
 800cf88:	b570      	push	{r4, r5, r6, lr}
 800cf8a:	000e      	movs	r6, r1
 800cf8c:	001d      	movs	r5, r3
 800cf8e:	230e      	movs	r3, #14
 800cf90:	5ec9      	ldrsh	r1, [r1, r3]
 800cf92:	0014      	movs	r4, r2
 800cf94:	b096      	sub	sp, #88	; 0x58
 800cf96:	2900      	cmp	r1, #0
 800cf98:	da0c      	bge.n	800cfb4 <__swhatbuf_r+0x2c>
 800cf9a:	89b2      	ldrh	r2, [r6, #12]
 800cf9c:	2380      	movs	r3, #128	; 0x80
 800cf9e:	0011      	movs	r1, r2
 800cfa0:	4019      	ands	r1, r3
 800cfa2:	421a      	tst	r2, r3
 800cfa4:	d013      	beq.n	800cfce <__swhatbuf_r+0x46>
 800cfa6:	2100      	movs	r1, #0
 800cfa8:	3b40      	subs	r3, #64	; 0x40
 800cfaa:	2000      	movs	r0, #0
 800cfac:	6029      	str	r1, [r5, #0]
 800cfae:	6023      	str	r3, [r4, #0]
 800cfb0:	b016      	add	sp, #88	; 0x58
 800cfb2:	bd70      	pop	{r4, r5, r6, pc}
 800cfb4:	466a      	mov	r2, sp
 800cfb6:	f000 f84d 	bl	800d054 <_fstat_r>
 800cfba:	2800      	cmp	r0, #0
 800cfbc:	dbed      	blt.n	800cf9a <__swhatbuf_r+0x12>
 800cfbe:	23f0      	movs	r3, #240	; 0xf0
 800cfc0:	9901      	ldr	r1, [sp, #4]
 800cfc2:	021b      	lsls	r3, r3, #8
 800cfc4:	4019      	ands	r1, r3
 800cfc6:	4b03      	ldr	r3, [pc, #12]	; (800cfd4 <__swhatbuf_r+0x4c>)
 800cfc8:	18c9      	adds	r1, r1, r3
 800cfca:	424b      	negs	r3, r1
 800cfcc:	4159      	adcs	r1, r3
 800cfce:	2380      	movs	r3, #128	; 0x80
 800cfd0:	00db      	lsls	r3, r3, #3
 800cfd2:	e7ea      	b.n	800cfaa <__swhatbuf_r+0x22>
 800cfd4:	ffffe000 	.word	0xffffe000

0800cfd8 <__smakebuf_r>:
 800cfd8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cfda:	2602      	movs	r6, #2
 800cfdc:	898b      	ldrh	r3, [r1, #12]
 800cfde:	0005      	movs	r5, r0
 800cfe0:	000c      	movs	r4, r1
 800cfe2:	4233      	tst	r3, r6
 800cfe4:	d006      	beq.n	800cff4 <__smakebuf_r+0x1c>
 800cfe6:	0023      	movs	r3, r4
 800cfe8:	3347      	adds	r3, #71	; 0x47
 800cfea:	6023      	str	r3, [r4, #0]
 800cfec:	6123      	str	r3, [r4, #16]
 800cfee:	2301      	movs	r3, #1
 800cff0:	6163      	str	r3, [r4, #20]
 800cff2:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 800cff4:	466a      	mov	r2, sp
 800cff6:	ab01      	add	r3, sp, #4
 800cff8:	f7ff ffc6 	bl	800cf88 <__swhatbuf_r>
 800cffc:	9900      	ldr	r1, [sp, #0]
 800cffe:	0007      	movs	r7, r0
 800d000:	0028      	movs	r0, r5
 800d002:	f7fe feed 	bl	800bde0 <_malloc_r>
 800d006:	2800      	cmp	r0, #0
 800d008:	d108      	bne.n	800d01c <__smakebuf_r+0x44>
 800d00a:	220c      	movs	r2, #12
 800d00c:	5ea3      	ldrsh	r3, [r4, r2]
 800d00e:	059a      	lsls	r2, r3, #22
 800d010:	d4ef      	bmi.n	800cff2 <__smakebuf_r+0x1a>
 800d012:	2203      	movs	r2, #3
 800d014:	4393      	bics	r3, r2
 800d016:	431e      	orrs	r6, r3
 800d018:	81a6      	strh	r6, [r4, #12]
 800d01a:	e7e4      	b.n	800cfe6 <__smakebuf_r+0xe>
 800d01c:	2380      	movs	r3, #128	; 0x80
 800d01e:	89a2      	ldrh	r2, [r4, #12]
 800d020:	6020      	str	r0, [r4, #0]
 800d022:	4313      	orrs	r3, r2
 800d024:	81a3      	strh	r3, [r4, #12]
 800d026:	9b00      	ldr	r3, [sp, #0]
 800d028:	6120      	str	r0, [r4, #16]
 800d02a:	6163      	str	r3, [r4, #20]
 800d02c:	9b01      	ldr	r3, [sp, #4]
 800d02e:	2b00      	cmp	r3, #0
 800d030:	d00c      	beq.n	800d04c <__smakebuf_r+0x74>
 800d032:	0028      	movs	r0, r5
 800d034:	230e      	movs	r3, #14
 800d036:	5ee1      	ldrsh	r1, [r4, r3]
 800d038:	f000 f81e 	bl	800d078 <_isatty_r>
 800d03c:	2800      	cmp	r0, #0
 800d03e:	d005      	beq.n	800d04c <__smakebuf_r+0x74>
 800d040:	2303      	movs	r3, #3
 800d042:	89a2      	ldrh	r2, [r4, #12]
 800d044:	439a      	bics	r2, r3
 800d046:	3b02      	subs	r3, #2
 800d048:	4313      	orrs	r3, r2
 800d04a:	81a3      	strh	r3, [r4, #12]
 800d04c:	89a3      	ldrh	r3, [r4, #12]
 800d04e:	433b      	orrs	r3, r7
 800d050:	81a3      	strh	r3, [r4, #12]
 800d052:	e7ce      	b.n	800cff2 <__smakebuf_r+0x1a>

0800d054 <_fstat_r>:
 800d054:	2300      	movs	r3, #0
 800d056:	b570      	push	{r4, r5, r6, lr}
 800d058:	4d06      	ldr	r5, [pc, #24]	; (800d074 <_fstat_r+0x20>)
 800d05a:	0004      	movs	r4, r0
 800d05c:	0008      	movs	r0, r1
 800d05e:	0011      	movs	r1, r2
 800d060:	602b      	str	r3, [r5, #0]
 800d062:	f7fb fd42 	bl	8008aea <_fstat>
 800d066:	1c43      	adds	r3, r0, #1
 800d068:	d103      	bne.n	800d072 <_fstat_r+0x1e>
 800d06a:	682b      	ldr	r3, [r5, #0]
 800d06c:	2b00      	cmp	r3, #0
 800d06e:	d000      	beq.n	800d072 <_fstat_r+0x1e>
 800d070:	6023      	str	r3, [r4, #0]
 800d072:	bd70      	pop	{r4, r5, r6, pc}
 800d074:	20000758 	.word	0x20000758

0800d078 <_isatty_r>:
 800d078:	2300      	movs	r3, #0
 800d07a:	b570      	push	{r4, r5, r6, lr}
 800d07c:	4d06      	ldr	r5, [pc, #24]	; (800d098 <_isatty_r+0x20>)
 800d07e:	0004      	movs	r4, r0
 800d080:	0008      	movs	r0, r1
 800d082:	602b      	str	r3, [r5, #0]
 800d084:	f7fb fd36 	bl	8008af4 <_isatty>
 800d088:	1c43      	adds	r3, r0, #1
 800d08a:	d103      	bne.n	800d094 <_isatty_r+0x1c>
 800d08c:	682b      	ldr	r3, [r5, #0]
 800d08e:	2b00      	cmp	r3, #0
 800d090:	d000      	beq.n	800d094 <_isatty_r+0x1c>
 800d092:	6023      	str	r3, [r4, #0]
 800d094:	bd70      	pop	{r4, r5, r6, pc}
 800d096:	46c0      	nop			; (mov r8, r8)
 800d098:	20000758 	.word	0x20000758

0800d09c <_Unwind_GetDataRelBase>:
 800d09c:	b510      	push	{r4, lr}
 800d09e:	f7fe fe61 	bl	800bd64 <abort>

0800d0a2 <_Unwind_GetTextRelBase>:
 800d0a2:	b510      	push	{r4, lr}
 800d0a4:	f7ff fffa 	bl	800d09c <_Unwind_GetDataRelBase>

0800d0a8 <_init>:
 800d0a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d0aa:	46c0      	nop			; (mov r8, r8)
 800d0ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800d0ae:	bc08      	pop	{r3}
 800d0b0:	469e      	mov	lr, r3
 800d0b2:	4770      	bx	lr

0800d0b4 <_fini>:
 800d0b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d0b6:	46c0      	nop			; (mov r8, r8)
 800d0b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800d0ba:	bc08      	pop	{r3}
 800d0bc:	469e      	mov	lr, r3
 800d0be:	4770      	bx	lr
